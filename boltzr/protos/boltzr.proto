syntax = "proto3";

package boltzr;

service BoltzR {
  rpc GetInfo (GetInfoRequest) returns (GetInfoResponse);

  rpc StartWebHookRetries (StartWebHookRetriesRequest) returns (StartWebHookRetriesResponse);
  rpc CreateWebHook (CreateWebHookRequest) returns (CreateWebHookResponse);
  rpc SendWebHook (SendWebHookRequest) returns (SendWebHookResponse);

  rpc SignEvmRefund (SignEvmRefundRequest) returns (SignEvmRefundResponse);
}

message StartWebHookRetriesRequest {}
message StartWebHookRetriesResponse {}

message GetInfoRequest {}
message GetInfoResponse {
  string version = 1;
}

message CreateWebHookRequest {
  string id = 1;
  string url = 2;
  bool hash_swap_id = 3;
  repeated string status = 4;
}
message CreateWebHookResponse {}

message SendWebHookRequest {
  string id = 1;
  string status = 3;
}

message SendWebHookResponse {
  bool ok = 1;
}

message SignEvmRefundRequest {
  bytes preimage_hash = 1;
  string amount = 2;
  // When populated, an ERC20 refund signature will be signed
  optional string token_address = 3;
  uint64 timeout = 4;
}

message SignEvmRefundResponse {
  bytes signature = 1;
}
