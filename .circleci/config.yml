version: 2

defaults: &defaults
    working_directory: ~/boltz-backend

    docker:
      - image: circleci/node:lts

jobs:
  dependencies:
    <<: *defaults
    steps:
      - checkout

      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}-v3

      - run:
          name: Install dependencies
          command: npm install

      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}-v3
          paths:
            - ./node_modules

      - persist_to_workspace:
          root: ~/
          paths: boltz-backend

  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/

      - run:
          name: Install rsync
          command: 'sudo apt-get update -y && sudo apt-get -y install rsync'

      - run:
          name: Compile
          command: npm run compile

  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/

      - run:
          name: Lint
          command: npm run lint

  test:
    working_directory: ~/boltz-backend

    machine:
      enabled: true

    steps:
      - attach_workspace:
          at: ~/

      - run:
          name: Install latest Node.js LTS
          command: |
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
            nvm install v10.15.3
            nvm alias default v10.15.3

      - run:
          name: Unit tests
          command: |
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
            
            npm run test:unit

      - run:
          name: Start regtest
          command: |
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"

            npm run docker:start

      - run:
          name: Integration tests
          command: |
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"

            npm run test:int

workflows:
  version: 2

  build-and-test:
    jobs:
      - dependencies

      - build:
          requires:
            - dependencies

      - lint:
          requires:
            - dependencies

      - test:
          requires:
            - dependencies
