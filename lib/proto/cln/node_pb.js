// source: cln/node.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var cln_primitives_pb = require('../cln/primitives_pb.js');
goog.object.extend(proto, cln_primitives_pb);
goog.exportSymbol('proto.cln.AddgossipRequest', null, global);
goog.exportSymbol('proto.cln.AddgossipResponse', null, global);
goog.exportSymbol('proto.cln.AddpsbtoutputRequest', null, global);
goog.exportSymbol('proto.cln.AddpsbtoutputResponse', null, global);
goog.exportSymbol('proto.cln.AutocleaninvoiceRequest', null, global);
goog.exportSymbol('proto.cln.AutocleaninvoiceResponse', null, global);
goog.exportSymbol('proto.cln.AutocleanonceAutoclean', null, global);
goog.exportSymbol('proto.cln.AutocleanonceAutocleanExpiredinvoices', null, global);
goog.exportSymbol('proto.cln.AutocleanonceAutocleanFailedforwards', null, global);
goog.exportSymbol('proto.cln.AutocleanonceAutocleanFailedpays', null, global);
goog.exportSymbol('proto.cln.AutocleanonceAutocleanPaidinvoices', null, global);
goog.exportSymbol('proto.cln.AutocleanonceAutocleanSucceededforwards', null, global);
goog.exportSymbol('proto.cln.AutocleanonceAutocleanSucceededpays', null, global);
goog.exportSymbol('proto.cln.AutocleanonceRequest', null, global);
goog.exportSymbol('proto.cln.AutocleanonceResponse', null, global);
goog.exportSymbol('proto.cln.AutocleanstatusAutoclean', null, global);
goog.exportSymbol('proto.cln.AutocleanstatusAutocleanExpiredinvoices', null, global);
goog.exportSymbol('proto.cln.AutocleanstatusAutocleanFailedforwards', null, global);
goog.exportSymbol('proto.cln.AutocleanstatusAutocleanFailedpays', null, global);
goog.exportSymbol('proto.cln.AutocleanstatusAutocleanPaidinvoices', null, global);
goog.exportSymbol('proto.cln.AutocleanstatusAutocleanSucceededforwards', null, global);
goog.exportSymbol('proto.cln.AutocleanstatusAutocleanSucceededpays', null, global);
goog.exportSymbol('proto.cln.AutocleanstatusRequest', null, global);
goog.exportSymbol('proto.cln.AutocleanstatusResponse', null, global);
goog.exportSymbol('proto.cln.BkprchannelsapyChannels_apy', null, global);
goog.exportSymbol('proto.cln.BkprchannelsapyRequest', null, global);
goog.exportSymbol('proto.cln.BkprchannelsapyResponse', null, global);
goog.exportSymbol('proto.cln.BkprdumpincomecsvRequest', null, global);
goog.exportSymbol('proto.cln.BkprdumpincomecsvResponse', null, global);
goog.exportSymbol('proto.cln.BkprdumpincomecsvResponse.BkprdumpincomecsvCsv_format', null, global);
goog.exportSymbol('proto.cln.BkprinspectRequest', null, global);
goog.exportSymbol('proto.cln.BkprinspectResponse', null, global);
goog.exportSymbol('proto.cln.BkprinspectTxs', null, global);
goog.exportSymbol('proto.cln.BkprinspectTxsOutputs', null, global);
goog.exportSymbol('proto.cln.BkprlistaccounteventsEvents', null, global);
goog.exportSymbol('proto.cln.BkprlistaccounteventsEvents.BkprlistaccounteventsEventsType', null, global);
goog.exportSymbol('proto.cln.BkprlistaccounteventsRequest', null, global);
goog.exportSymbol('proto.cln.BkprlistaccounteventsResponse', null, global);
goog.exportSymbol('proto.cln.BkprlistbalancesAccounts', null, global);
goog.exportSymbol('proto.cln.BkprlistbalancesAccountsBalances', null, global);
goog.exportSymbol('proto.cln.BkprlistbalancesRequest', null, global);
goog.exportSymbol('proto.cln.BkprlistbalancesResponse', null, global);
goog.exportSymbol('proto.cln.BkprlistincomeIncome_events', null, global);
goog.exportSymbol('proto.cln.BkprlistincomeRequest', null, global);
goog.exportSymbol('proto.cln.BkprlistincomeResponse', null, global);
goog.exportSymbol('proto.cln.BlacklistruneBlacklist', null, global);
goog.exportSymbol('proto.cln.BlacklistruneRequest', null, global);
goog.exportSymbol('proto.cln.BlacklistruneResponse', null, global);
goog.exportSymbol('proto.cln.BlockAddedNotification', null, global);
goog.exportSymbol('proto.cln.ChannelOpenFailedNotification', null, global);
goog.exportSymbol('proto.cln.ChannelOpenedNotification', null, global);
goog.exportSymbol('proto.cln.CheckmessageRequest', null, global);
goog.exportSymbol('proto.cln.CheckmessageResponse', null, global);
goog.exportSymbol('proto.cln.CheckruneRequest', null, global);
goog.exportSymbol('proto.cln.CheckruneResponse', null, global);
goog.exportSymbol('proto.cln.CloseRequest', null, global);
goog.exportSymbol('proto.cln.CloseResponse', null, global);
goog.exportSymbol('proto.cln.CloseResponse.CloseType', null, global);
goog.exportSymbol('proto.cln.ConnectAddress', null, global);
goog.exportSymbol('proto.cln.ConnectAddress.ConnectAddressType', null, global);
goog.exportSymbol('proto.cln.ConnectRequest', null, global);
goog.exportSymbol('proto.cln.ConnectResponse', null, global);
goog.exportSymbol('proto.cln.ConnectResponse.ConnectDirection', null, global);
goog.exportSymbol('proto.cln.CreateinvoicePaid_outpoint', null, global);
goog.exportSymbol('proto.cln.CreateinvoiceRequest', null, global);
goog.exportSymbol('proto.cln.CreateinvoiceResponse', null, global);
goog.exportSymbol('proto.cln.CreateinvoiceResponse.CreateinvoiceStatus', null, global);
goog.exportSymbol('proto.cln.CreateonionHops', null, global);
goog.exportSymbol('proto.cln.CreateonionRequest', null, global);
goog.exportSymbol('proto.cln.CreateonionResponse', null, global);
goog.exportSymbol('proto.cln.CreateruneRequest', null, global);
goog.exportSymbol('proto.cln.CreateruneResponse', null, global);
goog.exportSymbol('proto.cln.CustomMsgNotification', null, global);
goog.exportSymbol('proto.cln.DatastoreRequest', null, global);
goog.exportSymbol('proto.cln.DatastoreRequest.DatastoreMode', null, global);
goog.exportSymbol('proto.cln.DatastoreResponse', null, global);
goog.exportSymbol('proto.cln.DatastoreusageDatastoreusage', null, global);
goog.exportSymbol('proto.cln.DatastoreusageRequest', null, global);
goog.exportSymbol('proto.cln.DatastoreusageResponse', null, global);
goog.exportSymbol('proto.cln.DecodeExtra', null, global);
goog.exportSymbol('proto.cln.DecodeFallbacks', null, global);
goog.exportSymbol('proto.cln.DecodeFallbacks.DecodeFallbacksType', null, global);
goog.exportSymbol('proto.cln.DecodeInvoice_fallbacks', null, global);
goog.exportSymbol('proto.cln.DecodeInvoice_pathsPath', null, global);
goog.exportSymbol('proto.cln.DecodeOffer_paths', null, global);
goog.exportSymbol('proto.cln.DecodeOffer_recurrencePaywindow', null, global);
goog.exportSymbol('proto.cln.DecodeRequest', null, global);
goog.exportSymbol('proto.cln.DecodeResponse', null, global);
goog.exportSymbol('proto.cln.DecodeResponse.DecodeType', null, global);
goog.exportSymbol('proto.cln.DecodeRestrictions', null, global);
goog.exportSymbol('proto.cln.DecodepayExtra', null, global);
goog.exportSymbol('proto.cln.DecodepayFallbacks', null, global);
goog.exportSymbol('proto.cln.DecodepayFallbacks.DecodepayFallbacksType', null, global);
goog.exportSymbol('proto.cln.DecodepayRequest', null, global);
goog.exportSymbol('proto.cln.DecodepayResponse', null, global);
goog.exportSymbol('proto.cln.DeldatastoreRequest', null, global);
goog.exportSymbol('proto.cln.DeldatastoreResponse', null, global);
goog.exportSymbol('proto.cln.DelforwardRequest', null, global);
goog.exportSymbol('proto.cln.DelforwardRequest.DelforwardStatus', null, global);
goog.exportSymbol('proto.cln.DelforwardResponse', null, global);
goog.exportSymbol('proto.cln.DelinvoiceRequest', null, global);
goog.exportSymbol('proto.cln.DelinvoiceRequest.DelinvoiceStatus', null, global);
goog.exportSymbol('proto.cln.DelinvoiceResponse', null, global);
goog.exportSymbol('proto.cln.DelinvoiceResponse.DelinvoiceStatus', null, global);
goog.exportSymbol('proto.cln.DelpayPayments', null, global);
goog.exportSymbol('proto.cln.DelpayPayments.DelpayPaymentsStatus', null, global);
goog.exportSymbol('proto.cln.DelpayRequest', null, global);
goog.exportSymbol('proto.cln.DelpayRequest.DelpayStatus', null, global);
goog.exportSymbol('proto.cln.DelpayResponse', null, global);
goog.exportSymbol('proto.cln.DevforgetchannelRequest', null, global);
goog.exportSymbol('proto.cln.DevforgetchannelResponse', null, global);
goog.exportSymbol('proto.cln.DisableinvoicerequestRequest', null, global);
goog.exportSymbol('proto.cln.DisableinvoicerequestResponse', null, global);
goog.exportSymbol('proto.cln.DisableofferRequest', null, global);
goog.exportSymbol('proto.cln.DisableofferResponse', null, global);
goog.exportSymbol('proto.cln.DisconnectRequest', null, global);
goog.exportSymbol('proto.cln.DisconnectResponse', null, global);
goog.exportSymbol('proto.cln.EmergencyrecoverRequest', null, global);
goog.exportSymbol('proto.cln.EmergencyrecoverResponse', null, global);
goog.exportSymbol('proto.cln.FeeratesOnchain_fee_estimates', null, global);
goog.exportSymbol('proto.cln.FeeratesPerkb', null, global);
goog.exportSymbol('proto.cln.FeeratesPerkbEstimates', null, global);
goog.exportSymbol('proto.cln.FeeratesPerkw', null, global);
goog.exportSymbol('proto.cln.FeeratesPerkwEstimates', null, global);
goog.exportSymbol('proto.cln.FeeratesRequest', null, global);
goog.exportSymbol('proto.cln.FeeratesRequest.FeeratesStyle', null, global);
goog.exportSymbol('proto.cln.FeeratesResponse', null, global);
goog.exportSymbol('proto.cln.FetchinvoiceChanges', null, global);
goog.exportSymbol('proto.cln.FetchinvoiceNext_period', null, global);
goog.exportSymbol('proto.cln.FetchinvoiceRequest', null, global);
goog.exportSymbol('proto.cln.FetchinvoiceResponse', null, global);
goog.exportSymbol('proto.cln.FundchannelChannel_type', null, global);
goog.exportSymbol('proto.cln.FundchannelRequest', null, global);
goog.exportSymbol('proto.cln.FundchannelResponse', null, global);
goog.exportSymbol('proto.cln.Fundchannel_cancelRequest', null, global);
goog.exportSymbol('proto.cln.Fundchannel_cancelResponse', null, global);
goog.exportSymbol('proto.cln.Fundchannel_completeRequest', null, global);
goog.exportSymbol('proto.cln.Fundchannel_completeResponse', null, global);
goog.exportSymbol('proto.cln.Fundchannel_startChannel_type', null, global);
goog.exportSymbol('proto.cln.Fundchannel_startRequest', null, global);
goog.exportSymbol('proto.cln.Fundchannel_startResponse', null, global);
goog.exportSymbol('proto.cln.FunderupdateRequest', null, global);
goog.exportSymbol('proto.cln.FunderupdateRequest.FunderupdatePolicy', null, global);
goog.exportSymbol('proto.cln.FunderupdateResponse', null, global);
goog.exportSymbol('proto.cln.FunderupdateResponse.FunderupdatePolicy', null, global);
goog.exportSymbol('proto.cln.FundpsbtRequest', null, global);
goog.exportSymbol('proto.cln.FundpsbtReservations', null, global);
goog.exportSymbol('proto.cln.FundpsbtResponse', null, global);
goog.exportSymbol('proto.cln.GetinfoAddress', null, global);
goog.exportSymbol('proto.cln.GetinfoAddress.GetinfoAddressType', null, global);
goog.exportSymbol('proto.cln.GetinfoBinding', null, global);
goog.exportSymbol('proto.cln.GetinfoBinding.GetinfoBindingType', null, global);
goog.exportSymbol('proto.cln.GetinfoOur_features', null, global);
goog.exportSymbol('proto.cln.GetinfoRequest', null, global);
goog.exportSymbol('proto.cln.GetinfoResponse', null, global);
goog.exportSymbol('proto.cln.GetlogLog', null, global);
goog.exportSymbol('proto.cln.GetlogLog.GetlogLogType', null, global);
goog.exportSymbol('proto.cln.GetlogRequest', null, global);
goog.exportSymbol('proto.cln.GetlogRequest.GetlogLevel', null, global);
goog.exportSymbol('proto.cln.GetlogResponse', null, global);
goog.exportSymbol('proto.cln.GetrouteRequest', null, global);
goog.exportSymbol('proto.cln.GetrouteResponse', null, global);
goog.exportSymbol('proto.cln.GetrouteRoute', null, global);
goog.exportSymbol('proto.cln.GetrouteRoute.GetrouteRouteStyle', null, global);
goog.exportSymbol('proto.cln.HelpHelp', null, global);
goog.exportSymbol('proto.cln.HelpRequest', null, global);
goog.exportSymbol('proto.cln.HelpResponse', null, global);
goog.exportSymbol('proto.cln.HelpResponse.HelpFormathint', null, global);
goog.exportSymbol('proto.cln.InvoiceRequest', null, global);
goog.exportSymbol('proto.cln.InvoiceResponse', null, global);
goog.exportSymbol('proto.cln.InvoicerequestRequest', null, global);
goog.exportSymbol('proto.cln.InvoicerequestResponse', null, global);
goog.exportSymbol('proto.cln.KeysendRequest', null, global);
goog.exportSymbol('proto.cln.KeysendResponse', null, global);
goog.exportSymbol('proto.cln.KeysendResponse.KeysendStatus', null, global);
goog.exportSymbol('proto.cln.ListchannelsChannels', null, global);
goog.exportSymbol('proto.cln.ListchannelsRequest', null, global);
goog.exportSymbol('proto.cln.ListchannelsResponse', null, global);
goog.exportSymbol('proto.cln.ListclosedchannelsClosedchannels', null, global);
goog.exportSymbol('proto.cln.ListclosedchannelsClosedchannels.ListclosedchannelsClosedchannelsClose_cause', null, global);
goog.exportSymbol('proto.cln.ListclosedchannelsClosedchannelsAlias', null, global);
goog.exportSymbol('proto.cln.ListclosedchannelsRequest', null, global);
goog.exportSymbol('proto.cln.ListclosedchannelsResponse', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigs', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsAccepthtlctlvtypes', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsAddr', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsAlias', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsAllowdeprecatedapis', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsAlwaysuseproxy', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsAnnounceaddr', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsAnnounceaddrdiscovered', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsAnnounceaddrdiscovered.ListconfigsConfigsAnnounceaddrdiscoveredValue_str', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsAnnounceaddrdiscoveredport', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsAnnounceaddrdns', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsAutolisten', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsBindaddr', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsClearplugins', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsCltvdelta', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsCltvfinal', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsCommitfee', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsCommitfeerateoffset', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsCommittime', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsConf', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsConf.ListconfigsConfigsConfSource', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsDaemon', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsDatabaseupgrade', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsDeveloper', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsDisabledns', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsDisablempp', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsDisableplugin', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsEncryptedhsm', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsExperimentalanchors', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsExperimentaldualfund', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsExperimentaloffers', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsExperimentalonionmessages', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsExperimentalpeerstorage', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsExperimentalshutdownwrongfunding', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsExperimentalsplicing', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsFeebase', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsFeepersatoshi', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsFetchinvoicenoconnect', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsForcefeerates', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsFundingconfirms', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsHtlcmaximummsat', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsHtlcminimummsat', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsIgnorefeelimits', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsImportantplugin', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsLargechannels', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsLightningdir', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsLogfile', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsLoglevel', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsLogprefix', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsLogtimestamps', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsMainnet', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsMaxconcurrenthtlcs', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsMaxdusthtlcexposuremsat', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsMaxlocktimeblocks', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsMincapacitysat', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsNetwork', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsOffline', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsPidfile', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsPlugin', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsPlugindir', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsProxy', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsRegtest', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsRequireconfirmedinputs', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsRescan', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsRgb', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsRpcfile', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsRpcfilemode', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsSignet', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsSubdaemon', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsTestnet', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsTorservicepassword', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsWallet', null, global);
goog.exportSymbol('proto.cln.ListconfigsConfigsWatchtimeblocks', null, global);
goog.exportSymbol('proto.cln.ListconfigsImportantplugins', null, global);
goog.exportSymbol('proto.cln.ListconfigsImportantpluginsOptions', null, global);
goog.exportSymbol('proto.cln.ListconfigsPlugins', null, global);
goog.exportSymbol('proto.cln.ListconfigsPluginsOptions', null, global);
goog.exportSymbol('proto.cln.ListconfigsRequest', null, global);
goog.exportSymbol('proto.cln.ListconfigsResponse', null, global);
goog.exportSymbol('proto.cln.ListdatastoreDatastore', null, global);
goog.exportSymbol('proto.cln.ListdatastoreRequest', null, global);
goog.exportSymbol('proto.cln.ListdatastoreResponse', null, global);
goog.exportSymbol('proto.cln.ListforwardsForwards', null, global);
goog.exportSymbol('proto.cln.ListforwardsForwards.ListforwardsForwardsStatus', null, global);
goog.exportSymbol('proto.cln.ListforwardsForwards.ListforwardsForwardsStyle', null, global);
goog.exportSymbol('proto.cln.ListforwardsRequest', null, global);
goog.exportSymbol('proto.cln.ListforwardsRequest.ListforwardsIndex', null, global);
goog.exportSymbol('proto.cln.ListforwardsRequest.ListforwardsStatus', null, global);
goog.exportSymbol('proto.cln.ListforwardsResponse', null, global);
goog.exportSymbol('proto.cln.ListfundsChannels', null, global);
goog.exportSymbol('proto.cln.ListfundsOutputs', null, global);
goog.exportSymbol('proto.cln.ListfundsOutputs.ListfundsOutputsStatus', null, global);
goog.exportSymbol('proto.cln.ListfundsRequest', null, global);
goog.exportSymbol('proto.cln.ListfundsResponse', null, global);
goog.exportSymbol('proto.cln.ListhtlcsHtlcs', null, global);
goog.exportSymbol('proto.cln.ListhtlcsHtlcs.ListhtlcsHtlcsDirection', null, global);
goog.exportSymbol('proto.cln.ListhtlcsRequest', null, global);
goog.exportSymbol('proto.cln.ListhtlcsResponse', null, global);
goog.exportSymbol('proto.cln.ListinvoicerequestsInvoicerequests', null, global);
goog.exportSymbol('proto.cln.ListinvoicerequestsRequest', null, global);
goog.exportSymbol('proto.cln.ListinvoicerequestsResponse', null, global);
goog.exportSymbol('proto.cln.ListinvoicesInvoices', null, global);
goog.exportSymbol('proto.cln.ListinvoicesInvoices.ListinvoicesInvoicesStatus', null, global);
goog.exportSymbol('proto.cln.ListinvoicesInvoicesPaid_outpoint', null, global);
goog.exportSymbol('proto.cln.ListinvoicesRequest', null, global);
goog.exportSymbol('proto.cln.ListinvoicesRequest.ListinvoicesIndex', null, global);
goog.exportSymbol('proto.cln.ListinvoicesResponse', null, global);
goog.exportSymbol('proto.cln.ListnodesNodes', null, global);
goog.exportSymbol('proto.cln.ListnodesNodesAddresses', null, global);
goog.exportSymbol('proto.cln.ListnodesNodesAddresses.ListnodesNodesAddressesType', null, global);
goog.exportSymbol('proto.cln.ListnodesNodesOption_will_fund', null, global);
goog.exportSymbol('proto.cln.ListnodesRequest', null, global);
goog.exportSymbol('proto.cln.ListnodesResponse', null, global);
goog.exportSymbol('proto.cln.ListoffersOffers', null, global);
goog.exportSymbol('proto.cln.ListoffersRequest', null, global);
goog.exportSymbol('proto.cln.ListoffersResponse', null, global);
goog.exportSymbol('proto.cln.ListpaysPays', null, global);
goog.exportSymbol('proto.cln.ListpaysPays.ListpaysPaysStatus', null, global);
goog.exportSymbol('proto.cln.ListpaysRequest', null, global);
goog.exportSymbol('proto.cln.ListpaysRequest.ListpaysStatus', null, global);
goog.exportSymbol('proto.cln.ListpaysResponse', null, global);
goog.exportSymbol('proto.cln.ListpeerchannelsChannels', null, global);
goog.exportSymbol('proto.cln.ListpeerchannelsChannels.ListpeerchannelsChannelsState', null, global);
goog.exportSymbol('proto.cln.ListpeerchannelsChannelsAlias', null, global);
goog.exportSymbol('proto.cln.ListpeerchannelsChannelsFeerate', null, global);
goog.exportSymbol('proto.cln.ListpeerchannelsChannelsFunding', null, global);
goog.exportSymbol('proto.cln.ListpeerchannelsChannelsHtlcs', null, global);
goog.exportSymbol('proto.cln.ListpeerchannelsChannelsHtlcs.ListpeerchannelsChannelsHtlcsDirection', null, global);
goog.exportSymbol('proto.cln.ListpeerchannelsChannelsInflight', null, global);
goog.exportSymbol('proto.cln.ListpeerchannelsChannelsUpdates', null, global);
goog.exportSymbol('proto.cln.ListpeerchannelsChannelsUpdatesLocal', null, global);
goog.exportSymbol('proto.cln.ListpeerchannelsChannelsUpdatesRemote', null, global);
goog.exportSymbol('proto.cln.ListpeerchannelsRequest', null, global);
goog.exportSymbol('proto.cln.ListpeerchannelsResponse', null, global);
goog.exportSymbol('proto.cln.ListpeersPeers', null, global);
goog.exportSymbol('proto.cln.ListpeersPeersLog', null, global);
goog.exportSymbol('proto.cln.ListpeersPeersLog.ListpeersPeersLogType', null, global);
goog.exportSymbol('proto.cln.ListpeersRequest', null, global);
goog.exportSymbol('proto.cln.ListpeersRequest.ListpeersLevel', null, global);
goog.exportSymbol('proto.cln.ListpeersResponse', null, global);
goog.exportSymbol('proto.cln.ListsendpaysPayments', null, global);
goog.exportSymbol('proto.cln.ListsendpaysPayments.ListsendpaysPaymentsStatus', null, global);
goog.exportSymbol('proto.cln.ListsendpaysRequest', null, global);
goog.exportSymbol('proto.cln.ListsendpaysRequest.ListsendpaysIndex', null, global);
goog.exportSymbol('proto.cln.ListsendpaysRequest.ListsendpaysStatus', null, global);
goog.exportSymbol('proto.cln.ListsendpaysResponse', null, global);
goog.exportSymbol('proto.cln.ListtransactionsRequest', null, global);
goog.exportSymbol('proto.cln.ListtransactionsResponse', null, global);
goog.exportSymbol('proto.cln.ListtransactionsTransactions', null, global);
goog.exportSymbol('proto.cln.ListtransactionsTransactionsInputs', null, global);
goog.exportSymbol('proto.cln.ListtransactionsTransactionsOutputs', null, global);
goog.exportSymbol('proto.cln.MakesecretRequest', null, global);
goog.exportSymbol('proto.cln.MakesecretResponse', null, global);
goog.exportSymbol('proto.cln.MultifundchannelChannel_ids', null, global);
goog.exportSymbol('proto.cln.MultifundchannelChannel_idsChannel_type', null, global);
goog.exportSymbol('proto.cln.MultifundchannelDestinations', null, global);
goog.exportSymbol('proto.cln.MultifundchannelFailed', null, global);
goog.exportSymbol('proto.cln.MultifundchannelFailed.MultifundchannelFailedMethod', null, global);
goog.exportSymbol('proto.cln.MultifundchannelFailedError', null, global);
goog.exportSymbol('proto.cln.MultifundchannelRequest', null, global);
goog.exportSymbol('proto.cln.MultifundchannelResponse', null, global);
goog.exportSymbol('proto.cln.MultiwithdrawRequest', null, global);
goog.exportSymbol('proto.cln.MultiwithdrawResponse', null, global);
goog.exportSymbol('proto.cln.NewaddrRequest', null, global);
goog.exportSymbol('proto.cln.NewaddrRequest.NewaddrAddresstype', null, global);
goog.exportSymbol('proto.cln.NewaddrResponse', null, global);
goog.exportSymbol('proto.cln.OfferRequest', null, global);
goog.exportSymbol('proto.cln.OfferResponse', null, global);
goog.exportSymbol('proto.cln.Openchannel_abortRequest', null, global);
goog.exportSymbol('proto.cln.Openchannel_abortResponse', null, global);
goog.exportSymbol('proto.cln.Openchannel_bumpChannel_type', null, global);
goog.exportSymbol('proto.cln.Openchannel_bumpRequest', null, global);
goog.exportSymbol('proto.cln.Openchannel_bumpResponse', null, global);
goog.exportSymbol('proto.cln.Openchannel_initChannel_type', null, global);
goog.exportSymbol('proto.cln.Openchannel_initRequest', null, global);
goog.exportSymbol('proto.cln.Openchannel_initResponse', null, global);
goog.exportSymbol('proto.cln.Openchannel_signedRequest', null, global);
goog.exportSymbol('proto.cln.Openchannel_signedResponse', null, global);
goog.exportSymbol('proto.cln.Openchannel_updateChannel_type', null, global);
goog.exportSymbol('proto.cln.Openchannel_updateRequest', null, global);
goog.exportSymbol('proto.cln.Openchannel_updateResponse', null, global);
goog.exportSymbol('proto.cln.PayRequest', null, global);
goog.exportSymbol('proto.cln.PayResponse', null, global);
goog.exportSymbol('proto.cln.PayResponse.PayStatus', null, global);
goog.exportSymbol('proto.cln.PeerConnectAddress', null, global);
goog.exportSymbol('proto.cln.PeerConnectAddress.PeerConnectAddressType', null, global);
goog.exportSymbol('proto.cln.PeerConnectNotification', null, global);
goog.exportSymbol('proto.cln.PeerConnectNotification.PeerConnectDirection', null, global);
goog.exportSymbol('proto.cln.PingRequest', null, global);
goog.exportSymbol('proto.cln.PingResponse', null, global);
goog.exportSymbol('proto.cln.PluginPlugins', null, global);
goog.exportSymbol('proto.cln.PluginRequest', null, global);
goog.exportSymbol('proto.cln.PluginResponse', null, global);
goog.exportSymbol('proto.cln.PreapproveinvoiceRequest', null, global);
goog.exportSymbol('proto.cln.PreapproveinvoiceResponse', null, global);
goog.exportSymbol('proto.cln.PreapprovekeysendRequest', null, global);
goog.exportSymbol('proto.cln.PreapprovekeysendResponse', null, global);
goog.exportSymbol('proto.cln.RecoverRequest', null, global);
goog.exportSymbol('proto.cln.RecoverResponse', null, global);
goog.exportSymbol('proto.cln.RecoverResponse.RecoverResult', null, global);
goog.exportSymbol('proto.cln.RecoverchannelRequest', null, global);
goog.exportSymbol('proto.cln.RecoverchannelResponse', null, global);
goog.exportSymbol('proto.cln.RenepayRequest', null, global);
goog.exportSymbol('proto.cln.RenepayResponse', null, global);
goog.exportSymbol('proto.cln.RenepayResponse.RenepayStatus', null, global);
goog.exportSymbol('proto.cln.RenepaystatusPaystatus', null, global);
goog.exportSymbol('proto.cln.RenepaystatusPaystatus.RenepaystatusPaystatusStatus', null, global);
goog.exportSymbol('proto.cln.RenepaystatusRequest', null, global);
goog.exportSymbol('proto.cln.RenepaystatusResponse', null, global);
goog.exportSymbol('proto.cln.ReserveinputsRequest', null, global);
goog.exportSymbol('proto.cln.ReserveinputsReservations', null, global);
goog.exportSymbol('proto.cln.ReserveinputsResponse', null, global);
goog.exportSymbol('proto.cln.SendcustommsgRequest', null, global);
goog.exportSymbol('proto.cln.SendcustommsgResponse', null, global);
goog.exportSymbol('proto.cln.SendinvoiceRequest', null, global);
goog.exportSymbol('proto.cln.SendinvoiceResponse', null, global);
goog.exportSymbol('proto.cln.SendinvoiceResponse.SendinvoiceStatus', null, global);
goog.exportSymbol('proto.cln.SendonionFirst_hop', null, global);
goog.exportSymbol('proto.cln.SendonionRequest', null, global);
goog.exportSymbol('proto.cln.SendonionResponse', null, global);
goog.exportSymbol('proto.cln.SendonionResponse.SendonionStatus', null, global);
goog.exportSymbol('proto.cln.SendonionmessageHops', null, global);
goog.exportSymbol('proto.cln.SendonionmessageRequest', null, global);
goog.exportSymbol('proto.cln.SendonionmessageResponse', null, global);
goog.exportSymbol('proto.cln.SendpayRequest', null, global);
goog.exportSymbol('proto.cln.SendpayResponse', null, global);
goog.exportSymbol('proto.cln.SendpayResponse.SendpayStatus', null, global);
goog.exportSymbol('proto.cln.SendpayRoute', null, global);
goog.exportSymbol('proto.cln.SendpsbtRequest', null, global);
goog.exportSymbol('proto.cln.SendpsbtResponse', null, global);
goog.exportSymbol('proto.cln.SetchannelChannels', null, global);
goog.exportSymbol('proto.cln.SetchannelRequest', null, global);
goog.exportSymbol('proto.cln.SetchannelResponse', null, global);
goog.exportSymbol('proto.cln.SetconfigConfig', null, global);
goog.exportSymbol('proto.cln.SetconfigRequest', null, global);
goog.exportSymbol('proto.cln.SetconfigResponse', null, global);
goog.exportSymbol('proto.cln.SetpsbtversionRequest', null, global);
goog.exportSymbol('proto.cln.SetpsbtversionResponse', null, global);
goog.exportSymbol('proto.cln.ShowrunesRequest', null, global);
goog.exportSymbol('proto.cln.ShowrunesResponse', null, global);
goog.exportSymbol('proto.cln.ShowrunesRunes', null, global);
goog.exportSymbol('proto.cln.ShowrunesRunesRestrictions', null, global);
goog.exportSymbol('proto.cln.ShowrunesRunesRestrictionsAlternatives', null, global);
goog.exportSymbol('proto.cln.SigninvoiceRequest', null, global);
goog.exportSymbol('proto.cln.SigninvoiceResponse', null, global);
goog.exportSymbol('proto.cln.SignmessageRequest', null, global);
goog.exportSymbol('proto.cln.SignmessageResponse', null, global);
goog.exportSymbol('proto.cln.SignpsbtRequest', null, global);
goog.exportSymbol('proto.cln.SignpsbtResponse', null, global);
goog.exportSymbol('proto.cln.Splice_initRequest', null, global);
goog.exportSymbol('proto.cln.Splice_initResponse', null, global);
goog.exportSymbol('proto.cln.Splice_signedRequest', null, global);
goog.exportSymbol('proto.cln.Splice_signedResponse', null, global);
goog.exportSymbol('proto.cln.Splice_updateRequest', null, global);
goog.exportSymbol('proto.cln.Splice_updateResponse', null, global);
goog.exportSymbol('proto.cln.StaticbackupRequest', null, global);
goog.exportSymbol('proto.cln.StaticbackupResponse', null, global);
goog.exportSymbol('proto.cln.StopRequest', null, global);
goog.exportSymbol('proto.cln.StopResponse', null, global);
goog.exportSymbol('proto.cln.StopResponse.StopResult', null, global);
goog.exportSymbol('proto.cln.StreamBlockAddedRequest', null, global);
goog.exportSymbol('proto.cln.StreamChannelOpenFailedRequest', null, global);
goog.exportSymbol('proto.cln.StreamChannelOpenedRequest', null, global);
goog.exportSymbol('proto.cln.StreamConnectRequest', null, global);
goog.exportSymbol('proto.cln.StreamCustomMsgRequest', null, global);
goog.exportSymbol('proto.cln.TxdiscardRequest', null, global);
goog.exportSymbol('proto.cln.TxdiscardResponse', null, global);
goog.exportSymbol('proto.cln.TxprepareRequest', null, global);
goog.exportSymbol('proto.cln.TxprepareResponse', null, global);
goog.exportSymbol('proto.cln.TxsendRequest', null, global);
goog.exportSymbol('proto.cln.TxsendResponse', null, global);
goog.exportSymbol('proto.cln.UnreserveinputsRequest', null, global);
goog.exportSymbol('proto.cln.UnreserveinputsReservations', null, global);
goog.exportSymbol('proto.cln.UnreserveinputsResponse', null, global);
goog.exportSymbol('proto.cln.UpgradewalletRequest', null, global);
goog.exportSymbol('proto.cln.UpgradewalletResponse', null, global);
goog.exportSymbol('proto.cln.UtxopsbtRequest', null, global);
goog.exportSymbol('proto.cln.UtxopsbtReservations', null, global);
goog.exportSymbol('proto.cln.UtxopsbtResponse', null, global);
goog.exportSymbol('proto.cln.WaitDetails', null, global);
goog.exportSymbol('proto.cln.WaitDetails.WaitDetailsStatus', null, global);
goog.exportSymbol('proto.cln.WaitRequest', null, global);
goog.exportSymbol('proto.cln.WaitRequest.WaitIndexname', null, global);
goog.exportSymbol('proto.cln.WaitRequest.WaitSubsystem', null, global);
goog.exportSymbol('proto.cln.WaitResponse', null, global);
goog.exportSymbol('proto.cln.WaitResponse.WaitSubsystem', null, global);
goog.exportSymbol('proto.cln.WaitanyinvoicePaid_outpoint', null, global);
goog.exportSymbol('proto.cln.WaitanyinvoiceRequest', null, global);
goog.exportSymbol('proto.cln.WaitanyinvoiceResponse', null, global);
goog.exportSymbol('proto.cln.WaitanyinvoiceResponse.WaitanyinvoiceStatus', null, global);
goog.exportSymbol('proto.cln.WaitblockheightRequest', null, global);
goog.exportSymbol('proto.cln.WaitblockheightResponse', null, global);
goog.exportSymbol('proto.cln.WaitinvoicePaid_outpoint', null, global);
goog.exportSymbol('proto.cln.WaitinvoiceRequest', null, global);
goog.exportSymbol('proto.cln.WaitinvoiceResponse', null, global);
goog.exportSymbol('proto.cln.WaitinvoiceResponse.WaitinvoiceStatus', null, global);
goog.exportSymbol('proto.cln.WaitsendpayRequest', null, global);
goog.exportSymbol('proto.cln.WaitsendpayResponse', null, global);
goog.exportSymbol('proto.cln.WaitsendpayResponse.WaitsendpayStatus', null, global);
goog.exportSymbol('proto.cln.WithdrawRequest', null, global);
goog.exportSymbol('proto.cln.WithdrawResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.GetinfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.GetinfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.GetinfoRequest.displayName = 'proto.cln.GetinfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.GetinfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.GetinfoResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.GetinfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.GetinfoResponse.displayName = 'proto.cln.GetinfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.GetinfoOur_features = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.GetinfoOur_features, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.GetinfoOur_features.displayName = 'proto.cln.GetinfoOur_features';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.GetinfoAddress = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.GetinfoAddress, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.GetinfoAddress.displayName = 'proto.cln.GetinfoAddress';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.GetinfoBinding = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.GetinfoBinding, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.GetinfoBinding.displayName = 'proto.cln.GetinfoBinding';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpeersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListpeersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpeersRequest.displayName = 'proto.cln.ListpeersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpeersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListpeersResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.ListpeersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpeersResponse.displayName = 'proto.cln.ListpeersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpeersPeers = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListpeersPeers.repeatedFields_, null);
};
goog.inherits(proto.cln.ListpeersPeers, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpeersPeers.displayName = 'proto.cln.ListpeersPeers';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpeersPeersLog = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListpeersPeersLog, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpeersPeersLog.displayName = 'proto.cln.ListpeersPeersLog';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListfundsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListfundsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListfundsRequest.displayName = 'proto.cln.ListfundsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListfundsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListfundsResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.ListfundsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListfundsResponse.displayName = 'proto.cln.ListfundsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListfundsOutputs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListfundsOutputs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListfundsOutputs.displayName = 'proto.cln.ListfundsOutputs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListfundsChannels = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListfundsChannels, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListfundsChannels.displayName = 'proto.cln.ListfundsChannels';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SendpayRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.SendpayRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.SendpayRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SendpayRequest.displayName = 'proto.cln.SendpayRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SendpayResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SendpayResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SendpayResponse.displayName = 'proto.cln.SendpayResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SendpayRoute = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SendpayRoute, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SendpayRoute.displayName = 'proto.cln.SendpayRoute';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListchannelsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListchannelsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListchannelsRequest.displayName = 'proto.cln.ListchannelsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListchannelsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListchannelsResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.ListchannelsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListchannelsResponse.displayName = 'proto.cln.ListchannelsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListchannelsChannels = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListchannelsChannels, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListchannelsChannels.displayName = 'proto.cln.ListchannelsChannels';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.AddgossipRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.AddgossipRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.AddgossipRequest.displayName = 'proto.cln.AddgossipRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.AddgossipResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.AddgossipResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.AddgossipResponse.displayName = 'proto.cln.AddgossipResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.AddpsbtoutputRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.AddpsbtoutputRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.AddpsbtoutputRequest.displayName = 'proto.cln.AddpsbtoutputRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.AddpsbtoutputResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.AddpsbtoutputResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.AddpsbtoutputResponse.displayName = 'proto.cln.AddpsbtoutputResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.AutocleaninvoiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.AutocleaninvoiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.AutocleaninvoiceRequest.displayName = 'proto.cln.AutocleaninvoiceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.AutocleaninvoiceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.AutocleaninvoiceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.AutocleaninvoiceResponse.displayName = 'proto.cln.AutocleaninvoiceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.AutocleanonceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.AutocleanonceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.AutocleanonceRequest.displayName = 'proto.cln.AutocleanonceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.AutocleanonceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.AutocleanonceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.AutocleanonceResponse.displayName = 'proto.cln.AutocleanonceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.AutocleanonceAutoclean = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.AutocleanonceAutoclean, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.AutocleanonceAutoclean.displayName = 'proto.cln.AutocleanonceAutoclean';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.AutocleanonceAutocleanSucceededforwards = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.AutocleanonceAutocleanSucceededforwards, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.AutocleanonceAutocleanSucceededforwards.displayName = 'proto.cln.AutocleanonceAutocleanSucceededforwards';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.AutocleanonceAutocleanFailedforwards = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.AutocleanonceAutocleanFailedforwards, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.AutocleanonceAutocleanFailedforwards.displayName = 'proto.cln.AutocleanonceAutocleanFailedforwards';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.AutocleanonceAutocleanSucceededpays = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.AutocleanonceAutocleanSucceededpays, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.AutocleanonceAutocleanSucceededpays.displayName = 'proto.cln.AutocleanonceAutocleanSucceededpays';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.AutocleanonceAutocleanFailedpays = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.AutocleanonceAutocleanFailedpays, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.AutocleanonceAutocleanFailedpays.displayName = 'proto.cln.AutocleanonceAutocleanFailedpays';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.AutocleanonceAutocleanPaidinvoices = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.AutocleanonceAutocleanPaidinvoices, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.AutocleanonceAutocleanPaidinvoices.displayName = 'proto.cln.AutocleanonceAutocleanPaidinvoices';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.AutocleanonceAutocleanExpiredinvoices = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.AutocleanonceAutocleanExpiredinvoices, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.AutocleanonceAutocleanExpiredinvoices.displayName = 'proto.cln.AutocleanonceAutocleanExpiredinvoices';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.AutocleanstatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.AutocleanstatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.AutocleanstatusRequest.displayName = 'proto.cln.AutocleanstatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.AutocleanstatusResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.AutocleanstatusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.AutocleanstatusResponse.displayName = 'proto.cln.AutocleanstatusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.AutocleanstatusAutoclean = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.AutocleanstatusAutoclean, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.AutocleanstatusAutoclean.displayName = 'proto.cln.AutocleanstatusAutoclean';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.AutocleanstatusAutocleanSucceededforwards = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.AutocleanstatusAutocleanSucceededforwards, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.AutocleanstatusAutocleanSucceededforwards.displayName = 'proto.cln.AutocleanstatusAutocleanSucceededforwards';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.AutocleanstatusAutocleanFailedforwards = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.AutocleanstatusAutocleanFailedforwards, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.AutocleanstatusAutocleanFailedforwards.displayName = 'proto.cln.AutocleanstatusAutocleanFailedforwards';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.AutocleanstatusAutocleanSucceededpays = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.AutocleanstatusAutocleanSucceededpays, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.AutocleanstatusAutocleanSucceededpays.displayName = 'proto.cln.AutocleanstatusAutocleanSucceededpays';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.AutocleanstatusAutocleanFailedpays = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.AutocleanstatusAutocleanFailedpays, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.AutocleanstatusAutocleanFailedpays.displayName = 'proto.cln.AutocleanstatusAutocleanFailedpays';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.AutocleanstatusAutocleanPaidinvoices = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.AutocleanstatusAutocleanPaidinvoices, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.AutocleanstatusAutocleanPaidinvoices.displayName = 'proto.cln.AutocleanstatusAutocleanPaidinvoices';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.AutocleanstatusAutocleanExpiredinvoices = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.AutocleanstatusAutocleanExpiredinvoices, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.AutocleanstatusAutocleanExpiredinvoices.displayName = 'proto.cln.AutocleanstatusAutocleanExpiredinvoices';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.CheckmessageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.CheckmessageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.CheckmessageRequest.displayName = 'proto.cln.CheckmessageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.CheckmessageResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.CheckmessageResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.CheckmessageResponse.displayName = 'proto.cln.CheckmessageResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.CloseRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.CloseRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.CloseRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.CloseRequest.displayName = 'proto.cln.CloseRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.CloseResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.CloseResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.CloseResponse.displayName = 'proto.cln.CloseResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ConnectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ConnectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ConnectRequest.displayName = 'proto.cln.ConnectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ConnectResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ConnectResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ConnectResponse.displayName = 'proto.cln.ConnectResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ConnectAddress = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ConnectAddress, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ConnectAddress.displayName = 'proto.cln.ConnectAddress';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.CreateinvoiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.CreateinvoiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.CreateinvoiceRequest.displayName = 'proto.cln.CreateinvoiceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.CreateinvoiceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.CreateinvoiceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.CreateinvoiceResponse.displayName = 'proto.cln.CreateinvoiceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.CreateinvoicePaid_outpoint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.CreateinvoicePaid_outpoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.CreateinvoicePaid_outpoint.displayName = 'proto.cln.CreateinvoicePaid_outpoint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DatastoreRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.DatastoreRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.DatastoreRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DatastoreRequest.displayName = 'proto.cln.DatastoreRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DatastoreResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.DatastoreResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.DatastoreResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DatastoreResponse.displayName = 'proto.cln.DatastoreResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DatastoreusageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.DatastoreusageRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.DatastoreusageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DatastoreusageRequest.displayName = 'proto.cln.DatastoreusageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DatastoreusageResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DatastoreusageResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DatastoreusageResponse.displayName = 'proto.cln.DatastoreusageResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DatastoreusageDatastoreusage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DatastoreusageDatastoreusage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DatastoreusageDatastoreusage.displayName = 'proto.cln.DatastoreusageDatastoreusage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.CreateonionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.CreateonionRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.CreateonionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.CreateonionRequest.displayName = 'proto.cln.CreateonionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.CreateonionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.CreateonionResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.CreateonionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.CreateonionResponse.displayName = 'proto.cln.CreateonionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.CreateonionHops = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.CreateonionHops, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.CreateonionHops.displayName = 'proto.cln.CreateonionHops';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DeldatastoreRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.DeldatastoreRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.DeldatastoreRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DeldatastoreRequest.displayName = 'proto.cln.DeldatastoreRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DeldatastoreResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.DeldatastoreResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.DeldatastoreResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DeldatastoreResponse.displayName = 'proto.cln.DeldatastoreResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DelinvoiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DelinvoiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DelinvoiceRequest.displayName = 'proto.cln.DelinvoiceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DelinvoiceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DelinvoiceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DelinvoiceResponse.displayName = 'proto.cln.DelinvoiceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DevforgetchannelRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DevforgetchannelRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DevforgetchannelRequest.displayName = 'proto.cln.DevforgetchannelRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DevforgetchannelResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DevforgetchannelResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DevforgetchannelResponse.displayName = 'proto.cln.DevforgetchannelResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.EmergencyrecoverRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.EmergencyrecoverRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.EmergencyrecoverRequest.displayName = 'proto.cln.EmergencyrecoverRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.EmergencyrecoverResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.EmergencyrecoverResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.EmergencyrecoverResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.EmergencyrecoverResponse.displayName = 'proto.cln.EmergencyrecoverResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.RecoverRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.RecoverRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.RecoverRequest.displayName = 'proto.cln.RecoverRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.RecoverResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.RecoverResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.RecoverResponse.displayName = 'proto.cln.RecoverResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.RecoverchannelRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.RecoverchannelRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.RecoverchannelRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.RecoverchannelRequest.displayName = 'proto.cln.RecoverchannelRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.RecoverchannelResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.RecoverchannelResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.RecoverchannelResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.RecoverchannelResponse.displayName = 'proto.cln.RecoverchannelResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.InvoiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.InvoiceRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.InvoiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.InvoiceRequest.displayName = 'proto.cln.InvoiceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.InvoiceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.InvoiceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.InvoiceResponse.displayName = 'proto.cln.InvoiceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.InvoicerequestRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.InvoicerequestRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.InvoicerequestRequest.displayName = 'proto.cln.InvoicerequestRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.InvoicerequestResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.InvoicerequestResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.InvoicerequestResponse.displayName = 'proto.cln.InvoicerequestResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DisableinvoicerequestRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DisableinvoicerequestRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DisableinvoicerequestRequest.displayName = 'proto.cln.DisableinvoicerequestRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DisableinvoicerequestResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DisableinvoicerequestResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DisableinvoicerequestResponse.displayName = 'proto.cln.DisableinvoicerequestResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListinvoicerequestsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListinvoicerequestsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListinvoicerequestsRequest.displayName = 'proto.cln.ListinvoicerequestsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListinvoicerequestsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListinvoicerequestsResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.ListinvoicerequestsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListinvoicerequestsResponse.displayName = 'proto.cln.ListinvoicerequestsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListinvoicerequestsInvoicerequests = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListinvoicerequestsInvoicerequests, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListinvoicerequestsInvoicerequests.displayName = 'proto.cln.ListinvoicerequestsInvoicerequests';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListdatastoreRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListdatastoreRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.ListdatastoreRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListdatastoreRequest.displayName = 'proto.cln.ListdatastoreRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListdatastoreResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListdatastoreResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.ListdatastoreResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListdatastoreResponse.displayName = 'proto.cln.ListdatastoreResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListdatastoreDatastore = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListdatastoreDatastore.repeatedFields_, null);
};
goog.inherits(proto.cln.ListdatastoreDatastore, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListdatastoreDatastore.displayName = 'proto.cln.ListdatastoreDatastore';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListinvoicesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListinvoicesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListinvoicesRequest.displayName = 'proto.cln.ListinvoicesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListinvoicesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListinvoicesResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.ListinvoicesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListinvoicesResponse.displayName = 'proto.cln.ListinvoicesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListinvoicesInvoices = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListinvoicesInvoices, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListinvoicesInvoices.displayName = 'proto.cln.ListinvoicesInvoices';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListinvoicesInvoicesPaid_outpoint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListinvoicesInvoicesPaid_outpoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListinvoicesInvoicesPaid_outpoint.displayName = 'proto.cln.ListinvoicesInvoicesPaid_outpoint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SendonionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.SendonionRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.SendonionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SendonionRequest.displayName = 'proto.cln.SendonionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SendonionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SendonionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SendonionResponse.displayName = 'proto.cln.SendonionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SendonionFirst_hop = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SendonionFirst_hop, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SendonionFirst_hop.displayName = 'proto.cln.SendonionFirst_hop';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListsendpaysRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListsendpaysRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListsendpaysRequest.displayName = 'proto.cln.ListsendpaysRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListsendpaysResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListsendpaysResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.ListsendpaysResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListsendpaysResponse.displayName = 'proto.cln.ListsendpaysResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListsendpaysPayments = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListsendpaysPayments, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListsendpaysPayments.displayName = 'proto.cln.ListsendpaysPayments';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListtransactionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListtransactionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListtransactionsRequest.displayName = 'proto.cln.ListtransactionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListtransactionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListtransactionsResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.ListtransactionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListtransactionsResponse.displayName = 'proto.cln.ListtransactionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListtransactionsTransactions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListtransactionsTransactions.repeatedFields_, null);
};
goog.inherits(proto.cln.ListtransactionsTransactions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListtransactionsTransactions.displayName = 'proto.cln.ListtransactionsTransactions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListtransactionsTransactionsInputs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListtransactionsTransactionsInputs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListtransactionsTransactionsInputs.displayName = 'proto.cln.ListtransactionsTransactionsInputs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListtransactionsTransactionsOutputs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListtransactionsTransactionsOutputs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListtransactionsTransactionsOutputs.displayName = 'proto.cln.ListtransactionsTransactionsOutputs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.MakesecretRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.MakesecretRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.MakesecretRequest.displayName = 'proto.cln.MakesecretRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.MakesecretResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.MakesecretResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.MakesecretResponse.displayName = 'proto.cln.MakesecretResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.PayRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.PayRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.PayRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.PayRequest.displayName = 'proto.cln.PayRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.PayResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.PayResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.PayResponse.displayName = 'proto.cln.PayResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListnodesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListnodesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListnodesRequest.displayName = 'proto.cln.ListnodesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListnodesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListnodesResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.ListnodesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListnodesResponse.displayName = 'proto.cln.ListnodesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListnodesNodes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListnodesNodes.repeatedFields_, null);
};
goog.inherits(proto.cln.ListnodesNodes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListnodesNodes.displayName = 'proto.cln.ListnodesNodes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListnodesNodesOption_will_fund = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListnodesNodesOption_will_fund, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListnodesNodesOption_will_fund.displayName = 'proto.cln.ListnodesNodesOption_will_fund';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListnodesNodesAddresses = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListnodesNodesAddresses, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListnodesNodesAddresses.displayName = 'proto.cln.ListnodesNodesAddresses';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.WaitanyinvoiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.WaitanyinvoiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.WaitanyinvoiceRequest.displayName = 'proto.cln.WaitanyinvoiceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.WaitanyinvoiceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.WaitanyinvoiceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.WaitanyinvoiceResponse.displayName = 'proto.cln.WaitanyinvoiceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.WaitanyinvoicePaid_outpoint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.WaitanyinvoicePaid_outpoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.WaitanyinvoicePaid_outpoint.displayName = 'proto.cln.WaitanyinvoicePaid_outpoint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.WaitinvoiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.WaitinvoiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.WaitinvoiceRequest.displayName = 'proto.cln.WaitinvoiceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.WaitinvoiceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.WaitinvoiceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.WaitinvoiceResponse.displayName = 'proto.cln.WaitinvoiceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.WaitinvoicePaid_outpoint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.WaitinvoicePaid_outpoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.WaitinvoicePaid_outpoint.displayName = 'proto.cln.WaitinvoicePaid_outpoint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.WaitsendpayRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.WaitsendpayRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.WaitsendpayRequest.displayName = 'proto.cln.WaitsendpayRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.WaitsendpayResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.WaitsendpayResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.WaitsendpayResponse.displayName = 'proto.cln.WaitsendpayResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.NewaddrRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.NewaddrRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.NewaddrRequest.displayName = 'proto.cln.NewaddrRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.NewaddrResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.NewaddrResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.NewaddrResponse.displayName = 'proto.cln.NewaddrResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.WithdrawRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.WithdrawRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.WithdrawRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.WithdrawRequest.displayName = 'proto.cln.WithdrawRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.WithdrawResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.WithdrawResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.WithdrawResponse.displayName = 'proto.cln.WithdrawResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.KeysendRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.KeysendRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.KeysendRequest.displayName = 'proto.cln.KeysendRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.KeysendResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.KeysendResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.KeysendResponse.displayName = 'proto.cln.KeysendResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.FundpsbtRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.FundpsbtRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.FundpsbtRequest.displayName = 'proto.cln.FundpsbtRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.FundpsbtResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.FundpsbtResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.FundpsbtResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.FundpsbtResponse.displayName = 'proto.cln.FundpsbtResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.FundpsbtReservations = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.FundpsbtReservations, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.FundpsbtReservations.displayName = 'proto.cln.FundpsbtReservations';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SendpsbtRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SendpsbtRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SendpsbtRequest.displayName = 'proto.cln.SendpsbtRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SendpsbtResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SendpsbtResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SendpsbtResponse.displayName = 'proto.cln.SendpsbtResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SignpsbtRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.SignpsbtRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.SignpsbtRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SignpsbtRequest.displayName = 'proto.cln.SignpsbtRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SignpsbtResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SignpsbtResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SignpsbtResponse.displayName = 'proto.cln.SignpsbtResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.UtxopsbtRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.UtxopsbtRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.UtxopsbtRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.UtxopsbtRequest.displayName = 'proto.cln.UtxopsbtRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.UtxopsbtResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.UtxopsbtResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.UtxopsbtResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.UtxopsbtResponse.displayName = 'proto.cln.UtxopsbtResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.UtxopsbtReservations = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.UtxopsbtReservations, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.UtxopsbtReservations.displayName = 'proto.cln.UtxopsbtReservations';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.TxdiscardRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.TxdiscardRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.TxdiscardRequest.displayName = 'proto.cln.TxdiscardRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.TxdiscardResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.TxdiscardResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.TxdiscardResponse.displayName = 'proto.cln.TxdiscardResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.TxprepareRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.TxprepareRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.TxprepareRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.TxprepareRequest.displayName = 'proto.cln.TxprepareRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.TxprepareResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.TxprepareResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.TxprepareResponse.displayName = 'proto.cln.TxprepareResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.TxsendRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.TxsendRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.TxsendRequest.displayName = 'proto.cln.TxsendRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.TxsendResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.TxsendResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.TxsendResponse.displayName = 'proto.cln.TxsendResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpeerchannelsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListpeerchannelsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpeerchannelsRequest.displayName = 'proto.cln.ListpeerchannelsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpeerchannelsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListpeerchannelsResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.ListpeerchannelsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpeerchannelsResponse.displayName = 'proto.cln.ListpeerchannelsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpeerchannelsChannels = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListpeerchannelsChannels.repeatedFields_, null);
};
goog.inherits(proto.cln.ListpeerchannelsChannels, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpeerchannelsChannels.displayName = 'proto.cln.ListpeerchannelsChannels';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpeerchannelsChannelsUpdates = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListpeerchannelsChannelsUpdates, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpeerchannelsChannelsUpdates.displayName = 'proto.cln.ListpeerchannelsChannelsUpdates';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpeerchannelsChannelsUpdatesLocal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListpeerchannelsChannelsUpdatesLocal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpeerchannelsChannelsUpdatesLocal.displayName = 'proto.cln.ListpeerchannelsChannelsUpdatesLocal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpeerchannelsChannelsUpdatesRemote = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListpeerchannelsChannelsUpdatesRemote, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpeerchannelsChannelsUpdatesRemote.displayName = 'proto.cln.ListpeerchannelsChannelsUpdatesRemote';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpeerchannelsChannelsFeerate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListpeerchannelsChannelsFeerate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpeerchannelsChannelsFeerate.displayName = 'proto.cln.ListpeerchannelsChannelsFeerate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpeerchannelsChannelsInflight = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListpeerchannelsChannelsInflight, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpeerchannelsChannelsInflight.displayName = 'proto.cln.ListpeerchannelsChannelsInflight';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpeerchannelsChannelsFunding = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListpeerchannelsChannelsFunding, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpeerchannelsChannelsFunding.displayName = 'proto.cln.ListpeerchannelsChannelsFunding';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpeerchannelsChannelsAlias = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListpeerchannelsChannelsAlias, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpeerchannelsChannelsAlias.displayName = 'proto.cln.ListpeerchannelsChannelsAlias';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpeerchannelsChannelsHtlcs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListpeerchannelsChannelsHtlcs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpeerchannelsChannelsHtlcs.displayName = 'proto.cln.ListpeerchannelsChannelsHtlcs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListclosedchannelsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListclosedchannelsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListclosedchannelsRequest.displayName = 'proto.cln.ListclosedchannelsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListclosedchannelsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListclosedchannelsResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.ListclosedchannelsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListclosedchannelsResponse.displayName = 'proto.cln.ListclosedchannelsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListclosedchannelsClosedchannels = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListclosedchannelsClosedchannels, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListclosedchannelsClosedchannels.displayName = 'proto.cln.ListclosedchannelsClosedchannels';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListclosedchannelsClosedchannelsAlias = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListclosedchannelsClosedchannelsAlias, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListclosedchannelsClosedchannelsAlias.displayName = 'proto.cln.ListclosedchannelsClosedchannelsAlias';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DecodepayRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DecodepayRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DecodepayRequest.displayName = 'proto.cln.DecodepayRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DecodepayResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.DecodepayResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.DecodepayResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DecodepayResponse.displayName = 'proto.cln.DecodepayResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DecodepayFallbacks = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DecodepayFallbacks, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DecodepayFallbacks.displayName = 'proto.cln.DecodepayFallbacks';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DecodepayExtra = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DecodepayExtra, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DecodepayExtra.displayName = 'proto.cln.DecodepayExtra';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DecodeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DecodeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DecodeRequest.displayName = 'proto.cln.DecodeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DecodeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.DecodeResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.DecodeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DecodeResponse.displayName = 'proto.cln.DecodeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DecodeOffer_paths = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DecodeOffer_paths, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DecodeOffer_paths.displayName = 'proto.cln.DecodeOffer_paths';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DecodeOffer_recurrencePaywindow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DecodeOffer_recurrencePaywindow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DecodeOffer_recurrencePaywindow.displayName = 'proto.cln.DecodeOffer_recurrencePaywindow';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DecodeInvoice_pathsPath = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DecodeInvoice_pathsPath, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DecodeInvoice_pathsPath.displayName = 'proto.cln.DecodeInvoice_pathsPath';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DecodeInvoice_fallbacks = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DecodeInvoice_fallbacks, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DecodeInvoice_fallbacks.displayName = 'proto.cln.DecodeInvoice_fallbacks';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DecodeFallbacks = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DecodeFallbacks, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DecodeFallbacks.displayName = 'proto.cln.DecodeFallbacks';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DecodeExtra = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DecodeExtra, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DecodeExtra.displayName = 'proto.cln.DecodeExtra';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DecodeRestrictions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.DecodeRestrictions.repeatedFields_, null);
};
goog.inherits(proto.cln.DecodeRestrictions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DecodeRestrictions.displayName = 'proto.cln.DecodeRestrictions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DelpayRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DelpayRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DelpayRequest.displayName = 'proto.cln.DelpayRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DelpayResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.DelpayResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.DelpayResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DelpayResponse.displayName = 'proto.cln.DelpayResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DelpayPayments = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DelpayPayments, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DelpayPayments.displayName = 'proto.cln.DelpayPayments';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DelforwardRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DelforwardRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DelforwardRequest.displayName = 'proto.cln.DelforwardRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DelforwardResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DelforwardResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DelforwardResponse.displayName = 'proto.cln.DelforwardResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DisableofferRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DisableofferRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DisableofferRequest.displayName = 'proto.cln.DisableofferRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DisableofferResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DisableofferResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DisableofferResponse.displayName = 'proto.cln.DisableofferResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DisconnectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DisconnectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DisconnectRequest.displayName = 'proto.cln.DisconnectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DisconnectResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DisconnectResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DisconnectResponse.displayName = 'proto.cln.DisconnectResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.FeeratesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.FeeratesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.FeeratesRequest.displayName = 'proto.cln.FeeratesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.FeeratesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.FeeratesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.FeeratesResponse.displayName = 'proto.cln.FeeratesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.FeeratesPerkb = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.FeeratesPerkb.repeatedFields_, null);
};
goog.inherits(proto.cln.FeeratesPerkb, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.FeeratesPerkb.displayName = 'proto.cln.FeeratesPerkb';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.FeeratesPerkbEstimates = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.FeeratesPerkbEstimates, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.FeeratesPerkbEstimates.displayName = 'proto.cln.FeeratesPerkbEstimates';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.FeeratesPerkw = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.FeeratesPerkw.repeatedFields_, null);
};
goog.inherits(proto.cln.FeeratesPerkw, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.FeeratesPerkw.displayName = 'proto.cln.FeeratesPerkw';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.FeeratesPerkwEstimates = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.FeeratesPerkwEstimates, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.FeeratesPerkwEstimates.displayName = 'proto.cln.FeeratesPerkwEstimates';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.FeeratesOnchain_fee_estimates = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.FeeratesOnchain_fee_estimates, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.FeeratesOnchain_fee_estimates.displayName = 'proto.cln.FeeratesOnchain_fee_estimates';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.FetchinvoiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.FetchinvoiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.FetchinvoiceRequest.displayName = 'proto.cln.FetchinvoiceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.FetchinvoiceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.FetchinvoiceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.FetchinvoiceResponse.displayName = 'proto.cln.FetchinvoiceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.FetchinvoiceChanges = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.FetchinvoiceChanges, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.FetchinvoiceChanges.displayName = 'proto.cln.FetchinvoiceChanges';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.FetchinvoiceNext_period = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.FetchinvoiceNext_period, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.FetchinvoiceNext_period.displayName = 'proto.cln.FetchinvoiceNext_period';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.Fundchannel_cancelRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.Fundchannel_cancelRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.Fundchannel_cancelRequest.displayName = 'proto.cln.Fundchannel_cancelRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.Fundchannel_cancelResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.Fundchannel_cancelResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.Fundchannel_cancelResponse.displayName = 'proto.cln.Fundchannel_cancelResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.Fundchannel_completeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.Fundchannel_completeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.Fundchannel_completeRequest.displayName = 'proto.cln.Fundchannel_completeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.Fundchannel_completeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.Fundchannel_completeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.Fundchannel_completeResponse.displayName = 'proto.cln.Fundchannel_completeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.FundchannelRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.FundchannelRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.FundchannelRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.FundchannelRequest.displayName = 'proto.cln.FundchannelRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.FundchannelResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.FundchannelResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.FundchannelResponse.displayName = 'proto.cln.FundchannelResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.FundchannelChannel_type = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.FundchannelChannel_type.repeatedFields_, null);
};
goog.inherits(proto.cln.FundchannelChannel_type, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.FundchannelChannel_type.displayName = 'proto.cln.FundchannelChannel_type';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.Fundchannel_startRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.Fundchannel_startRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.Fundchannel_startRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.Fundchannel_startRequest.displayName = 'proto.cln.Fundchannel_startRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.Fundchannel_startResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.Fundchannel_startResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.Fundchannel_startResponse.displayName = 'proto.cln.Fundchannel_startResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.Fundchannel_startChannel_type = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.Fundchannel_startChannel_type.repeatedFields_, null);
};
goog.inherits(proto.cln.Fundchannel_startChannel_type, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.Fundchannel_startChannel_type.displayName = 'proto.cln.Fundchannel_startChannel_type';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.GetlogRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.GetlogRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.GetlogRequest.displayName = 'proto.cln.GetlogRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.GetlogResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.GetlogResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.GetlogResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.GetlogResponse.displayName = 'proto.cln.GetlogResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.GetlogLog = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.GetlogLog, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.GetlogLog.displayName = 'proto.cln.GetlogLog';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.FunderupdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.FunderupdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.FunderupdateRequest.displayName = 'proto.cln.FunderupdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.FunderupdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.FunderupdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.FunderupdateResponse.displayName = 'proto.cln.FunderupdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.GetrouteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.GetrouteRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.GetrouteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.GetrouteRequest.displayName = 'proto.cln.GetrouteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.GetrouteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.GetrouteResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.GetrouteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.GetrouteResponse.displayName = 'proto.cln.GetrouteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.GetrouteRoute = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.GetrouteRoute, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.GetrouteRoute.displayName = 'proto.cln.GetrouteRoute';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListforwardsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListforwardsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListforwardsRequest.displayName = 'proto.cln.ListforwardsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListforwardsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListforwardsResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.ListforwardsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListforwardsResponse.displayName = 'proto.cln.ListforwardsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListforwardsForwards = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListforwardsForwards, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListforwardsForwards.displayName = 'proto.cln.ListforwardsForwards';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListoffersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListoffersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListoffersRequest.displayName = 'proto.cln.ListoffersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListoffersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListoffersResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.ListoffersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListoffersResponse.displayName = 'proto.cln.ListoffersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListoffersOffers = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListoffersOffers, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListoffersOffers.displayName = 'proto.cln.ListoffersOffers';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpaysRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListpaysRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpaysRequest.displayName = 'proto.cln.ListpaysRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpaysResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListpaysResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.ListpaysResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpaysResponse.displayName = 'proto.cln.ListpaysResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpaysPays = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListpaysPays, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpaysPays.displayName = 'proto.cln.ListpaysPays';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListhtlcsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListhtlcsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListhtlcsRequest.displayName = 'proto.cln.ListhtlcsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListhtlcsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListhtlcsResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.ListhtlcsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListhtlcsResponse.displayName = 'proto.cln.ListhtlcsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListhtlcsHtlcs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListhtlcsHtlcs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListhtlcsHtlcs.displayName = 'proto.cln.ListhtlcsHtlcs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.MultifundchannelRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.MultifundchannelRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.MultifundchannelRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.MultifundchannelRequest.displayName = 'proto.cln.MultifundchannelRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.MultifundchannelResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.MultifundchannelResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.MultifundchannelResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.MultifundchannelResponse.displayName = 'proto.cln.MultifundchannelResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.MultifundchannelDestinations = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.MultifundchannelDestinations, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.MultifundchannelDestinations.displayName = 'proto.cln.MultifundchannelDestinations';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.MultifundchannelChannel_ids = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.MultifundchannelChannel_ids, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.MultifundchannelChannel_ids.displayName = 'proto.cln.MultifundchannelChannel_ids';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.MultifundchannelChannel_idsChannel_type = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.MultifundchannelChannel_idsChannel_type.repeatedFields_, null);
};
goog.inherits(proto.cln.MultifundchannelChannel_idsChannel_type, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.MultifundchannelChannel_idsChannel_type.displayName = 'proto.cln.MultifundchannelChannel_idsChannel_type';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.MultifundchannelFailed = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.MultifundchannelFailed, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.MultifundchannelFailed.displayName = 'proto.cln.MultifundchannelFailed';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.MultifundchannelFailedError = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.MultifundchannelFailedError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.MultifundchannelFailedError.displayName = 'proto.cln.MultifundchannelFailedError';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.MultiwithdrawRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.MultiwithdrawRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.MultiwithdrawRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.MultiwithdrawRequest.displayName = 'proto.cln.MultiwithdrawRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.MultiwithdrawResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.MultiwithdrawResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.MultiwithdrawResponse.displayName = 'proto.cln.MultiwithdrawResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.OfferRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.OfferRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.OfferRequest.displayName = 'proto.cln.OfferRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.OfferResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.OfferResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.OfferResponse.displayName = 'proto.cln.OfferResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.Openchannel_abortRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.Openchannel_abortRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.Openchannel_abortRequest.displayName = 'proto.cln.Openchannel_abortRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.Openchannel_abortResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.Openchannel_abortResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.Openchannel_abortResponse.displayName = 'proto.cln.Openchannel_abortResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.Openchannel_bumpRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.Openchannel_bumpRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.Openchannel_bumpRequest.displayName = 'proto.cln.Openchannel_bumpRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.Openchannel_bumpResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.Openchannel_bumpResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.Openchannel_bumpResponse.displayName = 'proto.cln.Openchannel_bumpResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.Openchannel_bumpChannel_type = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.Openchannel_bumpChannel_type.repeatedFields_, null);
};
goog.inherits(proto.cln.Openchannel_bumpChannel_type, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.Openchannel_bumpChannel_type.displayName = 'proto.cln.Openchannel_bumpChannel_type';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.Openchannel_initRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.Openchannel_initRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.Openchannel_initRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.Openchannel_initRequest.displayName = 'proto.cln.Openchannel_initRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.Openchannel_initResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.Openchannel_initResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.Openchannel_initResponse.displayName = 'proto.cln.Openchannel_initResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.Openchannel_initChannel_type = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.Openchannel_initChannel_type.repeatedFields_, null);
};
goog.inherits(proto.cln.Openchannel_initChannel_type, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.Openchannel_initChannel_type.displayName = 'proto.cln.Openchannel_initChannel_type';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.Openchannel_signedRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.Openchannel_signedRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.Openchannel_signedRequest.displayName = 'proto.cln.Openchannel_signedRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.Openchannel_signedResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.Openchannel_signedResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.Openchannel_signedResponse.displayName = 'proto.cln.Openchannel_signedResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.Openchannel_updateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.Openchannel_updateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.Openchannel_updateRequest.displayName = 'proto.cln.Openchannel_updateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.Openchannel_updateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.Openchannel_updateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.Openchannel_updateResponse.displayName = 'proto.cln.Openchannel_updateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.Openchannel_updateChannel_type = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.Openchannel_updateChannel_type.repeatedFields_, null);
};
goog.inherits(proto.cln.Openchannel_updateChannel_type, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.Openchannel_updateChannel_type.displayName = 'proto.cln.Openchannel_updateChannel_type';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.PingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.PingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.PingRequest.displayName = 'proto.cln.PingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.PingResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.PingResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.PingResponse.displayName = 'proto.cln.PingResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.PluginRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.PluginRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.PluginRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.PluginRequest.displayName = 'proto.cln.PluginRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.PluginResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.PluginResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.PluginResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.PluginResponse.displayName = 'proto.cln.PluginResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.PluginPlugins = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.PluginPlugins, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.PluginPlugins.displayName = 'proto.cln.PluginPlugins';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.RenepaystatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.RenepaystatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.RenepaystatusRequest.displayName = 'proto.cln.RenepaystatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.RenepaystatusResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.RenepaystatusResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.RenepaystatusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.RenepaystatusResponse.displayName = 'proto.cln.RenepaystatusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.RenepaystatusPaystatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.RenepaystatusPaystatus.repeatedFields_, null);
};
goog.inherits(proto.cln.RenepaystatusPaystatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.RenepaystatusPaystatus.displayName = 'proto.cln.RenepaystatusPaystatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.RenepayRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.RenepayRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.RenepayRequest.displayName = 'proto.cln.RenepayRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.RenepayResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.RenepayResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.RenepayResponse.displayName = 'proto.cln.RenepayResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ReserveinputsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ReserveinputsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ReserveinputsRequest.displayName = 'proto.cln.ReserveinputsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ReserveinputsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ReserveinputsResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.ReserveinputsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ReserveinputsResponse.displayName = 'proto.cln.ReserveinputsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ReserveinputsReservations = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ReserveinputsReservations, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ReserveinputsReservations.displayName = 'proto.cln.ReserveinputsReservations';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SendcustommsgRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SendcustommsgRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SendcustommsgRequest.displayName = 'proto.cln.SendcustommsgRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SendcustommsgResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SendcustommsgResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SendcustommsgResponse.displayName = 'proto.cln.SendcustommsgResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SendinvoiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SendinvoiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SendinvoiceRequest.displayName = 'proto.cln.SendinvoiceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SendinvoiceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SendinvoiceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SendinvoiceResponse.displayName = 'proto.cln.SendinvoiceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SendonionmessageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.SendonionmessageRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.SendonionmessageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SendonionmessageRequest.displayName = 'proto.cln.SendonionmessageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SendonionmessageResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SendonionmessageResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SendonionmessageResponse.displayName = 'proto.cln.SendonionmessageResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SendonionmessageHops = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SendonionmessageHops, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SendonionmessageHops.displayName = 'proto.cln.SendonionmessageHops';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SetchannelRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SetchannelRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SetchannelRequest.displayName = 'proto.cln.SetchannelRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SetchannelResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.SetchannelResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.SetchannelResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SetchannelResponse.displayName = 'proto.cln.SetchannelResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SetchannelChannels = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SetchannelChannels, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SetchannelChannels.displayName = 'proto.cln.SetchannelChannels';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SetconfigRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SetconfigRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SetconfigRequest.displayName = 'proto.cln.SetconfigRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SetconfigResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SetconfigResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SetconfigResponse.displayName = 'proto.cln.SetconfigResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SetconfigConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SetconfigConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SetconfigConfig.displayName = 'proto.cln.SetconfigConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SetpsbtversionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SetpsbtversionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SetpsbtversionRequest.displayName = 'proto.cln.SetpsbtversionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SetpsbtversionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SetpsbtversionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SetpsbtversionResponse.displayName = 'proto.cln.SetpsbtversionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SigninvoiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SigninvoiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SigninvoiceRequest.displayName = 'proto.cln.SigninvoiceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SigninvoiceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SigninvoiceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SigninvoiceResponse.displayName = 'proto.cln.SigninvoiceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SignmessageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SignmessageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SignmessageRequest.displayName = 'proto.cln.SignmessageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SignmessageResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SignmessageResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SignmessageResponse.displayName = 'proto.cln.SignmessageResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.Splice_initRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.Splice_initRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.Splice_initRequest.displayName = 'proto.cln.Splice_initRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.Splice_initResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.Splice_initResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.Splice_initResponse.displayName = 'proto.cln.Splice_initResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.Splice_signedRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.Splice_signedRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.Splice_signedRequest.displayName = 'proto.cln.Splice_signedRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.Splice_signedResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.Splice_signedResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.Splice_signedResponse.displayName = 'proto.cln.Splice_signedResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.Splice_updateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.Splice_updateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.Splice_updateRequest.displayName = 'proto.cln.Splice_updateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.Splice_updateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.Splice_updateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.Splice_updateResponse.displayName = 'proto.cln.Splice_updateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.UnreserveinputsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.UnreserveinputsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.UnreserveinputsRequest.displayName = 'proto.cln.UnreserveinputsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.UnreserveinputsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.UnreserveinputsResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.UnreserveinputsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.UnreserveinputsResponse.displayName = 'proto.cln.UnreserveinputsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.UnreserveinputsReservations = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.UnreserveinputsReservations, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.UnreserveinputsReservations.displayName = 'proto.cln.UnreserveinputsReservations';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.UpgradewalletRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.UpgradewalletRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.UpgradewalletRequest.displayName = 'proto.cln.UpgradewalletRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.UpgradewalletResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.UpgradewalletResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.UpgradewalletResponse.displayName = 'proto.cln.UpgradewalletResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.WaitblockheightRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.WaitblockheightRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.WaitblockheightRequest.displayName = 'proto.cln.WaitblockheightRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.WaitblockheightResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.WaitblockheightResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.WaitblockheightResponse.displayName = 'proto.cln.WaitblockheightResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.WaitRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.WaitRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.WaitRequest.displayName = 'proto.cln.WaitRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.WaitResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.WaitResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.WaitResponse.displayName = 'proto.cln.WaitResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.WaitDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.WaitDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.WaitDetails.displayName = 'proto.cln.WaitDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsRequest.displayName = 'proto.cln.ListconfigsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListconfigsResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.ListconfigsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsResponse.displayName = 'proto.cln.ListconfigsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigs.displayName = 'proto.cln.ListconfigsConfigs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsConf = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsConf, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsConf.displayName = 'proto.cln.ListconfigsConfigsConf';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsDeveloper = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsDeveloper, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsDeveloper.displayName = 'proto.cln.ListconfigsConfigsDeveloper';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsClearplugins = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsClearplugins, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsClearplugins.displayName = 'proto.cln.ListconfigsConfigsClearplugins';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsDisablempp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsDisablempp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsDisablempp.displayName = 'proto.cln.ListconfigsConfigsDisablempp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsMainnet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsMainnet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsMainnet.displayName = 'proto.cln.ListconfigsConfigsMainnet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsRegtest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsRegtest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsRegtest.displayName = 'proto.cln.ListconfigsConfigsRegtest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsSignet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsSignet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsSignet.displayName = 'proto.cln.ListconfigsConfigsSignet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsTestnet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsTestnet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsTestnet.displayName = 'proto.cln.ListconfigsConfigsTestnet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsImportantplugin = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListconfigsConfigsImportantplugin.repeatedFields_, null);
};
goog.inherits(proto.cln.ListconfigsConfigsImportantplugin, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsImportantplugin.displayName = 'proto.cln.ListconfigsConfigsImportantplugin';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsPlugin = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListconfigsConfigsPlugin.repeatedFields_, null);
};
goog.inherits(proto.cln.ListconfigsConfigsPlugin, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsPlugin.displayName = 'proto.cln.ListconfigsConfigsPlugin';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsPlugindir = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListconfigsConfigsPlugindir.repeatedFields_, null);
};
goog.inherits(proto.cln.ListconfigsConfigsPlugindir, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsPlugindir.displayName = 'proto.cln.ListconfigsConfigsPlugindir';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsLightningdir = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsLightningdir, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsLightningdir.displayName = 'proto.cln.ListconfigsConfigsLightningdir';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsNetwork = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsNetwork, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsNetwork.displayName = 'proto.cln.ListconfigsConfigsNetwork';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsAllowdeprecatedapis = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsAllowdeprecatedapis, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsAllowdeprecatedapis.displayName = 'proto.cln.ListconfigsConfigsAllowdeprecatedapis';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsRpcfile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsRpcfile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsRpcfile.displayName = 'proto.cln.ListconfigsConfigsRpcfile';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsDisableplugin = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListconfigsConfigsDisableplugin.repeatedFields_, null);
};
goog.inherits(proto.cln.ListconfigsConfigsDisableplugin, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsDisableplugin.displayName = 'proto.cln.ListconfigsConfigsDisableplugin';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsAlwaysuseproxy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsAlwaysuseproxy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsAlwaysuseproxy.displayName = 'proto.cln.ListconfigsConfigsAlwaysuseproxy';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsDaemon = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsDaemon, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsDaemon.displayName = 'proto.cln.ListconfigsConfigsDaemon';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsWallet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsWallet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsWallet.displayName = 'proto.cln.ListconfigsConfigsWallet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsLargechannels = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsLargechannels, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsLargechannels.displayName = 'proto.cln.ListconfigsConfigsLargechannels';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsExperimentaldualfund = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsExperimentaldualfund, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsExperimentaldualfund.displayName = 'proto.cln.ListconfigsConfigsExperimentaldualfund';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsExperimentalsplicing = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsExperimentalsplicing, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsExperimentalsplicing.displayName = 'proto.cln.ListconfigsConfigsExperimentalsplicing';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsExperimentalonionmessages = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsExperimentalonionmessages, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsExperimentalonionmessages.displayName = 'proto.cln.ListconfigsConfigsExperimentalonionmessages';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsExperimentaloffers = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsExperimentaloffers, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsExperimentaloffers.displayName = 'proto.cln.ListconfigsConfigsExperimentaloffers';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsExperimentalshutdownwrongfunding = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsExperimentalshutdownwrongfunding, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsExperimentalshutdownwrongfunding.displayName = 'proto.cln.ListconfigsConfigsExperimentalshutdownwrongfunding';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsExperimentalpeerstorage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsExperimentalpeerstorage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsExperimentalpeerstorage.displayName = 'proto.cln.ListconfigsConfigsExperimentalpeerstorage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsExperimentalanchors = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsExperimentalanchors, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsExperimentalanchors.displayName = 'proto.cln.ListconfigsConfigsExperimentalanchors';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsDatabaseupgrade = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsDatabaseupgrade, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsDatabaseupgrade.displayName = 'proto.cln.ListconfigsConfigsDatabaseupgrade';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsRgb = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsRgb, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsRgb.displayName = 'proto.cln.ListconfigsConfigsRgb';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsAlias = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsAlias, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsAlias.displayName = 'proto.cln.ListconfigsConfigsAlias';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsPidfile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsPidfile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsPidfile.displayName = 'proto.cln.ListconfigsConfigsPidfile';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsIgnorefeelimits = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsIgnorefeelimits, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsIgnorefeelimits.displayName = 'proto.cln.ListconfigsConfigsIgnorefeelimits';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsWatchtimeblocks = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsWatchtimeblocks, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsWatchtimeblocks.displayName = 'proto.cln.ListconfigsConfigsWatchtimeblocks';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsMaxlocktimeblocks = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsMaxlocktimeblocks, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsMaxlocktimeblocks.displayName = 'proto.cln.ListconfigsConfigsMaxlocktimeblocks';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsFundingconfirms = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsFundingconfirms, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsFundingconfirms.displayName = 'proto.cln.ListconfigsConfigsFundingconfirms';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsCltvdelta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsCltvdelta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsCltvdelta.displayName = 'proto.cln.ListconfigsConfigsCltvdelta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsCltvfinal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsCltvfinal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsCltvfinal.displayName = 'proto.cln.ListconfigsConfigsCltvfinal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsCommittime = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsCommittime, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsCommittime.displayName = 'proto.cln.ListconfigsConfigsCommittime';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsFeebase = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsFeebase, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsFeebase.displayName = 'proto.cln.ListconfigsConfigsFeebase';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsRescan = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsRescan, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsRescan.displayName = 'proto.cln.ListconfigsConfigsRescan';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsFeepersatoshi = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsFeepersatoshi, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsFeepersatoshi.displayName = 'proto.cln.ListconfigsConfigsFeepersatoshi';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsMaxconcurrenthtlcs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsMaxconcurrenthtlcs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsMaxconcurrenthtlcs.displayName = 'proto.cln.ListconfigsConfigsMaxconcurrenthtlcs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsHtlcminimummsat = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsHtlcminimummsat, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsHtlcminimummsat.displayName = 'proto.cln.ListconfigsConfigsHtlcminimummsat';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsHtlcmaximummsat = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsHtlcmaximummsat, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsHtlcmaximummsat.displayName = 'proto.cln.ListconfigsConfigsHtlcmaximummsat';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsMaxdusthtlcexposuremsat = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsMaxdusthtlcexposuremsat, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsMaxdusthtlcexposuremsat.displayName = 'proto.cln.ListconfigsConfigsMaxdusthtlcexposuremsat';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsMincapacitysat = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsMincapacitysat, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsMincapacitysat.displayName = 'proto.cln.ListconfigsConfigsMincapacitysat';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsAddr = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListconfigsConfigsAddr.repeatedFields_, null);
};
goog.inherits(proto.cln.ListconfigsConfigsAddr, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsAddr.displayName = 'proto.cln.ListconfigsConfigsAddr';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsAnnounceaddr = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListconfigsConfigsAnnounceaddr.repeatedFields_, null);
};
goog.inherits(proto.cln.ListconfigsConfigsAnnounceaddr, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsAnnounceaddr.displayName = 'proto.cln.ListconfigsConfigsAnnounceaddr';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsBindaddr = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListconfigsConfigsBindaddr.repeatedFields_, null);
};
goog.inherits(proto.cln.ListconfigsConfigsBindaddr, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsBindaddr.displayName = 'proto.cln.ListconfigsConfigsBindaddr';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsOffline = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsOffline, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsOffline.displayName = 'proto.cln.ListconfigsConfigsOffline';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsAutolisten = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsAutolisten, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsAutolisten.displayName = 'proto.cln.ListconfigsConfigsAutolisten';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsProxy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsProxy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsProxy.displayName = 'proto.cln.ListconfigsConfigsProxy';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsDisabledns = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsDisabledns, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsDisabledns.displayName = 'proto.cln.ListconfigsConfigsDisabledns';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsAnnounceaddrdiscovered = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsAnnounceaddrdiscovered, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsAnnounceaddrdiscovered.displayName = 'proto.cln.ListconfigsConfigsAnnounceaddrdiscovered';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsAnnounceaddrdiscoveredport = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsAnnounceaddrdiscoveredport, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsAnnounceaddrdiscoveredport.displayName = 'proto.cln.ListconfigsConfigsAnnounceaddrdiscoveredport';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsEncryptedhsm = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsEncryptedhsm, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsEncryptedhsm.displayName = 'proto.cln.ListconfigsConfigsEncryptedhsm';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsRpcfilemode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsRpcfilemode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsRpcfilemode.displayName = 'proto.cln.ListconfigsConfigsRpcfilemode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsLoglevel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsLoglevel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsLoglevel.displayName = 'proto.cln.ListconfigsConfigsLoglevel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsLogprefix = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsLogprefix, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsLogprefix.displayName = 'proto.cln.ListconfigsConfigsLogprefix';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsLogfile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListconfigsConfigsLogfile.repeatedFields_, null);
};
goog.inherits(proto.cln.ListconfigsConfigsLogfile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsLogfile.displayName = 'proto.cln.ListconfigsConfigsLogfile';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsLogtimestamps = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsLogtimestamps, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsLogtimestamps.displayName = 'proto.cln.ListconfigsConfigsLogtimestamps';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsForcefeerates = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsForcefeerates, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsForcefeerates.displayName = 'proto.cln.ListconfigsConfigsForcefeerates';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsSubdaemon = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListconfigsConfigsSubdaemon.repeatedFields_, null);
};
goog.inherits(proto.cln.ListconfigsConfigsSubdaemon, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsSubdaemon.displayName = 'proto.cln.ListconfigsConfigsSubdaemon';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsFetchinvoicenoconnect = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsFetchinvoicenoconnect, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsFetchinvoicenoconnect.displayName = 'proto.cln.ListconfigsConfigsFetchinvoicenoconnect';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsAccepthtlctlvtypes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsAccepthtlctlvtypes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsAccepthtlctlvtypes.displayName = 'proto.cln.ListconfigsConfigsAccepthtlctlvtypes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsTorservicepassword = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsTorservicepassword, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsTorservicepassword.displayName = 'proto.cln.ListconfigsConfigsTorservicepassword';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsAnnounceaddrdns = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsAnnounceaddrdns, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsAnnounceaddrdns.displayName = 'proto.cln.ListconfigsConfigsAnnounceaddrdns';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsRequireconfirmedinputs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsRequireconfirmedinputs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsRequireconfirmedinputs.displayName = 'proto.cln.ListconfigsConfigsRequireconfirmedinputs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsCommitfee = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsCommitfee, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsCommitfee.displayName = 'proto.cln.ListconfigsConfigsCommitfee';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsConfigsCommitfeerateoffset = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsConfigsCommitfeerateoffset, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsConfigsCommitfeerateoffset.displayName = 'proto.cln.ListconfigsConfigsCommitfeerateoffset';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsPlugins = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsPlugins, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsPlugins.displayName = 'proto.cln.ListconfigsPlugins';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsPluginsOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsPluginsOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsPluginsOptions.displayName = 'proto.cln.ListconfigsPluginsOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsImportantplugins = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsImportantplugins, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsImportantplugins.displayName = 'proto.cln.ListconfigsImportantplugins';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListconfigsImportantpluginsOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListconfigsImportantpluginsOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListconfigsImportantpluginsOptions.displayName = 'proto.cln.ListconfigsImportantpluginsOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.StopRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.StopRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.StopRequest.displayName = 'proto.cln.StopRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.StopResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.StopResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.StopResponse.displayName = 'proto.cln.StopResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.HelpRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.HelpRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.HelpRequest.displayName = 'proto.cln.HelpRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.HelpResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.HelpResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.HelpResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.HelpResponse.displayName = 'proto.cln.HelpResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.HelpHelp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.HelpHelp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.HelpHelp.displayName = 'proto.cln.HelpHelp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.PreapprovekeysendRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.PreapprovekeysendRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.PreapprovekeysendRequest.displayName = 'proto.cln.PreapprovekeysendRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.PreapprovekeysendResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.PreapprovekeysendResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.PreapprovekeysendResponse.displayName = 'proto.cln.PreapprovekeysendResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.PreapproveinvoiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.PreapproveinvoiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.PreapproveinvoiceRequest.displayName = 'proto.cln.PreapproveinvoiceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.PreapproveinvoiceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.PreapproveinvoiceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.PreapproveinvoiceResponse.displayName = 'proto.cln.PreapproveinvoiceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.StaticbackupRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.StaticbackupRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.StaticbackupRequest.displayName = 'proto.cln.StaticbackupRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.StaticbackupResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.StaticbackupResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.StaticbackupResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.StaticbackupResponse.displayName = 'proto.cln.StaticbackupResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.BkprchannelsapyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.BkprchannelsapyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.BkprchannelsapyRequest.displayName = 'proto.cln.BkprchannelsapyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.BkprchannelsapyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.BkprchannelsapyResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.BkprchannelsapyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.BkprchannelsapyResponse.displayName = 'proto.cln.BkprchannelsapyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.BkprchannelsapyChannels_apy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.BkprchannelsapyChannels_apy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.BkprchannelsapyChannels_apy.displayName = 'proto.cln.BkprchannelsapyChannels_apy';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.BkprdumpincomecsvRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.BkprdumpincomecsvRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.BkprdumpincomecsvRequest.displayName = 'proto.cln.BkprdumpincomecsvRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.BkprdumpincomecsvResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.BkprdumpincomecsvResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.BkprdumpincomecsvResponse.displayName = 'proto.cln.BkprdumpincomecsvResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.BkprinspectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.BkprinspectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.BkprinspectRequest.displayName = 'proto.cln.BkprinspectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.BkprinspectResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.BkprinspectResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.BkprinspectResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.BkprinspectResponse.displayName = 'proto.cln.BkprinspectResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.BkprinspectTxs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.BkprinspectTxs.repeatedFields_, null);
};
goog.inherits(proto.cln.BkprinspectTxs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.BkprinspectTxs.displayName = 'proto.cln.BkprinspectTxs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.BkprinspectTxsOutputs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.BkprinspectTxsOutputs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.BkprinspectTxsOutputs.displayName = 'proto.cln.BkprinspectTxsOutputs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.BkprlistaccounteventsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.BkprlistaccounteventsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.BkprlistaccounteventsRequest.displayName = 'proto.cln.BkprlistaccounteventsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.BkprlistaccounteventsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.BkprlistaccounteventsResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.BkprlistaccounteventsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.BkprlistaccounteventsResponse.displayName = 'proto.cln.BkprlistaccounteventsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.BkprlistaccounteventsEvents = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.BkprlistaccounteventsEvents, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.BkprlistaccounteventsEvents.displayName = 'proto.cln.BkprlistaccounteventsEvents';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.BkprlistbalancesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.BkprlistbalancesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.BkprlistbalancesRequest.displayName = 'proto.cln.BkprlistbalancesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.BkprlistbalancesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.BkprlistbalancesResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.BkprlistbalancesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.BkprlistbalancesResponse.displayName = 'proto.cln.BkprlistbalancesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.BkprlistbalancesAccounts = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.BkprlistbalancesAccounts.repeatedFields_, null);
};
goog.inherits(proto.cln.BkprlistbalancesAccounts, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.BkprlistbalancesAccounts.displayName = 'proto.cln.BkprlistbalancesAccounts';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.BkprlistbalancesAccountsBalances = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.BkprlistbalancesAccountsBalances, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.BkprlistbalancesAccountsBalances.displayName = 'proto.cln.BkprlistbalancesAccountsBalances';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.BkprlistincomeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.BkprlistincomeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.BkprlistincomeRequest.displayName = 'proto.cln.BkprlistincomeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.BkprlistincomeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.BkprlistincomeResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.BkprlistincomeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.BkprlistincomeResponse.displayName = 'proto.cln.BkprlistincomeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.BkprlistincomeIncome_events = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.BkprlistincomeIncome_events, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.BkprlistincomeIncome_events.displayName = 'proto.cln.BkprlistincomeIncome_events';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.BlacklistruneRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.BlacklistruneRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.BlacklistruneRequest.displayName = 'proto.cln.BlacklistruneRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.BlacklistruneResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.BlacklistruneResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.BlacklistruneResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.BlacklistruneResponse.displayName = 'proto.cln.BlacklistruneResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.BlacklistruneBlacklist = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.BlacklistruneBlacklist, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.BlacklistruneBlacklist.displayName = 'proto.cln.BlacklistruneBlacklist';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.CheckruneRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.CheckruneRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.CheckruneRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.CheckruneRequest.displayName = 'proto.cln.CheckruneRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.CheckruneResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.CheckruneResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.CheckruneResponse.displayName = 'proto.cln.CheckruneResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.CreateruneRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.CreateruneRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.CreateruneRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.CreateruneRequest.displayName = 'proto.cln.CreateruneRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.CreateruneResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.CreateruneResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.CreateruneResponse.displayName = 'proto.cln.CreateruneResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ShowrunesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ShowrunesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ShowrunesRequest.displayName = 'proto.cln.ShowrunesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ShowrunesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ShowrunesResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.ShowrunesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ShowrunesResponse.displayName = 'proto.cln.ShowrunesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ShowrunesRunes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ShowrunesRunes.repeatedFields_, null);
};
goog.inherits(proto.cln.ShowrunesRunes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ShowrunesRunes.displayName = 'proto.cln.ShowrunesRunes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ShowrunesRunesRestrictions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ShowrunesRunesRestrictions.repeatedFields_, null);
};
goog.inherits(proto.cln.ShowrunesRunesRestrictions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ShowrunesRunesRestrictions.displayName = 'proto.cln.ShowrunesRunesRestrictions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ShowrunesRunesRestrictionsAlternatives = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ShowrunesRunesRestrictionsAlternatives, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ShowrunesRunesRestrictionsAlternatives.displayName = 'proto.cln.ShowrunesRunesRestrictionsAlternatives';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.StreamBlockAddedRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.StreamBlockAddedRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.StreamBlockAddedRequest.displayName = 'proto.cln.StreamBlockAddedRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.BlockAddedNotification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.BlockAddedNotification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.BlockAddedNotification.displayName = 'proto.cln.BlockAddedNotification';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.StreamChannelOpenFailedRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.StreamChannelOpenFailedRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.StreamChannelOpenFailedRequest.displayName = 'proto.cln.StreamChannelOpenFailedRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ChannelOpenFailedNotification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ChannelOpenFailedNotification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ChannelOpenFailedNotification.displayName = 'proto.cln.ChannelOpenFailedNotification';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.StreamChannelOpenedRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.StreamChannelOpenedRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.StreamChannelOpenedRequest.displayName = 'proto.cln.StreamChannelOpenedRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ChannelOpenedNotification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ChannelOpenedNotification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ChannelOpenedNotification.displayName = 'proto.cln.ChannelOpenedNotification';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.StreamConnectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.StreamConnectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.StreamConnectRequest.displayName = 'proto.cln.StreamConnectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.PeerConnectNotification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.PeerConnectNotification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.PeerConnectNotification.displayName = 'proto.cln.PeerConnectNotification';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.PeerConnectAddress = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.PeerConnectAddress, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.PeerConnectAddress.displayName = 'proto.cln.PeerConnectAddress';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.StreamCustomMsgRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.StreamCustomMsgRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.StreamCustomMsgRequest.displayName = 'proto.cln.StreamCustomMsgRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.CustomMsgNotification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.CustomMsgNotification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.CustomMsgNotification.displayName = 'proto.cln.CustomMsgNotification';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.GetinfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.GetinfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.GetinfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetinfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.GetinfoRequest}
 */
proto.cln.GetinfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.GetinfoRequest;
  return proto.cln.GetinfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.GetinfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.GetinfoRequest}
 */
proto.cln.GetinfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.GetinfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.GetinfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.GetinfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetinfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.GetinfoResponse.repeatedFields_ = [14,15];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.GetinfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.GetinfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.GetinfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetinfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64(),
    alias: jspb.Message.getFieldWithDefault(msg, 2, ""),
    color: msg.getColor_asB64(),
    numPeers: jspb.Message.getFieldWithDefault(msg, 4, 0),
    numPendingChannels: jspb.Message.getFieldWithDefault(msg, 5, 0),
    numActiveChannels: jspb.Message.getFieldWithDefault(msg, 6, 0),
    numInactiveChannels: jspb.Message.getFieldWithDefault(msg, 7, 0),
    version: jspb.Message.getFieldWithDefault(msg, 8, ""),
    lightningDir: jspb.Message.getFieldWithDefault(msg, 9, ""),
    ourFeatures: (f = msg.getOurFeatures()) && proto.cln.GetinfoOur_features.toObject(includeInstance, f),
    blockheight: jspb.Message.getFieldWithDefault(msg, 11, 0),
    network: jspb.Message.getFieldWithDefault(msg, 12, ""),
    feesCollectedMsat: (f = msg.getFeesCollectedMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    addressList: jspb.Message.toObjectList(msg.getAddressList(),
    proto.cln.GetinfoAddress.toObject, includeInstance),
    bindingList: jspb.Message.toObjectList(msg.getBindingList(),
    proto.cln.GetinfoBinding.toObject, includeInstance),
    warningBitcoindSync: jspb.Message.getFieldWithDefault(msg, 16, ""),
    warningLightningdSync: jspb.Message.getFieldWithDefault(msg, 17, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.GetinfoResponse}
 */
proto.cln.GetinfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.GetinfoResponse;
  return proto.cln.GetinfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.GetinfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.GetinfoResponse}
 */
proto.cln.GetinfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlias(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setColor(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumPeers(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumPendingChannels(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumActiveChannels(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumInactiveChannels(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setLightningDir(value);
      break;
    case 10:
      var value = new proto.cln.GetinfoOur_features;
      reader.readMessage(value,proto.cln.GetinfoOur_features.deserializeBinaryFromReader);
      msg.setOurFeatures(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBlockheight(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setNetwork(value);
      break;
    case 13:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setFeesCollectedMsat(value);
      break;
    case 14:
      var value = new proto.cln.GetinfoAddress;
      reader.readMessage(value,proto.cln.GetinfoAddress.deserializeBinaryFromReader);
      msg.addAddress(value);
      break;
    case 15:
      var value = new proto.cln.GetinfoBinding;
      reader.readMessage(value,proto.cln.GetinfoBinding.deserializeBinaryFromReader);
      msg.addBinding(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningBitcoindSync(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningLightningdSync(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.GetinfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.GetinfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.GetinfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetinfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getColor_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getNumPeers();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getNumPendingChannels();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getNumActiveChannels();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getNumInactiveChannels();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getLightningDir();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getOurFeatures();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.cln.GetinfoOur_features.serializeBinaryToWriter
    );
  }
  f = message.getBlockheight();
  if (f !== 0) {
    writer.writeUint32(
      11,
      f
    );
  }
  f = message.getNetwork();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getFeesCollectedMsat();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getAddressList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      14,
      f,
      proto.cln.GetinfoAddress.serializeBinaryToWriter
    );
  }
  f = message.getBindingList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      15,
      f,
      proto.cln.GetinfoBinding.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeString(
      16,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeString(
      17,
      f
    );
  }
};


/**
 * optional bytes id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.GetinfoResponse.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes id = 1;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.cln.GetinfoResponse.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.cln.GetinfoResponse.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string alias = 2;
 * @return {string}
 */
proto.cln.GetinfoResponse.prototype.getAlias = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.setAlias = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.clearAlias = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetinfoResponse.prototype.hasAlias = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes color = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.GetinfoResponse.prototype.getColor = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes color = 3;
 * This is a type-conversion wrapper around `getColor()`
 * @return {string}
 */
proto.cln.GetinfoResponse.prototype.getColor_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getColor()));
};


/**
 * optional bytes color = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getColor()`
 * @return {!Uint8Array}
 */
proto.cln.GetinfoResponse.prototype.getColor_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getColor()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.setColor = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional uint32 num_peers = 4;
 * @return {number}
 */
proto.cln.GetinfoResponse.prototype.getNumPeers = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.setNumPeers = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 num_pending_channels = 5;
 * @return {number}
 */
proto.cln.GetinfoResponse.prototype.getNumPendingChannels = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.setNumPendingChannels = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 num_active_channels = 6;
 * @return {number}
 */
proto.cln.GetinfoResponse.prototype.getNumActiveChannels = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.setNumActiveChannels = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint32 num_inactive_channels = 7;
 * @return {number}
 */
proto.cln.GetinfoResponse.prototype.getNumInactiveChannels = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.setNumInactiveChannels = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string version = 8;
 * @return {string}
 */
proto.cln.GetinfoResponse.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string lightning_dir = 9;
 * @return {string}
 */
proto.cln.GetinfoResponse.prototype.getLightningDir = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.setLightningDir = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional GetinfoOur_features our_features = 10;
 * @return {?proto.cln.GetinfoOur_features}
 */
proto.cln.GetinfoResponse.prototype.getOurFeatures = function() {
  return /** @type{?proto.cln.GetinfoOur_features} */ (
    jspb.Message.getWrapperField(this, proto.cln.GetinfoOur_features, 10));
};


/**
 * @param {?proto.cln.GetinfoOur_features|undefined} value
 * @return {!proto.cln.GetinfoResponse} returns this
*/
proto.cln.GetinfoResponse.prototype.setOurFeatures = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.clearOurFeatures = function() {
  return this.setOurFeatures(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetinfoResponse.prototype.hasOurFeatures = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint32 blockheight = 11;
 * @return {number}
 */
proto.cln.GetinfoResponse.prototype.getBlockheight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.setBlockheight = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional string network = 12;
 * @return {string}
 */
proto.cln.GetinfoResponse.prototype.getNetwork = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.setNetwork = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional Amount fees_collected_msat = 13;
 * @return {?proto.cln.Amount}
 */
proto.cln.GetinfoResponse.prototype.getFeesCollectedMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 13));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.GetinfoResponse} returns this
*/
proto.cln.GetinfoResponse.prototype.setFeesCollectedMsat = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.clearFeesCollectedMsat = function() {
  return this.setFeesCollectedMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetinfoResponse.prototype.hasFeesCollectedMsat = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * repeated GetinfoAddress address = 14;
 * @return {!Array<!proto.cln.GetinfoAddress>}
 */
proto.cln.GetinfoResponse.prototype.getAddressList = function() {
  return /** @type{!Array<!proto.cln.GetinfoAddress>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.GetinfoAddress, 14));
};


/**
 * @param {!Array<!proto.cln.GetinfoAddress>} value
 * @return {!proto.cln.GetinfoResponse} returns this
*/
proto.cln.GetinfoResponse.prototype.setAddressList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 14, value);
};


/**
 * @param {!proto.cln.GetinfoAddress=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.GetinfoAddress}
 */
proto.cln.GetinfoResponse.prototype.addAddress = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 14, opt_value, proto.cln.GetinfoAddress, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.clearAddressList = function() {
  return this.setAddressList([]);
};


/**
 * repeated GetinfoBinding binding = 15;
 * @return {!Array<!proto.cln.GetinfoBinding>}
 */
proto.cln.GetinfoResponse.prototype.getBindingList = function() {
  return /** @type{!Array<!proto.cln.GetinfoBinding>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.GetinfoBinding, 15));
};


/**
 * @param {!Array<!proto.cln.GetinfoBinding>} value
 * @return {!proto.cln.GetinfoResponse} returns this
*/
proto.cln.GetinfoResponse.prototype.setBindingList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 15, value);
};


/**
 * @param {!proto.cln.GetinfoBinding=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.GetinfoBinding}
 */
proto.cln.GetinfoResponse.prototype.addBinding = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.cln.GetinfoBinding, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.clearBindingList = function() {
  return this.setBindingList([]);
};


/**
 * optional string warning_bitcoind_sync = 16;
 * @return {string}
 */
proto.cln.GetinfoResponse.prototype.getWarningBitcoindSync = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.setWarningBitcoindSync = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.clearWarningBitcoindSync = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetinfoResponse.prototype.hasWarningBitcoindSync = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional string warning_lightningd_sync = 17;
 * @return {string}
 */
proto.cln.GetinfoResponse.prototype.getWarningLightningdSync = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.setWarningLightningdSync = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.clearWarningLightningdSync = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetinfoResponse.prototype.hasWarningLightningdSync = function() {
  return jspb.Message.getField(this, 17) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.GetinfoOur_features.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.GetinfoOur_features.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.GetinfoOur_features} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetinfoOur_features.toObject = function(includeInstance, msg) {
  var f, obj = {
    init: msg.getInit_asB64(),
    node: msg.getNode_asB64(),
    channel: msg.getChannel_asB64(),
    invoice: msg.getInvoice_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.GetinfoOur_features}
 */
proto.cln.GetinfoOur_features.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.GetinfoOur_features;
  return proto.cln.GetinfoOur_features.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.GetinfoOur_features} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.GetinfoOur_features}
 */
proto.cln.GetinfoOur_features.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInit(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setNode(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChannel(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInvoice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.GetinfoOur_features.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.GetinfoOur_features.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.GetinfoOur_features} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetinfoOur_features.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInit_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getNode_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getChannel_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getInvoice_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * optional bytes init = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.GetinfoOur_features.prototype.getInit = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes init = 1;
 * This is a type-conversion wrapper around `getInit()`
 * @return {string}
 */
proto.cln.GetinfoOur_features.prototype.getInit_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInit()));
};


/**
 * optional bytes init = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInit()`
 * @return {!Uint8Array}
 */
proto.cln.GetinfoOur_features.prototype.getInit_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInit()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.GetinfoOur_features} returns this
 */
proto.cln.GetinfoOur_features.prototype.setInit = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes node = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.GetinfoOur_features.prototype.getNode = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes node = 2;
 * This is a type-conversion wrapper around `getNode()`
 * @return {string}
 */
proto.cln.GetinfoOur_features.prototype.getNode_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getNode()));
};


/**
 * optional bytes node = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getNode()`
 * @return {!Uint8Array}
 */
proto.cln.GetinfoOur_features.prototype.getNode_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getNode()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.GetinfoOur_features} returns this
 */
proto.cln.GetinfoOur_features.prototype.setNode = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes channel = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.GetinfoOur_features.prototype.getChannel = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes channel = 3;
 * This is a type-conversion wrapper around `getChannel()`
 * @return {string}
 */
proto.cln.GetinfoOur_features.prototype.getChannel_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChannel()));
};


/**
 * optional bytes channel = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChannel()`
 * @return {!Uint8Array}
 */
proto.cln.GetinfoOur_features.prototype.getChannel_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChannel()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.GetinfoOur_features} returns this
 */
proto.cln.GetinfoOur_features.prototype.setChannel = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional bytes invoice = 4;
 * @return {!(string|Uint8Array)}
 */
proto.cln.GetinfoOur_features.prototype.getInvoice = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes invoice = 4;
 * This is a type-conversion wrapper around `getInvoice()`
 * @return {string}
 */
proto.cln.GetinfoOur_features.prototype.getInvoice_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInvoice()));
};


/**
 * optional bytes invoice = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInvoice()`
 * @return {!Uint8Array}
 */
proto.cln.GetinfoOur_features.prototype.getInvoice_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInvoice()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.GetinfoOur_features} returns this
 */
proto.cln.GetinfoOur_features.prototype.setInvoice = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.GetinfoAddress.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.GetinfoAddress.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.GetinfoAddress} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetinfoAddress.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    port: jspb.Message.getFieldWithDefault(msg, 2, 0),
    address: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.GetinfoAddress}
 */
proto.cln.GetinfoAddress.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.GetinfoAddress;
  return proto.cln.GetinfoAddress.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.GetinfoAddress} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.GetinfoAddress}
 */
proto.cln.GetinfoAddress.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.GetinfoAddress.GetinfoAddressType} */ (reader.readEnum());
      msg.setItemType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.GetinfoAddress.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.GetinfoAddress.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.GetinfoAddress} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetinfoAddress.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getPort();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.GetinfoAddress.GetinfoAddressType = {
  DNS: 0,
  IPV4: 1,
  IPV6: 2,
  TORV2: 3,
  TORV3: 4
};

/**
 * optional GetinfoAddressType item_type = 1;
 * @return {!proto.cln.GetinfoAddress.GetinfoAddressType}
 */
proto.cln.GetinfoAddress.prototype.getItemType = function() {
  return /** @type {!proto.cln.GetinfoAddress.GetinfoAddressType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.GetinfoAddress.GetinfoAddressType} value
 * @return {!proto.cln.GetinfoAddress} returns this
 */
proto.cln.GetinfoAddress.prototype.setItemType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint32 port = 2;
 * @return {number}
 */
proto.cln.GetinfoAddress.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.GetinfoAddress} returns this
 */
proto.cln.GetinfoAddress.prototype.setPort = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string address = 3;
 * @return {string}
 */
proto.cln.GetinfoAddress.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.GetinfoAddress} returns this
 */
proto.cln.GetinfoAddress.prototype.setAddress = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.GetinfoAddress} returns this
 */
proto.cln.GetinfoAddress.prototype.clearAddress = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetinfoAddress.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.GetinfoBinding.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.GetinfoBinding.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.GetinfoBinding} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetinfoBinding.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    address: jspb.Message.getFieldWithDefault(msg, 2, ""),
    port: jspb.Message.getFieldWithDefault(msg, 3, 0),
    socket: jspb.Message.getFieldWithDefault(msg, 4, ""),
    subtype: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.GetinfoBinding}
 */
proto.cln.GetinfoBinding.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.GetinfoBinding;
  return proto.cln.GetinfoBinding.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.GetinfoBinding} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.GetinfoBinding}
 */
proto.cln.GetinfoBinding.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.GetinfoBinding.GetinfoBindingType} */ (reader.readEnum());
      msg.setItemType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPort(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSocket(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubtype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.GetinfoBinding.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.GetinfoBinding.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.GetinfoBinding} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetinfoBinding.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.GetinfoBinding.GetinfoBindingType = {
  LOCAL_SOCKET: 0,
  IPV4: 1,
  IPV6: 2,
  TORV2: 3,
  TORV3: 4,
  WEBSOCKET: 5
};

/**
 * optional GetinfoBindingType item_type = 1;
 * @return {!proto.cln.GetinfoBinding.GetinfoBindingType}
 */
proto.cln.GetinfoBinding.prototype.getItemType = function() {
  return /** @type {!proto.cln.GetinfoBinding.GetinfoBindingType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.GetinfoBinding.GetinfoBindingType} value
 * @return {!proto.cln.GetinfoBinding} returns this
 */
proto.cln.GetinfoBinding.prototype.setItemType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string address = 2;
 * @return {string}
 */
proto.cln.GetinfoBinding.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.GetinfoBinding} returns this
 */
proto.cln.GetinfoBinding.prototype.setAddress = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.GetinfoBinding} returns this
 */
proto.cln.GetinfoBinding.prototype.clearAddress = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetinfoBinding.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 port = 3;
 * @return {number}
 */
proto.cln.GetinfoBinding.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.GetinfoBinding} returns this
 */
proto.cln.GetinfoBinding.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.GetinfoBinding} returns this
 */
proto.cln.GetinfoBinding.prototype.clearPort = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetinfoBinding.prototype.hasPort = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string socket = 4;
 * @return {string}
 */
proto.cln.GetinfoBinding.prototype.getSocket = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.GetinfoBinding} returns this
 */
proto.cln.GetinfoBinding.prototype.setSocket = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.GetinfoBinding} returns this
 */
proto.cln.GetinfoBinding.prototype.clearSocket = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetinfoBinding.prototype.hasSocket = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string subtype = 5;
 * @return {string}
 */
proto.cln.GetinfoBinding.prototype.getSubtype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.GetinfoBinding} returns this
 */
proto.cln.GetinfoBinding.prototype.setSubtype = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.GetinfoBinding} returns this
 */
proto.cln.GetinfoBinding.prototype.clearSubtype = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetinfoBinding.prototype.hasSubtype = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpeersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpeersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpeersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64(),
    level: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpeersRequest}
 */
proto.cln.ListpeersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpeersRequest;
  return proto.cln.ListpeersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpeersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpeersRequest}
 */
proto.cln.ListpeersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.cln.ListpeersRequest.ListpeersLevel} */ (reader.readEnum());
      msg.setLevel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpeersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpeersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpeersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {!proto.cln.ListpeersRequest.ListpeersLevel} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ListpeersRequest.ListpeersLevel = {
  IO: 0,
  DEBUG: 1,
  INFO: 2,
  UNUSUAL: 3,
  TRACE: 4
};

/**
 * optional bytes id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpeersRequest.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes id = 1;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.cln.ListpeersRequest.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.cln.ListpeersRequest.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpeersRequest} returns this
 */
proto.cln.ListpeersRequest.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersRequest} returns this
 */
proto.cln.ListpeersRequest.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ListpeersLevel level = 2;
 * @return {!proto.cln.ListpeersRequest.ListpeersLevel}
 */
proto.cln.ListpeersRequest.prototype.getLevel = function() {
  return /** @type {!proto.cln.ListpeersRequest.ListpeersLevel} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.cln.ListpeersRequest.ListpeersLevel} value
 * @return {!proto.cln.ListpeersRequest} returns this
 */
proto.cln.ListpeersRequest.prototype.setLevel = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersRequest} returns this
 */
proto.cln.ListpeersRequest.prototype.clearLevel = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersRequest.prototype.hasLevel = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListpeersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpeersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpeersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpeersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    peersList: jspb.Message.toObjectList(msg.getPeersList(),
    proto.cln.ListpeersPeers.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpeersResponse}
 */
proto.cln.ListpeersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpeersResponse;
  return proto.cln.ListpeersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpeersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpeersResponse}
 */
proto.cln.ListpeersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.ListpeersPeers;
      reader.readMessage(value,proto.cln.ListpeersPeers.deserializeBinaryFromReader);
      msg.addPeers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpeersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpeersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpeersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.ListpeersPeers.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ListpeersPeers peers = 1;
 * @return {!Array<!proto.cln.ListpeersPeers>}
 */
proto.cln.ListpeersResponse.prototype.getPeersList = function() {
  return /** @type{!Array<!proto.cln.ListpeersPeers>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListpeersPeers, 1));
};


/**
 * @param {!Array<!proto.cln.ListpeersPeers>} value
 * @return {!proto.cln.ListpeersResponse} returns this
*/
proto.cln.ListpeersResponse.prototype.setPeersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.ListpeersPeers=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListpeersPeers}
 */
proto.cln.ListpeersResponse.prototype.addPeers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.ListpeersPeers, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListpeersResponse} returns this
 */
proto.cln.ListpeersResponse.prototype.clearPeersList = function() {
  return this.setPeersList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListpeersPeers.repeatedFields_ = [3,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpeersPeers.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpeersPeers.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpeersPeers} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeersPeers.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64(),
    connected: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    logList: jspb.Message.toObjectList(msg.getLogList(),
    proto.cln.ListpeersPeersLog.toObject, includeInstance),
    netaddrList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    features: msg.getFeatures_asB64(),
    remoteAddr: jspb.Message.getFieldWithDefault(msg, 7, ""),
    numChannels: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpeersPeers}
 */
proto.cln.ListpeersPeers.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpeersPeers;
  return proto.cln.ListpeersPeers.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpeersPeers} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpeersPeers}
 */
proto.cln.ListpeersPeers.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setConnected(value);
      break;
    case 3:
      var value = new proto.cln.ListpeersPeersLog;
      reader.readMessage(value,proto.cln.ListpeersPeersLog.deserializeBinaryFromReader);
      msg.addLog(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addNetaddr(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFeatures(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteAddr(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumChannels(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpeersPeers.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpeersPeers.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpeersPeers} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeersPeers.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getConnected();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getLogList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.cln.ListpeersPeersLog.serializeBinaryToWriter
    );
  }
  f = message.getNetaddrList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
};


/**
 * optional bytes id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpeersPeers.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes id = 1;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.cln.ListpeersPeers.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.cln.ListpeersPeers.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpeersPeers} returns this
 */
proto.cln.ListpeersPeers.prototype.setId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bool connected = 2;
 * @return {boolean}
 */
proto.cln.ListpeersPeers.prototype.getConnected = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListpeersPeers} returns this
 */
proto.cln.ListpeersPeers.prototype.setConnected = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * repeated ListpeersPeersLog log = 3;
 * @return {!Array<!proto.cln.ListpeersPeersLog>}
 */
proto.cln.ListpeersPeers.prototype.getLogList = function() {
  return /** @type{!Array<!proto.cln.ListpeersPeersLog>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListpeersPeersLog, 3));
};


/**
 * @param {!Array<!proto.cln.ListpeersPeersLog>} value
 * @return {!proto.cln.ListpeersPeers} returns this
*/
proto.cln.ListpeersPeers.prototype.setLogList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.cln.ListpeersPeersLog=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListpeersPeersLog}
 */
proto.cln.ListpeersPeers.prototype.addLog = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.cln.ListpeersPeersLog, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListpeersPeers} returns this
 */
proto.cln.ListpeersPeers.prototype.clearLogList = function() {
  return this.setLogList([]);
};


/**
 * repeated string netaddr = 5;
 * @return {!Array<string>}
 */
proto.cln.ListpeersPeers.prototype.getNetaddrList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.ListpeersPeers} returns this
 */
proto.cln.ListpeersPeers.prototype.setNetaddrList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.ListpeersPeers} returns this
 */
proto.cln.ListpeersPeers.prototype.addNetaddr = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListpeersPeers} returns this
 */
proto.cln.ListpeersPeers.prototype.clearNetaddrList = function() {
  return this.setNetaddrList([]);
};


/**
 * optional bytes features = 6;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpeersPeers.prototype.getFeatures = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes features = 6;
 * This is a type-conversion wrapper around `getFeatures()`
 * @return {string}
 */
proto.cln.ListpeersPeers.prototype.getFeatures_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFeatures()));
};


/**
 * optional bytes features = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFeatures()`
 * @return {!Uint8Array}
 */
proto.cln.ListpeersPeers.prototype.getFeatures_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFeatures()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpeersPeers} returns this
 */
proto.cln.ListpeersPeers.prototype.setFeatures = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeers} returns this
 */
proto.cln.ListpeersPeers.prototype.clearFeatures = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeers.prototype.hasFeatures = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string remote_addr = 7;
 * @return {string}
 */
proto.cln.ListpeersPeers.prototype.getRemoteAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeersPeers} returns this
 */
proto.cln.ListpeersPeers.prototype.setRemoteAddr = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeers} returns this
 */
proto.cln.ListpeersPeers.prototype.clearRemoteAddr = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeers.prototype.hasRemoteAddr = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 num_channels = 8;
 * @return {number}
 */
proto.cln.ListpeersPeers.prototype.getNumChannels = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeersPeers} returns this
 */
proto.cln.ListpeersPeers.prototype.setNumChannels = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeers} returns this
 */
proto.cln.ListpeersPeers.prototype.clearNumChannels = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeers.prototype.hasNumChannels = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpeersPeersLog.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpeersPeersLog.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpeersPeersLog} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeersPeersLog.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    numSkipped: jspb.Message.getFieldWithDefault(msg, 2, 0),
    time: jspb.Message.getFieldWithDefault(msg, 3, ""),
    source: jspb.Message.getFieldWithDefault(msg, 4, ""),
    log: jspb.Message.getFieldWithDefault(msg, 5, ""),
    nodeId: msg.getNodeId_asB64(),
    data: msg.getData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpeersPeersLog}
 */
proto.cln.ListpeersPeersLog.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpeersPeersLog;
  return proto.cln.ListpeersPeersLog.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpeersPeersLog} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpeersPeersLog}
 */
proto.cln.ListpeersPeersLog.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.ListpeersPeersLog.ListpeersPeersLogType} */ (reader.readEnum());
      msg.setItemType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumSkipped(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTime(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLog(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setNodeId(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpeersPeersLog.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpeersPeersLog.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpeersPeersLog} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeersPeersLog.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBytes(
      7,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ListpeersPeersLog.ListpeersPeersLogType = {
  SKIPPED: 0,
  BROKEN: 1,
  UNUSUAL: 2,
  INFO: 3,
  DEBUG: 4,
  IO_IN: 5,
  IO_OUT: 6,
  TRACE: 7
};

/**
 * optional ListpeersPeersLogType item_type = 1;
 * @return {!proto.cln.ListpeersPeersLog.ListpeersPeersLogType}
 */
proto.cln.ListpeersPeersLog.prototype.getItemType = function() {
  return /** @type {!proto.cln.ListpeersPeersLog.ListpeersPeersLogType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.ListpeersPeersLog.ListpeersPeersLogType} value
 * @return {!proto.cln.ListpeersPeersLog} returns this
 */
proto.cln.ListpeersPeersLog.prototype.setItemType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint32 num_skipped = 2;
 * @return {number}
 */
proto.cln.ListpeersPeersLog.prototype.getNumSkipped = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeersPeersLog} returns this
 */
proto.cln.ListpeersPeersLog.prototype.setNumSkipped = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersLog} returns this
 */
proto.cln.ListpeersPeersLog.prototype.clearNumSkipped = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersLog.prototype.hasNumSkipped = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string time = 3;
 * @return {string}
 */
proto.cln.ListpeersPeersLog.prototype.getTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeersPeersLog} returns this
 */
proto.cln.ListpeersPeersLog.prototype.setTime = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersLog} returns this
 */
proto.cln.ListpeersPeersLog.prototype.clearTime = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersLog.prototype.hasTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string source = 4;
 * @return {string}
 */
proto.cln.ListpeersPeersLog.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeersPeersLog} returns this
 */
proto.cln.ListpeersPeersLog.prototype.setSource = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersLog} returns this
 */
proto.cln.ListpeersPeersLog.prototype.clearSource = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersLog.prototype.hasSource = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string log = 5;
 * @return {string}
 */
proto.cln.ListpeersPeersLog.prototype.getLog = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeersPeersLog} returns this
 */
proto.cln.ListpeersPeersLog.prototype.setLog = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersLog} returns this
 */
proto.cln.ListpeersPeersLog.prototype.clearLog = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersLog.prototype.hasLog = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bytes node_id = 6;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpeersPeersLog.prototype.getNodeId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes node_id = 6;
 * This is a type-conversion wrapper around `getNodeId()`
 * @return {string}
 */
proto.cln.ListpeersPeersLog.prototype.getNodeId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getNodeId()));
};


/**
 * optional bytes node_id = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getNodeId()`
 * @return {!Uint8Array}
 */
proto.cln.ListpeersPeersLog.prototype.getNodeId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getNodeId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpeersPeersLog} returns this
 */
proto.cln.ListpeersPeersLog.prototype.setNodeId = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersLog} returns this
 */
proto.cln.ListpeersPeersLog.prototype.clearNodeId = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersLog.prototype.hasNodeId = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bytes data = 7;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpeersPeersLog.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes data = 7;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.cln.ListpeersPeersLog.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.cln.ListpeersPeersLog.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpeersPeersLog} returns this
 */
proto.cln.ListpeersPeersLog.prototype.setData = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersLog} returns this
 */
proto.cln.ListpeersPeersLog.prototype.clearData = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersLog.prototype.hasData = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListfundsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListfundsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListfundsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListfundsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    spent: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListfundsRequest}
 */
proto.cln.ListfundsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListfundsRequest;
  return proto.cln.ListfundsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListfundsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListfundsRequest}
 */
proto.cln.ListfundsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSpent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListfundsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListfundsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListfundsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListfundsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool spent = 1;
 * @return {boolean}
 */
proto.cln.ListfundsRequest.prototype.getSpent = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListfundsRequest} returns this
 */
proto.cln.ListfundsRequest.prototype.setSpent = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListfundsRequest} returns this
 */
proto.cln.ListfundsRequest.prototype.clearSpent = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListfundsRequest.prototype.hasSpent = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListfundsResponse.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListfundsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListfundsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListfundsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListfundsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    outputsList: jspb.Message.toObjectList(msg.getOutputsList(),
    proto.cln.ListfundsOutputs.toObject, includeInstance),
    channelsList: jspb.Message.toObjectList(msg.getChannelsList(),
    proto.cln.ListfundsChannels.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListfundsResponse}
 */
proto.cln.ListfundsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListfundsResponse;
  return proto.cln.ListfundsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListfundsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListfundsResponse}
 */
proto.cln.ListfundsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.ListfundsOutputs;
      reader.readMessage(value,proto.cln.ListfundsOutputs.deserializeBinaryFromReader);
      msg.addOutputs(value);
      break;
    case 2:
      var value = new proto.cln.ListfundsChannels;
      reader.readMessage(value,proto.cln.ListfundsChannels.deserializeBinaryFromReader);
      msg.addChannels(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListfundsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListfundsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListfundsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListfundsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOutputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.ListfundsOutputs.serializeBinaryToWriter
    );
  }
  f = message.getChannelsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.cln.ListfundsChannels.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ListfundsOutputs outputs = 1;
 * @return {!Array<!proto.cln.ListfundsOutputs>}
 */
proto.cln.ListfundsResponse.prototype.getOutputsList = function() {
  return /** @type{!Array<!proto.cln.ListfundsOutputs>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListfundsOutputs, 1));
};


/**
 * @param {!Array<!proto.cln.ListfundsOutputs>} value
 * @return {!proto.cln.ListfundsResponse} returns this
*/
proto.cln.ListfundsResponse.prototype.setOutputsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.ListfundsOutputs=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListfundsOutputs}
 */
proto.cln.ListfundsResponse.prototype.addOutputs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.ListfundsOutputs, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListfundsResponse} returns this
 */
proto.cln.ListfundsResponse.prototype.clearOutputsList = function() {
  return this.setOutputsList([]);
};


/**
 * repeated ListfundsChannels channels = 2;
 * @return {!Array<!proto.cln.ListfundsChannels>}
 */
proto.cln.ListfundsResponse.prototype.getChannelsList = function() {
  return /** @type{!Array<!proto.cln.ListfundsChannels>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListfundsChannels, 2));
};


/**
 * @param {!Array<!proto.cln.ListfundsChannels>} value
 * @return {!proto.cln.ListfundsResponse} returns this
*/
proto.cln.ListfundsResponse.prototype.setChannelsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.cln.ListfundsChannels=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListfundsChannels}
 */
proto.cln.ListfundsResponse.prototype.addChannels = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.cln.ListfundsChannels, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListfundsResponse} returns this
 */
proto.cln.ListfundsResponse.prototype.clearChannelsList = function() {
  return this.setChannelsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListfundsOutputs.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListfundsOutputs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListfundsOutputs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListfundsOutputs.toObject = function(includeInstance, msg) {
  var f, obj = {
    txid: msg.getTxid_asB64(),
    output: jspb.Message.getFieldWithDefault(msg, 2, 0),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    scriptpubkey: msg.getScriptpubkey_asB64(),
    address: jspb.Message.getFieldWithDefault(msg, 5, ""),
    redeemscript: msg.getRedeemscript_asB64(),
    status: jspb.Message.getFieldWithDefault(msg, 7, 0),
    blockheight: jspb.Message.getFieldWithDefault(msg, 8, 0),
    reserved: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    reservedToBlock: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListfundsOutputs}
 */
proto.cln.ListfundsOutputs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListfundsOutputs;
  return proto.cln.ListfundsOutputs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListfundsOutputs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListfundsOutputs}
 */
proto.cln.ListfundsOutputs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOutput(value);
      break;
    case 3:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setScriptpubkey(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRedeemscript(value);
      break;
    case 7:
      var value = /** @type {!proto.cln.ListfundsOutputs.ListfundsOutputsStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBlockheight(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReserved(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setReservedToBlock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListfundsOutputs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListfundsOutputs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListfundsOutputs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListfundsOutputs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getOutput();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getScriptpubkey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getReserved();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ListfundsOutputs.ListfundsOutputsStatus = {
  UNCONFIRMED: 0,
  CONFIRMED: 1,
  SPENT: 2,
  IMMATURE: 3
};

/**
 * optional bytes txid = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListfundsOutputs.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes txid = 1;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.ListfundsOutputs.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.ListfundsOutputs.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListfundsOutputs} returns this
 */
proto.cln.ListfundsOutputs.prototype.setTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint32 output = 2;
 * @return {number}
 */
proto.cln.ListfundsOutputs.prototype.getOutput = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListfundsOutputs} returns this
 */
proto.cln.ListfundsOutputs.prototype.setOutput = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Amount amount_msat = 3;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListfundsOutputs.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 3));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListfundsOutputs} returns this
*/
proto.cln.ListfundsOutputs.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListfundsOutputs} returns this
 */
proto.cln.ListfundsOutputs.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListfundsOutputs.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bytes scriptpubkey = 4;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListfundsOutputs.prototype.getScriptpubkey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes scriptpubkey = 4;
 * This is a type-conversion wrapper around `getScriptpubkey()`
 * @return {string}
 */
proto.cln.ListfundsOutputs.prototype.getScriptpubkey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getScriptpubkey()));
};


/**
 * optional bytes scriptpubkey = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getScriptpubkey()`
 * @return {!Uint8Array}
 */
proto.cln.ListfundsOutputs.prototype.getScriptpubkey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getScriptpubkey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListfundsOutputs} returns this
 */
proto.cln.ListfundsOutputs.prototype.setScriptpubkey = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional string address = 5;
 * @return {string}
 */
proto.cln.ListfundsOutputs.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListfundsOutputs} returns this
 */
proto.cln.ListfundsOutputs.prototype.setAddress = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListfundsOutputs} returns this
 */
proto.cln.ListfundsOutputs.prototype.clearAddress = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListfundsOutputs.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bytes redeemscript = 6;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListfundsOutputs.prototype.getRedeemscript = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes redeemscript = 6;
 * This is a type-conversion wrapper around `getRedeemscript()`
 * @return {string}
 */
proto.cln.ListfundsOutputs.prototype.getRedeemscript_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getRedeemscript()));
};


/**
 * optional bytes redeemscript = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRedeemscript()`
 * @return {!Uint8Array}
 */
proto.cln.ListfundsOutputs.prototype.getRedeemscript_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getRedeemscript()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListfundsOutputs} returns this
 */
proto.cln.ListfundsOutputs.prototype.setRedeemscript = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListfundsOutputs} returns this
 */
proto.cln.ListfundsOutputs.prototype.clearRedeemscript = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListfundsOutputs.prototype.hasRedeemscript = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ListfundsOutputsStatus status = 7;
 * @return {!proto.cln.ListfundsOutputs.ListfundsOutputsStatus}
 */
proto.cln.ListfundsOutputs.prototype.getStatus = function() {
  return /** @type {!proto.cln.ListfundsOutputs.ListfundsOutputsStatus} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.cln.ListfundsOutputs.ListfundsOutputsStatus} value
 * @return {!proto.cln.ListfundsOutputs} returns this
 */
proto.cln.ListfundsOutputs.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional uint32 blockheight = 8;
 * @return {number}
 */
proto.cln.ListfundsOutputs.prototype.getBlockheight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListfundsOutputs} returns this
 */
proto.cln.ListfundsOutputs.prototype.setBlockheight = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListfundsOutputs} returns this
 */
proto.cln.ListfundsOutputs.prototype.clearBlockheight = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListfundsOutputs.prototype.hasBlockheight = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool reserved = 9;
 * @return {boolean}
 */
proto.cln.ListfundsOutputs.prototype.getReserved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListfundsOutputs} returns this
 */
proto.cln.ListfundsOutputs.prototype.setReserved = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional uint32 reserved_to_block = 10;
 * @return {number}
 */
proto.cln.ListfundsOutputs.prototype.getReservedToBlock = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListfundsOutputs} returns this
 */
proto.cln.ListfundsOutputs.prototype.setReservedToBlock = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListfundsOutputs} returns this
 */
proto.cln.ListfundsOutputs.prototype.clearReservedToBlock = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListfundsOutputs.prototype.hasReservedToBlock = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListfundsChannels.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListfundsChannels.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListfundsChannels} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListfundsChannels.toObject = function(includeInstance, msg) {
  var f, obj = {
    peerId: msg.getPeerId_asB64(),
    ourAmountMsat: (f = msg.getOurAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    fundingTxid: msg.getFundingTxid_asB64(),
    fundingOutput: jspb.Message.getFieldWithDefault(msg, 5, 0),
    connected: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    state: jspb.Message.getFieldWithDefault(msg, 7, 0),
    shortChannelId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    channelId: msg.getChannelId_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListfundsChannels}
 */
proto.cln.ListfundsChannels.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListfundsChannels;
  return proto.cln.ListfundsChannels.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListfundsChannels} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListfundsChannels}
 */
proto.cln.ListfundsChannels.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPeerId(value);
      break;
    case 2:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setOurAmountMsat(value);
      break;
    case 3:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFundingTxid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFundingOutput(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setConnected(value);
      break;
    case 7:
      var value = /** @type {!proto.cln.ChannelState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setShortChannelId(value);
      break;
    case 9:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChannelId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListfundsChannels.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListfundsChannels.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListfundsChannels} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListfundsChannels.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeerId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getOurAmountMsat();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getFundingTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getFundingOutput();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getConnected();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBytes(
      9,
      f
    );
  }
};


/**
 * optional bytes peer_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListfundsChannels.prototype.getPeerId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes peer_id = 1;
 * This is a type-conversion wrapper around `getPeerId()`
 * @return {string}
 */
proto.cln.ListfundsChannels.prototype.getPeerId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPeerId()));
};


/**
 * optional bytes peer_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPeerId()`
 * @return {!Uint8Array}
 */
proto.cln.ListfundsChannels.prototype.getPeerId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPeerId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListfundsChannels} returns this
 */
proto.cln.ListfundsChannels.prototype.setPeerId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional Amount our_amount_msat = 2;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListfundsChannels.prototype.getOurAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 2));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListfundsChannels} returns this
*/
proto.cln.ListfundsChannels.prototype.setOurAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListfundsChannels} returns this
 */
proto.cln.ListfundsChannels.prototype.clearOurAmountMsat = function() {
  return this.setOurAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListfundsChannels.prototype.hasOurAmountMsat = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Amount amount_msat = 3;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListfundsChannels.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 3));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListfundsChannels} returns this
*/
proto.cln.ListfundsChannels.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListfundsChannels} returns this
 */
proto.cln.ListfundsChannels.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListfundsChannels.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bytes funding_txid = 4;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListfundsChannels.prototype.getFundingTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes funding_txid = 4;
 * This is a type-conversion wrapper around `getFundingTxid()`
 * @return {string}
 */
proto.cln.ListfundsChannels.prototype.getFundingTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFundingTxid()));
};


/**
 * optional bytes funding_txid = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFundingTxid()`
 * @return {!Uint8Array}
 */
proto.cln.ListfundsChannels.prototype.getFundingTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFundingTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListfundsChannels} returns this
 */
proto.cln.ListfundsChannels.prototype.setFundingTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional uint32 funding_output = 5;
 * @return {number}
 */
proto.cln.ListfundsChannels.prototype.getFundingOutput = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListfundsChannels} returns this
 */
proto.cln.ListfundsChannels.prototype.setFundingOutput = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool connected = 6;
 * @return {boolean}
 */
proto.cln.ListfundsChannels.prototype.getConnected = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListfundsChannels} returns this
 */
proto.cln.ListfundsChannels.prototype.setConnected = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional ChannelState state = 7;
 * @return {!proto.cln.ChannelState}
 */
proto.cln.ListfundsChannels.prototype.getState = function() {
  return /** @type {!proto.cln.ChannelState} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.cln.ChannelState} value
 * @return {!proto.cln.ListfundsChannels} returns this
 */
proto.cln.ListfundsChannels.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional string short_channel_id = 8;
 * @return {string}
 */
proto.cln.ListfundsChannels.prototype.getShortChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListfundsChannels} returns this
 */
proto.cln.ListfundsChannels.prototype.setShortChannelId = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListfundsChannels} returns this
 */
proto.cln.ListfundsChannels.prototype.clearShortChannelId = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListfundsChannels.prototype.hasShortChannelId = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bytes channel_id = 9;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListfundsChannels.prototype.getChannelId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * optional bytes channel_id = 9;
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {string}
 */
proto.cln.ListfundsChannels.prototype.getChannelId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChannelId()));
};


/**
 * optional bytes channel_id = 9;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {!Uint8Array}
 */
proto.cln.ListfundsChannels.prototype.getChannelId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChannelId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListfundsChannels} returns this
 */
proto.cln.ListfundsChannels.prototype.setChannelId = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListfundsChannels} returns this
 */
proto.cln.ListfundsChannels.prototype.clearChannelId = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListfundsChannels.prototype.hasChannelId = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.SendpayRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SendpayRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SendpayRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SendpayRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendpayRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    routeList: jspb.Message.toObjectList(msg.getRouteList(),
    proto.cln.SendpayRoute.toObject, includeInstance),
    paymentHash: msg.getPaymentHash_asB64(),
    label: jspb.Message.getFieldWithDefault(msg, 3, ""),
    bolt11: jspb.Message.getFieldWithDefault(msg, 5, ""),
    paymentSecret: msg.getPaymentSecret_asB64(),
    partid: jspb.Message.getFieldWithDefault(msg, 7, 0),
    groupid: jspb.Message.getFieldWithDefault(msg, 9, 0),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    localinvreqid: msg.getLocalinvreqid_asB64(),
    paymentMetadata: msg.getPaymentMetadata_asB64(),
    description: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SendpayRequest}
 */
proto.cln.SendpayRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SendpayRequest;
  return proto.cln.SendpayRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SendpayRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SendpayRequest}
 */
proto.cln.SendpayRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.SendpayRoute;
      reader.readMessage(value,proto.cln.SendpayRoute.deserializeBinaryFromReader);
      msg.addRoute(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentSecret(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPartid(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGroupid(value);
      break;
    case 10:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 11:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setLocalinvreqid(value);
      break;
    case 12:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentMetadata(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SendpayRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SendpayRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SendpayRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendpayRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRouteList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.SendpayRoute.serializeBinaryToWriter
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeBytes(
      11,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBytes(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * repeated SendpayRoute route = 1;
 * @return {!Array<!proto.cln.SendpayRoute>}
 */
proto.cln.SendpayRequest.prototype.getRouteList = function() {
  return /** @type{!Array<!proto.cln.SendpayRoute>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.SendpayRoute, 1));
};


/**
 * @param {!Array<!proto.cln.SendpayRoute>} value
 * @return {!proto.cln.SendpayRequest} returns this
*/
proto.cln.SendpayRequest.prototype.setRouteList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.SendpayRoute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.SendpayRoute}
 */
proto.cln.SendpayRequest.prototype.addRoute = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.SendpayRoute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.SendpayRequest} returns this
 */
proto.cln.SendpayRequest.prototype.clearRouteList = function() {
  return this.setRouteList([]);
};


/**
 * optional bytes payment_hash = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendpayRequest.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes payment_hash = 2;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.SendpayRequest.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.SendpayRequest.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendpayRequest} returns this
 */
proto.cln.SendpayRequest.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string label = 3;
 * @return {string}
 */
proto.cln.SendpayRequest.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SendpayRequest} returns this
 */
proto.cln.SendpayRequest.prototype.setLabel = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpayRequest} returns this
 */
proto.cln.SendpayRequest.prototype.clearLabel = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayRequest.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string bolt11 = 5;
 * @return {string}
 */
proto.cln.SendpayRequest.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SendpayRequest} returns this
 */
proto.cln.SendpayRequest.prototype.setBolt11 = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpayRequest} returns this
 */
proto.cln.SendpayRequest.prototype.clearBolt11 = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayRequest.prototype.hasBolt11 = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bytes payment_secret = 6;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendpayRequest.prototype.getPaymentSecret = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes payment_secret = 6;
 * This is a type-conversion wrapper around `getPaymentSecret()`
 * @return {string}
 */
proto.cln.SendpayRequest.prototype.getPaymentSecret_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentSecret()));
};


/**
 * optional bytes payment_secret = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentSecret()`
 * @return {!Uint8Array}
 */
proto.cln.SendpayRequest.prototype.getPaymentSecret_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentSecret()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendpayRequest} returns this
 */
proto.cln.SendpayRequest.prototype.setPaymentSecret = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpayRequest} returns this
 */
proto.cln.SendpayRequest.prototype.clearPaymentSecret = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayRequest.prototype.hasPaymentSecret = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 partid = 7;
 * @return {number}
 */
proto.cln.SendpayRequest.prototype.getPartid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendpayRequest} returns this
 */
proto.cln.SendpayRequest.prototype.setPartid = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpayRequest} returns this
 */
proto.cln.SendpayRequest.prototype.clearPartid = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayRequest.prototype.hasPartid = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint64 groupid = 9;
 * @return {number}
 */
proto.cln.SendpayRequest.prototype.getGroupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendpayRequest} returns this
 */
proto.cln.SendpayRequest.prototype.setGroupid = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpayRequest} returns this
 */
proto.cln.SendpayRequest.prototype.clearGroupid = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayRequest.prototype.hasGroupid = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Amount amount_msat = 10;
 * @return {?proto.cln.Amount}
 */
proto.cln.SendpayRequest.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 10));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.SendpayRequest} returns this
*/
proto.cln.SendpayRequest.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.SendpayRequest} returns this
 */
proto.cln.SendpayRequest.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayRequest.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional bytes localinvreqid = 11;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendpayRequest.prototype.getLocalinvreqid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * optional bytes localinvreqid = 11;
 * This is a type-conversion wrapper around `getLocalinvreqid()`
 * @return {string}
 */
proto.cln.SendpayRequest.prototype.getLocalinvreqid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getLocalinvreqid()));
};


/**
 * optional bytes localinvreqid = 11;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getLocalinvreqid()`
 * @return {!Uint8Array}
 */
proto.cln.SendpayRequest.prototype.getLocalinvreqid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getLocalinvreqid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendpayRequest} returns this
 */
proto.cln.SendpayRequest.prototype.setLocalinvreqid = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpayRequest} returns this
 */
proto.cln.SendpayRequest.prototype.clearLocalinvreqid = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayRequest.prototype.hasLocalinvreqid = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bytes payment_metadata = 12;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendpayRequest.prototype.getPaymentMetadata = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * optional bytes payment_metadata = 12;
 * This is a type-conversion wrapper around `getPaymentMetadata()`
 * @return {string}
 */
proto.cln.SendpayRequest.prototype.getPaymentMetadata_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentMetadata()));
};


/**
 * optional bytes payment_metadata = 12;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentMetadata()`
 * @return {!Uint8Array}
 */
proto.cln.SendpayRequest.prototype.getPaymentMetadata_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentMetadata()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendpayRequest} returns this
 */
proto.cln.SendpayRequest.prototype.setPaymentMetadata = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpayRequest} returns this
 */
proto.cln.SendpayRequest.prototype.clearPaymentMetadata = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayRequest.prototype.hasPaymentMetadata = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string description = 13;
 * @return {string}
 */
proto.cln.SendpayRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SendpayRequest} returns this
 */
proto.cln.SendpayRequest.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpayRequest} returns this
 */
proto.cln.SendpayRequest.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayRequest.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 13) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SendpayResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SendpayResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SendpayResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendpayResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    groupid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    paymentHash: msg.getPaymentHash_asB64(),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    destination: msg.getDestination_asB64(),
    createdAt: jspb.Message.getFieldWithDefault(msg, 7, 0),
    amountSentMsat: (f = msg.getAmountSentMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    label: jspb.Message.getFieldWithDefault(msg, 9, ""),
    partid: jspb.Message.getFieldWithDefault(msg, 10, 0),
    bolt11: jspb.Message.getFieldWithDefault(msg, 11, ""),
    bolt12: jspb.Message.getFieldWithDefault(msg, 12, ""),
    paymentPreimage: msg.getPaymentPreimage_asB64(),
    message: jspb.Message.getFieldWithDefault(msg, 14, ""),
    completedAt: jspb.Message.getFieldWithDefault(msg, 15, 0),
    createdIndex: jspb.Message.getFieldWithDefault(msg, 16, 0),
    updatedIndex: jspb.Message.getFieldWithDefault(msg, 17, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SendpayResponse}
 */
proto.cln.SendpayResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SendpayResponse;
  return proto.cln.SendpayResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SendpayResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SendpayResponse}
 */
proto.cln.SendpayResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGroupid(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 4:
      var value = /** @type {!proto.cln.SendpayResponse.SendpayStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 5:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDestination(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedAt(value);
      break;
    case 8:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountSentMsat(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPartid(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt12(value);
      break;
    case 13:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentPreimage(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCompletedAt(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedIndex(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpdatedIndex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SendpayResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SendpayResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SendpayResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendpayResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getAmountSentMsat();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBytes(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint64(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint64(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeUint64(
      17,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.SendpayResponse.SendpayStatus = {
  PENDING: 0,
  COMPLETE: 1
};

/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.cln.SendpayResponse.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 groupid = 2;
 * @return {number}
 */
proto.cln.SendpayResponse.prototype.getGroupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.setGroupid = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.clearGroupid = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayResponse.prototype.hasGroupid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes payment_hash = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendpayResponse.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes payment_hash = 3;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.SendpayResponse.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.SendpayResponse.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional SendpayStatus status = 4;
 * @return {!proto.cln.SendpayResponse.SendpayStatus}
 */
proto.cln.SendpayResponse.prototype.getStatus = function() {
  return /** @type {!proto.cln.SendpayResponse.SendpayStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.cln.SendpayResponse.SendpayStatus} value
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional Amount amount_msat = 5;
 * @return {?proto.cln.Amount}
 */
proto.cln.SendpayResponse.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 5));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.SendpayResponse} returns this
*/
proto.cln.SendpayResponse.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayResponse.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bytes destination = 6;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendpayResponse.prototype.getDestination = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes destination = 6;
 * This is a type-conversion wrapper around `getDestination()`
 * @return {string}
 */
proto.cln.SendpayResponse.prototype.getDestination_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDestination()));
};


/**
 * optional bytes destination = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDestination()`
 * @return {!Uint8Array}
 */
proto.cln.SendpayResponse.prototype.getDestination_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDestination()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.setDestination = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.clearDestination = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayResponse.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 created_at = 7;
 * @return {number}
 */
proto.cln.SendpayResponse.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional Amount amount_sent_msat = 8;
 * @return {?proto.cln.Amount}
 */
proto.cln.SendpayResponse.prototype.getAmountSentMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 8));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.SendpayResponse} returns this
*/
proto.cln.SendpayResponse.prototype.setAmountSentMsat = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.clearAmountSentMsat = function() {
  return this.setAmountSentMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayResponse.prototype.hasAmountSentMsat = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string label = 9;
 * @return {string}
 */
proto.cln.SendpayResponse.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.setLabel = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.clearLabel = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayResponse.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint64 partid = 10;
 * @return {number}
 */
proto.cln.SendpayResponse.prototype.getPartid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.setPartid = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.clearPartid = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayResponse.prototype.hasPartid = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string bolt11 = 11;
 * @return {string}
 */
proto.cln.SendpayResponse.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.setBolt11 = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.clearBolt11 = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayResponse.prototype.hasBolt11 = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string bolt12 = 12;
 * @return {string}
 */
proto.cln.SendpayResponse.prototype.getBolt12 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.setBolt12 = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.clearBolt12 = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayResponse.prototype.hasBolt12 = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bytes payment_preimage = 13;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendpayResponse.prototype.getPaymentPreimage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * optional bytes payment_preimage = 13;
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {string}
 */
proto.cln.SendpayResponse.prototype.getPaymentPreimage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentPreimage()));
};


/**
 * optional bytes payment_preimage = 13;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {!Uint8Array}
 */
proto.cln.SendpayResponse.prototype.getPaymentPreimage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentPreimage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.setPaymentPreimage = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.clearPaymentPreimage = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayResponse.prototype.hasPaymentPreimage = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string message = 14;
 * @return {string}
 */
proto.cln.SendpayResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.setMessage = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.clearMessage = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayResponse.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional uint64 completed_at = 15;
 * @return {number}
 */
proto.cln.SendpayResponse.prototype.getCompletedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.setCompletedAt = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.clearCompletedAt = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayResponse.prototype.hasCompletedAt = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional uint64 created_index = 16;
 * @return {number}
 */
proto.cln.SendpayResponse.prototype.getCreatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.setCreatedIndex = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.clearCreatedIndex = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayResponse.prototype.hasCreatedIndex = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional uint64 updated_index = 17;
 * @return {number}
 */
proto.cln.SendpayResponse.prototype.getUpdatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.setUpdatedIndex = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.clearUpdatedIndex = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayResponse.prototype.hasUpdatedIndex = function() {
  return jspb.Message.getField(this, 17) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SendpayRoute.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SendpayRoute.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SendpayRoute} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendpayRoute.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64(),
    delay: jspb.Message.getFieldWithDefault(msg, 3, 0),
    channel: jspb.Message.getFieldWithDefault(msg, 4, ""),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SendpayRoute}
 */
proto.cln.SendpayRoute.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SendpayRoute;
  return proto.cln.SendpayRoute.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SendpayRoute} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SendpayRoute}
 */
proto.cln.SendpayRoute.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDelay(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannel(value);
      break;
    case 5:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SendpayRoute.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SendpayRoute.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SendpayRoute} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendpayRoute.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getDelay();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getChannel();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes id = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendpayRoute.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes id = 2;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.cln.SendpayRoute.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.cln.SendpayRoute.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendpayRoute} returns this
 */
proto.cln.SendpayRoute.prototype.setId = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional uint32 delay = 3;
 * @return {number}
 */
proto.cln.SendpayRoute.prototype.getDelay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendpayRoute} returns this
 */
proto.cln.SendpayRoute.prototype.setDelay = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string channel = 4;
 * @return {string}
 */
proto.cln.SendpayRoute.prototype.getChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SendpayRoute} returns this
 */
proto.cln.SendpayRoute.prototype.setChannel = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional Amount amount_msat = 5;
 * @return {?proto.cln.Amount}
 */
proto.cln.SendpayRoute.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 5));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.SendpayRoute} returns this
*/
proto.cln.SendpayRoute.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.SendpayRoute} returns this
 */
proto.cln.SendpayRoute.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayRoute.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListchannelsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListchannelsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListchannelsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListchannelsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    shortChannelId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    source: msg.getSource_asB64(),
    destination: msg.getDestination_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListchannelsRequest}
 */
proto.cln.ListchannelsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListchannelsRequest;
  return proto.cln.ListchannelsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListchannelsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListchannelsRequest}
 */
proto.cln.ListchannelsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setShortChannelId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSource(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDestination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListchannelsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListchannelsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListchannelsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListchannelsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional string short_channel_id = 1;
 * @return {string}
 */
proto.cln.ListchannelsRequest.prototype.getShortChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListchannelsRequest} returns this
 */
proto.cln.ListchannelsRequest.prototype.setShortChannelId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListchannelsRequest} returns this
 */
proto.cln.ListchannelsRequest.prototype.clearShortChannelId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListchannelsRequest.prototype.hasShortChannelId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes source = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListchannelsRequest.prototype.getSource = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes source = 2;
 * This is a type-conversion wrapper around `getSource()`
 * @return {string}
 */
proto.cln.ListchannelsRequest.prototype.getSource_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSource()));
};


/**
 * optional bytes source = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSource()`
 * @return {!Uint8Array}
 */
proto.cln.ListchannelsRequest.prototype.getSource_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSource()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListchannelsRequest} returns this
 */
proto.cln.ListchannelsRequest.prototype.setSource = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListchannelsRequest} returns this
 */
proto.cln.ListchannelsRequest.prototype.clearSource = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListchannelsRequest.prototype.hasSource = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes destination = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListchannelsRequest.prototype.getDestination = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes destination = 3;
 * This is a type-conversion wrapper around `getDestination()`
 * @return {string}
 */
proto.cln.ListchannelsRequest.prototype.getDestination_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDestination()));
};


/**
 * optional bytes destination = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDestination()`
 * @return {!Uint8Array}
 */
proto.cln.ListchannelsRequest.prototype.getDestination_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDestination()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListchannelsRequest} returns this
 */
proto.cln.ListchannelsRequest.prototype.setDestination = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListchannelsRequest} returns this
 */
proto.cln.ListchannelsRequest.prototype.clearDestination = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListchannelsRequest.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListchannelsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListchannelsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListchannelsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListchannelsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListchannelsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelsList: jspb.Message.toObjectList(msg.getChannelsList(),
    proto.cln.ListchannelsChannels.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListchannelsResponse}
 */
proto.cln.ListchannelsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListchannelsResponse;
  return proto.cln.ListchannelsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListchannelsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListchannelsResponse}
 */
proto.cln.ListchannelsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.ListchannelsChannels;
      reader.readMessage(value,proto.cln.ListchannelsChannels.deserializeBinaryFromReader);
      msg.addChannels(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListchannelsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListchannelsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListchannelsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListchannelsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.ListchannelsChannels.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ListchannelsChannels channels = 1;
 * @return {!Array<!proto.cln.ListchannelsChannels>}
 */
proto.cln.ListchannelsResponse.prototype.getChannelsList = function() {
  return /** @type{!Array<!proto.cln.ListchannelsChannels>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListchannelsChannels, 1));
};


/**
 * @param {!Array<!proto.cln.ListchannelsChannels>} value
 * @return {!proto.cln.ListchannelsResponse} returns this
*/
proto.cln.ListchannelsResponse.prototype.setChannelsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.ListchannelsChannels=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListchannelsChannels}
 */
proto.cln.ListchannelsResponse.prototype.addChannels = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.ListchannelsChannels, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListchannelsResponse} returns this
 */
proto.cln.ListchannelsResponse.prototype.clearChannelsList = function() {
  return this.setChannelsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListchannelsChannels.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListchannelsChannels.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListchannelsChannels} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListchannelsChannels.toObject = function(includeInstance, msg) {
  var f, obj = {
    source: msg.getSource_asB64(),
    destination: msg.getDestination_asB64(),
    shortChannelId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    pb_public: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    messageFlags: jspb.Message.getFieldWithDefault(msg, 6, 0),
    channelFlags: jspb.Message.getFieldWithDefault(msg, 7, 0),
    active: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    lastUpdate: jspb.Message.getFieldWithDefault(msg, 9, 0),
    baseFeeMillisatoshi: jspb.Message.getFieldWithDefault(msg, 10, 0),
    feePerMillionth: jspb.Message.getFieldWithDefault(msg, 11, 0),
    delay: jspb.Message.getFieldWithDefault(msg, 12, 0),
    htlcMinimumMsat: (f = msg.getHtlcMinimumMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    htlcMaximumMsat: (f = msg.getHtlcMaximumMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    features: msg.getFeatures_asB64(),
    direction: jspb.Message.getFieldWithDefault(msg, 16, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListchannelsChannels}
 */
proto.cln.ListchannelsChannels.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListchannelsChannels;
  return proto.cln.ListchannelsChannels.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListchannelsChannels} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListchannelsChannels}
 */
proto.cln.ListchannelsChannels.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSource(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDestination(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setShortChannelId(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPublic(value);
      break;
    case 5:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMessageFlags(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setChannelFlags(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLastUpdate(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBaseFeeMillisatoshi(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFeePerMillionth(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDelay(value);
      break;
    case 13:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setHtlcMinimumMsat(value);
      break;
    case 14:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setHtlcMaximumMsat(value);
      break;
    case 15:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFeatures(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDirection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListchannelsChannels.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListchannelsChannels.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListchannelsChannels} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListchannelsChannels.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSource_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getDestination_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getShortChannelId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPublic();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getMessageFlags();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getChannelFlags();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getLastUpdate();
  if (f !== 0) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = message.getBaseFeeMillisatoshi();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = message.getFeePerMillionth();
  if (f !== 0) {
    writer.writeUint32(
      11,
      f
    );
  }
  f = message.getDelay();
  if (f !== 0) {
    writer.writeUint32(
      12,
      f
    );
  }
  f = message.getHtlcMinimumMsat();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getHtlcMaximumMsat();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getFeatures_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      15,
      f
    );
  }
  f = message.getDirection();
  if (f !== 0) {
    writer.writeUint32(
      16,
      f
    );
  }
};


/**
 * optional bytes source = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListchannelsChannels.prototype.getSource = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes source = 1;
 * This is a type-conversion wrapper around `getSource()`
 * @return {string}
 */
proto.cln.ListchannelsChannels.prototype.getSource_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSource()));
};


/**
 * optional bytes source = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSource()`
 * @return {!Uint8Array}
 */
proto.cln.ListchannelsChannels.prototype.getSource_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSource()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListchannelsChannels} returns this
 */
proto.cln.ListchannelsChannels.prototype.setSource = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes destination = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListchannelsChannels.prototype.getDestination = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes destination = 2;
 * This is a type-conversion wrapper around `getDestination()`
 * @return {string}
 */
proto.cln.ListchannelsChannels.prototype.getDestination_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDestination()));
};


/**
 * optional bytes destination = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDestination()`
 * @return {!Uint8Array}
 */
proto.cln.ListchannelsChannels.prototype.getDestination_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDestination()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListchannelsChannels} returns this
 */
proto.cln.ListchannelsChannels.prototype.setDestination = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string short_channel_id = 3;
 * @return {string}
 */
proto.cln.ListchannelsChannels.prototype.getShortChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListchannelsChannels} returns this
 */
proto.cln.ListchannelsChannels.prototype.setShortChannelId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool public = 4;
 * @return {boolean}
 */
proto.cln.ListchannelsChannels.prototype.getPublic = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListchannelsChannels} returns this
 */
proto.cln.ListchannelsChannels.prototype.setPublic = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional Amount amount_msat = 5;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListchannelsChannels.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 5));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListchannelsChannels} returns this
*/
proto.cln.ListchannelsChannels.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListchannelsChannels} returns this
 */
proto.cln.ListchannelsChannels.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListchannelsChannels.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 message_flags = 6;
 * @return {number}
 */
proto.cln.ListchannelsChannels.prototype.getMessageFlags = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListchannelsChannels} returns this
 */
proto.cln.ListchannelsChannels.prototype.setMessageFlags = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint32 channel_flags = 7;
 * @return {number}
 */
proto.cln.ListchannelsChannels.prototype.getChannelFlags = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListchannelsChannels} returns this
 */
proto.cln.ListchannelsChannels.prototype.setChannelFlags = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional bool active = 8;
 * @return {boolean}
 */
proto.cln.ListchannelsChannels.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListchannelsChannels} returns this
 */
proto.cln.ListchannelsChannels.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional uint32 last_update = 9;
 * @return {number}
 */
proto.cln.ListchannelsChannels.prototype.getLastUpdate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListchannelsChannels} returns this
 */
proto.cln.ListchannelsChannels.prototype.setLastUpdate = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional uint32 base_fee_millisatoshi = 10;
 * @return {number}
 */
proto.cln.ListchannelsChannels.prototype.getBaseFeeMillisatoshi = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListchannelsChannels} returns this
 */
proto.cln.ListchannelsChannels.prototype.setBaseFeeMillisatoshi = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional uint32 fee_per_millionth = 11;
 * @return {number}
 */
proto.cln.ListchannelsChannels.prototype.getFeePerMillionth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListchannelsChannels} returns this
 */
proto.cln.ListchannelsChannels.prototype.setFeePerMillionth = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional uint32 delay = 12;
 * @return {number}
 */
proto.cln.ListchannelsChannels.prototype.getDelay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListchannelsChannels} returns this
 */
proto.cln.ListchannelsChannels.prototype.setDelay = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional Amount htlc_minimum_msat = 13;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListchannelsChannels.prototype.getHtlcMinimumMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 13));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListchannelsChannels} returns this
*/
proto.cln.ListchannelsChannels.prototype.setHtlcMinimumMsat = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListchannelsChannels} returns this
 */
proto.cln.ListchannelsChannels.prototype.clearHtlcMinimumMsat = function() {
  return this.setHtlcMinimumMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListchannelsChannels.prototype.hasHtlcMinimumMsat = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional Amount htlc_maximum_msat = 14;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListchannelsChannels.prototype.getHtlcMaximumMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 14));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListchannelsChannels} returns this
*/
proto.cln.ListchannelsChannels.prototype.setHtlcMaximumMsat = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListchannelsChannels} returns this
 */
proto.cln.ListchannelsChannels.prototype.clearHtlcMaximumMsat = function() {
  return this.setHtlcMaximumMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListchannelsChannels.prototype.hasHtlcMaximumMsat = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bytes features = 15;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListchannelsChannels.prototype.getFeatures = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * optional bytes features = 15;
 * This is a type-conversion wrapper around `getFeatures()`
 * @return {string}
 */
proto.cln.ListchannelsChannels.prototype.getFeatures_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFeatures()));
};


/**
 * optional bytes features = 15;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFeatures()`
 * @return {!Uint8Array}
 */
proto.cln.ListchannelsChannels.prototype.getFeatures_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFeatures()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListchannelsChannels} returns this
 */
proto.cln.ListchannelsChannels.prototype.setFeatures = function(value) {
  return jspb.Message.setProto3BytesField(this, 15, value);
};


/**
 * optional uint32 direction = 16;
 * @return {number}
 */
proto.cln.ListchannelsChannels.prototype.getDirection = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListchannelsChannels} returns this
 */
proto.cln.ListchannelsChannels.prototype.setDirection = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.AddgossipRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.AddgossipRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.AddgossipRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AddgossipRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: msg.getMessage_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.AddgossipRequest}
 */
proto.cln.AddgossipRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.AddgossipRequest;
  return proto.cln.AddgossipRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.AddgossipRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.AddgossipRequest}
 */
proto.cln.AddgossipRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.AddgossipRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.AddgossipRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.AddgossipRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AddgossipRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes message = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.AddgossipRequest.prototype.getMessage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes message = 1;
 * This is a type-conversion wrapper around `getMessage()`
 * @return {string}
 */
proto.cln.AddgossipRequest.prototype.getMessage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMessage()));
};


/**
 * optional bytes message = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMessage()`
 * @return {!Uint8Array}
 */
proto.cln.AddgossipRequest.prototype.getMessage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMessage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.AddgossipRequest} returns this
 */
proto.cln.AddgossipRequest.prototype.setMessage = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.AddgossipResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.AddgossipResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.AddgossipResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AddgossipResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.AddgossipResponse}
 */
proto.cln.AddgossipResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.AddgossipResponse;
  return proto.cln.AddgossipResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.AddgossipResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.AddgossipResponse}
 */
proto.cln.AddgossipResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.AddgossipResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.AddgossipResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.AddgossipResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AddgossipResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.AddpsbtoutputRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.AddpsbtoutputRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.AddpsbtoutputRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AddpsbtoutputRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    satoshi: (f = msg.getSatoshi()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    locktime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    initialpsbt: jspb.Message.getFieldWithDefault(msg, 3, ""),
    destination: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.AddpsbtoutputRequest}
 */
proto.cln.AddpsbtoutputRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.AddpsbtoutputRequest;
  return proto.cln.AddpsbtoutputRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.AddpsbtoutputRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.AddpsbtoutputRequest}
 */
proto.cln.AddpsbtoutputRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setSatoshi(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLocktime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setInitialpsbt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.AddpsbtoutputRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.AddpsbtoutputRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.AddpsbtoutputRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AddpsbtoutputRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSatoshi();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional Amount satoshi = 1;
 * @return {?proto.cln.Amount}
 */
proto.cln.AddpsbtoutputRequest.prototype.getSatoshi = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 1));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.AddpsbtoutputRequest} returns this
*/
proto.cln.AddpsbtoutputRequest.prototype.setSatoshi = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.AddpsbtoutputRequest} returns this
 */
proto.cln.AddpsbtoutputRequest.prototype.clearSatoshi = function() {
  return this.setSatoshi(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.AddpsbtoutputRequest.prototype.hasSatoshi = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 locktime = 2;
 * @return {number}
 */
proto.cln.AddpsbtoutputRequest.prototype.getLocktime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.AddpsbtoutputRequest} returns this
 */
proto.cln.AddpsbtoutputRequest.prototype.setLocktime = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.AddpsbtoutputRequest} returns this
 */
proto.cln.AddpsbtoutputRequest.prototype.clearLocktime = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.AddpsbtoutputRequest.prototype.hasLocktime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string initialpsbt = 3;
 * @return {string}
 */
proto.cln.AddpsbtoutputRequest.prototype.getInitialpsbt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.AddpsbtoutputRequest} returns this
 */
proto.cln.AddpsbtoutputRequest.prototype.setInitialpsbt = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.AddpsbtoutputRequest} returns this
 */
proto.cln.AddpsbtoutputRequest.prototype.clearInitialpsbt = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.AddpsbtoutputRequest.prototype.hasInitialpsbt = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string destination = 4;
 * @return {string}
 */
proto.cln.AddpsbtoutputRequest.prototype.getDestination = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.AddpsbtoutputRequest} returns this
 */
proto.cln.AddpsbtoutputRequest.prototype.setDestination = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.AddpsbtoutputRequest} returns this
 */
proto.cln.AddpsbtoutputRequest.prototype.clearDestination = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.AddpsbtoutputRequest.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.AddpsbtoutputResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.AddpsbtoutputResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.AddpsbtoutputResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AddpsbtoutputResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    psbt: jspb.Message.getFieldWithDefault(msg, 1, ""),
    estimatedAddedWeight: jspb.Message.getFieldWithDefault(msg, 2, 0),
    outnum: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.AddpsbtoutputResponse}
 */
proto.cln.AddpsbtoutputResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.AddpsbtoutputResponse;
  return proto.cln.AddpsbtoutputResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.AddpsbtoutputResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.AddpsbtoutputResponse}
 */
proto.cln.AddpsbtoutputResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPsbt(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setEstimatedAddedWeight(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOutnum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.AddpsbtoutputResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.AddpsbtoutputResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.AddpsbtoutputResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AddpsbtoutputResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPsbt();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEstimatedAddedWeight();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getOutnum();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional string psbt = 1;
 * @return {string}
 */
proto.cln.AddpsbtoutputResponse.prototype.getPsbt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.AddpsbtoutputResponse} returns this
 */
proto.cln.AddpsbtoutputResponse.prototype.setPsbt = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 estimated_added_weight = 2;
 * @return {number}
 */
proto.cln.AddpsbtoutputResponse.prototype.getEstimatedAddedWeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.AddpsbtoutputResponse} returns this
 */
proto.cln.AddpsbtoutputResponse.prototype.setEstimatedAddedWeight = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 outnum = 3;
 * @return {number}
 */
proto.cln.AddpsbtoutputResponse.prototype.getOutnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.AddpsbtoutputResponse} returns this
 */
proto.cln.AddpsbtoutputResponse.prototype.setOutnum = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.AutocleaninvoiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.AutocleaninvoiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.AutocleaninvoiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleaninvoiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    expiredBy: jspb.Message.getFieldWithDefault(msg, 1, 0),
    cycleSeconds: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.AutocleaninvoiceRequest}
 */
proto.cln.AutocleaninvoiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.AutocleaninvoiceRequest;
  return proto.cln.AutocleaninvoiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.AutocleaninvoiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.AutocleaninvoiceRequest}
 */
proto.cln.AutocleaninvoiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExpiredBy(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCycleSeconds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.AutocleaninvoiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.AutocleaninvoiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.AutocleaninvoiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleaninvoiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 expired_by = 1;
 * @return {number}
 */
proto.cln.AutocleaninvoiceRequest.prototype.getExpiredBy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.AutocleaninvoiceRequest} returns this
 */
proto.cln.AutocleaninvoiceRequest.prototype.setExpiredBy = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.AutocleaninvoiceRequest} returns this
 */
proto.cln.AutocleaninvoiceRequest.prototype.clearExpiredBy = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.AutocleaninvoiceRequest.prototype.hasExpiredBy = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 cycle_seconds = 2;
 * @return {number}
 */
proto.cln.AutocleaninvoiceRequest.prototype.getCycleSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.AutocleaninvoiceRequest} returns this
 */
proto.cln.AutocleaninvoiceRequest.prototype.setCycleSeconds = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.AutocleaninvoiceRequest} returns this
 */
proto.cln.AutocleaninvoiceRequest.prototype.clearCycleSeconds = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.AutocleaninvoiceRequest.prototype.hasCycleSeconds = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.AutocleaninvoiceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.AutocleaninvoiceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.AutocleaninvoiceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleaninvoiceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    enabled: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    expiredBy: jspb.Message.getFieldWithDefault(msg, 2, 0),
    cycleSeconds: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.AutocleaninvoiceResponse}
 */
proto.cln.AutocleaninvoiceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.AutocleaninvoiceResponse;
  return proto.cln.AutocleaninvoiceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.AutocleaninvoiceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.AutocleaninvoiceResponse}
 */
proto.cln.AutocleaninvoiceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExpiredBy(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCycleSeconds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.AutocleaninvoiceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.AutocleaninvoiceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.AutocleaninvoiceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleaninvoiceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnabled();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional bool enabled = 1;
 * @return {boolean}
 */
proto.cln.AutocleaninvoiceResponse.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.AutocleaninvoiceResponse} returns this
 */
proto.cln.AutocleaninvoiceResponse.prototype.setEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional uint64 expired_by = 2;
 * @return {number}
 */
proto.cln.AutocleaninvoiceResponse.prototype.getExpiredBy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.AutocleaninvoiceResponse} returns this
 */
proto.cln.AutocleaninvoiceResponse.prototype.setExpiredBy = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.AutocleaninvoiceResponse} returns this
 */
proto.cln.AutocleaninvoiceResponse.prototype.clearExpiredBy = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.AutocleaninvoiceResponse.prototype.hasExpiredBy = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 cycle_seconds = 3;
 * @return {number}
 */
proto.cln.AutocleaninvoiceResponse.prototype.getCycleSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.AutocleaninvoiceResponse} returns this
 */
proto.cln.AutocleaninvoiceResponse.prototype.setCycleSeconds = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.AutocleaninvoiceResponse} returns this
 */
proto.cln.AutocleaninvoiceResponse.prototype.clearCycleSeconds = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.AutocleaninvoiceResponse.prototype.hasCycleSeconds = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.AutocleanonceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.AutocleanonceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.AutocleanonceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleanonceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    subsystem: jspb.Message.getFieldWithDefault(msg, 1, 0),
    age: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.AutocleanonceRequest}
 */
proto.cln.AutocleanonceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.AutocleanonceRequest;
  return proto.cln.AutocleanonceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.AutocleanonceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.AutocleanonceRequest}
 */
proto.cln.AutocleanonceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.AutocleanSubsystem} */ (reader.readEnum());
      msg.setSubsystem(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAge(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.AutocleanonceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.AutocleanonceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.AutocleanonceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleanonceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubsystem();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getAge();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional AutocleanSubsystem subsystem = 1;
 * @return {!proto.cln.AutocleanSubsystem}
 */
proto.cln.AutocleanonceRequest.prototype.getSubsystem = function() {
  return /** @type {!proto.cln.AutocleanSubsystem} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.AutocleanSubsystem} value
 * @return {!proto.cln.AutocleanonceRequest} returns this
 */
proto.cln.AutocleanonceRequest.prototype.setSubsystem = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint64 age = 2;
 * @return {number}
 */
proto.cln.AutocleanonceRequest.prototype.getAge = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.AutocleanonceRequest} returns this
 */
proto.cln.AutocleanonceRequest.prototype.setAge = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.AutocleanonceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.AutocleanonceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.AutocleanonceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleanonceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    autoclean: (f = msg.getAutoclean()) && proto.cln.AutocleanonceAutoclean.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.AutocleanonceResponse}
 */
proto.cln.AutocleanonceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.AutocleanonceResponse;
  return proto.cln.AutocleanonceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.AutocleanonceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.AutocleanonceResponse}
 */
proto.cln.AutocleanonceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.AutocleanonceAutoclean;
      reader.readMessage(value,proto.cln.AutocleanonceAutoclean.deserializeBinaryFromReader);
      msg.setAutoclean(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.AutocleanonceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.AutocleanonceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.AutocleanonceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleanonceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAutoclean();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cln.AutocleanonceAutoclean.serializeBinaryToWriter
    );
  }
};


/**
 * optional AutocleanonceAutoclean autoclean = 1;
 * @return {?proto.cln.AutocleanonceAutoclean}
 */
proto.cln.AutocleanonceResponse.prototype.getAutoclean = function() {
  return /** @type{?proto.cln.AutocleanonceAutoclean} */ (
    jspb.Message.getWrapperField(this, proto.cln.AutocleanonceAutoclean, 1));
};


/**
 * @param {?proto.cln.AutocleanonceAutoclean|undefined} value
 * @return {!proto.cln.AutocleanonceResponse} returns this
*/
proto.cln.AutocleanonceResponse.prototype.setAutoclean = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.AutocleanonceResponse} returns this
 */
proto.cln.AutocleanonceResponse.prototype.clearAutoclean = function() {
  return this.setAutoclean(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.AutocleanonceResponse.prototype.hasAutoclean = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.AutocleanonceAutoclean.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.AutocleanonceAutoclean.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.AutocleanonceAutoclean} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleanonceAutoclean.toObject = function(includeInstance, msg) {
  var f, obj = {
    succeededforwards: (f = msg.getSucceededforwards()) && proto.cln.AutocleanonceAutocleanSucceededforwards.toObject(includeInstance, f),
    failedforwards: (f = msg.getFailedforwards()) && proto.cln.AutocleanonceAutocleanFailedforwards.toObject(includeInstance, f),
    succeededpays: (f = msg.getSucceededpays()) && proto.cln.AutocleanonceAutocleanSucceededpays.toObject(includeInstance, f),
    failedpays: (f = msg.getFailedpays()) && proto.cln.AutocleanonceAutocleanFailedpays.toObject(includeInstance, f),
    paidinvoices: (f = msg.getPaidinvoices()) && proto.cln.AutocleanonceAutocleanPaidinvoices.toObject(includeInstance, f),
    expiredinvoices: (f = msg.getExpiredinvoices()) && proto.cln.AutocleanonceAutocleanExpiredinvoices.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.AutocleanonceAutoclean}
 */
proto.cln.AutocleanonceAutoclean.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.AutocleanonceAutoclean;
  return proto.cln.AutocleanonceAutoclean.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.AutocleanonceAutoclean} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.AutocleanonceAutoclean}
 */
proto.cln.AutocleanonceAutoclean.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.AutocleanonceAutocleanSucceededforwards;
      reader.readMessage(value,proto.cln.AutocleanonceAutocleanSucceededforwards.deserializeBinaryFromReader);
      msg.setSucceededforwards(value);
      break;
    case 2:
      var value = new proto.cln.AutocleanonceAutocleanFailedforwards;
      reader.readMessage(value,proto.cln.AutocleanonceAutocleanFailedforwards.deserializeBinaryFromReader);
      msg.setFailedforwards(value);
      break;
    case 3:
      var value = new proto.cln.AutocleanonceAutocleanSucceededpays;
      reader.readMessage(value,proto.cln.AutocleanonceAutocleanSucceededpays.deserializeBinaryFromReader);
      msg.setSucceededpays(value);
      break;
    case 4:
      var value = new proto.cln.AutocleanonceAutocleanFailedpays;
      reader.readMessage(value,proto.cln.AutocleanonceAutocleanFailedpays.deserializeBinaryFromReader);
      msg.setFailedpays(value);
      break;
    case 5:
      var value = new proto.cln.AutocleanonceAutocleanPaidinvoices;
      reader.readMessage(value,proto.cln.AutocleanonceAutocleanPaidinvoices.deserializeBinaryFromReader);
      msg.setPaidinvoices(value);
      break;
    case 6:
      var value = new proto.cln.AutocleanonceAutocleanExpiredinvoices;
      reader.readMessage(value,proto.cln.AutocleanonceAutocleanExpiredinvoices.deserializeBinaryFromReader);
      msg.setExpiredinvoices(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.AutocleanonceAutoclean.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.AutocleanonceAutoclean.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.AutocleanonceAutoclean} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleanonceAutoclean.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSucceededforwards();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cln.AutocleanonceAutocleanSucceededforwards.serializeBinaryToWriter
    );
  }
  f = message.getFailedforwards();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cln.AutocleanonceAutocleanFailedforwards.serializeBinaryToWriter
    );
  }
  f = message.getSucceededpays();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cln.AutocleanonceAutocleanSucceededpays.serializeBinaryToWriter
    );
  }
  f = message.getFailedpays();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.cln.AutocleanonceAutocleanFailedpays.serializeBinaryToWriter
    );
  }
  f = message.getPaidinvoices();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.cln.AutocleanonceAutocleanPaidinvoices.serializeBinaryToWriter
    );
  }
  f = message.getExpiredinvoices();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.cln.AutocleanonceAutocleanExpiredinvoices.serializeBinaryToWriter
    );
  }
};


/**
 * optional AutocleanonceAutocleanSucceededforwards succeededforwards = 1;
 * @return {?proto.cln.AutocleanonceAutocleanSucceededforwards}
 */
proto.cln.AutocleanonceAutoclean.prototype.getSucceededforwards = function() {
  return /** @type{?proto.cln.AutocleanonceAutocleanSucceededforwards} */ (
    jspb.Message.getWrapperField(this, proto.cln.AutocleanonceAutocleanSucceededforwards, 1));
};


/**
 * @param {?proto.cln.AutocleanonceAutocleanSucceededforwards|undefined} value
 * @return {!proto.cln.AutocleanonceAutoclean} returns this
*/
proto.cln.AutocleanonceAutoclean.prototype.setSucceededforwards = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.AutocleanonceAutoclean} returns this
 */
proto.cln.AutocleanonceAutoclean.prototype.clearSucceededforwards = function() {
  return this.setSucceededforwards(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.AutocleanonceAutoclean.prototype.hasSucceededforwards = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional AutocleanonceAutocleanFailedforwards failedforwards = 2;
 * @return {?proto.cln.AutocleanonceAutocleanFailedforwards}
 */
proto.cln.AutocleanonceAutoclean.prototype.getFailedforwards = function() {
  return /** @type{?proto.cln.AutocleanonceAutocleanFailedforwards} */ (
    jspb.Message.getWrapperField(this, proto.cln.AutocleanonceAutocleanFailedforwards, 2));
};


/**
 * @param {?proto.cln.AutocleanonceAutocleanFailedforwards|undefined} value
 * @return {!proto.cln.AutocleanonceAutoclean} returns this
*/
proto.cln.AutocleanonceAutoclean.prototype.setFailedforwards = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.AutocleanonceAutoclean} returns this
 */
proto.cln.AutocleanonceAutoclean.prototype.clearFailedforwards = function() {
  return this.setFailedforwards(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.AutocleanonceAutoclean.prototype.hasFailedforwards = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional AutocleanonceAutocleanSucceededpays succeededpays = 3;
 * @return {?proto.cln.AutocleanonceAutocleanSucceededpays}
 */
proto.cln.AutocleanonceAutoclean.prototype.getSucceededpays = function() {
  return /** @type{?proto.cln.AutocleanonceAutocleanSucceededpays} */ (
    jspb.Message.getWrapperField(this, proto.cln.AutocleanonceAutocleanSucceededpays, 3));
};


/**
 * @param {?proto.cln.AutocleanonceAutocleanSucceededpays|undefined} value
 * @return {!proto.cln.AutocleanonceAutoclean} returns this
*/
proto.cln.AutocleanonceAutoclean.prototype.setSucceededpays = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.AutocleanonceAutoclean} returns this
 */
proto.cln.AutocleanonceAutoclean.prototype.clearSucceededpays = function() {
  return this.setSucceededpays(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.AutocleanonceAutoclean.prototype.hasSucceededpays = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional AutocleanonceAutocleanFailedpays failedpays = 4;
 * @return {?proto.cln.AutocleanonceAutocleanFailedpays}
 */
proto.cln.AutocleanonceAutoclean.prototype.getFailedpays = function() {
  return /** @type{?proto.cln.AutocleanonceAutocleanFailedpays} */ (
    jspb.Message.getWrapperField(this, proto.cln.AutocleanonceAutocleanFailedpays, 4));
};


/**
 * @param {?proto.cln.AutocleanonceAutocleanFailedpays|undefined} value
 * @return {!proto.cln.AutocleanonceAutoclean} returns this
*/
proto.cln.AutocleanonceAutoclean.prototype.setFailedpays = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.AutocleanonceAutoclean} returns this
 */
proto.cln.AutocleanonceAutoclean.prototype.clearFailedpays = function() {
  return this.setFailedpays(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.AutocleanonceAutoclean.prototype.hasFailedpays = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional AutocleanonceAutocleanPaidinvoices paidinvoices = 5;
 * @return {?proto.cln.AutocleanonceAutocleanPaidinvoices}
 */
proto.cln.AutocleanonceAutoclean.prototype.getPaidinvoices = function() {
  return /** @type{?proto.cln.AutocleanonceAutocleanPaidinvoices} */ (
    jspb.Message.getWrapperField(this, proto.cln.AutocleanonceAutocleanPaidinvoices, 5));
};


/**
 * @param {?proto.cln.AutocleanonceAutocleanPaidinvoices|undefined} value
 * @return {!proto.cln.AutocleanonceAutoclean} returns this
*/
proto.cln.AutocleanonceAutoclean.prototype.setPaidinvoices = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.AutocleanonceAutoclean} returns this
 */
proto.cln.AutocleanonceAutoclean.prototype.clearPaidinvoices = function() {
  return this.setPaidinvoices(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.AutocleanonceAutoclean.prototype.hasPaidinvoices = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional AutocleanonceAutocleanExpiredinvoices expiredinvoices = 6;
 * @return {?proto.cln.AutocleanonceAutocleanExpiredinvoices}
 */
proto.cln.AutocleanonceAutoclean.prototype.getExpiredinvoices = function() {
  return /** @type{?proto.cln.AutocleanonceAutocleanExpiredinvoices} */ (
    jspb.Message.getWrapperField(this, proto.cln.AutocleanonceAutocleanExpiredinvoices, 6));
};


/**
 * @param {?proto.cln.AutocleanonceAutocleanExpiredinvoices|undefined} value
 * @return {!proto.cln.AutocleanonceAutoclean} returns this
*/
proto.cln.AutocleanonceAutoclean.prototype.setExpiredinvoices = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.AutocleanonceAutoclean} returns this
 */
proto.cln.AutocleanonceAutoclean.prototype.clearExpiredinvoices = function() {
  return this.setExpiredinvoices(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.AutocleanonceAutoclean.prototype.hasExpiredinvoices = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.AutocleanonceAutocleanSucceededforwards.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.AutocleanonceAutocleanSucceededforwards.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.AutocleanonceAutocleanSucceededforwards} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleanonceAutocleanSucceededforwards.toObject = function(includeInstance, msg) {
  var f, obj = {
    cleaned: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uncleaned: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.AutocleanonceAutocleanSucceededforwards}
 */
proto.cln.AutocleanonceAutocleanSucceededforwards.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.AutocleanonceAutocleanSucceededforwards;
  return proto.cln.AutocleanonceAutocleanSucceededforwards.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.AutocleanonceAutocleanSucceededforwards} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.AutocleanonceAutocleanSucceededforwards}
 */
proto.cln.AutocleanonceAutocleanSucceededforwards.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCleaned(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUncleaned(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.AutocleanonceAutocleanSucceededforwards.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.AutocleanonceAutocleanSucceededforwards.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.AutocleanonceAutocleanSucceededforwards} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleanonceAutocleanSucceededforwards.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCleaned();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getUncleaned();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 cleaned = 1;
 * @return {number}
 */
proto.cln.AutocleanonceAutocleanSucceededforwards.prototype.getCleaned = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.AutocleanonceAutocleanSucceededforwards} returns this
 */
proto.cln.AutocleanonceAutocleanSucceededforwards.prototype.setCleaned = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 uncleaned = 2;
 * @return {number}
 */
proto.cln.AutocleanonceAutocleanSucceededforwards.prototype.getUncleaned = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.AutocleanonceAutocleanSucceededforwards} returns this
 */
proto.cln.AutocleanonceAutocleanSucceededforwards.prototype.setUncleaned = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.AutocleanonceAutocleanFailedforwards.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.AutocleanonceAutocleanFailedforwards.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.AutocleanonceAutocleanFailedforwards} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleanonceAutocleanFailedforwards.toObject = function(includeInstance, msg) {
  var f, obj = {
    cleaned: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uncleaned: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.AutocleanonceAutocleanFailedforwards}
 */
proto.cln.AutocleanonceAutocleanFailedforwards.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.AutocleanonceAutocleanFailedforwards;
  return proto.cln.AutocleanonceAutocleanFailedforwards.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.AutocleanonceAutocleanFailedforwards} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.AutocleanonceAutocleanFailedforwards}
 */
proto.cln.AutocleanonceAutocleanFailedforwards.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCleaned(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUncleaned(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.AutocleanonceAutocleanFailedforwards.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.AutocleanonceAutocleanFailedforwards.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.AutocleanonceAutocleanFailedforwards} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleanonceAutocleanFailedforwards.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCleaned();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getUncleaned();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 cleaned = 1;
 * @return {number}
 */
proto.cln.AutocleanonceAutocleanFailedforwards.prototype.getCleaned = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.AutocleanonceAutocleanFailedforwards} returns this
 */
proto.cln.AutocleanonceAutocleanFailedforwards.prototype.setCleaned = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 uncleaned = 2;
 * @return {number}
 */
proto.cln.AutocleanonceAutocleanFailedforwards.prototype.getUncleaned = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.AutocleanonceAutocleanFailedforwards} returns this
 */
proto.cln.AutocleanonceAutocleanFailedforwards.prototype.setUncleaned = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.AutocleanonceAutocleanSucceededpays.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.AutocleanonceAutocleanSucceededpays.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.AutocleanonceAutocleanSucceededpays} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleanonceAutocleanSucceededpays.toObject = function(includeInstance, msg) {
  var f, obj = {
    cleaned: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uncleaned: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.AutocleanonceAutocleanSucceededpays}
 */
proto.cln.AutocleanonceAutocleanSucceededpays.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.AutocleanonceAutocleanSucceededpays;
  return proto.cln.AutocleanonceAutocleanSucceededpays.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.AutocleanonceAutocleanSucceededpays} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.AutocleanonceAutocleanSucceededpays}
 */
proto.cln.AutocleanonceAutocleanSucceededpays.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCleaned(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUncleaned(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.AutocleanonceAutocleanSucceededpays.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.AutocleanonceAutocleanSucceededpays.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.AutocleanonceAutocleanSucceededpays} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleanonceAutocleanSucceededpays.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCleaned();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getUncleaned();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 cleaned = 1;
 * @return {number}
 */
proto.cln.AutocleanonceAutocleanSucceededpays.prototype.getCleaned = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.AutocleanonceAutocleanSucceededpays} returns this
 */
proto.cln.AutocleanonceAutocleanSucceededpays.prototype.setCleaned = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 uncleaned = 2;
 * @return {number}
 */
proto.cln.AutocleanonceAutocleanSucceededpays.prototype.getUncleaned = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.AutocleanonceAutocleanSucceededpays} returns this
 */
proto.cln.AutocleanonceAutocleanSucceededpays.prototype.setUncleaned = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.AutocleanonceAutocleanFailedpays.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.AutocleanonceAutocleanFailedpays.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.AutocleanonceAutocleanFailedpays} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleanonceAutocleanFailedpays.toObject = function(includeInstance, msg) {
  var f, obj = {
    cleaned: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uncleaned: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.AutocleanonceAutocleanFailedpays}
 */
proto.cln.AutocleanonceAutocleanFailedpays.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.AutocleanonceAutocleanFailedpays;
  return proto.cln.AutocleanonceAutocleanFailedpays.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.AutocleanonceAutocleanFailedpays} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.AutocleanonceAutocleanFailedpays}
 */
proto.cln.AutocleanonceAutocleanFailedpays.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCleaned(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUncleaned(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.AutocleanonceAutocleanFailedpays.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.AutocleanonceAutocleanFailedpays.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.AutocleanonceAutocleanFailedpays} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleanonceAutocleanFailedpays.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCleaned();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getUncleaned();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 cleaned = 1;
 * @return {number}
 */
proto.cln.AutocleanonceAutocleanFailedpays.prototype.getCleaned = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.AutocleanonceAutocleanFailedpays} returns this
 */
proto.cln.AutocleanonceAutocleanFailedpays.prototype.setCleaned = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 uncleaned = 2;
 * @return {number}
 */
proto.cln.AutocleanonceAutocleanFailedpays.prototype.getUncleaned = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.AutocleanonceAutocleanFailedpays} returns this
 */
proto.cln.AutocleanonceAutocleanFailedpays.prototype.setUncleaned = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.AutocleanonceAutocleanPaidinvoices.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.AutocleanonceAutocleanPaidinvoices.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.AutocleanonceAutocleanPaidinvoices} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleanonceAutocleanPaidinvoices.toObject = function(includeInstance, msg) {
  var f, obj = {
    cleaned: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uncleaned: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.AutocleanonceAutocleanPaidinvoices}
 */
proto.cln.AutocleanonceAutocleanPaidinvoices.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.AutocleanonceAutocleanPaidinvoices;
  return proto.cln.AutocleanonceAutocleanPaidinvoices.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.AutocleanonceAutocleanPaidinvoices} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.AutocleanonceAutocleanPaidinvoices}
 */
proto.cln.AutocleanonceAutocleanPaidinvoices.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCleaned(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUncleaned(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.AutocleanonceAutocleanPaidinvoices.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.AutocleanonceAutocleanPaidinvoices.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.AutocleanonceAutocleanPaidinvoices} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleanonceAutocleanPaidinvoices.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCleaned();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getUncleaned();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 cleaned = 1;
 * @return {number}
 */
proto.cln.AutocleanonceAutocleanPaidinvoices.prototype.getCleaned = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.AutocleanonceAutocleanPaidinvoices} returns this
 */
proto.cln.AutocleanonceAutocleanPaidinvoices.prototype.setCleaned = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 uncleaned = 2;
 * @return {number}
 */
proto.cln.AutocleanonceAutocleanPaidinvoices.prototype.getUncleaned = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.AutocleanonceAutocleanPaidinvoices} returns this
 */
proto.cln.AutocleanonceAutocleanPaidinvoices.prototype.setUncleaned = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.AutocleanonceAutocleanExpiredinvoices.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.AutocleanonceAutocleanExpiredinvoices.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.AutocleanonceAutocleanExpiredinvoices} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleanonceAutocleanExpiredinvoices.toObject = function(includeInstance, msg) {
  var f, obj = {
    cleaned: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uncleaned: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.AutocleanonceAutocleanExpiredinvoices}
 */
proto.cln.AutocleanonceAutocleanExpiredinvoices.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.AutocleanonceAutocleanExpiredinvoices;
  return proto.cln.AutocleanonceAutocleanExpiredinvoices.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.AutocleanonceAutocleanExpiredinvoices} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.AutocleanonceAutocleanExpiredinvoices}
 */
proto.cln.AutocleanonceAutocleanExpiredinvoices.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCleaned(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUncleaned(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.AutocleanonceAutocleanExpiredinvoices.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.AutocleanonceAutocleanExpiredinvoices.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.AutocleanonceAutocleanExpiredinvoices} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleanonceAutocleanExpiredinvoices.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCleaned();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getUncleaned();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 cleaned = 1;
 * @return {number}
 */
proto.cln.AutocleanonceAutocleanExpiredinvoices.prototype.getCleaned = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.AutocleanonceAutocleanExpiredinvoices} returns this
 */
proto.cln.AutocleanonceAutocleanExpiredinvoices.prototype.setCleaned = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 uncleaned = 2;
 * @return {number}
 */
proto.cln.AutocleanonceAutocleanExpiredinvoices.prototype.getUncleaned = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.AutocleanonceAutocleanExpiredinvoices} returns this
 */
proto.cln.AutocleanonceAutocleanExpiredinvoices.prototype.setUncleaned = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.AutocleanstatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.AutocleanstatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.AutocleanstatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleanstatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    subsystem: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.AutocleanstatusRequest}
 */
proto.cln.AutocleanstatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.AutocleanstatusRequest;
  return proto.cln.AutocleanstatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.AutocleanstatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.AutocleanstatusRequest}
 */
proto.cln.AutocleanstatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.AutocleanSubsystem} */ (reader.readEnum());
      msg.setSubsystem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.AutocleanstatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.AutocleanstatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.AutocleanstatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleanstatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.cln.AutocleanSubsystem} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional AutocleanSubsystem subsystem = 1;
 * @return {!proto.cln.AutocleanSubsystem}
 */
proto.cln.AutocleanstatusRequest.prototype.getSubsystem = function() {
  return /** @type {!proto.cln.AutocleanSubsystem} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.AutocleanSubsystem} value
 * @return {!proto.cln.AutocleanstatusRequest} returns this
 */
proto.cln.AutocleanstatusRequest.prototype.setSubsystem = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.AutocleanstatusRequest} returns this
 */
proto.cln.AutocleanstatusRequest.prototype.clearSubsystem = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.AutocleanstatusRequest.prototype.hasSubsystem = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.AutocleanstatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.AutocleanstatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.AutocleanstatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleanstatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    autoclean: (f = msg.getAutoclean()) && proto.cln.AutocleanstatusAutoclean.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.AutocleanstatusResponse}
 */
proto.cln.AutocleanstatusResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.AutocleanstatusResponse;
  return proto.cln.AutocleanstatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.AutocleanstatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.AutocleanstatusResponse}
 */
proto.cln.AutocleanstatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.AutocleanstatusAutoclean;
      reader.readMessage(value,proto.cln.AutocleanstatusAutoclean.deserializeBinaryFromReader);
      msg.setAutoclean(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.AutocleanstatusResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.AutocleanstatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.AutocleanstatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleanstatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAutoclean();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cln.AutocleanstatusAutoclean.serializeBinaryToWriter
    );
  }
};


/**
 * optional AutocleanstatusAutoclean autoclean = 1;
 * @return {?proto.cln.AutocleanstatusAutoclean}
 */
proto.cln.AutocleanstatusResponse.prototype.getAutoclean = function() {
  return /** @type{?proto.cln.AutocleanstatusAutoclean} */ (
    jspb.Message.getWrapperField(this, proto.cln.AutocleanstatusAutoclean, 1));
};


/**
 * @param {?proto.cln.AutocleanstatusAutoclean|undefined} value
 * @return {!proto.cln.AutocleanstatusResponse} returns this
*/
proto.cln.AutocleanstatusResponse.prototype.setAutoclean = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.AutocleanstatusResponse} returns this
 */
proto.cln.AutocleanstatusResponse.prototype.clearAutoclean = function() {
  return this.setAutoclean(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.AutocleanstatusResponse.prototype.hasAutoclean = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.AutocleanstatusAutoclean.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.AutocleanstatusAutoclean.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.AutocleanstatusAutoclean} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleanstatusAutoclean.toObject = function(includeInstance, msg) {
  var f, obj = {
    succeededforwards: (f = msg.getSucceededforwards()) && proto.cln.AutocleanstatusAutocleanSucceededforwards.toObject(includeInstance, f),
    failedforwards: (f = msg.getFailedforwards()) && proto.cln.AutocleanstatusAutocleanFailedforwards.toObject(includeInstance, f),
    succeededpays: (f = msg.getSucceededpays()) && proto.cln.AutocleanstatusAutocleanSucceededpays.toObject(includeInstance, f),
    failedpays: (f = msg.getFailedpays()) && proto.cln.AutocleanstatusAutocleanFailedpays.toObject(includeInstance, f),
    paidinvoices: (f = msg.getPaidinvoices()) && proto.cln.AutocleanstatusAutocleanPaidinvoices.toObject(includeInstance, f),
    expiredinvoices: (f = msg.getExpiredinvoices()) && proto.cln.AutocleanstatusAutocleanExpiredinvoices.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.AutocleanstatusAutoclean}
 */
proto.cln.AutocleanstatusAutoclean.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.AutocleanstatusAutoclean;
  return proto.cln.AutocleanstatusAutoclean.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.AutocleanstatusAutoclean} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.AutocleanstatusAutoclean}
 */
proto.cln.AutocleanstatusAutoclean.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.AutocleanstatusAutocleanSucceededforwards;
      reader.readMessage(value,proto.cln.AutocleanstatusAutocleanSucceededforwards.deserializeBinaryFromReader);
      msg.setSucceededforwards(value);
      break;
    case 2:
      var value = new proto.cln.AutocleanstatusAutocleanFailedforwards;
      reader.readMessage(value,proto.cln.AutocleanstatusAutocleanFailedforwards.deserializeBinaryFromReader);
      msg.setFailedforwards(value);
      break;
    case 3:
      var value = new proto.cln.AutocleanstatusAutocleanSucceededpays;
      reader.readMessage(value,proto.cln.AutocleanstatusAutocleanSucceededpays.deserializeBinaryFromReader);
      msg.setSucceededpays(value);
      break;
    case 4:
      var value = new proto.cln.AutocleanstatusAutocleanFailedpays;
      reader.readMessage(value,proto.cln.AutocleanstatusAutocleanFailedpays.deserializeBinaryFromReader);
      msg.setFailedpays(value);
      break;
    case 5:
      var value = new proto.cln.AutocleanstatusAutocleanPaidinvoices;
      reader.readMessage(value,proto.cln.AutocleanstatusAutocleanPaidinvoices.deserializeBinaryFromReader);
      msg.setPaidinvoices(value);
      break;
    case 6:
      var value = new proto.cln.AutocleanstatusAutocleanExpiredinvoices;
      reader.readMessage(value,proto.cln.AutocleanstatusAutocleanExpiredinvoices.deserializeBinaryFromReader);
      msg.setExpiredinvoices(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.AutocleanstatusAutoclean.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.AutocleanstatusAutoclean.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.AutocleanstatusAutoclean} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleanstatusAutoclean.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSucceededforwards();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cln.AutocleanstatusAutocleanSucceededforwards.serializeBinaryToWriter
    );
  }
  f = message.getFailedforwards();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cln.AutocleanstatusAutocleanFailedforwards.serializeBinaryToWriter
    );
  }
  f = message.getSucceededpays();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cln.AutocleanstatusAutocleanSucceededpays.serializeBinaryToWriter
    );
  }
  f = message.getFailedpays();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.cln.AutocleanstatusAutocleanFailedpays.serializeBinaryToWriter
    );
  }
  f = message.getPaidinvoices();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.cln.AutocleanstatusAutocleanPaidinvoices.serializeBinaryToWriter
    );
  }
  f = message.getExpiredinvoices();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.cln.AutocleanstatusAutocleanExpiredinvoices.serializeBinaryToWriter
    );
  }
};


/**
 * optional AutocleanstatusAutocleanSucceededforwards succeededforwards = 1;
 * @return {?proto.cln.AutocleanstatusAutocleanSucceededforwards}
 */
proto.cln.AutocleanstatusAutoclean.prototype.getSucceededforwards = function() {
  return /** @type{?proto.cln.AutocleanstatusAutocleanSucceededforwards} */ (
    jspb.Message.getWrapperField(this, proto.cln.AutocleanstatusAutocleanSucceededforwards, 1));
};


/**
 * @param {?proto.cln.AutocleanstatusAutocleanSucceededforwards|undefined} value
 * @return {!proto.cln.AutocleanstatusAutoclean} returns this
*/
proto.cln.AutocleanstatusAutoclean.prototype.setSucceededforwards = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.AutocleanstatusAutoclean} returns this
 */
proto.cln.AutocleanstatusAutoclean.prototype.clearSucceededforwards = function() {
  return this.setSucceededforwards(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.AutocleanstatusAutoclean.prototype.hasSucceededforwards = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional AutocleanstatusAutocleanFailedforwards failedforwards = 2;
 * @return {?proto.cln.AutocleanstatusAutocleanFailedforwards}
 */
proto.cln.AutocleanstatusAutoclean.prototype.getFailedforwards = function() {
  return /** @type{?proto.cln.AutocleanstatusAutocleanFailedforwards} */ (
    jspb.Message.getWrapperField(this, proto.cln.AutocleanstatusAutocleanFailedforwards, 2));
};


/**
 * @param {?proto.cln.AutocleanstatusAutocleanFailedforwards|undefined} value
 * @return {!proto.cln.AutocleanstatusAutoclean} returns this
*/
proto.cln.AutocleanstatusAutoclean.prototype.setFailedforwards = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.AutocleanstatusAutoclean} returns this
 */
proto.cln.AutocleanstatusAutoclean.prototype.clearFailedforwards = function() {
  return this.setFailedforwards(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.AutocleanstatusAutoclean.prototype.hasFailedforwards = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional AutocleanstatusAutocleanSucceededpays succeededpays = 3;
 * @return {?proto.cln.AutocleanstatusAutocleanSucceededpays}
 */
proto.cln.AutocleanstatusAutoclean.prototype.getSucceededpays = function() {
  return /** @type{?proto.cln.AutocleanstatusAutocleanSucceededpays} */ (
    jspb.Message.getWrapperField(this, proto.cln.AutocleanstatusAutocleanSucceededpays, 3));
};


/**
 * @param {?proto.cln.AutocleanstatusAutocleanSucceededpays|undefined} value
 * @return {!proto.cln.AutocleanstatusAutoclean} returns this
*/
proto.cln.AutocleanstatusAutoclean.prototype.setSucceededpays = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.AutocleanstatusAutoclean} returns this
 */
proto.cln.AutocleanstatusAutoclean.prototype.clearSucceededpays = function() {
  return this.setSucceededpays(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.AutocleanstatusAutoclean.prototype.hasSucceededpays = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional AutocleanstatusAutocleanFailedpays failedpays = 4;
 * @return {?proto.cln.AutocleanstatusAutocleanFailedpays}
 */
proto.cln.AutocleanstatusAutoclean.prototype.getFailedpays = function() {
  return /** @type{?proto.cln.AutocleanstatusAutocleanFailedpays} */ (
    jspb.Message.getWrapperField(this, proto.cln.AutocleanstatusAutocleanFailedpays, 4));
};


/**
 * @param {?proto.cln.AutocleanstatusAutocleanFailedpays|undefined} value
 * @return {!proto.cln.AutocleanstatusAutoclean} returns this
*/
proto.cln.AutocleanstatusAutoclean.prototype.setFailedpays = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.AutocleanstatusAutoclean} returns this
 */
proto.cln.AutocleanstatusAutoclean.prototype.clearFailedpays = function() {
  return this.setFailedpays(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.AutocleanstatusAutoclean.prototype.hasFailedpays = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional AutocleanstatusAutocleanPaidinvoices paidinvoices = 5;
 * @return {?proto.cln.AutocleanstatusAutocleanPaidinvoices}
 */
proto.cln.AutocleanstatusAutoclean.prototype.getPaidinvoices = function() {
  return /** @type{?proto.cln.AutocleanstatusAutocleanPaidinvoices} */ (
    jspb.Message.getWrapperField(this, proto.cln.AutocleanstatusAutocleanPaidinvoices, 5));
};


/**
 * @param {?proto.cln.AutocleanstatusAutocleanPaidinvoices|undefined} value
 * @return {!proto.cln.AutocleanstatusAutoclean} returns this
*/
proto.cln.AutocleanstatusAutoclean.prototype.setPaidinvoices = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.AutocleanstatusAutoclean} returns this
 */
proto.cln.AutocleanstatusAutoclean.prototype.clearPaidinvoices = function() {
  return this.setPaidinvoices(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.AutocleanstatusAutoclean.prototype.hasPaidinvoices = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional AutocleanstatusAutocleanExpiredinvoices expiredinvoices = 6;
 * @return {?proto.cln.AutocleanstatusAutocleanExpiredinvoices}
 */
proto.cln.AutocleanstatusAutoclean.prototype.getExpiredinvoices = function() {
  return /** @type{?proto.cln.AutocleanstatusAutocleanExpiredinvoices} */ (
    jspb.Message.getWrapperField(this, proto.cln.AutocleanstatusAutocleanExpiredinvoices, 6));
};


/**
 * @param {?proto.cln.AutocleanstatusAutocleanExpiredinvoices|undefined} value
 * @return {!proto.cln.AutocleanstatusAutoclean} returns this
*/
proto.cln.AutocleanstatusAutoclean.prototype.setExpiredinvoices = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.AutocleanstatusAutoclean} returns this
 */
proto.cln.AutocleanstatusAutoclean.prototype.clearExpiredinvoices = function() {
  return this.setExpiredinvoices(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.AutocleanstatusAutoclean.prototype.hasExpiredinvoices = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.AutocleanstatusAutocleanSucceededforwards.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.AutocleanstatusAutocleanSucceededforwards.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.AutocleanstatusAutocleanSucceededforwards} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleanstatusAutocleanSucceededforwards.toObject = function(includeInstance, msg) {
  var f, obj = {
    enabled: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    cleaned: jspb.Message.getFieldWithDefault(msg, 2, 0),
    age: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.AutocleanstatusAutocleanSucceededforwards}
 */
proto.cln.AutocleanstatusAutocleanSucceededforwards.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.AutocleanstatusAutocleanSucceededforwards;
  return proto.cln.AutocleanstatusAutocleanSucceededforwards.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.AutocleanstatusAutocleanSucceededforwards} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.AutocleanstatusAutocleanSucceededforwards}
 */
proto.cln.AutocleanstatusAutocleanSucceededforwards.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCleaned(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAge(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.AutocleanstatusAutocleanSucceededforwards.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.AutocleanstatusAutocleanSucceededforwards.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.AutocleanstatusAutocleanSucceededforwards} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleanstatusAutocleanSucceededforwards.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnabled();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getCleaned();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional bool enabled = 1;
 * @return {boolean}
 */
proto.cln.AutocleanstatusAutocleanSucceededforwards.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.AutocleanstatusAutocleanSucceededforwards} returns this
 */
proto.cln.AutocleanstatusAutocleanSucceededforwards.prototype.setEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional uint64 cleaned = 2;
 * @return {number}
 */
proto.cln.AutocleanstatusAutocleanSucceededforwards.prototype.getCleaned = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.AutocleanstatusAutocleanSucceededforwards} returns this
 */
proto.cln.AutocleanstatusAutocleanSucceededforwards.prototype.setCleaned = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 age = 3;
 * @return {number}
 */
proto.cln.AutocleanstatusAutocleanSucceededforwards.prototype.getAge = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.AutocleanstatusAutocleanSucceededforwards} returns this
 */
proto.cln.AutocleanstatusAutocleanSucceededforwards.prototype.setAge = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.AutocleanstatusAutocleanSucceededforwards} returns this
 */
proto.cln.AutocleanstatusAutocleanSucceededforwards.prototype.clearAge = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.AutocleanstatusAutocleanSucceededforwards.prototype.hasAge = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.AutocleanstatusAutocleanFailedforwards.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.AutocleanstatusAutocleanFailedforwards.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.AutocleanstatusAutocleanFailedforwards} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleanstatusAutocleanFailedforwards.toObject = function(includeInstance, msg) {
  var f, obj = {
    enabled: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    cleaned: jspb.Message.getFieldWithDefault(msg, 2, 0),
    age: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.AutocleanstatusAutocleanFailedforwards}
 */
proto.cln.AutocleanstatusAutocleanFailedforwards.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.AutocleanstatusAutocleanFailedforwards;
  return proto.cln.AutocleanstatusAutocleanFailedforwards.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.AutocleanstatusAutocleanFailedforwards} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.AutocleanstatusAutocleanFailedforwards}
 */
proto.cln.AutocleanstatusAutocleanFailedforwards.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCleaned(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAge(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.AutocleanstatusAutocleanFailedforwards.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.AutocleanstatusAutocleanFailedforwards.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.AutocleanstatusAutocleanFailedforwards} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleanstatusAutocleanFailedforwards.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnabled();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getCleaned();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional bool enabled = 1;
 * @return {boolean}
 */
proto.cln.AutocleanstatusAutocleanFailedforwards.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.AutocleanstatusAutocleanFailedforwards} returns this
 */
proto.cln.AutocleanstatusAutocleanFailedforwards.prototype.setEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional uint64 cleaned = 2;
 * @return {number}
 */
proto.cln.AutocleanstatusAutocleanFailedforwards.prototype.getCleaned = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.AutocleanstatusAutocleanFailedforwards} returns this
 */
proto.cln.AutocleanstatusAutocleanFailedforwards.prototype.setCleaned = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 age = 3;
 * @return {number}
 */
proto.cln.AutocleanstatusAutocleanFailedforwards.prototype.getAge = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.AutocleanstatusAutocleanFailedforwards} returns this
 */
proto.cln.AutocleanstatusAutocleanFailedforwards.prototype.setAge = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.AutocleanstatusAutocleanFailedforwards} returns this
 */
proto.cln.AutocleanstatusAutocleanFailedforwards.prototype.clearAge = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.AutocleanstatusAutocleanFailedforwards.prototype.hasAge = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.AutocleanstatusAutocleanSucceededpays.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.AutocleanstatusAutocleanSucceededpays.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.AutocleanstatusAutocleanSucceededpays} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleanstatusAutocleanSucceededpays.toObject = function(includeInstance, msg) {
  var f, obj = {
    enabled: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    cleaned: jspb.Message.getFieldWithDefault(msg, 2, 0),
    age: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.AutocleanstatusAutocleanSucceededpays}
 */
proto.cln.AutocleanstatusAutocleanSucceededpays.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.AutocleanstatusAutocleanSucceededpays;
  return proto.cln.AutocleanstatusAutocleanSucceededpays.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.AutocleanstatusAutocleanSucceededpays} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.AutocleanstatusAutocleanSucceededpays}
 */
proto.cln.AutocleanstatusAutocleanSucceededpays.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCleaned(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAge(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.AutocleanstatusAutocleanSucceededpays.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.AutocleanstatusAutocleanSucceededpays.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.AutocleanstatusAutocleanSucceededpays} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleanstatusAutocleanSucceededpays.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnabled();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getCleaned();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional bool enabled = 1;
 * @return {boolean}
 */
proto.cln.AutocleanstatusAutocleanSucceededpays.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.AutocleanstatusAutocleanSucceededpays} returns this
 */
proto.cln.AutocleanstatusAutocleanSucceededpays.prototype.setEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional uint64 cleaned = 2;
 * @return {number}
 */
proto.cln.AutocleanstatusAutocleanSucceededpays.prototype.getCleaned = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.AutocleanstatusAutocleanSucceededpays} returns this
 */
proto.cln.AutocleanstatusAutocleanSucceededpays.prototype.setCleaned = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 age = 3;
 * @return {number}
 */
proto.cln.AutocleanstatusAutocleanSucceededpays.prototype.getAge = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.AutocleanstatusAutocleanSucceededpays} returns this
 */
proto.cln.AutocleanstatusAutocleanSucceededpays.prototype.setAge = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.AutocleanstatusAutocleanSucceededpays} returns this
 */
proto.cln.AutocleanstatusAutocleanSucceededpays.prototype.clearAge = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.AutocleanstatusAutocleanSucceededpays.prototype.hasAge = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.AutocleanstatusAutocleanFailedpays.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.AutocleanstatusAutocleanFailedpays.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.AutocleanstatusAutocleanFailedpays} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleanstatusAutocleanFailedpays.toObject = function(includeInstance, msg) {
  var f, obj = {
    enabled: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    cleaned: jspb.Message.getFieldWithDefault(msg, 2, 0),
    age: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.AutocleanstatusAutocleanFailedpays}
 */
proto.cln.AutocleanstatusAutocleanFailedpays.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.AutocleanstatusAutocleanFailedpays;
  return proto.cln.AutocleanstatusAutocleanFailedpays.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.AutocleanstatusAutocleanFailedpays} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.AutocleanstatusAutocleanFailedpays}
 */
proto.cln.AutocleanstatusAutocleanFailedpays.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCleaned(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAge(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.AutocleanstatusAutocleanFailedpays.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.AutocleanstatusAutocleanFailedpays.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.AutocleanstatusAutocleanFailedpays} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleanstatusAutocleanFailedpays.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnabled();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getCleaned();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional bool enabled = 1;
 * @return {boolean}
 */
proto.cln.AutocleanstatusAutocleanFailedpays.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.AutocleanstatusAutocleanFailedpays} returns this
 */
proto.cln.AutocleanstatusAutocleanFailedpays.prototype.setEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional uint64 cleaned = 2;
 * @return {number}
 */
proto.cln.AutocleanstatusAutocleanFailedpays.prototype.getCleaned = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.AutocleanstatusAutocleanFailedpays} returns this
 */
proto.cln.AutocleanstatusAutocleanFailedpays.prototype.setCleaned = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 age = 3;
 * @return {number}
 */
proto.cln.AutocleanstatusAutocleanFailedpays.prototype.getAge = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.AutocleanstatusAutocleanFailedpays} returns this
 */
proto.cln.AutocleanstatusAutocleanFailedpays.prototype.setAge = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.AutocleanstatusAutocleanFailedpays} returns this
 */
proto.cln.AutocleanstatusAutocleanFailedpays.prototype.clearAge = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.AutocleanstatusAutocleanFailedpays.prototype.hasAge = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.AutocleanstatusAutocleanPaidinvoices.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.AutocleanstatusAutocleanPaidinvoices.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.AutocleanstatusAutocleanPaidinvoices} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleanstatusAutocleanPaidinvoices.toObject = function(includeInstance, msg) {
  var f, obj = {
    enabled: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    cleaned: jspb.Message.getFieldWithDefault(msg, 2, 0),
    age: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.AutocleanstatusAutocleanPaidinvoices}
 */
proto.cln.AutocleanstatusAutocleanPaidinvoices.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.AutocleanstatusAutocleanPaidinvoices;
  return proto.cln.AutocleanstatusAutocleanPaidinvoices.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.AutocleanstatusAutocleanPaidinvoices} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.AutocleanstatusAutocleanPaidinvoices}
 */
proto.cln.AutocleanstatusAutocleanPaidinvoices.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCleaned(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAge(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.AutocleanstatusAutocleanPaidinvoices.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.AutocleanstatusAutocleanPaidinvoices.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.AutocleanstatusAutocleanPaidinvoices} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleanstatusAutocleanPaidinvoices.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnabled();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getCleaned();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional bool enabled = 1;
 * @return {boolean}
 */
proto.cln.AutocleanstatusAutocleanPaidinvoices.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.AutocleanstatusAutocleanPaidinvoices} returns this
 */
proto.cln.AutocleanstatusAutocleanPaidinvoices.prototype.setEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional uint64 cleaned = 2;
 * @return {number}
 */
proto.cln.AutocleanstatusAutocleanPaidinvoices.prototype.getCleaned = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.AutocleanstatusAutocleanPaidinvoices} returns this
 */
proto.cln.AutocleanstatusAutocleanPaidinvoices.prototype.setCleaned = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 age = 3;
 * @return {number}
 */
proto.cln.AutocleanstatusAutocleanPaidinvoices.prototype.getAge = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.AutocleanstatusAutocleanPaidinvoices} returns this
 */
proto.cln.AutocleanstatusAutocleanPaidinvoices.prototype.setAge = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.AutocleanstatusAutocleanPaidinvoices} returns this
 */
proto.cln.AutocleanstatusAutocleanPaidinvoices.prototype.clearAge = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.AutocleanstatusAutocleanPaidinvoices.prototype.hasAge = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.AutocleanstatusAutocleanExpiredinvoices.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.AutocleanstatusAutocleanExpiredinvoices.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.AutocleanstatusAutocleanExpiredinvoices} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleanstatusAutocleanExpiredinvoices.toObject = function(includeInstance, msg) {
  var f, obj = {
    enabled: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    cleaned: jspb.Message.getFieldWithDefault(msg, 2, 0),
    age: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.AutocleanstatusAutocleanExpiredinvoices}
 */
proto.cln.AutocleanstatusAutocleanExpiredinvoices.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.AutocleanstatusAutocleanExpiredinvoices;
  return proto.cln.AutocleanstatusAutocleanExpiredinvoices.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.AutocleanstatusAutocleanExpiredinvoices} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.AutocleanstatusAutocleanExpiredinvoices}
 */
proto.cln.AutocleanstatusAutocleanExpiredinvoices.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCleaned(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAge(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.AutocleanstatusAutocleanExpiredinvoices.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.AutocleanstatusAutocleanExpiredinvoices.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.AutocleanstatusAutocleanExpiredinvoices} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleanstatusAutocleanExpiredinvoices.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnabled();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getCleaned();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional bool enabled = 1;
 * @return {boolean}
 */
proto.cln.AutocleanstatusAutocleanExpiredinvoices.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.AutocleanstatusAutocleanExpiredinvoices} returns this
 */
proto.cln.AutocleanstatusAutocleanExpiredinvoices.prototype.setEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional uint64 cleaned = 2;
 * @return {number}
 */
proto.cln.AutocleanstatusAutocleanExpiredinvoices.prototype.getCleaned = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.AutocleanstatusAutocleanExpiredinvoices} returns this
 */
proto.cln.AutocleanstatusAutocleanExpiredinvoices.prototype.setCleaned = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 age = 3;
 * @return {number}
 */
proto.cln.AutocleanstatusAutocleanExpiredinvoices.prototype.getAge = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.AutocleanstatusAutocleanExpiredinvoices} returns this
 */
proto.cln.AutocleanstatusAutocleanExpiredinvoices.prototype.setAge = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.AutocleanstatusAutocleanExpiredinvoices} returns this
 */
proto.cln.AutocleanstatusAutocleanExpiredinvoices.prototype.clearAge = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.AutocleanstatusAutocleanExpiredinvoices.prototype.hasAge = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.CheckmessageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.CheckmessageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.CheckmessageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CheckmessageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, ""),
    zbase: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pubkey: msg.getPubkey_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.CheckmessageRequest}
 */
proto.cln.CheckmessageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.CheckmessageRequest;
  return proto.cln.CheckmessageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.CheckmessageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.CheckmessageRequest}
 */
proto.cln.CheckmessageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setZbase(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPubkey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.CheckmessageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.CheckmessageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.CheckmessageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CheckmessageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getZbase();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.cln.CheckmessageRequest.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.CheckmessageRequest} returns this
 */
proto.cln.CheckmessageRequest.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string zbase = 2;
 * @return {string}
 */
proto.cln.CheckmessageRequest.prototype.getZbase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.CheckmessageRequest} returns this
 */
proto.cln.CheckmessageRequest.prototype.setZbase = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes pubkey = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.CheckmessageRequest.prototype.getPubkey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes pubkey = 3;
 * This is a type-conversion wrapper around `getPubkey()`
 * @return {string}
 */
proto.cln.CheckmessageRequest.prototype.getPubkey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPubkey()));
};


/**
 * optional bytes pubkey = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPubkey()`
 * @return {!Uint8Array}
 */
proto.cln.CheckmessageRequest.prototype.getPubkey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPubkey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.CheckmessageRequest} returns this
 */
proto.cln.CheckmessageRequest.prototype.setPubkey = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CheckmessageRequest} returns this
 */
proto.cln.CheckmessageRequest.prototype.clearPubkey = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CheckmessageRequest.prototype.hasPubkey = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.CheckmessageResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.CheckmessageResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.CheckmessageResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CheckmessageResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    verified: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    pubkey: msg.getPubkey_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.CheckmessageResponse}
 */
proto.cln.CheckmessageResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.CheckmessageResponse;
  return proto.cln.CheckmessageResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.CheckmessageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.CheckmessageResponse}
 */
proto.cln.CheckmessageResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVerified(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPubkey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.CheckmessageResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.CheckmessageResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.CheckmessageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CheckmessageResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVerified();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getPubkey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional bool verified = 1;
 * @return {boolean}
 */
proto.cln.CheckmessageResponse.prototype.getVerified = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.CheckmessageResponse} returns this
 */
proto.cln.CheckmessageResponse.prototype.setVerified = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bytes pubkey = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.CheckmessageResponse.prototype.getPubkey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes pubkey = 2;
 * This is a type-conversion wrapper around `getPubkey()`
 * @return {string}
 */
proto.cln.CheckmessageResponse.prototype.getPubkey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPubkey()));
};


/**
 * optional bytes pubkey = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPubkey()`
 * @return {!Uint8Array}
 */
proto.cln.CheckmessageResponse.prototype.getPubkey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPubkey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.CheckmessageResponse} returns this
 */
proto.cln.CheckmessageResponse.prototype.setPubkey = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.CloseRequest.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.CloseRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.CloseRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.CloseRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CloseRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    unilateraltimeout: jspb.Message.getFieldWithDefault(msg, 2, 0),
    destination: jspb.Message.getFieldWithDefault(msg, 3, ""),
    feeNegotiationStep: jspb.Message.getFieldWithDefault(msg, 4, ""),
    wrongFunding: (f = msg.getWrongFunding()) && cln_primitives_pb.Outpoint.toObject(includeInstance, f),
    forceLeaseClosed: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    feerangeList: jspb.Message.toObjectList(msg.getFeerangeList(),
    cln_primitives_pb.Feerate.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.CloseRequest}
 */
proto.cln.CloseRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.CloseRequest;
  return proto.cln.CloseRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.CloseRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.CloseRequest}
 */
proto.cln.CloseRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUnilateraltimeout(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestination(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeeNegotiationStep(value);
      break;
    case 5:
      var value = new cln_primitives_pb.Outpoint;
      reader.readMessage(value,cln_primitives_pb.Outpoint.deserializeBinaryFromReader);
      msg.setWrongFunding(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForceLeaseClosed(value);
      break;
    case 7:
      var value = new cln_primitives_pb.Feerate;
      reader.readMessage(value,cln_primitives_pb.Feerate.deserializeBinaryFromReader);
      msg.addFeerange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.CloseRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.CloseRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.CloseRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CloseRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getWrongFunding();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cln_primitives_pb.Outpoint.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getFeerangeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      cln_primitives_pb.Feerate.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.cln.CloseRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.CloseRequest} returns this
 */
proto.cln.CloseRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 unilateraltimeout = 2;
 * @return {number}
 */
proto.cln.CloseRequest.prototype.getUnilateraltimeout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.CloseRequest} returns this
 */
proto.cln.CloseRequest.prototype.setUnilateraltimeout = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CloseRequest} returns this
 */
proto.cln.CloseRequest.prototype.clearUnilateraltimeout = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CloseRequest.prototype.hasUnilateraltimeout = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string destination = 3;
 * @return {string}
 */
proto.cln.CloseRequest.prototype.getDestination = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.CloseRequest} returns this
 */
proto.cln.CloseRequest.prototype.setDestination = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CloseRequest} returns this
 */
proto.cln.CloseRequest.prototype.clearDestination = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CloseRequest.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string fee_negotiation_step = 4;
 * @return {string}
 */
proto.cln.CloseRequest.prototype.getFeeNegotiationStep = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.CloseRequest} returns this
 */
proto.cln.CloseRequest.prototype.setFeeNegotiationStep = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CloseRequest} returns this
 */
proto.cln.CloseRequest.prototype.clearFeeNegotiationStep = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CloseRequest.prototype.hasFeeNegotiationStep = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Outpoint wrong_funding = 5;
 * @return {?proto.cln.Outpoint}
 */
proto.cln.CloseRequest.prototype.getWrongFunding = function() {
  return /** @type{?proto.cln.Outpoint} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Outpoint, 5));
};


/**
 * @param {?proto.cln.Outpoint|undefined} value
 * @return {!proto.cln.CloseRequest} returns this
*/
proto.cln.CloseRequest.prototype.setWrongFunding = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.CloseRequest} returns this
 */
proto.cln.CloseRequest.prototype.clearWrongFunding = function() {
  return this.setWrongFunding(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CloseRequest.prototype.hasWrongFunding = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool force_lease_closed = 6;
 * @return {boolean}
 */
proto.cln.CloseRequest.prototype.getForceLeaseClosed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.CloseRequest} returns this
 */
proto.cln.CloseRequest.prototype.setForceLeaseClosed = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CloseRequest} returns this
 */
proto.cln.CloseRequest.prototype.clearForceLeaseClosed = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CloseRequest.prototype.hasForceLeaseClosed = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated Feerate feerange = 7;
 * @return {!Array<!proto.cln.Feerate>}
 */
proto.cln.CloseRequest.prototype.getFeerangeList = function() {
  return /** @type{!Array<!proto.cln.Feerate>} */ (
    jspb.Message.getRepeatedWrapperField(this, cln_primitives_pb.Feerate, 7));
};


/**
 * @param {!Array<!proto.cln.Feerate>} value
 * @return {!proto.cln.CloseRequest} returns this
*/
proto.cln.CloseRequest.prototype.setFeerangeList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.cln.Feerate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.Feerate}
 */
proto.cln.CloseRequest.prototype.addFeerange = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.cln.Feerate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.CloseRequest} returns this
 */
proto.cln.CloseRequest.prototype.clearFeerangeList = function() {
  return this.setFeerangeList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.CloseResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.CloseResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.CloseResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CloseResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    tx: msg.getTx_asB64(),
    txid: msg.getTxid_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.CloseResponse}
 */
proto.cln.CloseResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.CloseResponse;
  return proto.cln.CloseResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.CloseResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.CloseResponse}
 */
proto.cln.CloseResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.CloseResponse.CloseType} */ (reader.readEnum());
      msg.setItemType(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTx(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.CloseResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.CloseResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.CloseResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CloseResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.CloseResponse.CloseType = {
  MUTUAL: 0,
  UNILATERAL: 1,
  UNOPENED: 2
};

/**
 * optional CloseType item_type = 1;
 * @return {!proto.cln.CloseResponse.CloseType}
 */
proto.cln.CloseResponse.prototype.getItemType = function() {
  return /** @type {!proto.cln.CloseResponse.CloseType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.CloseResponse.CloseType} value
 * @return {!proto.cln.CloseResponse} returns this
 */
proto.cln.CloseResponse.prototype.setItemType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional bytes tx = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.CloseResponse.prototype.getTx = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes tx = 2;
 * This is a type-conversion wrapper around `getTx()`
 * @return {string}
 */
proto.cln.CloseResponse.prototype.getTx_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTx()));
};


/**
 * optional bytes tx = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTx()`
 * @return {!Uint8Array}
 */
proto.cln.CloseResponse.prototype.getTx_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTx()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.CloseResponse} returns this
 */
proto.cln.CloseResponse.prototype.setTx = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CloseResponse} returns this
 */
proto.cln.CloseResponse.prototype.clearTx = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CloseResponse.prototype.hasTx = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes txid = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.CloseResponse.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes txid = 3;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.CloseResponse.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.CloseResponse.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.CloseResponse} returns this
 */
proto.cln.CloseResponse.prototype.setTxid = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CloseResponse} returns this
 */
proto.cln.CloseResponse.prototype.clearTxid = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CloseResponse.prototype.hasTxid = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ConnectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ConnectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ConnectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ConnectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    host: jspb.Message.getFieldWithDefault(msg, 2, ""),
    port: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ConnectRequest}
 */
proto.cln.ConnectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ConnectRequest;
  return proto.cln.ConnectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ConnectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ConnectRequest}
 */
proto.cln.ConnectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPort(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ConnectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ConnectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ConnectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ConnectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.cln.ConnectRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ConnectRequest} returns this
 */
proto.cln.ConnectRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string host = 2;
 * @return {string}
 */
proto.cln.ConnectRequest.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ConnectRequest} returns this
 */
proto.cln.ConnectRequest.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ConnectRequest} returns this
 */
proto.cln.ConnectRequest.prototype.clearHost = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ConnectRequest.prototype.hasHost = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 port = 3;
 * @return {number}
 */
proto.cln.ConnectRequest.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ConnectRequest} returns this
 */
proto.cln.ConnectRequest.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ConnectRequest} returns this
 */
proto.cln.ConnectRequest.prototype.clearPort = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ConnectRequest.prototype.hasPort = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ConnectResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ConnectResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ConnectResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ConnectResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64(),
    features: msg.getFeatures_asB64(),
    direction: jspb.Message.getFieldWithDefault(msg, 3, 0),
    address: (f = msg.getAddress()) && proto.cln.ConnectAddress.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ConnectResponse}
 */
proto.cln.ConnectResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ConnectResponse;
  return proto.cln.ConnectResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ConnectResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ConnectResponse}
 */
proto.cln.ConnectResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFeatures(value);
      break;
    case 3:
      var value = /** @type {!proto.cln.ConnectResponse.ConnectDirection} */ (reader.readEnum());
      msg.setDirection(value);
      break;
    case 4:
      var value = new proto.cln.ConnectAddress;
      reader.readMessage(value,proto.cln.ConnectAddress.deserializeBinaryFromReader);
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ConnectResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ConnectResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ConnectResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ConnectResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getFeatures_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getDirection();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getAddress();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.cln.ConnectAddress.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ConnectResponse.ConnectDirection = {
  IN: 0,
  OUT: 1
};

/**
 * optional bytes id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ConnectResponse.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes id = 1;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.cln.ConnectResponse.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.cln.ConnectResponse.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ConnectResponse} returns this
 */
proto.cln.ConnectResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes features = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ConnectResponse.prototype.getFeatures = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes features = 2;
 * This is a type-conversion wrapper around `getFeatures()`
 * @return {string}
 */
proto.cln.ConnectResponse.prototype.getFeatures_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFeatures()));
};


/**
 * optional bytes features = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFeatures()`
 * @return {!Uint8Array}
 */
proto.cln.ConnectResponse.prototype.getFeatures_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFeatures()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ConnectResponse} returns this
 */
proto.cln.ConnectResponse.prototype.setFeatures = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional ConnectDirection direction = 3;
 * @return {!proto.cln.ConnectResponse.ConnectDirection}
 */
proto.cln.ConnectResponse.prototype.getDirection = function() {
  return /** @type {!proto.cln.ConnectResponse.ConnectDirection} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.cln.ConnectResponse.ConnectDirection} value
 * @return {!proto.cln.ConnectResponse} returns this
 */
proto.cln.ConnectResponse.prototype.setDirection = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional ConnectAddress address = 4;
 * @return {?proto.cln.ConnectAddress}
 */
proto.cln.ConnectResponse.prototype.getAddress = function() {
  return /** @type{?proto.cln.ConnectAddress} */ (
    jspb.Message.getWrapperField(this, proto.cln.ConnectAddress, 4));
};


/**
 * @param {?proto.cln.ConnectAddress|undefined} value
 * @return {!proto.cln.ConnectResponse} returns this
*/
proto.cln.ConnectResponse.prototype.setAddress = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ConnectResponse} returns this
 */
proto.cln.ConnectResponse.prototype.clearAddress = function() {
  return this.setAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ConnectResponse.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ConnectAddress.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ConnectAddress.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ConnectAddress} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ConnectAddress.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    socket: jspb.Message.getFieldWithDefault(msg, 2, ""),
    address: jspb.Message.getFieldWithDefault(msg, 3, ""),
    port: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ConnectAddress}
 */
proto.cln.ConnectAddress.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ConnectAddress;
  return proto.cln.ConnectAddress.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ConnectAddress} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ConnectAddress}
 */
proto.cln.ConnectAddress.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.ConnectAddress.ConnectAddressType} */ (reader.readEnum());
      msg.setItemType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSocket(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPort(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ConnectAddress.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ConnectAddress.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ConnectAddress} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ConnectAddress.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ConnectAddress.ConnectAddressType = {
  LOCAL_SOCKET: 0,
  IPV4: 1,
  IPV6: 2,
  TORV2: 3,
  TORV3: 4
};

/**
 * optional ConnectAddressType item_type = 1;
 * @return {!proto.cln.ConnectAddress.ConnectAddressType}
 */
proto.cln.ConnectAddress.prototype.getItemType = function() {
  return /** @type {!proto.cln.ConnectAddress.ConnectAddressType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.ConnectAddress.ConnectAddressType} value
 * @return {!proto.cln.ConnectAddress} returns this
 */
proto.cln.ConnectAddress.prototype.setItemType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string socket = 2;
 * @return {string}
 */
proto.cln.ConnectAddress.prototype.getSocket = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ConnectAddress} returns this
 */
proto.cln.ConnectAddress.prototype.setSocket = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ConnectAddress} returns this
 */
proto.cln.ConnectAddress.prototype.clearSocket = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ConnectAddress.prototype.hasSocket = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string address = 3;
 * @return {string}
 */
proto.cln.ConnectAddress.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ConnectAddress} returns this
 */
proto.cln.ConnectAddress.prototype.setAddress = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ConnectAddress} returns this
 */
proto.cln.ConnectAddress.prototype.clearAddress = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ConnectAddress.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 port = 4;
 * @return {number}
 */
proto.cln.ConnectAddress.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ConnectAddress} returns this
 */
proto.cln.ConnectAddress.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ConnectAddress} returns this
 */
proto.cln.ConnectAddress.prototype.clearPort = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ConnectAddress.prototype.hasPort = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.CreateinvoiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.CreateinvoiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.CreateinvoiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CreateinvoiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    invstring: jspb.Message.getFieldWithDefault(msg, 1, ""),
    label: jspb.Message.getFieldWithDefault(msg, 2, ""),
    preimage: msg.getPreimage_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.CreateinvoiceRequest}
 */
proto.cln.CreateinvoiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.CreateinvoiceRequest;
  return proto.cln.CreateinvoiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.CreateinvoiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.CreateinvoiceRequest}
 */
proto.cln.CreateinvoiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvstring(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPreimage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.CreateinvoiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.CreateinvoiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.CreateinvoiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CreateinvoiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvstring();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPreimage_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional string invstring = 1;
 * @return {string}
 */
proto.cln.CreateinvoiceRequest.prototype.getInvstring = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.CreateinvoiceRequest} returns this
 */
proto.cln.CreateinvoiceRequest.prototype.setInvstring = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string label = 2;
 * @return {string}
 */
proto.cln.CreateinvoiceRequest.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.CreateinvoiceRequest} returns this
 */
proto.cln.CreateinvoiceRequest.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes preimage = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.CreateinvoiceRequest.prototype.getPreimage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes preimage = 3;
 * This is a type-conversion wrapper around `getPreimage()`
 * @return {string}
 */
proto.cln.CreateinvoiceRequest.prototype.getPreimage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPreimage()));
};


/**
 * optional bytes preimage = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPreimage()`
 * @return {!Uint8Array}
 */
proto.cln.CreateinvoiceRequest.prototype.getPreimage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPreimage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.CreateinvoiceRequest} returns this
 */
proto.cln.CreateinvoiceRequest.prototype.setPreimage = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.CreateinvoiceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.CreateinvoiceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.CreateinvoiceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CreateinvoiceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: jspb.Message.getFieldWithDefault(msg, 1, ""),
    bolt11: jspb.Message.getFieldWithDefault(msg, 2, ""),
    bolt12: jspb.Message.getFieldWithDefault(msg, 3, ""),
    paymentHash: msg.getPaymentHash_asB64(),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 6, 0),
    description: jspb.Message.getFieldWithDefault(msg, 7, ""),
    expiresAt: jspb.Message.getFieldWithDefault(msg, 8, 0),
    payIndex: jspb.Message.getFieldWithDefault(msg, 9, 0),
    amountReceivedMsat: (f = msg.getAmountReceivedMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    paidAt: jspb.Message.getFieldWithDefault(msg, 11, 0),
    paymentPreimage: msg.getPaymentPreimage_asB64(),
    localOfferId: msg.getLocalOfferId_asB64(),
    invreqPayerNote: jspb.Message.getFieldWithDefault(msg, 15, ""),
    createdIndex: jspb.Message.getFieldWithDefault(msg, 16, 0),
    paidOutpoint: (f = msg.getPaidOutpoint()) && proto.cln.CreateinvoicePaid_outpoint.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.CreateinvoiceResponse}
 */
proto.cln.CreateinvoiceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.CreateinvoiceResponse;
  return proto.cln.CreateinvoiceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.CreateinvoiceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.CreateinvoiceResponse}
 */
proto.cln.CreateinvoiceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt12(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 5:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 6:
      var value = /** @type {!proto.cln.CreateinvoiceResponse.CreateinvoiceStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExpiresAt(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPayIndex(value);
      break;
    case 10:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountReceivedMsat(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPaidAt(value);
      break;
    case 12:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentPreimage(value);
      break;
    case 13:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setLocalOfferId(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvreqPayerNote(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedIndex(value);
      break;
    case 17:
      var value = new proto.cln.CreateinvoicePaid_outpoint;
      reader.readMessage(value,proto.cln.CreateinvoicePaid_outpoint.deserializeBinaryFromReader);
      msg.setPaidOutpoint(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.CreateinvoiceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.CreateinvoiceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.CreateinvoiceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CreateinvoiceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getExpiresAt();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getAmountReceivedMsat();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBytes(
      12,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBytes(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeString(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint64(
      16,
      f
    );
  }
  f = message.getPaidOutpoint();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.cln.CreateinvoicePaid_outpoint.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.CreateinvoiceResponse.CreateinvoiceStatus = {
  PAID: 0,
  EXPIRED: 1,
  UNPAID: 2
};

/**
 * optional string label = 1;
 * @return {string}
 */
proto.cln.CreateinvoiceResponse.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string bolt11 = 2;
 * @return {string}
 */
proto.cln.CreateinvoiceResponse.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.setBolt11 = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.clearBolt11 = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CreateinvoiceResponse.prototype.hasBolt11 = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string bolt12 = 3;
 * @return {string}
 */
proto.cln.CreateinvoiceResponse.prototype.getBolt12 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.setBolt12 = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.clearBolt12 = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CreateinvoiceResponse.prototype.hasBolt12 = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bytes payment_hash = 4;
 * @return {!(string|Uint8Array)}
 */
proto.cln.CreateinvoiceResponse.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes payment_hash = 4;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.CreateinvoiceResponse.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.CreateinvoiceResponse.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional Amount amount_msat = 5;
 * @return {?proto.cln.Amount}
 */
proto.cln.CreateinvoiceResponse.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 5));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.CreateinvoiceResponse} returns this
*/
proto.cln.CreateinvoiceResponse.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CreateinvoiceResponse.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional CreateinvoiceStatus status = 6;
 * @return {!proto.cln.CreateinvoiceResponse.CreateinvoiceStatus}
 */
proto.cln.CreateinvoiceResponse.prototype.getStatus = function() {
  return /** @type {!proto.cln.CreateinvoiceResponse.CreateinvoiceStatus} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.cln.CreateinvoiceResponse.CreateinvoiceStatus} value
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional string description = 7;
 * @return {string}
 */
proto.cln.CreateinvoiceResponse.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional uint64 expires_at = 8;
 * @return {number}
 */
proto.cln.CreateinvoiceResponse.prototype.getExpiresAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.setExpiresAt = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional uint64 pay_index = 9;
 * @return {number}
 */
proto.cln.CreateinvoiceResponse.prototype.getPayIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.setPayIndex = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.clearPayIndex = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CreateinvoiceResponse.prototype.hasPayIndex = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Amount amount_received_msat = 10;
 * @return {?proto.cln.Amount}
 */
proto.cln.CreateinvoiceResponse.prototype.getAmountReceivedMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 10));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.CreateinvoiceResponse} returns this
*/
proto.cln.CreateinvoiceResponse.prototype.setAmountReceivedMsat = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.clearAmountReceivedMsat = function() {
  return this.setAmountReceivedMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CreateinvoiceResponse.prototype.hasAmountReceivedMsat = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint64 paid_at = 11;
 * @return {number}
 */
proto.cln.CreateinvoiceResponse.prototype.getPaidAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.setPaidAt = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.clearPaidAt = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CreateinvoiceResponse.prototype.hasPaidAt = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bytes payment_preimage = 12;
 * @return {!(string|Uint8Array)}
 */
proto.cln.CreateinvoiceResponse.prototype.getPaymentPreimage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * optional bytes payment_preimage = 12;
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {string}
 */
proto.cln.CreateinvoiceResponse.prototype.getPaymentPreimage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentPreimage()));
};


/**
 * optional bytes payment_preimage = 12;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {!Uint8Array}
 */
proto.cln.CreateinvoiceResponse.prototype.getPaymentPreimage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentPreimage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.setPaymentPreimage = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.clearPaymentPreimage = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CreateinvoiceResponse.prototype.hasPaymentPreimage = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bytes local_offer_id = 13;
 * @return {!(string|Uint8Array)}
 */
proto.cln.CreateinvoiceResponse.prototype.getLocalOfferId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * optional bytes local_offer_id = 13;
 * This is a type-conversion wrapper around `getLocalOfferId()`
 * @return {string}
 */
proto.cln.CreateinvoiceResponse.prototype.getLocalOfferId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getLocalOfferId()));
};


/**
 * optional bytes local_offer_id = 13;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getLocalOfferId()`
 * @return {!Uint8Array}
 */
proto.cln.CreateinvoiceResponse.prototype.getLocalOfferId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getLocalOfferId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.setLocalOfferId = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.clearLocalOfferId = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CreateinvoiceResponse.prototype.hasLocalOfferId = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string invreq_payer_note = 15;
 * @return {string}
 */
proto.cln.CreateinvoiceResponse.prototype.getInvreqPayerNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.setInvreqPayerNote = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.clearInvreqPayerNote = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CreateinvoiceResponse.prototype.hasInvreqPayerNote = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional uint64 created_index = 16;
 * @return {number}
 */
proto.cln.CreateinvoiceResponse.prototype.getCreatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.setCreatedIndex = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.clearCreatedIndex = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CreateinvoiceResponse.prototype.hasCreatedIndex = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional CreateinvoicePaid_outpoint paid_outpoint = 17;
 * @return {?proto.cln.CreateinvoicePaid_outpoint}
 */
proto.cln.CreateinvoiceResponse.prototype.getPaidOutpoint = function() {
  return /** @type{?proto.cln.CreateinvoicePaid_outpoint} */ (
    jspb.Message.getWrapperField(this, proto.cln.CreateinvoicePaid_outpoint, 17));
};


/**
 * @param {?proto.cln.CreateinvoicePaid_outpoint|undefined} value
 * @return {!proto.cln.CreateinvoiceResponse} returns this
*/
proto.cln.CreateinvoiceResponse.prototype.setPaidOutpoint = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.clearPaidOutpoint = function() {
  return this.setPaidOutpoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CreateinvoiceResponse.prototype.hasPaidOutpoint = function() {
  return jspb.Message.getField(this, 17) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.CreateinvoicePaid_outpoint.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.CreateinvoicePaid_outpoint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.CreateinvoicePaid_outpoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CreateinvoicePaid_outpoint.toObject = function(includeInstance, msg) {
  var f, obj = {
    txid: msg.getTxid_asB64(),
    outnum: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.CreateinvoicePaid_outpoint}
 */
proto.cln.CreateinvoicePaid_outpoint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.CreateinvoicePaid_outpoint;
  return proto.cln.CreateinvoicePaid_outpoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.CreateinvoicePaid_outpoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.CreateinvoicePaid_outpoint}
 */
proto.cln.CreateinvoicePaid_outpoint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOutnum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.CreateinvoicePaid_outpoint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.CreateinvoicePaid_outpoint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.CreateinvoicePaid_outpoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CreateinvoicePaid_outpoint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getOutnum();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional bytes txid = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.CreateinvoicePaid_outpoint.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes txid = 1;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.CreateinvoicePaid_outpoint.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.CreateinvoicePaid_outpoint.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.CreateinvoicePaid_outpoint} returns this
 */
proto.cln.CreateinvoicePaid_outpoint.prototype.setTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint32 outnum = 2;
 * @return {number}
 */
proto.cln.CreateinvoicePaid_outpoint.prototype.getOutnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.CreateinvoicePaid_outpoint} returns this
 */
proto.cln.CreateinvoicePaid_outpoint.prototype.setOutnum = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.DatastoreRequest.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DatastoreRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DatastoreRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DatastoreRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DatastoreRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    hex: msg.getHex_asB64(),
    mode: jspb.Message.getFieldWithDefault(msg, 3, 0),
    generation: jspb.Message.getFieldWithDefault(msg, 4, 0),
    keyList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    string: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DatastoreRequest}
 */
proto.cln.DatastoreRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DatastoreRequest;
  return proto.cln.DatastoreRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DatastoreRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DatastoreRequest}
 */
proto.cln.DatastoreRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHex(value);
      break;
    case 3:
      var value = /** @type {!proto.cln.DatastoreRequest.DatastoreMode} */ (reader.readEnum());
      msg.setMode(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGeneration(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addKey(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setString(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DatastoreRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DatastoreRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DatastoreRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DatastoreRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = /** @type {!proto.cln.DatastoreRequest.DatastoreMode} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getKeyList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.DatastoreRequest.DatastoreMode = {
  MUST_CREATE: 0,
  MUST_REPLACE: 1,
  CREATE_OR_REPLACE: 2,
  MUST_APPEND: 3,
  CREATE_OR_APPEND: 4
};

/**
 * optional bytes hex = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DatastoreRequest.prototype.getHex = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes hex = 2;
 * This is a type-conversion wrapper around `getHex()`
 * @return {string}
 */
proto.cln.DatastoreRequest.prototype.getHex_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHex()));
};


/**
 * optional bytes hex = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHex()`
 * @return {!Uint8Array}
 */
proto.cln.DatastoreRequest.prototype.getHex_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHex()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DatastoreRequest} returns this
 */
proto.cln.DatastoreRequest.prototype.setHex = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DatastoreRequest} returns this
 */
proto.cln.DatastoreRequest.prototype.clearHex = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DatastoreRequest.prototype.hasHex = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional DatastoreMode mode = 3;
 * @return {!proto.cln.DatastoreRequest.DatastoreMode}
 */
proto.cln.DatastoreRequest.prototype.getMode = function() {
  return /** @type {!proto.cln.DatastoreRequest.DatastoreMode} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.cln.DatastoreRequest.DatastoreMode} value
 * @return {!proto.cln.DatastoreRequest} returns this
 */
proto.cln.DatastoreRequest.prototype.setMode = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DatastoreRequest} returns this
 */
proto.cln.DatastoreRequest.prototype.clearMode = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DatastoreRequest.prototype.hasMode = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 generation = 4;
 * @return {number}
 */
proto.cln.DatastoreRequest.prototype.getGeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DatastoreRequest} returns this
 */
proto.cln.DatastoreRequest.prototype.setGeneration = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DatastoreRequest} returns this
 */
proto.cln.DatastoreRequest.prototype.clearGeneration = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DatastoreRequest.prototype.hasGeneration = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated string key = 5;
 * @return {!Array<string>}
 */
proto.cln.DatastoreRequest.prototype.getKeyList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.DatastoreRequest} returns this
 */
proto.cln.DatastoreRequest.prototype.setKeyList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.DatastoreRequest} returns this
 */
proto.cln.DatastoreRequest.prototype.addKey = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.DatastoreRequest} returns this
 */
proto.cln.DatastoreRequest.prototype.clearKeyList = function() {
  return this.setKeyList([]);
};


/**
 * optional string string = 6;
 * @return {string}
 */
proto.cln.DatastoreRequest.prototype.getString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DatastoreRequest} returns this
 */
proto.cln.DatastoreRequest.prototype.setString = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DatastoreRequest} returns this
 */
proto.cln.DatastoreRequest.prototype.clearString = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DatastoreRequest.prototype.hasString = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.DatastoreResponse.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DatastoreResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DatastoreResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DatastoreResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DatastoreResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    generation: jspb.Message.getFieldWithDefault(msg, 2, 0),
    hex: msg.getHex_asB64(),
    string: jspb.Message.getFieldWithDefault(msg, 4, ""),
    keyList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DatastoreResponse}
 */
proto.cln.DatastoreResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DatastoreResponse;
  return proto.cln.DatastoreResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DatastoreResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DatastoreResponse}
 */
proto.cln.DatastoreResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGeneration(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHex(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setString(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DatastoreResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DatastoreResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DatastoreResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DatastoreResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getKeyList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
};


/**
 * optional uint64 generation = 2;
 * @return {number}
 */
proto.cln.DatastoreResponse.prototype.getGeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DatastoreResponse} returns this
 */
proto.cln.DatastoreResponse.prototype.setGeneration = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DatastoreResponse} returns this
 */
proto.cln.DatastoreResponse.prototype.clearGeneration = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DatastoreResponse.prototype.hasGeneration = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes hex = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DatastoreResponse.prototype.getHex = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes hex = 3;
 * This is a type-conversion wrapper around `getHex()`
 * @return {string}
 */
proto.cln.DatastoreResponse.prototype.getHex_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHex()));
};


/**
 * optional bytes hex = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHex()`
 * @return {!Uint8Array}
 */
proto.cln.DatastoreResponse.prototype.getHex_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHex()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DatastoreResponse} returns this
 */
proto.cln.DatastoreResponse.prototype.setHex = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DatastoreResponse} returns this
 */
proto.cln.DatastoreResponse.prototype.clearHex = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DatastoreResponse.prototype.hasHex = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string string = 4;
 * @return {string}
 */
proto.cln.DatastoreResponse.prototype.getString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DatastoreResponse} returns this
 */
proto.cln.DatastoreResponse.prototype.setString = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DatastoreResponse} returns this
 */
proto.cln.DatastoreResponse.prototype.clearString = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DatastoreResponse.prototype.hasString = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated string key = 5;
 * @return {!Array<string>}
 */
proto.cln.DatastoreResponse.prototype.getKeyList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.DatastoreResponse} returns this
 */
proto.cln.DatastoreResponse.prototype.setKeyList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.DatastoreResponse} returns this
 */
proto.cln.DatastoreResponse.prototype.addKey = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.DatastoreResponse} returns this
 */
proto.cln.DatastoreResponse.prototype.clearKeyList = function() {
  return this.setKeyList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.DatastoreusageRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DatastoreusageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DatastoreusageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DatastoreusageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DatastoreusageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    keyList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DatastoreusageRequest}
 */
proto.cln.DatastoreusageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DatastoreusageRequest;
  return proto.cln.DatastoreusageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DatastoreusageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DatastoreusageRequest}
 */
proto.cln.DatastoreusageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DatastoreusageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DatastoreusageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DatastoreusageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DatastoreusageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeyList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string key = 1;
 * @return {!Array<string>}
 */
proto.cln.DatastoreusageRequest.prototype.getKeyList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.DatastoreusageRequest} returns this
 */
proto.cln.DatastoreusageRequest.prototype.setKeyList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.DatastoreusageRequest} returns this
 */
proto.cln.DatastoreusageRequest.prototype.addKey = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.DatastoreusageRequest} returns this
 */
proto.cln.DatastoreusageRequest.prototype.clearKeyList = function() {
  return this.setKeyList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DatastoreusageResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DatastoreusageResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DatastoreusageResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DatastoreusageResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    datastoreusage: (f = msg.getDatastoreusage()) && proto.cln.DatastoreusageDatastoreusage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DatastoreusageResponse}
 */
proto.cln.DatastoreusageResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DatastoreusageResponse;
  return proto.cln.DatastoreusageResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DatastoreusageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DatastoreusageResponse}
 */
proto.cln.DatastoreusageResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.DatastoreusageDatastoreusage;
      reader.readMessage(value,proto.cln.DatastoreusageDatastoreusage.deserializeBinaryFromReader);
      msg.setDatastoreusage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DatastoreusageResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DatastoreusageResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DatastoreusageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DatastoreusageResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatastoreusage();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cln.DatastoreusageDatastoreusage.serializeBinaryToWriter
    );
  }
};


/**
 * optional DatastoreusageDatastoreusage datastoreusage = 1;
 * @return {?proto.cln.DatastoreusageDatastoreusage}
 */
proto.cln.DatastoreusageResponse.prototype.getDatastoreusage = function() {
  return /** @type{?proto.cln.DatastoreusageDatastoreusage} */ (
    jspb.Message.getWrapperField(this, proto.cln.DatastoreusageDatastoreusage, 1));
};


/**
 * @param {?proto.cln.DatastoreusageDatastoreusage|undefined} value
 * @return {!proto.cln.DatastoreusageResponse} returns this
*/
proto.cln.DatastoreusageResponse.prototype.setDatastoreusage = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.DatastoreusageResponse} returns this
 */
proto.cln.DatastoreusageResponse.prototype.clearDatastoreusage = function() {
  return this.setDatastoreusage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DatastoreusageResponse.prototype.hasDatastoreusage = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DatastoreusageDatastoreusage.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DatastoreusageDatastoreusage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DatastoreusageDatastoreusage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DatastoreusageDatastoreusage.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    totalBytes: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DatastoreusageDatastoreusage}
 */
proto.cln.DatastoreusageDatastoreusage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DatastoreusageDatastoreusage;
  return proto.cln.DatastoreusageDatastoreusage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DatastoreusageDatastoreusage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DatastoreusageDatastoreusage}
 */
proto.cln.DatastoreusageDatastoreusage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalBytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DatastoreusageDatastoreusage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DatastoreusageDatastoreusage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DatastoreusageDatastoreusage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DatastoreusageDatastoreusage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTotalBytes();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.cln.DatastoreusageDatastoreusage.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DatastoreusageDatastoreusage} returns this
 */
proto.cln.DatastoreusageDatastoreusage.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 total_bytes = 2;
 * @return {number}
 */
proto.cln.DatastoreusageDatastoreusage.prototype.getTotalBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DatastoreusageDatastoreusage} returns this
 */
proto.cln.DatastoreusageDatastoreusage.prototype.setTotalBytes = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.CreateonionRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.CreateonionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.CreateonionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.CreateonionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CreateonionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    hopsList: jspb.Message.toObjectList(msg.getHopsList(),
    proto.cln.CreateonionHops.toObject, includeInstance),
    assocdata: msg.getAssocdata_asB64(),
    sessionKey: msg.getSessionKey_asB64(),
    onionSize: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.CreateonionRequest}
 */
proto.cln.CreateonionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.CreateonionRequest;
  return proto.cln.CreateonionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.CreateonionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.CreateonionRequest}
 */
proto.cln.CreateonionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.CreateonionHops;
      reader.readMessage(value,proto.cln.CreateonionHops.deserializeBinaryFromReader);
      msg.addHops(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAssocdata(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSessionKey(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOnionSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.CreateonionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.CreateonionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.CreateonionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CreateonionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHopsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.CreateonionHops.serializeBinaryToWriter
    );
  }
  f = message.getAssocdata_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * repeated CreateonionHops hops = 1;
 * @return {!Array<!proto.cln.CreateonionHops>}
 */
proto.cln.CreateonionRequest.prototype.getHopsList = function() {
  return /** @type{!Array<!proto.cln.CreateonionHops>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.CreateonionHops, 1));
};


/**
 * @param {!Array<!proto.cln.CreateonionHops>} value
 * @return {!proto.cln.CreateonionRequest} returns this
*/
proto.cln.CreateonionRequest.prototype.setHopsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.CreateonionHops=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.CreateonionHops}
 */
proto.cln.CreateonionRequest.prototype.addHops = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.CreateonionHops, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.CreateonionRequest} returns this
 */
proto.cln.CreateonionRequest.prototype.clearHopsList = function() {
  return this.setHopsList([]);
};


/**
 * optional bytes assocdata = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.CreateonionRequest.prototype.getAssocdata = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes assocdata = 2;
 * This is a type-conversion wrapper around `getAssocdata()`
 * @return {string}
 */
proto.cln.CreateonionRequest.prototype.getAssocdata_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAssocdata()));
};


/**
 * optional bytes assocdata = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAssocdata()`
 * @return {!Uint8Array}
 */
proto.cln.CreateonionRequest.prototype.getAssocdata_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAssocdata()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.CreateonionRequest} returns this
 */
proto.cln.CreateonionRequest.prototype.setAssocdata = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes session_key = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.CreateonionRequest.prototype.getSessionKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes session_key = 3;
 * This is a type-conversion wrapper around `getSessionKey()`
 * @return {string}
 */
proto.cln.CreateonionRequest.prototype.getSessionKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSessionKey()));
};


/**
 * optional bytes session_key = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSessionKey()`
 * @return {!Uint8Array}
 */
proto.cln.CreateonionRequest.prototype.getSessionKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSessionKey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.CreateonionRequest} returns this
 */
proto.cln.CreateonionRequest.prototype.setSessionKey = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CreateonionRequest} returns this
 */
proto.cln.CreateonionRequest.prototype.clearSessionKey = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CreateonionRequest.prototype.hasSessionKey = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 onion_size = 4;
 * @return {number}
 */
proto.cln.CreateonionRequest.prototype.getOnionSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.CreateonionRequest} returns this
 */
proto.cln.CreateonionRequest.prototype.setOnionSize = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CreateonionRequest} returns this
 */
proto.cln.CreateonionRequest.prototype.clearOnionSize = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CreateonionRequest.prototype.hasOnionSize = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.CreateonionResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.CreateonionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.CreateonionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.CreateonionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CreateonionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    onion: msg.getOnion_asB64(),
    sharedSecretsList: msg.getSharedSecretsList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.CreateonionResponse}
 */
proto.cln.CreateonionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.CreateonionResponse;
  return proto.cln.CreateonionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.CreateonionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.CreateonionResponse}
 */
proto.cln.CreateonionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOnion(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addSharedSecrets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.CreateonionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.CreateonionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.CreateonionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CreateonionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOnion_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getSharedSecretsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      2,
      f
    );
  }
};


/**
 * optional bytes onion = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.CreateonionResponse.prototype.getOnion = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes onion = 1;
 * This is a type-conversion wrapper around `getOnion()`
 * @return {string}
 */
proto.cln.CreateonionResponse.prototype.getOnion_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOnion()));
};


/**
 * optional bytes onion = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOnion()`
 * @return {!Uint8Array}
 */
proto.cln.CreateonionResponse.prototype.getOnion_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOnion()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.CreateonionResponse} returns this
 */
proto.cln.CreateonionResponse.prototype.setOnion = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * repeated bytes shared_secrets = 2;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.cln.CreateonionResponse.prototype.getSharedSecretsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * repeated bytes shared_secrets = 2;
 * This is a type-conversion wrapper around `getSharedSecretsList()`
 * @return {!Array<string>}
 */
proto.cln.CreateonionResponse.prototype.getSharedSecretsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getSharedSecretsList()));
};


/**
 * repeated bytes shared_secrets = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSharedSecretsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.cln.CreateonionResponse.prototype.getSharedSecretsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getSharedSecretsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.cln.CreateonionResponse} returns this
 */
proto.cln.CreateonionResponse.prototype.setSharedSecretsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.cln.CreateonionResponse} returns this
 */
proto.cln.CreateonionResponse.prototype.addSharedSecrets = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.CreateonionResponse} returns this
 */
proto.cln.CreateonionResponse.prototype.clearSharedSecretsList = function() {
  return this.setSharedSecretsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.CreateonionHops.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.CreateonionHops.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.CreateonionHops} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CreateonionHops.toObject = function(includeInstance, msg) {
  var f, obj = {
    pubkey: msg.getPubkey_asB64(),
    payload: msg.getPayload_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.CreateonionHops}
 */
proto.cln.CreateonionHops.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.CreateonionHops;
  return proto.cln.CreateonionHops.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.CreateonionHops} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.CreateonionHops}
 */
proto.cln.CreateonionHops.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPubkey(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.CreateonionHops.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.CreateonionHops.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.CreateonionHops} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CreateonionHops.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPubkey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getPayload_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional bytes pubkey = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.CreateonionHops.prototype.getPubkey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes pubkey = 1;
 * This is a type-conversion wrapper around `getPubkey()`
 * @return {string}
 */
proto.cln.CreateonionHops.prototype.getPubkey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPubkey()));
};


/**
 * optional bytes pubkey = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPubkey()`
 * @return {!Uint8Array}
 */
proto.cln.CreateonionHops.prototype.getPubkey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPubkey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.CreateonionHops} returns this
 */
proto.cln.CreateonionHops.prototype.setPubkey = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes payload = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.CreateonionHops.prototype.getPayload = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes payload = 2;
 * This is a type-conversion wrapper around `getPayload()`
 * @return {string}
 */
proto.cln.CreateonionHops.prototype.getPayload_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPayload()));
};


/**
 * optional bytes payload = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPayload()`
 * @return {!Uint8Array}
 */
proto.cln.CreateonionHops.prototype.getPayload_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPayload()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.CreateonionHops} returns this
 */
proto.cln.CreateonionHops.prototype.setPayload = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.DeldatastoreRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DeldatastoreRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DeldatastoreRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DeldatastoreRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DeldatastoreRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    generation: jspb.Message.getFieldWithDefault(msg, 2, 0),
    keyList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DeldatastoreRequest}
 */
proto.cln.DeldatastoreRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DeldatastoreRequest;
  return proto.cln.DeldatastoreRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DeldatastoreRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DeldatastoreRequest}
 */
proto.cln.DeldatastoreRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGeneration(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DeldatastoreRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DeldatastoreRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DeldatastoreRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DeldatastoreRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getKeyList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional uint64 generation = 2;
 * @return {number}
 */
proto.cln.DeldatastoreRequest.prototype.getGeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DeldatastoreRequest} returns this
 */
proto.cln.DeldatastoreRequest.prototype.setGeneration = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DeldatastoreRequest} returns this
 */
proto.cln.DeldatastoreRequest.prototype.clearGeneration = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DeldatastoreRequest.prototype.hasGeneration = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated string key = 3;
 * @return {!Array<string>}
 */
proto.cln.DeldatastoreRequest.prototype.getKeyList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.DeldatastoreRequest} returns this
 */
proto.cln.DeldatastoreRequest.prototype.setKeyList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.DeldatastoreRequest} returns this
 */
proto.cln.DeldatastoreRequest.prototype.addKey = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.DeldatastoreRequest} returns this
 */
proto.cln.DeldatastoreRequest.prototype.clearKeyList = function() {
  return this.setKeyList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.DeldatastoreResponse.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DeldatastoreResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DeldatastoreResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DeldatastoreResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DeldatastoreResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    generation: jspb.Message.getFieldWithDefault(msg, 2, 0),
    hex: msg.getHex_asB64(),
    string: jspb.Message.getFieldWithDefault(msg, 4, ""),
    keyList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DeldatastoreResponse}
 */
proto.cln.DeldatastoreResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DeldatastoreResponse;
  return proto.cln.DeldatastoreResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DeldatastoreResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DeldatastoreResponse}
 */
proto.cln.DeldatastoreResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGeneration(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHex(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setString(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DeldatastoreResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DeldatastoreResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DeldatastoreResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DeldatastoreResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getKeyList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
};


/**
 * optional uint64 generation = 2;
 * @return {number}
 */
proto.cln.DeldatastoreResponse.prototype.getGeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DeldatastoreResponse} returns this
 */
proto.cln.DeldatastoreResponse.prototype.setGeneration = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DeldatastoreResponse} returns this
 */
proto.cln.DeldatastoreResponse.prototype.clearGeneration = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DeldatastoreResponse.prototype.hasGeneration = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes hex = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DeldatastoreResponse.prototype.getHex = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes hex = 3;
 * This is a type-conversion wrapper around `getHex()`
 * @return {string}
 */
proto.cln.DeldatastoreResponse.prototype.getHex_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHex()));
};


/**
 * optional bytes hex = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHex()`
 * @return {!Uint8Array}
 */
proto.cln.DeldatastoreResponse.prototype.getHex_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHex()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DeldatastoreResponse} returns this
 */
proto.cln.DeldatastoreResponse.prototype.setHex = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DeldatastoreResponse} returns this
 */
proto.cln.DeldatastoreResponse.prototype.clearHex = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DeldatastoreResponse.prototype.hasHex = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string string = 4;
 * @return {string}
 */
proto.cln.DeldatastoreResponse.prototype.getString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DeldatastoreResponse} returns this
 */
proto.cln.DeldatastoreResponse.prototype.setString = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DeldatastoreResponse} returns this
 */
proto.cln.DeldatastoreResponse.prototype.clearString = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DeldatastoreResponse.prototype.hasString = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated string key = 5;
 * @return {!Array<string>}
 */
proto.cln.DeldatastoreResponse.prototype.getKeyList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.DeldatastoreResponse} returns this
 */
proto.cln.DeldatastoreResponse.prototype.setKeyList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.DeldatastoreResponse} returns this
 */
proto.cln.DeldatastoreResponse.prototype.addKey = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.DeldatastoreResponse} returns this
 */
proto.cln.DeldatastoreResponse.prototype.clearKeyList = function() {
  return this.setKeyList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DelinvoiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DelinvoiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DelinvoiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DelinvoiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    desconly: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DelinvoiceRequest}
 */
proto.cln.DelinvoiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DelinvoiceRequest;
  return proto.cln.DelinvoiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DelinvoiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DelinvoiceRequest}
 */
proto.cln.DelinvoiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 2:
      var value = /** @type {!proto.cln.DelinvoiceRequest.DelinvoiceStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDesconly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DelinvoiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DelinvoiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DelinvoiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DelinvoiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.DelinvoiceRequest.DelinvoiceStatus = {
  PAID: 0,
  EXPIRED: 1,
  UNPAID: 2
};

/**
 * optional string label = 1;
 * @return {string}
 */
proto.cln.DelinvoiceRequest.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DelinvoiceRequest} returns this
 */
proto.cln.DelinvoiceRequest.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional DelinvoiceStatus status = 2;
 * @return {!proto.cln.DelinvoiceRequest.DelinvoiceStatus}
 */
proto.cln.DelinvoiceRequest.prototype.getStatus = function() {
  return /** @type {!proto.cln.DelinvoiceRequest.DelinvoiceStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.cln.DelinvoiceRequest.DelinvoiceStatus} value
 * @return {!proto.cln.DelinvoiceRequest} returns this
 */
proto.cln.DelinvoiceRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional bool desconly = 3;
 * @return {boolean}
 */
proto.cln.DelinvoiceRequest.prototype.getDesconly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.DelinvoiceRequest} returns this
 */
proto.cln.DelinvoiceRequest.prototype.setDesconly = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DelinvoiceRequest} returns this
 */
proto.cln.DelinvoiceRequest.prototype.clearDesconly = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelinvoiceRequest.prototype.hasDesconly = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DelinvoiceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DelinvoiceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DelinvoiceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DelinvoiceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: jspb.Message.getFieldWithDefault(msg, 1, ""),
    bolt11: jspb.Message.getFieldWithDefault(msg, 2, ""),
    bolt12: jspb.Message.getFieldWithDefault(msg, 3, ""),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    description: jspb.Message.getFieldWithDefault(msg, 5, ""),
    paymentHash: msg.getPaymentHash_asB64(),
    status: jspb.Message.getFieldWithDefault(msg, 7, 0),
    expiresAt: jspb.Message.getFieldWithDefault(msg, 8, 0),
    localOfferId: msg.getLocalOfferId_asB64(),
    invreqPayerNote: jspb.Message.getFieldWithDefault(msg, 11, ""),
    createdIndex: jspb.Message.getFieldWithDefault(msg, 12, 0),
    updatedIndex: jspb.Message.getFieldWithDefault(msg, 13, 0),
    payIndex: jspb.Message.getFieldWithDefault(msg, 14, 0),
    amountReceivedMsat: (f = msg.getAmountReceivedMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    paidAt: jspb.Message.getFieldWithDefault(msg, 16, 0),
    paymentPreimage: msg.getPaymentPreimage_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DelinvoiceResponse}
 */
proto.cln.DelinvoiceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DelinvoiceResponse;
  return proto.cln.DelinvoiceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DelinvoiceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DelinvoiceResponse}
 */
proto.cln.DelinvoiceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt12(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 7:
      var value = /** @type {!proto.cln.DelinvoiceResponse.DelinvoiceStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExpiresAt(value);
      break;
    case 9:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setLocalOfferId(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvreqPayerNote(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedIndex(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpdatedIndex(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPayIndex(value);
      break;
    case 15:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountReceivedMsat(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPaidAt(value);
      break;
    case 17:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentPreimage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DelinvoiceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DelinvoiceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DelinvoiceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DelinvoiceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getExpiresAt();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBytes(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeUint64(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeUint64(
      14,
      f
    );
  }
  f = message.getAmountReceivedMsat();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint64(
      16,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeBytes(
      17,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.DelinvoiceResponse.DelinvoiceStatus = {
  PAID: 0,
  EXPIRED: 1,
  UNPAID: 2
};

/**
 * optional string label = 1;
 * @return {string}
 */
proto.cln.DelinvoiceResponse.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string bolt11 = 2;
 * @return {string}
 */
proto.cln.DelinvoiceResponse.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.setBolt11 = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.clearBolt11 = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelinvoiceResponse.prototype.hasBolt11 = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string bolt12 = 3;
 * @return {string}
 */
proto.cln.DelinvoiceResponse.prototype.getBolt12 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.setBolt12 = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.clearBolt12 = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelinvoiceResponse.prototype.hasBolt12 = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Amount amount_msat = 4;
 * @return {?proto.cln.Amount}
 */
proto.cln.DelinvoiceResponse.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 4));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.DelinvoiceResponse} returns this
*/
proto.cln.DelinvoiceResponse.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelinvoiceResponse.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.cln.DelinvoiceResponse.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelinvoiceResponse.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bytes payment_hash = 6;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DelinvoiceResponse.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes payment_hash = 6;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.DelinvoiceResponse.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.DelinvoiceResponse.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional DelinvoiceStatus status = 7;
 * @return {!proto.cln.DelinvoiceResponse.DelinvoiceStatus}
 */
proto.cln.DelinvoiceResponse.prototype.getStatus = function() {
  return /** @type {!proto.cln.DelinvoiceResponse.DelinvoiceStatus} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.cln.DelinvoiceResponse.DelinvoiceStatus} value
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional uint64 expires_at = 8;
 * @return {number}
 */
proto.cln.DelinvoiceResponse.prototype.getExpiresAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.setExpiresAt = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional bytes local_offer_id = 9;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DelinvoiceResponse.prototype.getLocalOfferId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * optional bytes local_offer_id = 9;
 * This is a type-conversion wrapper around `getLocalOfferId()`
 * @return {string}
 */
proto.cln.DelinvoiceResponse.prototype.getLocalOfferId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getLocalOfferId()));
};


/**
 * optional bytes local_offer_id = 9;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getLocalOfferId()`
 * @return {!Uint8Array}
 */
proto.cln.DelinvoiceResponse.prototype.getLocalOfferId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getLocalOfferId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.setLocalOfferId = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.clearLocalOfferId = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelinvoiceResponse.prototype.hasLocalOfferId = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string invreq_payer_note = 11;
 * @return {string}
 */
proto.cln.DelinvoiceResponse.prototype.getInvreqPayerNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.setInvreqPayerNote = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.clearInvreqPayerNote = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelinvoiceResponse.prototype.hasInvreqPayerNote = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint64 created_index = 12;
 * @return {number}
 */
proto.cln.DelinvoiceResponse.prototype.getCreatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.setCreatedIndex = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.clearCreatedIndex = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelinvoiceResponse.prototype.hasCreatedIndex = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional uint64 updated_index = 13;
 * @return {number}
 */
proto.cln.DelinvoiceResponse.prototype.getUpdatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.setUpdatedIndex = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.clearUpdatedIndex = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelinvoiceResponse.prototype.hasUpdatedIndex = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional uint64 pay_index = 14;
 * @return {number}
 */
proto.cln.DelinvoiceResponse.prototype.getPayIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.setPayIndex = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.clearPayIndex = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelinvoiceResponse.prototype.hasPayIndex = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional Amount amount_received_msat = 15;
 * @return {?proto.cln.Amount}
 */
proto.cln.DelinvoiceResponse.prototype.getAmountReceivedMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 15));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.DelinvoiceResponse} returns this
*/
proto.cln.DelinvoiceResponse.prototype.setAmountReceivedMsat = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.clearAmountReceivedMsat = function() {
  return this.setAmountReceivedMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelinvoiceResponse.prototype.hasAmountReceivedMsat = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional uint64 paid_at = 16;
 * @return {number}
 */
proto.cln.DelinvoiceResponse.prototype.getPaidAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.setPaidAt = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.clearPaidAt = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelinvoiceResponse.prototype.hasPaidAt = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional bytes payment_preimage = 17;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DelinvoiceResponse.prototype.getPaymentPreimage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * optional bytes payment_preimage = 17;
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {string}
 */
proto.cln.DelinvoiceResponse.prototype.getPaymentPreimage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentPreimage()));
};


/**
 * optional bytes payment_preimage = 17;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {!Uint8Array}
 */
proto.cln.DelinvoiceResponse.prototype.getPaymentPreimage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentPreimage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.setPaymentPreimage = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.clearPaymentPreimage = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelinvoiceResponse.prototype.hasPaymentPreimage = function() {
  return jspb.Message.getField(this, 17) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DevforgetchannelRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DevforgetchannelRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DevforgetchannelRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DevforgetchannelRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64(),
    shortChannelId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    channelId: msg.getChannelId_asB64(),
    force: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DevforgetchannelRequest}
 */
proto.cln.DevforgetchannelRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DevforgetchannelRequest;
  return proto.cln.DevforgetchannelRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DevforgetchannelRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DevforgetchannelRequest}
 */
proto.cln.DevforgetchannelRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setShortChannelId(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChannelId(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForce(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DevforgetchannelRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DevforgetchannelRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DevforgetchannelRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DevforgetchannelRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional bytes id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DevforgetchannelRequest.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes id = 1;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.cln.DevforgetchannelRequest.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.cln.DevforgetchannelRequest.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DevforgetchannelRequest} returns this
 */
proto.cln.DevforgetchannelRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string short_channel_id = 2;
 * @return {string}
 */
proto.cln.DevforgetchannelRequest.prototype.getShortChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DevforgetchannelRequest} returns this
 */
proto.cln.DevforgetchannelRequest.prototype.setShortChannelId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DevforgetchannelRequest} returns this
 */
proto.cln.DevforgetchannelRequest.prototype.clearShortChannelId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DevforgetchannelRequest.prototype.hasShortChannelId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes channel_id = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DevforgetchannelRequest.prototype.getChannelId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes channel_id = 3;
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {string}
 */
proto.cln.DevforgetchannelRequest.prototype.getChannelId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChannelId()));
};


/**
 * optional bytes channel_id = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {!Uint8Array}
 */
proto.cln.DevforgetchannelRequest.prototype.getChannelId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChannelId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DevforgetchannelRequest} returns this
 */
proto.cln.DevforgetchannelRequest.prototype.setChannelId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DevforgetchannelRequest} returns this
 */
proto.cln.DevforgetchannelRequest.prototype.clearChannelId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DevforgetchannelRequest.prototype.hasChannelId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool force = 4;
 * @return {boolean}
 */
proto.cln.DevforgetchannelRequest.prototype.getForce = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.DevforgetchannelRequest} returns this
 */
proto.cln.DevforgetchannelRequest.prototype.setForce = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DevforgetchannelRequest} returns this
 */
proto.cln.DevforgetchannelRequest.prototype.clearForce = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DevforgetchannelRequest.prototype.hasForce = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DevforgetchannelResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DevforgetchannelResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DevforgetchannelResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DevforgetchannelResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    forced: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    fundingUnspent: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    fundingTxid: msg.getFundingTxid_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DevforgetchannelResponse}
 */
proto.cln.DevforgetchannelResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DevforgetchannelResponse;
  return proto.cln.DevforgetchannelResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DevforgetchannelResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DevforgetchannelResponse}
 */
proto.cln.DevforgetchannelResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForced(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFundingUnspent(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFundingTxid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DevforgetchannelResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DevforgetchannelResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DevforgetchannelResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DevforgetchannelResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getForced();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getFundingUnspent();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getFundingTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional bool forced = 1;
 * @return {boolean}
 */
proto.cln.DevforgetchannelResponse.prototype.getForced = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.DevforgetchannelResponse} returns this
 */
proto.cln.DevforgetchannelResponse.prototype.setForced = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool funding_unspent = 2;
 * @return {boolean}
 */
proto.cln.DevforgetchannelResponse.prototype.getFundingUnspent = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.DevforgetchannelResponse} returns this
 */
proto.cln.DevforgetchannelResponse.prototype.setFundingUnspent = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bytes funding_txid = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DevforgetchannelResponse.prototype.getFundingTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes funding_txid = 3;
 * This is a type-conversion wrapper around `getFundingTxid()`
 * @return {string}
 */
proto.cln.DevforgetchannelResponse.prototype.getFundingTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFundingTxid()));
};


/**
 * optional bytes funding_txid = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFundingTxid()`
 * @return {!Uint8Array}
 */
proto.cln.DevforgetchannelResponse.prototype.getFundingTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFundingTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DevforgetchannelResponse} returns this
 */
proto.cln.DevforgetchannelResponse.prototype.setFundingTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.EmergencyrecoverRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.EmergencyrecoverRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.EmergencyrecoverRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.EmergencyrecoverRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.EmergencyrecoverRequest}
 */
proto.cln.EmergencyrecoverRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.EmergencyrecoverRequest;
  return proto.cln.EmergencyrecoverRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.EmergencyrecoverRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.EmergencyrecoverRequest}
 */
proto.cln.EmergencyrecoverRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.EmergencyrecoverRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.EmergencyrecoverRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.EmergencyrecoverRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.EmergencyrecoverRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.EmergencyrecoverResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.EmergencyrecoverResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.EmergencyrecoverResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.EmergencyrecoverResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.EmergencyrecoverResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    stubsList: msg.getStubsList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.EmergencyrecoverResponse}
 */
proto.cln.EmergencyrecoverResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.EmergencyrecoverResponse;
  return proto.cln.EmergencyrecoverResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.EmergencyrecoverResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.EmergencyrecoverResponse}
 */
proto.cln.EmergencyrecoverResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addStubs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.EmergencyrecoverResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.EmergencyrecoverResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.EmergencyrecoverResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.EmergencyrecoverResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStubsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      1,
      f
    );
  }
};


/**
 * repeated bytes stubs = 1;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.cln.EmergencyrecoverResponse.prototype.getStubsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * repeated bytes stubs = 1;
 * This is a type-conversion wrapper around `getStubsList()`
 * @return {!Array<string>}
 */
proto.cln.EmergencyrecoverResponse.prototype.getStubsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getStubsList()));
};


/**
 * repeated bytes stubs = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getStubsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.cln.EmergencyrecoverResponse.prototype.getStubsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getStubsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.cln.EmergencyrecoverResponse} returns this
 */
proto.cln.EmergencyrecoverResponse.prototype.setStubsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.cln.EmergencyrecoverResponse} returns this
 */
proto.cln.EmergencyrecoverResponse.prototype.addStubs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.EmergencyrecoverResponse} returns this
 */
proto.cln.EmergencyrecoverResponse.prototype.clearStubsList = function() {
  return this.setStubsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.RecoverRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.RecoverRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.RecoverRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.RecoverRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    hsmsecret: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.RecoverRequest}
 */
proto.cln.RecoverRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.RecoverRequest;
  return proto.cln.RecoverRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.RecoverRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.RecoverRequest}
 */
proto.cln.RecoverRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHsmsecret(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.RecoverRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.RecoverRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.RecoverRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.RecoverRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHsmsecret();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string hsmsecret = 1;
 * @return {string}
 */
proto.cln.RecoverRequest.prototype.getHsmsecret = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.RecoverRequest} returns this
 */
proto.cln.RecoverRequest.prototype.setHsmsecret = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.RecoverResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.RecoverResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.RecoverResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.RecoverResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.RecoverResponse}
 */
proto.cln.RecoverResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.RecoverResponse;
  return proto.cln.RecoverResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.RecoverResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.RecoverResponse}
 */
proto.cln.RecoverResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.RecoverResponse.RecoverResult} */ (reader.readEnum());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.RecoverResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.RecoverResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.RecoverResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.RecoverResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.cln.RecoverResponse.RecoverResult} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.RecoverResponse.RecoverResult = {
  RECOVERY_RESTART_IN_PROGRESS: 0
};

/**
 * optional RecoverResult result = 1;
 * @return {!proto.cln.RecoverResponse.RecoverResult}
 */
proto.cln.RecoverResponse.prototype.getResult = function() {
  return /** @type {!proto.cln.RecoverResponse.RecoverResult} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.RecoverResponse.RecoverResult} value
 * @return {!proto.cln.RecoverResponse} returns this
 */
proto.cln.RecoverResponse.prototype.setResult = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.RecoverResponse} returns this
 */
proto.cln.RecoverResponse.prototype.clearResult = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.RecoverResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.RecoverchannelRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.RecoverchannelRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.RecoverchannelRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.RecoverchannelRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.RecoverchannelRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    scbList: msg.getScbList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.RecoverchannelRequest}
 */
proto.cln.RecoverchannelRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.RecoverchannelRequest;
  return proto.cln.RecoverchannelRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.RecoverchannelRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.RecoverchannelRequest}
 */
proto.cln.RecoverchannelRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addScb(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.RecoverchannelRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.RecoverchannelRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.RecoverchannelRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.RecoverchannelRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScbList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      1,
      f
    );
  }
};


/**
 * repeated bytes scb = 1;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.cln.RecoverchannelRequest.prototype.getScbList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * repeated bytes scb = 1;
 * This is a type-conversion wrapper around `getScbList()`
 * @return {!Array<string>}
 */
proto.cln.RecoverchannelRequest.prototype.getScbList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getScbList()));
};


/**
 * repeated bytes scb = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getScbList()`
 * @return {!Array<!Uint8Array>}
 */
proto.cln.RecoverchannelRequest.prototype.getScbList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getScbList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.cln.RecoverchannelRequest} returns this
 */
proto.cln.RecoverchannelRequest.prototype.setScbList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.cln.RecoverchannelRequest} returns this
 */
proto.cln.RecoverchannelRequest.prototype.addScb = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.RecoverchannelRequest} returns this
 */
proto.cln.RecoverchannelRequest.prototype.clearScbList = function() {
  return this.setScbList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.RecoverchannelResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.RecoverchannelResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.RecoverchannelResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.RecoverchannelResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.RecoverchannelResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    stubsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.RecoverchannelResponse}
 */
proto.cln.RecoverchannelResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.RecoverchannelResponse;
  return proto.cln.RecoverchannelResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.RecoverchannelResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.RecoverchannelResponse}
 */
proto.cln.RecoverchannelResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addStubs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.RecoverchannelResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.RecoverchannelResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.RecoverchannelResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.RecoverchannelResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStubsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string stubs = 1;
 * @return {!Array<string>}
 */
proto.cln.RecoverchannelResponse.prototype.getStubsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.RecoverchannelResponse} returns this
 */
proto.cln.RecoverchannelResponse.prototype.setStubsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.RecoverchannelResponse} returns this
 */
proto.cln.RecoverchannelResponse.prototype.addStubs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.RecoverchannelResponse} returns this
 */
proto.cln.RecoverchannelResponse.prototype.clearStubsList = function() {
  return this.setStubsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.InvoiceRequest.repeatedFields_ = [4,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.InvoiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.InvoiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.InvoiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.InvoiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    label: jspb.Message.getFieldWithDefault(msg, 3, ""),
    fallbacksList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    preimage: msg.getPreimage_asB64(),
    cltv: jspb.Message.getFieldWithDefault(msg, 6, 0),
    expiry: jspb.Message.getFieldWithDefault(msg, 7, 0),
    exposeprivatechannelsList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    deschashonly: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.AmountOrAny.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.InvoiceRequest}
 */
proto.cln.InvoiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.InvoiceRequest;
  return proto.cln.InvoiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.InvoiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.InvoiceRequest}
 */
proto.cln.InvoiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addFallbacks(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPreimage(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCltv(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExpiry(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addExposeprivatechannels(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeschashonly(value);
      break;
    case 10:
      var value = new cln_primitives_pb.AmountOrAny;
      reader.readMessage(value,cln_primitives_pb.AmountOrAny.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.InvoiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.InvoiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.InvoiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.InvoiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFallbacksList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getExposeprivatechannelsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      cln_primitives_pb.AmountOrAny.serializeBinaryToWriter
    );
  }
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.cln.InvoiceRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.InvoiceRequest} returns this
 */
proto.cln.InvoiceRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string label = 3;
 * @return {string}
 */
proto.cln.InvoiceRequest.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.InvoiceRequest} returns this
 */
proto.cln.InvoiceRequest.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string fallbacks = 4;
 * @return {!Array<string>}
 */
proto.cln.InvoiceRequest.prototype.getFallbacksList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.InvoiceRequest} returns this
 */
proto.cln.InvoiceRequest.prototype.setFallbacksList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.InvoiceRequest} returns this
 */
proto.cln.InvoiceRequest.prototype.addFallbacks = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.InvoiceRequest} returns this
 */
proto.cln.InvoiceRequest.prototype.clearFallbacksList = function() {
  return this.setFallbacksList([]);
};


/**
 * optional bytes preimage = 5;
 * @return {!(string|Uint8Array)}
 */
proto.cln.InvoiceRequest.prototype.getPreimage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes preimage = 5;
 * This is a type-conversion wrapper around `getPreimage()`
 * @return {string}
 */
proto.cln.InvoiceRequest.prototype.getPreimage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPreimage()));
};


/**
 * optional bytes preimage = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPreimage()`
 * @return {!Uint8Array}
 */
proto.cln.InvoiceRequest.prototype.getPreimage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPreimage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.InvoiceRequest} returns this
 */
proto.cln.InvoiceRequest.prototype.setPreimage = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.InvoiceRequest} returns this
 */
proto.cln.InvoiceRequest.prototype.clearPreimage = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.InvoiceRequest.prototype.hasPreimage = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 cltv = 6;
 * @return {number}
 */
proto.cln.InvoiceRequest.prototype.getCltv = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.InvoiceRequest} returns this
 */
proto.cln.InvoiceRequest.prototype.setCltv = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.InvoiceRequest} returns this
 */
proto.cln.InvoiceRequest.prototype.clearCltv = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.InvoiceRequest.prototype.hasCltv = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 expiry = 7;
 * @return {number}
 */
proto.cln.InvoiceRequest.prototype.getExpiry = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.InvoiceRequest} returns this
 */
proto.cln.InvoiceRequest.prototype.setExpiry = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.InvoiceRequest} returns this
 */
proto.cln.InvoiceRequest.prototype.clearExpiry = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.InvoiceRequest.prototype.hasExpiry = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated string exposeprivatechannels = 8;
 * @return {!Array<string>}
 */
proto.cln.InvoiceRequest.prototype.getExposeprivatechannelsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.InvoiceRequest} returns this
 */
proto.cln.InvoiceRequest.prototype.setExposeprivatechannelsList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.InvoiceRequest} returns this
 */
proto.cln.InvoiceRequest.prototype.addExposeprivatechannels = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.InvoiceRequest} returns this
 */
proto.cln.InvoiceRequest.prototype.clearExposeprivatechannelsList = function() {
  return this.setExposeprivatechannelsList([]);
};


/**
 * optional bool deschashonly = 9;
 * @return {boolean}
 */
proto.cln.InvoiceRequest.prototype.getDeschashonly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.InvoiceRequest} returns this
 */
proto.cln.InvoiceRequest.prototype.setDeschashonly = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.InvoiceRequest} returns this
 */
proto.cln.InvoiceRequest.prototype.clearDeschashonly = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.InvoiceRequest.prototype.hasDeschashonly = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional AmountOrAny amount_msat = 10;
 * @return {?proto.cln.AmountOrAny}
 */
proto.cln.InvoiceRequest.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.AmountOrAny} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.AmountOrAny, 10));
};


/**
 * @param {?proto.cln.AmountOrAny|undefined} value
 * @return {!proto.cln.InvoiceRequest} returns this
*/
proto.cln.InvoiceRequest.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.InvoiceRequest} returns this
 */
proto.cln.InvoiceRequest.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.InvoiceRequest.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.InvoiceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.InvoiceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.InvoiceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.InvoiceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    bolt11: jspb.Message.getFieldWithDefault(msg, 1, ""),
    paymentHash: msg.getPaymentHash_asB64(),
    paymentSecret: msg.getPaymentSecret_asB64(),
    expiresAt: jspb.Message.getFieldWithDefault(msg, 4, 0),
    warningCapacity: jspb.Message.getFieldWithDefault(msg, 5, ""),
    warningOffline: jspb.Message.getFieldWithDefault(msg, 6, ""),
    warningDeadends: jspb.Message.getFieldWithDefault(msg, 7, ""),
    warningPrivateUnused: jspb.Message.getFieldWithDefault(msg, 8, ""),
    warningMpp: jspb.Message.getFieldWithDefault(msg, 9, ""),
    createdIndex: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.InvoiceResponse}
 */
proto.cln.InvoiceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.InvoiceResponse;
  return proto.cln.InvoiceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.InvoiceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.InvoiceResponse}
 */
proto.cln.InvoiceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentSecret(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExpiresAt(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningCapacity(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningOffline(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningDeadends(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningPrivateUnused(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningMpp(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedIndex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.InvoiceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.InvoiceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.InvoiceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.InvoiceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBolt11();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getPaymentSecret_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getExpiresAt();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint64(
      10,
      f
    );
  }
};


/**
 * optional string bolt11 = 1;
 * @return {string}
 */
proto.cln.InvoiceResponse.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.InvoiceResponse} returns this
 */
proto.cln.InvoiceResponse.prototype.setBolt11 = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes payment_hash = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.InvoiceResponse.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes payment_hash = 2;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.InvoiceResponse.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.InvoiceResponse.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.InvoiceResponse} returns this
 */
proto.cln.InvoiceResponse.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes payment_secret = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.InvoiceResponse.prototype.getPaymentSecret = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes payment_secret = 3;
 * This is a type-conversion wrapper around `getPaymentSecret()`
 * @return {string}
 */
proto.cln.InvoiceResponse.prototype.getPaymentSecret_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentSecret()));
};


/**
 * optional bytes payment_secret = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentSecret()`
 * @return {!Uint8Array}
 */
proto.cln.InvoiceResponse.prototype.getPaymentSecret_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentSecret()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.InvoiceResponse} returns this
 */
proto.cln.InvoiceResponse.prototype.setPaymentSecret = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional uint64 expires_at = 4;
 * @return {number}
 */
proto.cln.InvoiceResponse.prototype.getExpiresAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.InvoiceResponse} returns this
 */
proto.cln.InvoiceResponse.prototype.setExpiresAt = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string warning_capacity = 5;
 * @return {string}
 */
proto.cln.InvoiceResponse.prototype.getWarningCapacity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.InvoiceResponse} returns this
 */
proto.cln.InvoiceResponse.prototype.setWarningCapacity = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.InvoiceResponse} returns this
 */
proto.cln.InvoiceResponse.prototype.clearWarningCapacity = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.InvoiceResponse.prototype.hasWarningCapacity = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string warning_offline = 6;
 * @return {string}
 */
proto.cln.InvoiceResponse.prototype.getWarningOffline = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.InvoiceResponse} returns this
 */
proto.cln.InvoiceResponse.prototype.setWarningOffline = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.InvoiceResponse} returns this
 */
proto.cln.InvoiceResponse.prototype.clearWarningOffline = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.InvoiceResponse.prototype.hasWarningOffline = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string warning_deadends = 7;
 * @return {string}
 */
proto.cln.InvoiceResponse.prototype.getWarningDeadends = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.InvoiceResponse} returns this
 */
proto.cln.InvoiceResponse.prototype.setWarningDeadends = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.InvoiceResponse} returns this
 */
proto.cln.InvoiceResponse.prototype.clearWarningDeadends = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.InvoiceResponse.prototype.hasWarningDeadends = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string warning_private_unused = 8;
 * @return {string}
 */
proto.cln.InvoiceResponse.prototype.getWarningPrivateUnused = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.InvoiceResponse} returns this
 */
proto.cln.InvoiceResponse.prototype.setWarningPrivateUnused = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.InvoiceResponse} returns this
 */
proto.cln.InvoiceResponse.prototype.clearWarningPrivateUnused = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.InvoiceResponse.prototype.hasWarningPrivateUnused = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string warning_mpp = 9;
 * @return {string}
 */
proto.cln.InvoiceResponse.prototype.getWarningMpp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.InvoiceResponse} returns this
 */
proto.cln.InvoiceResponse.prototype.setWarningMpp = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.InvoiceResponse} returns this
 */
proto.cln.InvoiceResponse.prototype.clearWarningMpp = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.InvoiceResponse.prototype.hasWarningMpp = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint64 created_index = 10;
 * @return {number}
 */
proto.cln.InvoiceResponse.prototype.getCreatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.InvoiceResponse} returns this
 */
proto.cln.InvoiceResponse.prototype.setCreatedIndex = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.InvoiceResponse} returns this
 */
proto.cln.InvoiceResponse.prototype.clearCreatedIndex = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.InvoiceResponse.prototype.hasCreatedIndex = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.InvoicerequestRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.InvoicerequestRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.InvoicerequestRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.InvoicerequestRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    amount: (f = msg.getAmount()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    issuer: jspb.Message.getFieldWithDefault(msg, 3, ""),
    label: jspb.Message.getFieldWithDefault(msg, 4, ""),
    absoluteExpiry: jspb.Message.getFieldWithDefault(msg, 5, 0),
    singleUse: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.InvoicerequestRequest}
 */
proto.cln.InvoicerequestRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.InvoicerequestRequest;
  return proto.cln.InvoicerequestRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.InvoicerequestRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.InvoicerequestRequest}
 */
proto.cln.InvoicerequestRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIssuer(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAbsoluteExpiry(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSingleUse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.InvoicerequestRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.InvoicerequestRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.InvoicerequestRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.InvoicerequestRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional Amount amount = 1;
 * @return {?proto.cln.Amount}
 */
proto.cln.InvoicerequestRequest.prototype.getAmount = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 1));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.InvoicerequestRequest} returns this
*/
proto.cln.InvoicerequestRequest.prototype.setAmount = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.InvoicerequestRequest} returns this
 */
proto.cln.InvoicerequestRequest.prototype.clearAmount = function() {
  return this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.InvoicerequestRequest.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.cln.InvoicerequestRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.InvoicerequestRequest} returns this
 */
proto.cln.InvoicerequestRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string issuer = 3;
 * @return {string}
 */
proto.cln.InvoicerequestRequest.prototype.getIssuer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.InvoicerequestRequest} returns this
 */
proto.cln.InvoicerequestRequest.prototype.setIssuer = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.InvoicerequestRequest} returns this
 */
proto.cln.InvoicerequestRequest.prototype.clearIssuer = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.InvoicerequestRequest.prototype.hasIssuer = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string label = 4;
 * @return {string}
 */
proto.cln.InvoicerequestRequest.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.InvoicerequestRequest} returns this
 */
proto.cln.InvoicerequestRequest.prototype.setLabel = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.InvoicerequestRequest} returns this
 */
proto.cln.InvoicerequestRequest.prototype.clearLabel = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.InvoicerequestRequest.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint64 absolute_expiry = 5;
 * @return {number}
 */
proto.cln.InvoicerequestRequest.prototype.getAbsoluteExpiry = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.InvoicerequestRequest} returns this
 */
proto.cln.InvoicerequestRequest.prototype.setAbsoluteExpiry = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.InvoicerequestRequest} returns this
 */
proto.cln.InvoicerequestRequest.prototype.clearAbsoluteExpiry = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.InvoicerequestRequest.prototype.hasAbsoluteExpiry = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool single_use = 6;
 * @return {boolean}
 */
proto.cln.InvoicerequestRequest.prototype.getSingleUse = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.InvoicerequestRequest} returns this
 */
proto.cln.InvoicerequestRequest.prototype.setSingleUse = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.InvoicerequestRequest} returns this
 */
proto.cln.InvoicerequestRequest.prototype.clearSingleUse = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.InvoicerequestRequest.prototype.hasSingleUse = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.InvoicerequestResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.InvoicerequestResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.InvoicerequestResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.InvoicerequestResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    invreqId: msg.getInvreqId_asB64(),
    active: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    singleUse: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    bolt12: jspb.Message.getFieldWithDefault(msg, 4, ""),
    used: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    label: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.InvoicerequestResponse}
 */
proto.cln.InvoicerequestResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.InvoicerequestResponse;
  return proto.cln.InvoicerequestResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.InvoicerequestResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.InvoicerequestResponse}
 */
proto.cln.InvoicerequestResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInvreqId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSingleUse(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt12(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUsed(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.InvoicerequestResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.InvoicerequestResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.InvoicerequestResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.InvoicerequestResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvreqId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getSingleUse();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getBolt12();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUsed();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional bytes invreq_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.InvoicerequestResponse.prototype.getInvreqId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes invreq_id = 1;
 * This is a type-conversion wrapper around `getInvreqId()`
 * @return {string}
 */
proto.cln.InvoicerequestResponse.prototype.getInvreqId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInvreqId()));
};


/**
 * optional bytes invreq_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInvreqId()`
 * @return {!Uint8Array}
 */
proto.cln.InvoicerequestResponse.prototype.getInvreqId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInvreqId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.InvoicerequestResponse} returns this
 */
proto.cln.InvoicerequestResponse.prototype.setInvreqId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bool active = 2;
 * @return {boolean}
 */
proto.cln.InvoicerequestResponse.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.InvoicerequestResponse} returns this
 */
proto.cln.InvoicerequestResponse.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool single_use = 3;
 * @return {boolean}
 */
proto.cln.InvoicerequestResponse.prototype.getSingleUse = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.InvoicerequestResponse} returns this
 */
proto.cln.InvoicerequestResponse.prototype.setSingleUse = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string bolt12 = 4;
 * @return {string}
 */
proto.cln.InvoicerequestResponse.prototype.getBolt12 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.InvoicerequestResponse} returns this
 */
proto.cln.InvoicerequestResponse.prototype.setBolt12 = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool used = 5;
 * @return {boolean}
 */
proto.cln.InvoicerequestResponse.prototype.getUsed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.InvoicerequestResponse} returns this
 */
proto.cln.InvoicerequestResponse.prototype.setUsed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string label = 6;
 * @return {string}
 */
proto.cln.InvoicerequestResponse.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.InvoicerequestResponse} returns this
 */
proto.cln.InvoicerequestResponse.prototype.setLabel = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.InvoicerequestResponse} returns this
 */
proto.cln.InvoicerequestResponse.prototype.clearLabel = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.InvoicerequestResponse.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DisableinvoicerequestRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DisableinvoicerequestRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DisableinvoicerequestRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DisableinvoicerequestRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    invreqId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DisableinvoicerequestRequest}
 */
proto.cln.DisableinvoicerequestRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DisableinvoicerequestRequest;
  return proto.cln.DisableinvoicerequestRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DisableinvoicerequestRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DisableinvoicerequestRequest}
 */
proto.cln.DisableinvoicerequestRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvreqId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DisableinvoicerequestRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DisableinvoicerequestRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DisableinvoicerequestRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DisableinvoicerequestRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvreqId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string invreq_id = 1;
 * @return {string}
 */
proto.cln.DisableinvoicerequestRequest.prototype.getInvreqId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DisableinvoicerequestRequest} returns this
 */
proto.cln.DisableinvoicerequestRequest.prototype.setInvreqId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DisableinvoicerequestResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DisableinvoicerequestResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DisableinvoicerequestResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DisableinvoicerequestResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    invreqId: msg.getInvreqId_asB64(),
    active: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    singleUse: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    bolt12: jspb.Message.getFieldWithDefault(msg, 4, ""),
    used: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    label: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DisableinvoicerequestResponse}
 */
proto.cln.DisableinvoicerequestResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DisableinvoicerequestResponse;
  return proto.cln.DisableinvoicerequestResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DisableinvoicerequestResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DisableinvoicerequestResponse}
 */
proto.cln.DisableinvoicerequestResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInvreqId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSingleUse(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt12(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUsed(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DisableinvoicerequestResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DisableinvoicerequestResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DisableinvoicerequestResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DisableinvoicerequestResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvreqId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getSingleUse();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getBolt12();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUsed();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional bytes invreq_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DisableinvoicerequestResponse.prototype.getInvreqId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes invreq_id = 1;
 * This is a type-conversion wrapper around `getInvreqId()`
 * @return {string}
 */
proto.cln.DisableinvoicerequestResponse.prototype.getInvreqId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInvreqId()));
};


/**
 * optional bytes invreq_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInvreqId()`
 * @return {!Uint8Array}
 */
proto.cln.DisableinvoicerequestResponse.prototype.getInvreqId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInvreqId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DisableinvoicerequestResponse} returns this
 */
proto.cln.DisableinvoicerequestResponse.prototype.setInvreqId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bool active = 2;
 * @return {boolean}
 */
proto.cln.DisableinvoicerequestResponse.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.DisableinvoicerequestResponse} returns this
 */
proto.cln.DisableinvoicerequestResponse.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool single_use = 3;
 * @return {boolean}
 */
proto.cln.DisableinvoicerequestResponse.prototype.getSingleUse = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.DisableinvoicerequestResponse} returns this
 */
proto.cln.DisableinvoicerequestResponse.prototype.setSingleUse = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string bolt12 = 4;
 * @return {string}
 */
proto.cln.DisableinvoicerequestResponse.prototype.getBolt12 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DisableinvoicerequestResponse} returns this
 */
proto.cln.DisableinvoicerequestResponse.prototype.setBolt12 = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool used = 5;
 * @return {boolean}
 */
proto.cln.DisableinvoicerequestResponse.prototype.getUsed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.DisableinvoicerequestResponse} returns this
 */
proto.cln.DisableinvoicerequestResponse.prototype.setUsed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string label = 6;
 * @return {string}
 */
proto.cln.DisableinvoicerequestResponse.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DisableinvoicerequestResponse} returns this
 */
proto.cln.DisableinvoicerequestResponse.prototype.setLabel = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DisableinvoicerequestResponse} returns this
 */
proto.cln.DisableinvoicerequestResponse.prototype.clearLabel = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DisableinvoicerequestResponse.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListinvoicerequestsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListinvoicerequestsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListinvoicerequestsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListinvoicerequestsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    invreqId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    activeOnly: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListinvoicerequestsRequest}
 */
proto.cln.ListinvoicerequestsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListinvoicerequestsRequest;
  return proto.cln.ListinvoicerequestsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListinvoicerequestsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListinvoicerequestsRequest}
 */
proto.cln.ListinvoicerequestsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvreqId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActiveOnly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListinvoicerequestsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListinvoicerequestsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListinvoicerequestsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListinvoicerequestsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string invreq_id = 1;
 * @return {string}
 */
proto.cln.ListinvoicerequestsRequest.prototype.getInvreqId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListinvoicerequestsRequest} returns this
 */
proto.cln.ListinvoicerequestsRequest.prototype.setInvreqId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicerequestsRequest} returns this
 */
proto.cln.ListinvoicerequestsRequest.prototype.clearInvreqId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicerequestsRequest.prototype.hasInvreqId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool active_only = 2;
 * @return {boolean}
 */
proto.cln.ListinvoicerequestsRequest.prototype.getActiveOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListinvoicerequestsRequest} returns this
 */
proto.cln.ListinvoicerequestsRequest.prototype.setActiveOnly = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicerequestsRequest} returns this
 */
proto.cln.ListinvoicerequestsRequest.prototype.clearActiveOnly = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicerequestsRequest.prototype.hasActiveOnly = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListinvoicerequestsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListinvoicerequestsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListinvoicerequestsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListinvoicerequestsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListinvoicerequestsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    invoicerequestsList: jspb.Message.toObjectList(msg.getInvoicerequestsList(),
    proto.cln.ListinvoicerequestsInvoicerequests.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListinvoicerequestsResponse}
 */
proto.cln.ListinvoicerequestsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListinvoicerequestsResponse;
  return proto.cln.ListinvoicerequestsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListinvoicerequestsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListinvoicerequestsResponse}
 */
proto.cln.ListinvoicerequestsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.ListinvoicerequestsInvoicerequests;
      reader.readMessage(value,proto.cln.ListinvoicerequestsInvoicerequests.deserializeBinaryFromReader);
      msg.addInvoicerequests(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListinvoicerequestsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListinvoicerequestsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListinvoicerequestsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListinvoicerequestsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvoicerequestsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.ListinvoicerequestsInvoicerequests.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ListinvoicerequestsInvoicerequests invoicerequests = 1;
 * @return {!Array<!proto.cln.ListinvoicerequestsInvoicerequests>}
 */
proto.cln.ListinvoicerequestsResponse.prototype.getInvoicerequestsList = function() {
  return /** @type{!Array<!proto.cln.ListinvoicerequestsInvoicerequests>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListinvoicerequestsInvoicerequests, 1));
};


/**
 * @param {!Array<!proto.cln.ListinvoicerequestsInvoicerequests>} value
 * @return {!proto.cln.ListinvoicerequestsResponse} returns this
*/
proto.cln.ListinvoicerequestsResponse.prototype.setInvoicerequestsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.ListinvoicerequestsInvoicerequests=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListinvoicerequestsInvoicerequests}
 */
proto.cln.ListinvoicerequestsResponse.prototype.addInvoicerequests = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.ListinvoicerequestsInvoicerequests, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListinvoicerequestsResponse} returns this
 */
proto.cln.ListinvoicerequestsResponse.prototype.clearInvoicerequestsList = function() {
  return this.setInvoicerequestsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListinvoicerequestsInvoicerequests.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListinvoicerequestsInvoicerequests.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListinvoicerequestsInvoicerequests} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListinvoicerequestsInvoicerequests.toObject = function(includeInstance, msg) {
  var f, obj = {
    invreqId: msg.getInvreqId_asB64(),
    active: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    singleUse: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    bolt12: jspb.Message.getFieldWithDefault(msg, 4, ""),
    used: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    label: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListinvoicerequestsInvoicerequests}
 */
proto.cln.ListinvoicerequestsInvoicerequests.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListinvoicerequestsInvoicerequests;
  return proto.cln.ListinvoicerequestsInvoicerequests.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListinvoicerequestsInvoicerequests} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListinvoicerequestsInvoicerequests}
 */
proto.cln.ListinvoicerequestsInvoicerequests.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInvreqId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSingleUse(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt12(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUsed(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListinvoicerequestsInvoicerequests.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListinvoicerequestsInvoicerequests.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListinvoicerequestsInvoicerequests} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListinvoicerequestsInvoicerequests.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvreqId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getSingleUse();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getBolt12();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUsed();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional bytes invreq_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListinvoicerequestsInvoicerequests.prototype.getInvreqId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes invreq_id = 1;
 * This is a type-conversion wrapper around `getInvreqId()`
 * @return {string}
 */
proto.cln.ListinvoicerequestsInvoicerequests.prototype.getInvreqId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInvreqId()));
};


/**
 * optional bytes invreq_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInvreqId()`
 * @return {!Uint8Array}
 */
proto.cln.ListinvoicerequestsInvoicerequests.prototype.getInvreqId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInvreqId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListinvoicerequestsInvoicerequests} returns this
 */
proto.cln.ListinvoicerequestsInvoicerequests.prototype.setInvreqId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bool active = 2;
 * @return {boolean}
 */
proto.cln.ListinvoicerequestsInvoicerequests.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListinvoicerequestsInvoicerequests} returns this
 */
proto.cln.ListinvoicerequestsInvoicerequests.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool single_use = 3;
 * @return {boolean}
 */
proto.cln.ListinvoicerequestsInvoicerequests.prototype.getSingleUse = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListinvoicerequestsInvoicerequests} returns this
 */
proto.cln.ListinvoicerequestsInvoicerequests.prototype.setSingleUse = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string bolt12 = 4;
 * @return {string}
 */
proto.cln.ListinvoicerequestsInvoicerequests.prototype.getBolt12 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListinvoicerequestsInvoicerequests} returns this
 */
proto.cln.ListinvoicerequestsInvoicerequests.prototype.setBolt12 = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool used = 5;
 * @return {boolean}
 */
proto.cln.ListinvoicerequestsInvoicerequests.prototype.getUsed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListinvoicerequestsInvoicerequests} returns this
 */
proto.cln.ListinvoicerequestsInvoicerequests.prototype.setUsed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string label = 6;
 * @return {string}
 */
proto.cln.ListinvoicerequestsInvoicerequests.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListinvoicerequestsInvoicerequests} returns this
 */
proto.cln.ListinvoicerequestsInvoicerequests.prototype.setLabel = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicerequestsInvoicerequests} returns this
 */
proto.cln.ListinvoicerequestsInvoicerequests.prototype.clearLabel = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicerequestsInvoicerequests.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListdatastoreRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListdatastoreRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListdatastoreRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListdatastoreRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListdatastoreRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    keyList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListdatastoreRequest}
 */
proto.cln.ListdatastoreRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListdatastoreRequest;
  return proto.cln.ListdatastoreRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListdatastoreRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListdatastoreRequest}
 */
proto.cln.ListdatastoreRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListdatastoreRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListdatastoreRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListdatastoreRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListdatastoreRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeyList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * repeated string key = 2;
 * @return {!Array<string>}
 */
proto.cln.ListdatastoreRequest.prototype.getKeyList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.ListdatastoreRequest} returns this
 */
proto.cln.ListdatastoreRequest.prototype.setKeyList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.ListdatastoreRequest} returns this
 */
proto.cln.ListdatastoreRequest.prototype.addKey = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListdatastoreRequest} returns this
 */
proto.cln.ListdatastoreRequest.prototype.clearKeyList = function() {
  return this.setKeyList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListdatastoreResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListdatastoreResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListdatastoreResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListdatastoreResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListdatastoreResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    datastoreList: jspb.Message.toObjectList(msg.getDatastoreList(),
    proto.cln.ListdatastoreDatastore.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListdatastoreResponse}
 */
proto.cln.ListdatastoreResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListdatastoreResponse;
  return proto.cln.ListdatastoreResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListdatastoreResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListdatastoreResponse}
 */
proto.cln.ListdatastoreResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.ListdatastoreDatastore;
      reader.readMessage(value,proto.cln.ListdatastoreDatastore.deserializeBinaryFromReader);
      msg.addDatastore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListdatastoreResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListdatastoreResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListdatastoreResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListdatastoreResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatastoreList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.ListdatastoreDatastore.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ListdatastoreDatastore datastore = 1;
 * @return {!Array<!proto.cln.ListdatastoreDatastore>}
 */
proto.cln.ListdatastoreResponse.prototype.getDatastoreList = function() {
  return /** @type{!Array<!proto.cln.ListdatastoreDatastore>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListdatastoreDatastore, 1));
};


/**
 * @param {!Array<!proto.cln.ListdatastoreDatastore>} value
 * @return {!proto.cln.ListdatastoreResponse} returns this
*/
proto.cln.ListdatastoreResponse.prototype.setDatastoreList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.ListdatastoreDatastore=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListdatastoreDatastore}
 */
proto.cln.ListdatastoreResponse.prototype.addDatastore = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.ListdatastoreDatastore, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListdatastoreResponse} returns this
 */
proto.cln.ListdatastoreResponse.prototype.clearDatastoreList = function() {
  return this.setDatastoreList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListdatastoreDatastore.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListdatastoreDatastore.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListdatastoreDatastore.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListdatastoreDatastore} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListdatastoreDatastore.toObject = function(includeInstance, msg) {
  var f, obj = {
    keyList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    generation: jspb.Message.getFieldWithDefault(msg, 2, 0),
    hex: msg.getHex_asB64(),
    string: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListdatastoreDatastore}
 */
proto.cln.ListdatastoreDatastore.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListdatastoreDatastore;
  return proto.cln.ListdatastoreDatastore.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListdatastoreDatastore} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListdatastoreDatastore}
 */
proto.cln.ListdatastoreDatastore.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addKey(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGeneration(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHex(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setString(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListdatastoreDatastore.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListdatastoreDatastore.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListdatastoreDatastore} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListdatastoreDatastore.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeyList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * repeated string key = 1;
 * @return {!Array<string>}
 */
proto.cln.ListdatastoreDatastore.prototype.getKeyList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.ListdatastoreDatastore} returns this
 */
proto.cln.ListdatastoreDatastore.prototype.setKeyList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.ListdatastoreDatastore} returns this
 */
proto.cln.ListdatastoreDatastore.prototype.addKey = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListdatastoreDatastore} returns this
 */
proto.cln.ListdatastoreDatastore.prototype.clearKeyList = function() {
  return this.setKeyList([]);
};


/**
 * optional uint64 generation = 2;
 * @return {number}
 */
proto.cln.ListdatastoreDatastore.prototype.getGeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListdatastoreDatastore} returns this
 */
proto.cln.ListdatastoreDatastore.prototype.setGeneration = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListdatastoreDatastore} returns this
 */
proto.cln.ListdatastoreDatastore.prototype.clearGeneration = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListdatastoreDatastore.prototype.hasGeneration = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes hex = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListdatastoreDatastore.prototype.getHex = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes hex = 3;
 * This is a type-conversion wrapper around `getHex()`
 * @return {string}
 */
proto.cln.ListdatastoreDatastore.prototype.getHex_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHex()));
};


/**
 * optional bytes hex = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHex()`
 * @return {!Uint8Array}
 */
proto.cln.ListdatastoreDatastore.prototype.getHex_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHex()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListdatastoreDatastore} returns this
 */
proto.cln.ListdatastoreDatastore.prototype.setHex = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListdatastoreDatastore} returns this
 */
proto.cln.ListdatastoreDatastore.prototype.clearHex = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListdatastoreDatastore.prototype.hasHex = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string string = 4;
 * @return {string}
 */
proto.cln.ListdatastoreDatastore.prototype.getString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListdatastoreDatastore} returns this
 */
proto.cln.ListdatastoreDatastore.prototype.setString = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListdatastoreDatastore} returns this
 */
proto.cln.ListdatastoreDatastore.prototype.clearString = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListdatastoreDatastore.prototype.hasString = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListinvoicesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListinvoicesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListinvoicesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListinvoicesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: jspb.Message.getFieldWithDefault(msg, 1, ""),
    invstring: jspb.Message.getFieldWithDefault(msg, 2, ""),
    paymentHash: msg.getPaymentHash_asB64(),
    offerId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    index: jspb.Message.getFieldWithDefault(msg, 5, 0),
    start: jspb.Message.getFieldWithDefault(msg, 6, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListinvoicesRequest}
 */
proto.cln.ListinvoicesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListinvoicesRequest;
  return proto.cln.ListinvoicesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListinvoicesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListinvoicesRequest}
 */
proto.cln.ListinvoicesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvstring(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOfferId(value);
      break;
    case 5:
      var value = /** @type {!proto.cln.ListinvoicesRequest.ListinvoicesIndex} */ (reader.readEnum());
      msg.setIndex(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStart(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListinvoicesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListinvoicesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListinvoicesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListinvoicesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {!proto.cln.ListinvoicesRequest.ListinvoicesIndex} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ListinvoicesRequest.ListinvoicesIndex = {
  CREATED: 0,
  UPDATED: 1
};

/**
 * optional string label = 1;
 * @return {string}
 */
proto.cln.ListinvoicesRequest.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListinvoicesRequest} returns this
 */
proto.cln.ListinvoicesRequest.prototype.setLabel = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicesRequest} returns this
 */
proto.cln.ListinvoicesRequest.prototype.clearLabel = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesRequest.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string invstring = 2;
 * @return {string}
 */
proto.cln.ListinvoicesRequest.prototype.getInvstring = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListinvoicesRequest} returns this
 */
proto.cln.ListinvoicesRequest.prototype.setInvstring = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicesRequest} returns this
 */
proto.cln.ListinvoicesRequest.prototype.clearInvstring = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesRequest.prototype.hasInvstring = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes payment_hash = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListinvoicesRequest.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes payment_hash = 3;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.ListinvoicesRequest.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.ListinvoicesRequest.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListinvoicesRequest} returns this
 */
proto.cln.ListinvoicesRequest.prototype.setPaymentHash = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicesRequest} returns this
 */
proto.cln.ListinvoicesRequest.prototype.clearPaymentHash = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesRequest.prototype.hasPaymentHash = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string offer_id = 4;
 * @return {string}
 */
proto.cln.ListinvoicesRequest.prototype.getOfferId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListinvoicesRequest} returns this
 */
proto.cln.ListinvoicesRequest.prototype.setOfferId = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicesRequest} returns this
 */
proto.cln.ListinvoicesRequest.prototype.clearOfferId = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesRequest.prototype.hasOfferId = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ListinvoicesIndex index = 5;
 * @return {!proto.cln.ListinvoicesRequest.ListinvoicesIndex}
 */
proto.cln.ListinvoicesRequest.prototype.getIndex = function() {
  return /** @type {!proto.cln.ListinvoicesRequest.ListinvoicesIndex} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.cln.ListinvoicesRequest.ListinvoicesIndex} value
 * @return {!proto.cln.ListinvoicesRequest} returns this
 */
proto.cln.ListinvoicesRequest.prototype.setIndex = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicesRequest} returns this
 */
proto.cln.ListinvoicesRequest.prototype.clearIndex = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesRequest.prototype.hasIndex = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint64 start = 6;
 * @return {number}
 */
proto.cln.ListinvoicesRequest.prototype.getStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListinvoicesRequest} returns this
 */
proto.cln.ListinvoicesRequest.prototype.setStart = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicesRequest} returns this
 */
proto.cln.ListinvoicesRequest.prototype.clearStart = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesRequest.prototype.hasStart = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 limit = 7;
 * @return {number}
 */
proto.cln.ListinvoicesRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListinvoicesRequest} returns this
 */
proto.cln.ListinvoicesRequest.prototype.setLimit = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicesRequest} returns this
 */
proto.cln.ListinvoicesRequest.prototype.clearLimit = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesRequest.prototype.hasLimit = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListinvoicesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListinvoicesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListinvoicesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListinvoicesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListinvoicesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    invoicesList: jspb.Message.toObjectList(msg.getInvoicesList(),
    proto.cln.ListinvoicesInvoices.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListinvoicesResponse}
 */
proto.cln.ListinvoicesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListinvoicesResponse;
  return proto.cln.ListinvoicesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListinvoicesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListinvoicesResponse}
 */
proto.cln.ListinvoicesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.ListinvoicesInvoices;
      reader.readMessage(value,proto.cln.ListinvoicesInvoices.deserializeBinaryFromReader);
      msg.addInvoices(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListinvoicesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListinvoicesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListinvoicesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListinvoicesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvoicesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.ListinvoicesInvoices.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ListinvoicesInvoices invoices = 1;
 * @return {!Array<!proto.cln.ListinvoicesInvoices>}
 */
proto.cln.ListinvoicesResponse.prototype.getInvoicesList = function() {
  return /** @type{!Array<!proto.cln.ListinvoicesInvoices>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListinvoicesInvoices, 1));
};


/**
 * @param {!Array<!proto.cln.ListinvoicesInvoices>} value
 * @return {!proto.cln.ListinvoicesResponse} returns this
*/
proto.cln.ListinvoicesResponse.prototype.setInvoicesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.ListinvoicesInvoices=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListinvoicesInvoices}
 */
proto.cln.ListinvoicesResponse.prototype.addInvoices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.ListinvoicesInvoices, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListinvoicesResponse} returns this
 */
proto.cln.ListinvoicesResponse.prototype.clearInvoicesList = function() {
  return this.setInvoicesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListinvoicesInvoices.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListinvoicesInvoices.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListinvoicesInvoices} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListinvoicesInvoices.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    paymentHash: msg.getPaymentHash_asB64(),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0),
    expiresAt: jspb.Message.getFieldWithDefault(msg, 5, 0),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    bolt11: jspb.Message.getFieldWithDefault(msg, 7, ""),
    bolt12: jspb.Message.getFieldWithDefault(msg, 8, ""),
    localOfferId: msg.getLocalOfferId_asB64(),
    payIndex: jspb.Message.getFieldWithDefault(msg, 11, 0),
    amountReceivedMsat: (f = msg.getAmountReceivedMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    paidAt: jspb.Message.getFieldWithDefault(msg, 13, 0),
    paymentPreimage: msg.getPaymentPreimage_asB64(),
    invreqPayerNote: jspb.Message.getFieldWithDefault(msg, 15, ""),
    createdIndex: jspb.Message.getFieldWithDefault(msg, 16, 0),
    updatedIndex: jspb.Message.getFieldWithDefault(msg, 17, 0),
    paidOutpoint: (f = msg.getPaidOutpoint()) && proto.cln.ListinvoicesInvoicesPaid_outpoint.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListinvoicesInvoices}
 */
proto.cln.ListinvoicesInvoices.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListinvoicesInvoices;
  return proto.cln.ListinvoicesInvoices.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListinvoicesInvoices} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListinvoicesInvoices}
 */
proto.cln.ListinvoicesInvoices.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 4:
      var value = /** @type {!proto.cln.ListinvoicesInvoices.ListinvoicesInvoicesStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExpiresAt(value);
      break;
    case 6:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt12(value);
      break;
    case 9:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setLocalOfferId(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPayIndex(value);
      break;
    case 12:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountReceivedMsat(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPaidAt(value);
      break;
    case 14:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentPreimage(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvreqPayerNote(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedIndex(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpdatedIndex(value);
      break;
    case 18:
      var value = new proto.cln.ListinvoicesInvoicesPaid_outpoint;
      reader.readMessage(value,proto.cln.ListinvoicesInvoicesPaid_outpoint.deserializeBinaryFromReader);
      msg.setPaidOutpoint(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListinvoicesInvoices.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListinvoicesInvoices.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListinvoicesInvoices} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListinvoicesInvoices.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getExpiresAt();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBytes(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = message.getAmountReceivedMsat();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeUint64(
      13,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeBytes(
      14,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeString(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint64(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeUint64(
      17,
      f
    );
  }
  f = message.getPaidOutpoint();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.cln.ListinvoicesInvoicesPaid_outpoint.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ListinvoicesInvoices.ListinvoicesInvoicesStatus = {
  UNPAID: 0,
  PAID: 1,
  EXPIRED: 2
};

/**
 * optional string label = 1;
 * @return {string}
 */
proto.cln.ListinvoicesInvoices.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.cln.ListinvoicesInvoices.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesInvoices.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes payment_hash = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListinvoicesInvoices.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes payment_hash = 3;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.ListinvoicesInvoices.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.ListinvoicesInvoices.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional ListinvoicesInvoicesStatus status = 4;
 * @return {!proto.cln.ListinvoicesInvoices.ListinvoicesInvoicesStatus}
 */
proto.cln.ListinvoicesInvoices.prototype.getStatus = function() {
  return /** @type {!proto.cln.ListinvoicesInvoices.ListinvoicesInvoicesStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.cln.ListinvoicesInvoices.ListinvoicesInvoicesStatus} value
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional uint64 expires_at = 5;
 * @return {number}
 */
proto.cln.ListinvoicesInvoices.prototype.getExpiresAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.setExpiresAt = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional Amount amount_msat = 6;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListinvoicesInvoices.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 6));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListinvoicesInvoices} returns this
*/
proto.cln.ListinvoicesInvoices.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesInvoices.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string bolt11 = 7;
 * @return {string}
 */
proto.cln.ListinvoicesInvoices.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.setBolt11 = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.clearBolt11 = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesInvoices.prototype.hasBolt11 = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string bolt12 = 8;
 * @return {string}
 */
proto.cln.ListinvoicesInvoices.prototype.getBolt12 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.setBolt12 = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.clearBolt12 = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesInvoices.prototype.hasBolt12 = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bytes local_offer_id = 9;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListinvoicesInvoices.prototype.getLocalOfferId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * optional bytes local_offer_id = 9;
 * This is a type-conversion wrapper around `getLocalOfferId()`
 * @return {string}
 */
proto.cln.ListinvoicesInvoices.prototype.getLocalOfferId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getLocalOfferId()));
};


/**
 * optional bytes local_offer_id = 9;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getLocalOfferId()`
 * @return {!Uint8Array}
 */
proto.cln.ListinvoicesInvoices.prototype.getLocalOfferId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getLocalOfferId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.setLocalOfferId = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.clearLocalOfferId = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesInvoices.prototype.hasLocalOfferId = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint64 pay_index = 11;
 * @return {number}
 */
proto.cln.ListinvoicesInvoices.prototype.getPayIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.setPayIndex = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.clearPayIndex = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesInvoices.prototype.hasPayIndex = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Amount amount_received_msat = 12;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListinvoicesInvoices.prototype.getAmountReceivedMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 12));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListinvoicesInvoices} returns this
*/
proto.cln.ListinvoicesInvoices.prototype.setAmountReceivedMsat = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.clearAmountReceivedMsat = function() {
  return this.setAmountReceivedMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesInvoices.prototype.hasAmountReceivedMsat = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional uint64 paid_at = 13;
 * @return {number}
 */
proto.cln.ListinvoicesInvoices.prototype.getPaidAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.setPaidAt = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.clearPaidAt = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesInvoices.prototype.hasPaidAt = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional bytes payment_preimage = 14;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListinvoicesInvoices.prototype.getPaymentPreimage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * optional bytes payment_preimage = 14;
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {string}
 */
proto.cln.ListinvoicesInvoices.prototype.getPaymentPreimage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentPreimage()));
};


/**
 * optional bytes payment_preimage = 14;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {!Uint8Array}
 */
proto.cln.ListinvoicesInvoices.prototype.getPaymentPreimage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentPreimage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.setPaymentPreimage = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.clearPaymentPreimage = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesInvoices.prototype.hasPaymentPreimage = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string invreq_payer_note = 15;
 * @return {string}
 */
proto.cln.ListinvoicesInvoices.prototype.getInvreqPayerNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.setInvreqPayerNote = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.clearInvreqPayerNote = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesInvoices.prototype.hasInvreqPayerNote = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional uint64 created_index = 16;
 * @return {number}
 */
proto.cln.ListinvoicesInvoices.prototype.getCreatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.setCreatedIndex = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.clearCreatedIndex = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesInvoices.prototype.hasCreatedIndex = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional uint64 updated_index = 17;
 * @return {number}
 */
proto.cln.ListinvoicesInvoices.prototype.getUpdatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.setUpdatedIndex = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.clearUpdatedIndex = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesInvoices.prototype.hasUpdatedIndex = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional ListinvoicesInvoicesPaid_outpoint paid_outpoint = 18;
 * @return {?proto.cln.ListinvoicesInvoicesPaid_outpoint}
 */
proto.cln.ListinvoicesInvoices.prototype.getPaidOutpoint = function() {
  return /** @type{?proto.cln.ListinvoicesInvoicesPaid_outpoint} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListinvoicesInvoicesPaid_outpoint, 18));
};


/**
 * @param {?proto.cln.ListinvoicesInvoicesPaid_outpoint|undefined} value
 * @return {!proto.cln.ListinvoicesInvoices} returns this
*/
proto.cln.ListinvoicesInvoices.prototype.setPaidOutpoint = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.clearPaidOutpoint = function() {
  return this.setPaidOutpoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesInvoices.prototype.hasPaidOutpoint = function() {
  return jspb.Message.getField(this, 18) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListinvoicesInvoicesPaid_outpoint.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListinvoicesInvoicesPaid_outpoint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListinvoicesInvoicesPaid_outpoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListinvoicesInvoicesPaid_outpoint.toObject = function(includeInstance, msg) {
  var f, obj = {
    txid: msg.getTxid_asB64(),
    outnum: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListinvoicesInvoicesPaid_outpoint}
 */
proto.cln.ListinvoicesInvoicesPaid_outpoint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListinvoicesInvoicesPaid_outpoint;
  return proto.cln.ListinvoicesInvoicesPaid_outpoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListinvoicesInvoicesPaid_outpoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListinvoicesInvoicesPaid_outpoint}
 */
proto.cln.ListinvoicesInvoicesPaid_outpoint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOutnum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListinvoicesInvoicesPaid_outpoint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListinvoicesInvoicesPaid_outpoint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListinvoicesInvoicesPaid_outpoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListinvoicesInvoicesPaid_outpoint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getOutnum();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional bytes txid = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListinvoicesInvoicesPaid_outpoint.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes txid = 1;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.ListinvoicesInvoicesPaid_outpoint.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.ListinvoicesInvoicesPaid_outpoint.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListinvoicesInvoicesPaid_outpoint} returns this
 */
proto.cln.ListinvoicesInvoicesPaid_outpoint.prototype.setTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint32 outnum = 2;
 * @return {number}
 */
proto.cln.ListinvoicesInvoicesPaid_outpoint.prototype.getOutnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListinvoicesInvoicesPaid_outpoint} returns this
 */
proto.cln.ListinvoicesInvoicesPaid_outpoint.prototype.setOutnum = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.SendonionRequest.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SendonionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SendonionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SendonionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendonionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    onion: msg.getOnion_asB64(),
    firstHop: (f = msg.getFirstHop()) && proto.cln.SendonionFirst_hop.toObject(includeInstance, f),
    paymentHash: msg.getPaymentHash_asB64(),
    label: jspb.Message.getFieldWithDefault(msg, 4, ""),
    sharedSecretsList: msg.getSharedSecretsList_asB64(),
    partid: jspb.Message.getFieldWithDefault(msg, 6, 0),
    bolt11: jspb.Message.getFieldWithDefault(msg, 7, ""),
    destination: msg.getDestination_asB64(),
    groupid: jspb.Message.getFieldWithDefault(msg, 11, 0),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    localinvreqid: msg.getLocalinvreqid_asB64(),
    description: jspb.Message.getFieldWithDefault(msg, 14, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SendonionRequest}
 */
proto.cln.SendonionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SendonionRequest;
  return proto.cln.SendonionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SendonionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SendonionRequest}
 */
proto.cln.SendonionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOnion(value);
      break;
    case 2:
      var value = new proto.cln.SendonionFirst_hop;
      reader.readMessage(value,proto.cln.SendonionFirst_hop.deserializeBinaryFromReader);
      msg.setFirstHop(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addSharedSecrets(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPartid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 9:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDestination(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGroupid(value);
      break;
    case 12:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 13:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setLocalinvreqid(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SendonionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SendonionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SendonionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendonionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOnion_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getFirstHop();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cln.SendonionFirst_hop.serializeBinaryToWriter
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSharedSecretsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBytes(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBytes(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
};


/**
 * optional bytes onion = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendonionRequest.prototype.getOnion = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes onion = 1;
 * This is a type-conversion wrapper around `getOnion()`
 * @return {string}
 */
proto.cln.SendonionRequest.prototype.getOnion_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOnion()));
};


/**
 * optional bytes onion = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOnion()`
 * @return {!Uint8Array}
 */
proto.cln.SendonionRequest.prototype.getOnion_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOnion()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.setOnion = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional SendonionFirst_hop first_hop = 2;
 * @return {?proto.cln.SendonionFirst_hop}
 */
proto.cln.SendonionRequest.prototype.getFirstHop = function() {
  return /** @type{?proto.cln.SendonionFirst_hop} */ (
    jspb.Message.getWrapperField(this, proto.cln.SendonionFirst_hop, 2));
};


/**
 * @param {?proto.cln.SendonionFirst_hop|undefined} value
 * @return {!proto.cln.SendonionRequest} returns this
*/
proto.cln.SendonionRequest.prototype.setFirstHop = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.clearFirstHop = function() {
  return this.setFirstHop(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionRequest.prototype.hasFirstHop = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes payment_hash = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendonionRequest.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes payment_hash = 3;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.SendonionRequest.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.SendonionRequest.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional string label = 4;
 * @return {string}
 */
proto.cln.SendonionRequest.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.setLabel = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.clearLabel = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionRequest.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated bytes shared_secrets = 5;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.cln.SendonionRequest.prototype.getSharedSecretsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * repeated bytes shared_secrets = 5;
 * This is a type-conversion wrapper around `getSharedSecretsList()`
 * @return {!Array<string>}
 */
proto.cln.SendonionRequest.prototype.getSharedSecretsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getSharedSecretsList()));
};


/**
 * repeated bytes shared_secrets = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSharedSecretsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.cln.SendonionRequest.prototype.getSharedSecretsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getSharedSecretsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.setSharedSecretsList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.addSharedSecrets = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.clearSharedSecretsList = function() {
  return this.setSharedSecretsList([]);
};


/**
 * optional uint32 partid = 6;
 * @return {number}
 */
proto.cln.SendonionRequest.prototype.getPartid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.setPartid = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.clearPartid = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionRequest.prototype.hasPartid = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string bolt11 = 7;
 * @return {string}
 */
proto.cln.SendonionRequest.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.setBolt11 = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.clearBolt11 = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionRequest.prototype.hasBolt11 = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bytes destination = 9;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendonionRequest.prototype.getDestination = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * optional bytes destination = 9;
 * This is a type-conversion wrapper around `getDestination()`
 * @return {string}
 */
proto.cln.SendonionRequest.prototype.getDestination_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDestination()));
};


/**
 * optional bytes destination = 9;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDestination()`
 * @return {!Uint8Array}
 */
proto.cln.SendonionRequest.prototype.getDestination_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDestination()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.setDestination = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.clearDestination = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionRequest.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint64 groupid = 11;
 * @return {number}
 */
proto.cln.SendonionRequest.prototype.getGroupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.setGroupid = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.clearGroupid = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionRequest.prototype.hasGroupid = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Amount amount_msat = 12;
 * @return {?proto.cln.Amount}
 */
proto.cln.SendonionRequest.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 12));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.SendonionRequest} returns this
*/
proto.cln.SendonionRequest.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionRequest.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bytes localinvreqid = 13;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendonionRequest.prototype.getLocalinvreqid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * optional bytes localinvreqid = 13;
 * This is a type-conversion wrapper around `getLocalinvreqid()`
 * @return {string}
 */
proto.cln.SendonionRequest.prototype.getLocalinvreqid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getLocalinvreqid()));
};


/**
 * optional bytes localinvreqid = 13;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getLocalinvreqid()`
 * @return {!Uint8Array}
 */
proto.cln.SendonionRequest.prototype.getLocalinvreqid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getLocalinvreqid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.setLocalinvreqid = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.clearLocalinvreqid = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionRequest.prototype.hasLocalinvreqid = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string description = 14;
 * @return {string}
 */
proto.cln.SendonionRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionRequest.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 14) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SendonionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SendonionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SendonionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendonionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    paymentHash: msg.getPaymentHash_asB64(),
    status: jspb.Message.getFieldWithDefault(msg, 3, 0),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    destination: msg.getDestination_asB64(),
    createdAt: jspb.Message.getFieldWithDefault(msg, 6, 0),
    amountSentMsat: (f = msg.getAmountSentMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    label: jspb.Message.getFieldWithDefault(msg, 8, ""),
    bolt11: jspb.Message.getFieldWithDefault(msg, 9, ""),
    bolt12: jspb.Message.getFieldWithDefault(msg, 10, ""),
    paymentPreimage: msg.getPaymentPreimage_asB64(),
    message: jspb.Message.getFieldWithDefault(msg, 12, ""),
    partid: jspb.Message.getFieldWithDefault(msg, 13, 0),
    createdIndex: jspb.Message.getFieldWithDefault(msg, 14, 0),
    updatedIndex: jspb.Message.getFieldWithDefault(msg, 15, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SendonionResponse}
 */
proto.cln.SendonionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SendonionResponse;
  return proto.cln.SendonionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SendonionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SendonionResponse}
 */
proto.cln.SendonionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 3:
      var value = /** @type {!proto.cln.SendonionResponse.SendonionStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDestination(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedAt(value);
      break;
    case 7:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountSentMsat(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt12(value);
      break;
    case 11:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentPreimage(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPartid(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedIndex(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpdatedIndex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SendonionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SendonionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SendonionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendonionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getAmountSentMsat();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeBytes(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeUint64(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeUint64(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint64(
      15,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.SendonionResponse.SendonionStatus = {
  PENDING: 0,
  COMPLETE: 1
};

/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.cln.SendonionResponse.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bytes payment_hash = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendonionResponse.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes payment_hash = 2;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.SendonionResponse.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.SendonionResponse.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional SendonionStatus status = 3;
 * @return {!proto.cln.SendonionResponse.SendonionStatus}
 */
proto.cln.SendonionResponse.prototype.getStatus = function() {
  return /** @type {!proto.cln.SendonionResponse.SendonionStatus} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.cln.SendonionResponse.SendonionStatus} value
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional Amount amount_msat = 4;
 * @return {?proto.cln.Amount}
 */
proto.cln.SendonionResponse.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 4));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.SendonionResponse} returns this
*/
proto.cln.SendonionResponse.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionResponse.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bytes destination = 5;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendonionResponse.prototype.getDestination = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes destination = 5;
 * This is a type-conversion wrapper around `getDestination()`
 * @return {string}
 */
proto.cln.SendonionResponse.prototype.getDestination_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDestination()));
};


/**
 * optional bytes destination = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDestination()`
 * @return {!Uint8Array}
 */
proto.cln.SendonionResponse.prototype.getDestination_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDestination()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.setDestination = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.clearDestination = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionResponse.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint64 created_at = 6;
 * @return {number}
 */
proto.cln.SendonionResponse.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional Amount amount_sent_msat = 7;
 * @return {?proto.cln.Amount}
 */
proto.cln.SendonionResponse.prototype.getAmountSentMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 7));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.SendonionResponse} returns this
*/
proto.cln.SendonionResponse.prototype.setAmountSentMsat = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.clearAmountSentMsat = function() {
  return this.setAmountSentMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionResponse.prototype.hasAmountSentMsat = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string label = 8;
 * @return {string}
 */
proto.cln.SendonionResponse.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.setLabel = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.clearLabel = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionResponse.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string bolt11 = 9;
 * @return {string}
 */
proto.cln.SendonionResponse.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.setBolt11 = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.clearBolt11 = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionResponse.prototype.hasBolt11 = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string bolt12 = 10;
 * @return {string}
 */
proto.cln.SendonionResponse.prototype.getBolt12 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.setBolt12 = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.clearBolt12 = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionResponse.prototype.hasBolt12 = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional bytes payment_preimage = 11;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendonionResponse.prototype.getPaymentPreimage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * optional bytes payment_preimage = 11;
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {string}
 */
proto.cln.SendonionResponse.prototype.getPaymentPreimage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentPreimage()));
};


/**
 * optional bytes payment_preimage = 11;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {!Uint8Array}
 */
proto.cln.SendonionResponse.prototype.getPaymentPreimage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentPreimage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.setPaymentPreimage = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.clearPaymentPreimage = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionResponse.prototype.hasPaymentPreimage = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string message = 12;
 * @return {string}
 */
proto.cln.SendonionResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.setMessage = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.clearMessage = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionResponse.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional uint64 partid = 13;
 * @return {number}
 */
proto.cln.SendonionResponse.prototype.getPartid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.setPartid = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.clearPartid = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionResponse.prototype.hasPartid = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional uint64 created_index = 14;
 * @return {number}
 */
proto.cln.SendonionResponse.prototype.getCreatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.setCreatedIndex = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.clearCreatedIndex = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionResponse.prototype.hasCreatedIndex = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional uint64 updated_index = 15;
 * @return {number}
 */
proto.cln.SendonionResponse.prototype.getUpdatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.setUpdatedIndex = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.clearUpdatedIndex = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionResponse.prototype.hasUpdatedIndex = function() {
  return jspb.Message.getField(this, 15) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SendonionFirst_hop.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SendonionFirst_hop.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SendonionFirst_hop} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendonionFirst_hop.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64(),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    delay: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SendonionFirst_hop}
 */
proto.cln.SendonionFirst_hop.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SendonionFirst_hop;
  return proto.cln.SendonionFirst_hop.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SendonionFirst_hop} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SendonionFirst_hop}
 */
proto.cln.SendonionFirst_hop.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    case 2:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDelay(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SendonionFirst_hop.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SendonionFirst_hop.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SendonionFirst_hop} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendonionFirst_hop.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getDelay();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional bytes id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendonionFirst_hop.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes id = 1;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.cln.SendonionFirst_hop.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.cln.SendonionFirst_hop.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendonionFirst_hop} returns this
 */
proto.cln.SendonionFirst_hop.prototype.setId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional Amount amount_msat = 2;
 * @return {?proto.cln.Amount}
 */
proto.cln.SendonionFirst_hop.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 2));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.SendonionFirst_hop} returns this
*/
proto.cln.SendonionFirst_hop.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.SendonionFirst_hop} returns this
 */
proto.cln.SendonionFirst_hop.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionFirst_hop.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 delay = 3;
 * @return {number}
 */
proto.cln.SendonionFirst_hop.prototype.getDelay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendonionFirst_hop} returns this
 */
proto.cln.SendonionFirst_hop.prototype.setDelay = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListsendpaysRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListsendpaysRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListsendpaysRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListsendpaysRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    bolt11: jspb.Message.getFieldWithDefault(msg, 1, ""),
    paymentHash: msg.getPaymentHash_asB64(),
    status: jspb.Message.getFieldWithDefault(msg, 3, 0),
    index: jspb.Message.getFieldWithDefault(msg, 4, 0),
    start: jspb.Message.getFieldWithDefault(msg, 5, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListsendpaysRequest}
 */
proto.cln.ListsendpaysRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListsendpaysRequest;
  return proto.cln.ListsendpaysRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListsendpaysRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListsendpaysRequest}
 */
proto.cln.ListsendpaysRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 3:
      var value = /** @type {!proto.cln.ListsendpaysRequest.ListsendpaysStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 4:
      var value = /** @type {!proto.cln.ListsendpaysRequest.ListsendpaysIndex} */ (reader.readEnum());
      msg.setIndex(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStart(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListsendpaysRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListsendpaysRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListsendpaysRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListsendpaysRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = /** @type {!proto.cln.ListsendpaysRequest.ListsendpaysStatus} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {!proto.cln.ListsendpaysRequest.ListsendpaysIndex} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ListsendpaysRequest.ListsendpaysStatus = {
  PENDING: 0,
  COMPLETE: 1,
  FAILED: 2
};

/**
 * @enum {number}
 */
proto.cln.ListsendpaysRequest.ListsendpaysIndex = {
  CREATED: 0,
  UPDATED: 1
};

/**
 * optional string bolt11 = 1;
 * @return {string}
 */
proto.cln.ListsendpaysRequest.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListsendpaysRequest} returns this
 */
proto.cln.ListsendpaysRequest.prototype.setBolt11 = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListsendpaysRequest} returns this
 */
proto.cln.ListsendpaysRequest.prototype.clearBolt11 = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListsendpaysRequest.prototype.hasBolt11 = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes payment_hash = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListsendpaysRequest.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes payment_hash = 2;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.ListsendpaysRequest.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.ListsendpaysRequest.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListsendpaysRequest} returns this
 */
proto.cln.ListsendpaysRequest.prototype.setPaymentHash = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListsendpaysRequest} returns this
 */
proto.cln.ListsendpaysRequest.prototype.clearPaymentHash = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListsendpaysRequest.prototype.hasPaymentHash = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ListsendpaysStatus status = 3;
 * @return {!proto.cln.ListsendpaysRequest.ListsendpaysStatus}
 */
proto.cln.ListsendpaysRequest.prototype.getStatus = function() {
  return /** @type {!proto.cln.ListsendpaysRequest.ListsendpaysStatus} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.cln.ListsendpaysRequest.ListsendpaysStatus} value
 * @return {!proto.cln.ListsendpaysRequest} returns this
 */
proto.cln.ListsendpaysRequest.prototype.setStatus = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListsendpaysRequest} returns this
 */
proto.cln.ListsendpaysRequest.prototype.clearStatus = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListsendpaysRequest.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ListsendpaysIndex index = 4;
 * @return {!proto.cln.ListsendpaysRequest.ListsendpaysIndex}
 */
proto.cln.ListsendpaysRequest.prototype.getIndex = function() {
  return /** @type {!proto.cln.ListsendpaysRequest.ListsendpaysIndex} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.cln.ListsendpaysRequest.ListsendpaysIndex} value
 * @return {!proto.cln.ListsendpaysRequest} returns this
 */
proto.cln.ListsendpaysRequest.prototype.setIndex = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListsendpaysRequest} returns this
 */
proto.cln.ListsendpaysRequest.prototype.clearIndex = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListsendpaysRequest.prototype.hasIndex = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint64 start = 5;
 * @return {number}
 */
proto.cln.ListsendpaysRequest.prototype.getStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListsendpaysRequest} returns this
 */
proto.cln.ListsendpaysRequest.prototype.setStart = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListsendpaysRequest} returns this
 */
proto.cln.ListsendpaysRequest.prototype.clearStart = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListsendpaysRequest.prototype.hasStart = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 limit = 6;
 * @return {number}
 */
proto.cln.ListsendpaysRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListsendpaysRequest} returns this
 */
proto.cln.ListsendpaysRequest.prototype.setLimit = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListsendpaysRequest} returns this
 */
proto.cln.ListsendpaysRequest.prototype.clearLimit = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListsendpaysRequest.prototype.hasLimit = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListsendpaysResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListsendpaysResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListsendpaysResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListsendpaysResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListsendpaysResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentsList: jspb.Message.toObjectList(msg.getPaymentsList(),
    proto.cln.ListsendpaysPayments.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListsendpaysResponse}
 */
proto.cln.ListsendpaysResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListsendpaysResponse;
  return proto.cln.ListsendpaysResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListsendpaysResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListsendpaysResponse}
 */
proto.cln.ListsendpaysResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.ListsendpaysPayments;
      reader.readMessage(value,proto.cln.ListsendpaysPayments.deserializeBinaryFromReader);
      msg.addPayments(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListsendpaysResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListsendpaysResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListsendpaysResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListsendpaysResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.ListsendpaysPayments.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ListsendpaysPayments payments = 1;
 * @return {!Array<!proto.cln.ListsendpaysPayments>}
 */
proto.cln.ListsendpaysResponse.prototype.getPaymentsList = function() {
  return /** @type{!Array<!proto.cln.ListsendpaysPayments>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListsendpaysPayments, 1));
};


/**
 * @param {!Array<!proto.cln.ListsendpaysPayments>} value
 * @return {!proto.cln.ListsendpaysResponse} returns this
*/
proto.cln.ListsendpaysResponse.prototype.setPaymentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.ListsendpaysPayments=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListsendpaysPayments}
 */
proto.cln.ListsendpaysResponse.prototype.addPayments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.ListsendpaysPayments, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListsendpaysResponse} returns this
 */
proto.cln.ListsendpaysResponse.prototype.clearPaymentsList = function() {
  return this.setPaymentsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListsendpaysPayments.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListsendpaysPayments.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListsendpaysPayments} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListsendpaysPayments.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    groupid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    paymentHash: msg.getPaymentHash_asB64(),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    destination: msg.getDestination_asB64(),
    createdAt: jspb.Message.getFieldWithDefault(msg, 7, 0),
    amountSentMsat: (f = msg.getAmountSentMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    label: jspb.Message.getFieldWithDefault(msg, 9, ""),
    bolt11: jspb.Message.getFieldWithDefault(msg, 10, ""),
    bolt12: jspb.Message.getFieldWithDefault(msg, 11, ""),
    paymentPreimage: msg.getPaymentPreimage_asB64(),
    erroronion: msg.getErroronion_asB64(),
    description: jspb.Message.getFieldWithDefault(msg, 14, ""),
    partid: jspb.Message.getFieldWithDefault(msg, 15, 0),
    createdIndex: jspb.Message.getFieldWithDefault(msg, 16, 0),
    updatedIndex: jspb.Message.getFieldWithDefault(msg, 17, 0),
    completedAt: jspb.Message.getFieldWithDefault(msg, 18, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListsendpaysPayments}
 */
proto.cln.ListsendpaysPayments.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListsendpaysPayments;
  return proto.cln.ListsendpaysPayments.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListsendpaysPayments} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListsendpaysPayments}
 */
proto.cln.ListsendpaysPayments.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGroupid(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 4:
      var value = /** @type {!proto.cln.ListsendpaysPayments.ListsendpaysPaymentsStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 5:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDestination(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedAt(value);
      break;
    case 8:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountSentMsat(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt12(value);
      break;
    case 12:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentPreimage(value);
      break;
    case 13:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setErroronion(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPartid(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedIndex(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpdatedIndex(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCompletedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListsendpaysPayments.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListsendpaysPayments.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListsendpaysPayments} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListsendpaysPayments.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getGroupid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getAmountSentMsat();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBytes(
      12,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBytes(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint64(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint64(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeUint64(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeUint64(
      18,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ListsendpaysPayments.ListsendpaysPaymentsStatus = {
  PENDING: 0,
  FAILED: 1,
  COMPLETE: 2
};

/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.cln.ListsendpaysPayments.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 groupid = 2;
 * @return {number}
 */
proto.cln.ListsendpaysPayments.prototype.getGroupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.setGroupid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bytes payment_hash = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListsendpaysPayments.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes payment_hash = 3;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.ListsendpaysPayments.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.ListsendpaysPayments.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional ListsendpaysPaymentsStatus status = 4;
 * @return {!proto.cln.ListsendpaysPayments.ListsendpaysPaymentsStatus}
 */
proto.cln.ListsendpaysPayments.prototype.getStatus = function() {
  return /** @type {!proto.cln.ListsendpaysPayments.ListsendpaysPaymentsStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.cln.ListsendpaysPayments.ListsendpaysPaymentsStatus} value
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional Amount amount_msat = 5;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListsendpaysPayments.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 5));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListsendpaysPayments} returns this
*/
proto.cln.ListsendpaysPayments.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListsendpaysPayments.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bytes destination = 6;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListsendpaysPayments.prototype.getDestination = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes destination = 6;
 * This is a type-conversion wrapper around `getDestination()`
 * @return {string}
 */
proto.cln.ListsendpaysPayments.prototype.getDestination_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDestination()));
};


/**
 * optional bytes destination = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDestination()`
 * @return {!Uint8Array}
 */
proto.cln.ListsendpaysPayments.prototype.getDestination_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDestination()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.setDestination = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.clearDestination = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListsendpaysPayments.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 created_at = 7;
 * @return {number}
 */
proto.cln.ListsendpaysPayments.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional Amount amount_sent_msat = 8;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListsendpaysPayments.prototype.getAmountSentMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 8));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListsendpaysPayments} returns this
*/
proto.cln.ListsendpaysPayments.prototype.setAmountSentMsat = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.clearAmountSentMsat = function() {
  return this.setAmountSentMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListsendpaysPayments.prototype.hasAmountSentMsat = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string label = 9;
 * @return {string}
 */
proto.cln.ListsendpaysPayments.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.setLabel = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.clearLabel = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListsendpaysPayments.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string bolt11 = 10;
 * @return {string}
 */
proto.cln.ListsendpaysPayments.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.setBolt11 = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.clearBolt11 = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListsendpaysPayments.prototype.hasBolt11 = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string bolt12 = 11;
 * @return {string}
 */
proto.cln.ListsendpaysPayments.prototype.getBolt12 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.setBolt12 = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.clearBolt12 = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListsendpaysPayments.prototype.hasBolt12 = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bytes payment_preimage = 12;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListsendpaysPayments.prototype.getPaymentPreimage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * optional bytes payment_preimage = 12;
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {string}
 */
proto.cln.ListsendpaysPayments.prototype.getPaymentPreimage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentPreimage()));
};


/**
 * optional bytes payment_preimage = 12;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {!Uint8Array}
 */
proto.cln.ListsendpaysPayments.prototype.getPaymentPreimage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentPreimage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.setPaymentPreimage = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.clearPaymentPreimage = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListsendpaysPayments.prototype.hasPaymentPreimage = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bytes erroronion = 13;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListsendpaysPayments.prototype.getErroronion = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * optional bytes erroronion = 13;
 * This is a type-conversion wrapper around `getErroronion()`
 * @return {string}
 */
proto.cln.ListsendpaysPayments.prototype.getErroronion_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getErroronion()));
};


/**
 * optional bytes erroronion = 13;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getErroronion()`
 * @return {!Uint8Array}
 */
proto.cln.ListsendpaysPayments.prototype.getErroronion_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getErroronion()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.setErroronion = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.clearErroronion = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListsendpaysPayments.prototype.hasErroronion = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string description = 14;
 * @return {string}
 */
proto.cln.ListsendpaysPayments.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListsendpaysPayments.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional uint64 partid = 15;
 * @return {number}
 */
proto.cln.ListsendpaysPayments.prototype.getPartid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.setPartid = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.clearPartid = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListsendpaysPayments.prototype.hasPartid = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional uint64 created_index = 16;
 * @return {number}
 */
proto.cln.ListsendpaysPayments.prototype.getCreatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.setCreatedIndex = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.clearCreatedIndex = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListsendpaysPayments.prototype.hasCreatedIndex = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional uint64 updated_index = 17;
 * @return {number}
 */
proto.cln.ListsendpaysPayments.prototype.getUpdatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.setUpdatedIndex = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.clearUpdatedIndex = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListsendpaysPayments.prototype.hasUpdatedIndex = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional uint64 completed_at = 18;
 * @return {number}
 */
proto.cln.ListsendpaysPayments.prototype.getCompletedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.setCompletedAt = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.clearCompletedAt = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListsendpaysPayments.prototype.hasCompletedAt = function() {
  return jspb.Message.getField(this, 18) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListtransactionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListtransactionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListtransactionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListtransactionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListtransactionsRequest}
 */
proto.cln.ListtransactionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListtransactionsRequest;
  return proto.cln.ListtransactionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListtransactionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListtransactionsRequest}
 */
proto.cln.ListtransactionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListtransactionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListtransactionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListtransactionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListtransactionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListtransactionsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListtransactionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListtransactionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListtransactionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListtransactionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    transactionsList: jspb.Message.toObjectList(msg.getTransactionsList(),
    proto.cln.ListtransactionsTransactions.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListtransactionsResponse}
 */
proto.cln.ListtransactionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListtransactionsResponse;
  return proto.cln.ListtransactionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListtransactionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListtransactionsResponse}
 */
proto.cln.ListtransactionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.ListtransactionsTransactions;
      reader.readMessage(value,proto.cln.ListtransactionsTransactions.deserializeBinaryFromReader);
      msg.addTransactions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListtransactionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListtransactionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListtransactionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListtransactionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransactionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.ListtransactionsTransactions.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ListtransactionsTransactions transactions = 1;
 * @return {!Array<!proto.cln.ListtransactionsTransactions>}
 */
proto.cln.ListtransactionsResponse.prototype.getTransactionsList = function() {
  return /** @type{!Array<!proto.cln.ListtransactionsTransactions>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListtransactionsTransactions, 1));
};


/**
 * @param {!Array<!proto.cln.ListtransactionsTransactions>} value
 * @return {!proto.cln.ListtransactionsResponse} returns this
*/
proto.cln.ListtransactionsResponse.prototype.setTransactionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.ListtransactionsTransactions=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListtransactionsTransactions}
 */
proto.cln.ListtransactionsResponse.prototype.addTransactions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.ListtransactionsTransactions, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListtransactionsResponse} returns this
 */
proto.cln.ListtransactionsResponse.prototype.clearTransactionsList = function() {
  return this.setTransactionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListtransactionsTransactions.repeatedFields_ = [9,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListtransactionsTransactions.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListtransactionsTransactions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListtransactionsTransactions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListtransactionsTransactions.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: msg.getHash_asB64(),
    rawtx: msg.getRawtx_asB64(),
    blockheight: jspb.Message.getFieldWithDefault(msg, 3, 0),
    txindex: jspb.Message.getFieldWithDefault(msg, 4, 0),
    locktime: jspb.Message.getFieldWithDefault(msg, 7, 0),
    version: jspb.Message.getFieldWithDefault(msg, 8, 0),
    inputsList: jspb.Message.toObjectList(msg.getInputsList(),
    proto.cln.ListtransactionsTransactionsInputs.toObject, includeInstance),
    outputsList: jspb.Message.toObjectList(msg.getOutputsList(),
    proto.cln.ListtransactionsTransactionsOutputs.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListtransactionsTransactions}
 */
proto.cln.ListtransactionsTransactions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListtransactionsTransactions;
  return proto.cln.ListtransactionsTransactions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListtransactionsTransactions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListtransactionsTransactions}
 */
proto.cln.ListtransactionsTransactions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRawtx(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBlockheight(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTxindex(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLocktime(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVersion(value);
      break;
    case 9:
      var value = new proto.cln.ListtransactionsTransactionsInputs;
      reader.readMessage(value,proto.cln.ListtransactionsTransactionsInputs.deserializeBinaryFromReader);
      msg.addInputs(value);
      break;
    case 10:
      var value = new proto.cln.ListtransactionsTransactionsOutputs;
      reader.readMessage(value,proto.cln.ListtransactionsTransactionsOutputs.deserializeBinaryFromReader);
      msg.addOutputs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListtransactionsTransactions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListtransactionsTransactions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListtransactionsTransactions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListtransactionsTransactions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getRawtx_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getBlockheight();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getTxindex();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getLocktime();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getInputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.cln.ListtransactionsTransactionsInputs.serializeBinaryToWriter
    );
  }
  f = message.getOutputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.cln.ListtransactionsTransactionsOutputs.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListtransactionsTransactions.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes hash = 1;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.cln.ListtransactionsTransactions.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.cln.ListtransactionsTransactions.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListtransactionsTransactions} returns this
 */
proto.cln.ListtransactionsTransactions.prototype.setHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes rawtx = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListtransactionsTransactions.prototype.getRawtx = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes rawtx = 2;
 * This is a type-conversion wrapper around `getRawtx()`
 * @return {string}
 */
proto.cln.ListtransactionsTransactions.prototype.getRawtx_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getRawtx()));
};


/**
 * optional bytes rawtx = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRawtx()`
 * @return {!Uint8Array}
 */
proto.cln.ListtransactionsTransactions.prototype.getRawtx_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getRawtx()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListtransactionsTransactions} returns this
 */
proto.cln.ListtransactionsTransactions.prototype.setRawtx = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional uint32 blockheight = 3;
 * @return {number}
 */
proto.cln.ListtransactionsTransactions.prototype.getBlockheight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListtransactionsTransactions} returns this
 */
proto.cln.ListtransactionsTransactions.prototype.setBlockheight = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 txindex = 4;
 * @return {number}
 */
proto.cln.ListtransactionsTransactions.prototype.getTxindex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListtransactionsTransactions} returns this
 */
proto.cln.ListtransactionsTransactions.prototype.setTxindex = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 locktime = 7;
 * @return {number}
 */
proto.cln.ListtransactionsTransactions.prototype.getLocktime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListtransactionsTransactions} returns this
 */
proto.cln.ListtransactionsTransactions.prototype.setLocktime = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint32 version = 8;
 * @return {number}
 */
proto.cln.ListtransactionsTransactions.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListtransactionsTransactions} returns this
 */
proto.cln.ListtransactionsTransactions.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * repeated ListtransactionsTransactionsInputs inputs = 9;
 * @return {!Array<!proto.cln.ListtransactionsTransactionsInputs>}
 */
proto.cln.ListtransactionsTransactions.prototype.getInputsList = function() {
  return /** @type{!Array<!proto.cln.ListtransactionsTransactionsInputs>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListtransactionsTransactionsInputs, 9));
};


/**
 * @param {!Array<!proto.cln.ListtransactionsTransactionsInputs>} value
 * @return {!proto.cln.ListtransactionsTransactions} returns this
*/
proto.cln.ListtransactionsTransactions.prototype.setInputsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.cln.ListtransactionsTransactionsInputs=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListtransactionsTransactionsInputs}
 */
proto.cln.ListtransactionsTransactions.prototype.addInputs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.cln.ListtransactionsTransactionsInputs, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListtransactionsTransactions} returns this
 */
proto.cln.ListtransactionsTransactions.prototype.clearInputsList = function() {
  return this.setInputsList([]);
};


/**
 * repeated ListtransactionsTransactionsOutputs outputs = 10;
 * @return {!Array<!proto.cln.ListtransactionsTransactionsOutputs>}
 */
proto.cln.ListtransactionsTransactions.prototype.getOutputsList = function() {
  return /** @type{!Array<!proto.cln.ListtransactionsTransactionsOutputs>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListtransactionsTransactionsOutputs, 10));
};


/**
 * @param {!Array<!proto.cln.ListtransactionsTransactionsOutputs>} value
 * @return {!proto.cln.ListtransactionsTransactions} returns this
*/
proto.cln.ListtransactionsTransactions.prototype.setOutputsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.cln.ListtransactionsTransactionsOutputs=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListtransactionsTransactionsOutputs}
 */
proto.cln.ListtransactionsTransactions.prototype.addOutputs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.cln.ListtransactionsTransactionsOutputs, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListtransactionsTransactions} returns this
 */
proto.cln.ListtransactionsTransactions.prototype.clearOutputsList = function() {
  return this.setOutputsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListtransactionsTransactionsInputs.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListtransactionsTransactionsInputs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListtransactionsTransactionsInputs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListtransactionsTransactionsInputs.toObject = function(includeInstance, msg) {
  var f, obj = {
    txid: msg.getTxid_asB64(),
    index: jspb.Message.getFieldWithDefault(msg, 2, 0),
    sequence: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListtransactionsTransactionsInputs}
 */
proto.cln.ListtransactionsTransactionsInputs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListtransactionsTransactionsInputs;
  return proto.cln.ListtransactionsTransactionsInputs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListtransactionsTransactionsInputs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListtransactionsTransactionsInputs}
 */
proto.cln.ListtransactionsTransactionsInputs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIndex(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSequence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListtransactionsTransactionsInputs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListtransactionsTransactionsInputs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListtransactionsTransactionsInputs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListtransactionsTransactionsInputs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getIndex();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional bytes txid = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListtransactionsTransactionsInputs.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes txid = 1;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.ListtransactionsTransactionsInputs.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.ListtransactionsTransactionsInputs.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListtransactionsTransactionsInputs} returns this
 */
proto.cln.ListtransactionsTransactionsInputs.prototype.setTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint32 index = 2;
 * @return {number}
 */
proto.cln.ListtransactionsTransactionsInputs.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListtransactionsTransactionsInputs} returns this
 */
proto.cln.ListtransactionsTransactionsInputs.prototype.setIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 sequence = 3;
 * @return {number}
 */
proto.cln.ListtransactionsTransactionsInputs.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListtransactionsTransactionsInputs} returns this
 */
proto.cln.ListtransactionsTransactionsInputs.prototype.setSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListtransactionsTransactionsOutputs.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListtransactionsTransactionsOutputs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListtransactionsTransactionsOutputs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListtransactionsTransactionsOutputs.toObject = function(includeInstance, msg) {
  var f, obj = {
    index: jspb.Message.getFieldWithDefault(msg, 1, 0),
    scriptpubkey: msg.getScriptpubkey_asB64(),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListtransactionsTransactionsOutputs}
 */
proto.cln.ListtransactionsTransactionsOutputs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListtransactionsTransactionsOutputs;
  return proto.cln.ListtransactionsTransactionsOutputs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListtransactionsTransactionsOutputs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListtransactionsTransactionsOutputs}
 */
proto.cln.ListtransactionsTransactionsOutputs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIndex(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setScriptpubkey(value);
      break;
    case 6:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListtransactionsTransactionsOutputs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListtransactionsTransactionsOutputs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListtransactionsTransactionsOutputs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListtransactionsTransactionsOutputs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndex();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getScriptpubkey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 index = 1;
 * @return {number}
 */
proto.cln.ListtransactionsTransactionsOutputs.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListtransactionsTransactionsOutputs} returns this
 */
proto.cln.ListtransactionsTransactionsOutputs.prototype.setIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bytes scriptPubKey = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListtransactionsTransactionsOutputs.prototype.getScriptpubkey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes scriptPubKey = 3;
 * This is a type-conversion wrapper around `getScriptpubkey()`
 * @return {string}
 */
proto.cln.ListtransactionsTransactionsOutputs.prototype.getScriptpubkey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getScriptpubkey()));
};


/**
 * optional bytes scriptPubKey = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getScriptpubkey()`
 * @return {!Uint8Array}
 */
proto.cln.ListtransactionsTransactionsOutputs.prototype.getScriptpubkey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getScriptpubkey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListtransactionsTransactionsOutputs} returns this
 */
proto.cln.ListtransactionsTransactionsOutputs.prototype.setScriptpubkey = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional Amount amount_msat = 6;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListtransactionsTransactionsOutputs.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 6));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListtransactionsTransactionsOutputs} returns this
*/
proto.cln.ListtransactionsTransactionsOutputs.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListtransactionsTransactionsOutputs} returns this
 */
proto.cln.ListtransactionsTransactionsOutputs.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListtransactionsTransactionsOutputs.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.MakesecretRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.MakesecretRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.MakesecretRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.MakesecretRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    hex: msg.getHex_asB64(),
    string: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.MakesecretRequest}
 */
proto.cln.MakesecretRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.MakesecretRequest;
  return proto.cln.MakesecretRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.MakesecretRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.MakesecretRequest}
 */
proto.cln.MakesecretRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHex(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setString(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.MakesecretRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.MakesecretRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.MakesecretRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.MakesecretRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bytes hex = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.MakesecretRequest.prototype.getHex = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes hex = 1;
 * This is a type-conversion wrapper around `getHex()`
 * @return {string}
 */
proto.cln.MakesecretRequest.prototype.getHex_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHex()));
};


/**
 * optional bytes hex = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHex()`
 * @return {!Uint8Array}
 */
proto.cln.MakesecretRequest.prototype.getHex_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHex()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.MakesecretRequest} returns this
 */
proto.cln.MakesecretRequest.prototype.setHex = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.MakesecretRequest} returns this
 */
proto.cln.MakesecretRequest.prototype.clearHex = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.MakesecretRequest.prototype.hasHex = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string string = 2;
 * @return {string}
 */
proto.cln.MakesecretRequest.prototype.getString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.MakesecretRequest} returns this
 */
proto.cln.MakesecretRequest.prototype.setString = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.MakesecretRequest} returns this
 */
proto.cln.MakesecretRequest.prototype.clearString = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.MakesecretRequest.prototype.hasString = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.MakesecretResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.MakesecretResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.MakesecretResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.MakesecretResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    secret: msg.getSecret_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.MakesecretResponse}
 */
proto.cln.MakesecretResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.MakesecretResponse;
  return proto.cln.MakesecretResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.MakesecretResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.MakesecretResponse}
 */
proto.cln.MakesecretResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSecret(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.MakesecretResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.MakesecretResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.MakesecretResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.MakesecretResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecret_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes secret = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.MakesecretResponse.prototype.getSecret = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes secret = 1;
 * This is a type-conversion wrapper around `getSecret()`
 * @return {string}
 */
proto.cln.MakesecretResponse.prototype.getSecret_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSecret()));
};


/**
 * optional bytes secret = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSecret()`
 * @return {!Uint8Array}
 */
proto.cln.MakesecretResponse.prototype.getSecret_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSecret()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.MakesecretResponse} returns this
 */
proto.cln.MakesecretResponse.prototype.setSecret = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.PayRequest.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.PayRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.PayRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.PayRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PayRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    bolt11: jspb.Message.getFieldWithDefault(msg, 1, ""),
    label: jspb.Message.getFieldWithDefault(msg, 3, ""),
    maxfeepercent: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    retryFor: jspb.Message.getFieldWithDefault(msg, 5, 0),
    maxdelay: jspb.Message.getFieldWithDefault(msg, 6, 0),
    exemptfee: (f = msg.getExemptfee()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    riskfactor: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    excludeList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    maxfee: (f = msg.getMaxfee()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    description: jspb.Message.getFieldWithDefault(msg, 12, ""),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    localinvreqid: msg.getLocalinvreqid_asB64(),
    partialMsat: (f = msg.getPartialMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.PayRequest}
 */
proto.cln.PayRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.PayRequest;
  return proto.cln.PayRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.PayRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.PayRequest}
 */
proto.cln.PayRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaxfeepercent(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRetryFor(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxdelay(value);
      break;
    case 7:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setExemptfee(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRiskfactor(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addExclude(value);
      break;
    case 11:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setMaxfee(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 13:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 14:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setLocalinvreqid(value);
      break;
    case 15:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setPartialMsat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.PayRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.PayRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.PayRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PayRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBolt11();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getExemptfee();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getExcludeList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getMaxfee();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeBytes(
      14,
      f
    );
  }
  f = message.getPartialMsat();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
};


/**
 * optional string bolt11 = 1;
 * @return {string}
 */
proto.cln.PayRequest.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.setBolt11 = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string label = 3;
 * @return {string}
 */
proto.cln.PayRequest.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.setLabel = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.clearLabel = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PayRequest.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double maxfeepercent = 4;
 * @return {number}
 */
proto.cln.PayRequest.prototype.getMaxfeepercent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.setMaxfeepercent = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.clearMaxfeepercent = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PayRequest.prototype.hasMaxfeepercent = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 retry_for = 5;
 * @return {number}
 */
proto.cln.PayRequest.prototype.getRetryFor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.setRetryFor = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.clearRetryFor = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PayRequest.prototype.hasRetryFor = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 maxdelay = 6;
 * @return {number}
 */
proto.cln.PayRequest.prototype.getMaxdelay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.setMaxdelay = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.clearMaxdelay = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PayRequest.prototype.hasMaxdelay = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Amount exemptfee = 7;
 * @return {?proto.cln.Amount}
 */
proto.cln.PayRequest.prototype.getExemptfee = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 7));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.PayRequest} returns this
*/
proto.cln.PayRequest.prototype.setExemptfee = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.clearExemptfee = function() {
  return this.setExemptfee(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PayRequest.prototype.hasExemptfee = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional double riskfactor = 8;
 * @return {number}
 */
proto.cln.PayRequest.prototype.getRiskfactor = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.setRiskfactor = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.clearRiskfactor = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PayRequest.prototype.hasRiskfactor = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * repeated string exclude = 10;
 * @return {!Array<string>}
 */
proto.cln.PayRequest.prototype.getExcludeList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.setExcludeList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.addExclude = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.clearExcludeList = function() {
  return this.setExcludeList([]);
};


/**
 * optional Amount maxfee = 11;
 * @return {?proto.cln.Amount}
 */
proto.cln.PayRequest.prototype.getMaxfee = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 11));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.PayRequest} returns this
*/
proto.cln.PayRequest.prototype.setMaxfee = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.clearMaxfee = function() {
  return this.setMaxfee(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PayRequest.prototype.hasMaxfee = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string description = 12;
 * @return {string}
 */
proto.cln.PayRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PayRequest.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional Amount amount_msat = 13;
 * @return {?proto.cln.Amount}
 */
proto.cln.PayRequest.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 13));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.PayRequest} returns this
*/
proto.cln.PayRequest.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PayRequest.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional bytes localinvreqid = 14;
 * @return {!(string|Uint8Array)}
 */
proto.cln.PayRequest.prototype.getLocalinvreqid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * optional bytes localinvreqid = 14;
 * This is a type-conversion wrapper around `getLocalinvreqid()`
 * @return {string}
 */
proto.cln.PayRequest.prototype.getLocalinvreqid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getLocalinvreqid()));
};


/**
 * optional bytes localinvreqid = 14;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getLocalinvreqid()`
 * @return {!Uint8Array}
 */
proto.cln.PayRequest.prototype.getLocalinvreqid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getLocalinvreqid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.setLocalinvreqid = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.clearLocalinvreqid = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PayRequest.prototype.hasLocalinvreqid = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional Amount partial_msat = 15;
 * @return {?proto.cln.Amount}
 */
proto.cln.PayRequest.prototype.getPartialMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 15));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.PayRequest} returns this
*/
proto.cln.PayRequest.prototype.setPartialMsat = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.clearPartialMsat = function() {
  return this.setPartialMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PayRequest.prototype.hasPartialMsat = function() {
  return jspb.Message.getField(this, 15) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.PayResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.PayResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.PayResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PayResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentPreimage: msg.getPaymentPreimage_asB64(),
    destination: msg.getDestination_asB64(),
    paymentHash: msg.getPaymentHash_asB64(),
    createdAt: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    parts: jspb.Message.getFieldWithDefault(msg, 5, 0),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    amountSentMsat: (f = msg.getAmountSentMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    warningPartialCompletion: jspb.Message.getFieldWithDefault(msg, 8, ""),
    status: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.PayResponse}
 */
proto.cln.PayResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.PayResponse;
  return proto.cln.PayResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.PayResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.PayResponse}
 */
proto.cln.PayResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentPreimage(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDestination(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCreatedAt(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setParts(value);
      break;
    case 6:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 7:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountSentMsat(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningPartialCompletion(value);
      break;
    case 9:
      var value = /** @type {!proto.cln.PayResponse.PayStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.PayResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.PayResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.PayResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PayResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentPreimage_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getParts();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getAmountSentMsat();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.PayResponse.PayStatus = {
  COMPLETE: 0,
  PENDING: 1,
  FAILED: 2
};

/**
 * optional bytes payment_preimage = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.PayResponse.prototype.getPaymentPreimage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes payment_preimage = 1;
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {string}
 */
proto.cln.PayResponse.prototype.getPaymentPreimage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentPreimage()));
};


/**
 * optional bytes payment_preimage = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {!Uint8Array}
 */
proto.cln.PayResponse.prototype.getPaymentPreimage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentPreimage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.PayResponse} returns this
 */
proto.cln.PayResponse.prototype.setPaymentPreimage = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes destination = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.PayResponse.prototype.getDestination = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes destination = 2;
 * This is a type-conversion wrapper around `getDestination()`
 * @return {string}
 */
proto.cln.PayResponse.prototype.getDestination_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDestination()));
};


/**
 * optional bytes destination = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDestination()`
 * @return {!Uint8Array}
 */
proto.cln.PayResponse.prototype.getDestination_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDestination()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.PayResponse} returns this
 */
proto.cln.PayResponse.prototype.setDestination = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.PayResponse} returns this
 */
proto.cln.PayResponse.prototype.clearDestination = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PayResponse.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes payment_hash = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.PayResponse.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes payment_hash = 3;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.PayResponse.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.PayResponse.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.PayResponse} returns this
 */
proto.cln.PayResponse.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional double created_at = 4;
 * @return {number}
 */
proto.cln.PayResponse.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.cln.PayResponse} returns this
 */
proto.cln.PayResponse.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional uint32 parts = 5;
 * @return {number}
 */
proto.cln.PayResponse.prototype.getParts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.PayResponse} returns this
 */
proto.cln.PayResponse.prototype.setParts = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional Amount amount_msat = 6;
 * @return {?proto.cln.Amount}
 */
proto.cln.PayResponse.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 6));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.PayResponse} returns this
*/
proto.cln.PayResponse.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.PayResponse} returns this
 */
proto.cln.PayResponse.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PayResponse.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Amount amount_sent_msat = 7;
 * @return {?proto.cln.Amount}
 */
proto.cln.PayResponse.prototype.getAmountSentMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 7));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.PayResponse} returns this
*/
proto.cln.PayResponse.prototype.setAmountSentMsat = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.PayResponse} returns this
 */
proto.cln.PayResponse.prototype.clearAmountSentMsat = function() {
  return this.setAmountSentMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PayResponse.prototype.hasAmountSentMsat = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string warning_partial_completion = 8;
 * @return {string}
 */
proto.cln.PayResponse.prototype.getWarningPartialCompletion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.PayResponse} returns this
 */
proto.cln.PayResponse.prototype.setWarningPartialCompletion = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.PayResponse} returns this
 */
proto.cln.PayResponse.prototype.clearWarningPartialCompletion = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PayResponse.prototype.hasWarningPartialCompletion = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional PayStatus status = 9;
 * @return {!proto.cln.PayResponse.PayStatus}
 */
proto.cln.PayResponse.prototype.getStatus = function() {
  return /** @type {!proto.cln.PayResponse.PayStatus} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.cln.PayResponse.PayStatus} value
 * @return {!proto.cln.PayResponse} returns this
 */
proto.cln.PayResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListnodesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListnodesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListnodesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListnodesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListnodesRequest}
 */
proto.cln.ListnodesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListnodesRequest;
  return proto.cln.ListnodesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListnodesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListnodesRequest}
 */
proto.cln.ListnodesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListnodesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListnodesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListnodesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListnodesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListnodesRequest.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes id = 1;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.cln.ListnodesRequest.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.cln.ListnodesRequest.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListnodesRequest} returns this
 */
proto.cln.ListnodesRequest.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListnodesRequest} returns this
 */
proto.cln.ListnodesRequest.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListnodesRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListnodesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListnodesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListnodesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListnodesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListnodesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodesList: jspb.Message.toObjectList(msg.getNodesList(),
    proto.cln.ListnodesNodes.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListnodesResponse}
 */
proto.cln.ListnodesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListnodesResponse;
  return proto.cln.ListnodesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListnodesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListnodesResponse}
 */
proto.cln.ListnodesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.ListnodesNodes;
      reader.readMessage(value,proto.cln.ListnodesNodes.deserializeBinaryFromReader);
      msg.addNodes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListnodesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListnodesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListnodesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListnodesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.ListnodesNodes.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ListnodesNodes nodes = 1;
 * @return {!Array<!proto.cln.ListnodesNodes>}
 */
proto.cln.ListnodesResponse.prototype.getNodesList = function() {
  return /** @type{!Array<!proto.cln.ListnodesNodes>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListnodesNodes, 1));
};


/**
 * @param {!Array<!proto.cln.ListnodesNodes>} value
 * @return {!proto.cln.ListnodesResponse} returns this
*/
proto.cln.ListnodesResponse.prototype.setNodesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.ListnodesNodes=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListnodesNodes}
 */
proto.cln.ListnodesResponse.prototype.addNodes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.ListnodesNodes, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListnodesResponse} returns this
 */
proto.cln.ListnodesResponse.prototype.clearNodesList = function() {
  return this.setNodesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListnodesNodes.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListnodesNodes.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListnodesNodes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListnodesNodes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListnodesNodes.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeid: msg.getNodeid_asB64(),
    lastTimestamp: jspb.Message.getFieldWithDefault(msg, 2, 0),
    alias: jspb.Message.getFieldWithDefault(msg, 3, ""),
    color: msg.getColor_asB64(),
    features: msg.getFeatures_asB64(),
    addressesList: jspb.Message.toObjectList(msg.getAddressesList(),
    proto.cln.ListnodesNodesAddresses.toObject, includeInstance),
    optionWillFund: (f = msg.getOptionWillFund()) && proto.cln.ListnodesNodesOption_will_fund.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListnodesNodes}
 */
proto.cln.ListnodesNodes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListnodesNodes;
  return proto.cln.ListnodesNodes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListnodesNodes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListnodesNodes}
 */
proto.cln.ListnodesNodes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setNodeid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLastTimestamp(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlias(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setColor(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFeatures(value);
      break;
    case 6:
      var value = new proto.cln.ListnodesNodesAddresses;
      reader.readMessage(value,proto.cln.ListnodesNodesAddresses.deserializeBinaryFromReader);
      msg.addAddresses(value);
      break;
    case 7:
      var value = new proto.cln.ListnodesNodesOption_will_fund;
      reader.readMessage(value,proto.cln.ListnodesNodesOption_will_fund.deserializeBinaryFromReader);
      msg.setOptionWillFund(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListnodesNodes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListnodesNodes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListnodesNodes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListnodesNodes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getAddressesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.cln.ListnodesNodesAddresses.serializeBinaryToWriter
    );
  }
  f = message.getOptionWillFund();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.cln.ListnodesNodesOption_will_fund.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes nodeid = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListnodesNodes.prototype.getNodeid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes nodeid = 1;
 * This is a type-conversion wrapper around `getNodeid()`
 * @return {string}
 */
proto.cln.ListnodesNodes.prototype.getNodeid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getNodeid()));
};


/**
 * optional bytes nodeid = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getNodeid()`
 * @return {!Uint8Array}
 */
proto.cln.ListnodesNodes.prototype.getNodeid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getNodeid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListnodesNodes} returns this
 */
proto.cln.ListnodesNodes.prototype.setNodeid = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint32 last_timestamp = 2;
 * @return {number}
 */
proto.cln.ListnodesNodes.prototype.getLastTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListnodesNodes} returns this
 */
proto.cln.ListnodesNodes.prototype.setLastTimestamp = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListnodesNodes} returns this
 */
proto.cln.ListnodesNodes.prototype.clearLastTimestamp = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListnodesNodes.prototype.hasLastTimestamp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string alias = 3;
 * @return {string}
 */
proto.cln.ListnodesNodes.prototype.getAlias = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListnodesNodes} returns this
 */
proto.cln.ListnodesNodes.prototype.setAlias = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListnodesNodes} returns this
 */
proto.cln.ListnodesNodes.prototype.clearAlias = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListnodesNodes.prototype.hasAlias = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bytes color = 4;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListnodesNodes.prototype.getColor = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes color = 4;
 * This is a type-conversion wrapper around `getColor()`
 * @return {string}
 */
proto.cln.ListnodesNodes.prototype.getColor_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getColor()));
};


/**
 * optional bytes color = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getColor()`
 * @return {!Uint8Array}
 */
proto.cln.ListnodesNodes.prototype.getColor_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getColor()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListnodesNodes} returns this
 */
proto.cln.ListnodesNodes.prototype.setColor = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListnodesNodes} returns this
 */
proto.cln.ListnodesNodes.prototype.clearColor = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListnodesNodes.prototype.hasColor = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bytes features = 5;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListnodesNodes.prototype.getFeatures = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes features = 5;
 * This is a type-conversion wrapper around `getFeatures()`
 * @return {string}
 */
proto.cln.ListnodesNodes.prototype.getFeatures_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFeatures()));
};


/**
 * optional bytes features = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFeatures()`
 * @return {!Uint8Array}
 */
proto.cln.ListnodesNodes.prototype.getFeatures_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFeatures()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListnodesNodes} returns this
 */
proto.cln.ListnodesNodes.prototype.setFeatures = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListnodesNodes} returns this
 */
proto.cln.ListnodesNodes.prototype.clearFeatures = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListnodesNodes.prototype.hasFeatures = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated ListnodesNodesAddresses addresses = 6;
 * @return {!Array<!proto.cln.ListnodesNodesAddresses>}
 */
proto.cln.ListnodesNodes.prototype.getAddressesList = function() {
  return /** @type{!Array<!proto.cln.ListnodesNodesAddresses>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListnodesNodesAddresses, 6));
};


/**
 * @param {!Array<!proto.cln.ListnodesNodesAddresses>} value
 * @return {!proto.cln.ListnodesNodes} returns this
*/
proto.cln.ListnodesNodes.prototype.setAddressesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.cln.ListnodesNodesAddresses=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListnodesNodesAddresses}
 */
proto.cln.ListnodesNodes.prototype.addAddresses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.cln.ListnodesNodesAddresses, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListnodesNodes} returns this
 */
proto.cln.ListnodesNodes.prototype.clearAddressesList = function() {
  return this.setAddressesList([]);
};


/**
 * optional ListnodesNodesOption_will_fund option_will_fund = 7;
 * @return {?proto.cln.ListnodesNodesOption_will_fund}
 */
proto.cln.ListnodesNodes.prototype.getOptionWillFund = function() {
  return /** @type{?proto.cln.ListnodesNodesOption_will_fund} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListnodesNodesOption_will_fund, 7));
};


/**
 * @param {?proto.cln.ListnodesNodesOption_will_fund|undefined} value
 * @return {!proto.cln.ListnodesNodes} returns this
*/
proto.cln.ListnodesNodes.prototype.setOptionWillFund = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListnodesNodes} returns this
 */
proto.cln.ListnodesNodes.prototype.clearOptionWillFund = function() {
  return this.setOptionWillFund(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListnodesNodes.prototype.hasOptionWillFund = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListnodesNodesOption_will_fund.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListnodesNodesOption_will_fund.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListnodesNodesOption_will_fund} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListnodesNodesOption_will_fund.toObject = function(includeInstance, msg) {
  var f, obj = {
    leaseFeeBaseMsat: (f = msg.getLeaseFeeBaseMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    leaseFeeBasis: jspb.Message.getFieldWithDefault(msg, 2, 0),
    fundingWeight: jspb.Message.getFieldWithDefault(msg, 3, 0),
    channelFeeMaxBaseMsat: (f = msg.getChannelFeeMaxBaseMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    channelFeeMaxProportionalThousandths: jspb.Message.getFieldWithDefault(msg, 5, 0),
    compactLease: msg.getCompactLease_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListnodesNodesOption_will_fund}
 */
proto.cln.ListnodesNodesOption_will_fund.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListnodesNodesOption_will_fund;
  return proto.cln.ListnodesNodesOption_will_fund.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListnodesNodesOption_will_fund} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListnodesNodesOption_will_fund}
 */
proto.cln.ListnodesNodesOption_will_fund.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setLeaseFeeBaseMsat(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLeaseFeeBasis(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFundingWeight(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setChannelFeeMaxBaseMsat(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setChannelFeeMaxProportionalThousandths(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setCompactLease(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListnodesNodesOption_will_fund.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListnodesNodesOption_will_fund.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListnodesNodesOption_will_fund} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListnodesNodesOption_will_fund.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLeaseFeeBaseMsat();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getLeaseFeeBasis();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getFundingWeight();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getChannelFeeMaxBaseMsat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getChannelFeeMaxProportionalThousandths();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getCompactLease_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
};


/**
 * optional Amount lease_fee_base_msat = 1;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListnodesNodesOption_will_fund.prototype.getLeaseFeeBaseMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 1));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListnodesNodesOption_will_fund} returns this
*/
proto.cln.ListnodesNodesOption_will_fund.prototype.setLeaseFeeBaseMsat = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListnodesNodesOption_will_fund} returns this
 */
proto.cln.ListnodesNodesOption_will_fund.prototype.clearLeaseFeeBaseMsat = function() {
  return this.setLeaseFeeBaseMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListnodesNodesOption_will_fund.prototype.hasLeaseFeeBaseMsat = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 lease_fee_basis = 2;
 * @return {number}
 */
proto.cln.ListnodesNodesOption_will_fund.prototype.getLeaseFeeBasis = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListnodesNodesOption_will_fund} returns this
 */
proto.cln.ListnodesNodesOption_will_fund.prototype.setLeaseFeeBasis = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 funding_weight = 3;
 * @return {number}
 */
proto.cln.ListnodesNodesOption_will_fund.prototype.getFundingWeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListnodesNodesOption_will_fund} returns this
 */
proto.cln.ListnodesNodesOption_will_fund.prototype.setFundingWeight = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional Amount channel_fee_max_base_msat = 4;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListnodesNodesOption_will_fund.prototype.getChannelFeeMaxBaseMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 4));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListnodesNodesOption_will_fund} returns this
*/
proto.cln.ListnodesNodesOption_will_fund.prototype.setChannelFeeMaxBaseMsat = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListnodesNodesOption_will_fund} returns this
 */
proto.cln.ListnodesNodesOption_will_fund.prototype.clearChannelFeeMaxBaseMsat = function() {
  return this.setChannelFeeMaxBaseMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListnodesNodesOption_will_fund.prototype.hasChannelFeeMaxBaseMsat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 channel_fee_max_proportional_thousandths = 5;
 * @return {number}
 */
proto.cln.ListnodesNodesOption_will_fund.prototype.getChannelFeeMaxProportionalThousandths = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListnodesNodesOption_will_fund} returns this
 */
proto.cln.ListnodesNodesOption_will_fund.prototype.setChannelFeeMaxProportionalThousandths = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bytes compact_lease = 6;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListnodesNodesOption_will_fund.prototype.getCompactLease = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes compact_lease = 6;
 * This is a type-conversion wrapper around `getCompactLease()`
 * @return {string}
 */
proto.cln.ListnodesNodesOption_will_fund.prototype.getCompactLease_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getCompactLease()));
};


/**
 * optional bytes compact_lease = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCompactLease()`
 * @return {!Uint8Array}
 */
proto.cln.ListnodesNodesOption_will_fund.prototype.getCompactLease_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getCompactLease()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListnodesNodesOption_will_fund} returns this
 */
proto.cln.ListnodesNodesOption_will_fund.prototype.setCompactLease = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListnodesNodesAddresses.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListnodesNodesAddresses.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListnodesNodesAddresses} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListnodesNodesAddresses.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    port: jspb.Message.getFieldWithDefault(msg, 2, 0),
    address: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListnodesNodesAddresses}
 */
proto.cln.ListnodesNodesAddresses.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListnodesNodesAddresses;
  return proto.cln.ListnodesNodesAddresses.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListnodesNodesAddresses} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListnodesNodesAddresses}
 */
proto.cln.ListnodesNodesAddresses.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.ListnodesNodesAddresses.ListnodesNodesAddressesType} */ (reader.readEnum());
      msg.setItemType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListnodesNodesAddresses.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListnodesNodesAddresses.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListnodesNodesAddresses} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListnodesNodesAddresses.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getPort();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ListnodesNodesAddresses.ListnodesNodesAddressesType = {
  DNS: 0,
  IPV4: 1,
  IPV6: 2,
  TORV2: 3,
  TORV3: 4
};

/**
 * optional ListnodesNodesAddressesType item_type = 1;
 * @return {!proto.cln.ListnodesNodesAddresses.ListnodesNodesAddressesType}
 */
proto.cln.ListnodesNodesAddresses.prototype.getItemType = function() {
  return /** @type {!proto.cln.ListnodesNodesAddresses.ListnodesNodesAddressesType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.ListnodesNodesAddresses.ListnodesNodesAddressesType} value
 * @return {!proto.cln.ListnodesNodesAddresses} returns this
 */
proto.cln.ListnodesNodesAddresses.prototype.setItemType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint32 port = 2;
 * @return {number}
 */
proto.cln.ListnodesNodesAddresses.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListnodesNodesAddresses} returns this
 */
proto.cln.ListnodesNodesAddresses.prototype.setPort = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string address = 3;
 * @return {string}
 */
proto.cln.ListnodesNodesAddresses.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListnodesNodesAddresses} returns this
 */
proto.cln.ListnodesNodesAddresses.prototype.setAddress = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListnodesNodesAddresses} returns this
 */
proto.cln.ListnodesNodesAddresses.prototype.clearAddress = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListnodesNodesAddresses.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.WaitanyinvoiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.WaitanyinvoiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.WaitanyinvoiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitanyinvoiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    lastpayIndex: jspb.Message.getFieldWithDefault(msg, 1, 0),
    timeout: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.WaitanyinvoiceRequest}
 */
proto.cln.WaitanyinvoiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.WaitanyinvoiceRequest;
  return proto.cln.WaitanyinvoiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.WaitanyinvoiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.WaitanyinvoiceRequest}
 */
proto.cln.WaitanyinvoiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLastpayIndex(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTimeout(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.WaitanyinvoiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.WaitanyinvoiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.WaitanyinvoiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitanyinvoiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 lastpay_index = 1;
 * @return {number}
 */
proto.cln.WaitanyinvoiceRequest.prototype.getLastpayIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitanyinvoiceRequest} returns this
 */
proto.cln.WaitanyinvoiceRequest.prototype.setLastpayIndex = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitanyinvoiceRequest} returns this
 */
proto.cln.WaitanyinvoiceRequest.prototype.clearLastpayIndex = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitanyinvoiceRequest.prototype.hasLastpayIndex = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 timeout = 2;
 * @return {number}
 */
proto.cln.WaitanyinvoiceRequest.prototype.getTimeout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitanyinvoiceRequest} returns this
 */
proto.cln.WaitanyinvoiceRequest.prototype.setTimeout = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitanyinvoiceRequest} returns this
 */
proto.cln.WaitanyinvoiceRequest.prototype.clearTimeout = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitanyinvoiceRequest.prototype.hasTimeout = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.WaitanyinvoiceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.WaitanyinvoiceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.WaitanyinvoiceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitanyinvoiceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    paymentHash: msg.getPaymentHash_asB64(),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0),
    expiresAt: jspb.Message.getFieldWithDefault(msg, 5, 0),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    bolt11: jspb.Message.getFieldWithDefault(msg, 7, ""),
    bolt12: jspb.Message.getFieldWithDefault(msg, 8, ""),
    payIndex: jspb.Message.getFieldWithDefault(msg, 9, 0),
    amountReceivedMsat: (f = msg.getAmountReceivedMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    paidAt: jspb.Message.getFieldWithDefault(msg, 11, 0),
    paymentPreimage: msg.getPaymentPreimage_asB64(),
    createdIndex: jspb.Message.getFieldWithDefault(msg, 13, 0),
    updatedIndex: jspb.Message.getFieldWithDefault(msg, 14, 0),
    paidOutpoint: (f = msg.getPaidOutpoint()) && proto.cln.WaitanyinvoicePaid_outpoint.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.WaitanyinvoiceResponse}
 */
proto.cln.WaitanyinvoiceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.WaitanyinvoiceResponse;
  return proto.cln.WaitanyinvoiceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.WaitanyinvoiceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.WaitanyinvoiceResponse}
 */
proto.cln.WaitanyinvoiceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 4:
      var value = /** @type {!proto.cln.WaitanyinvoiceResponse.WaitanyinvoiceStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExpiresAt(value);
      break;
    case 6:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt12(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPayIndex(value);
      break;
    case 10:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountReceivedMsat(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPaidAt(value);
      break;
    case 12:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentPreimage(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedIndex(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpdatedIndex(value);
      break;
    case 15:
      var value = new proto.cln.WaitanyinvoicePaid_outpoint;
      reader.readMessage(value,proto.cln.WaitanyinvoicePaid_outpoint.deserializeBinaryFromReader);
      msg.setPaidOutpoint(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.WaitanyinvoiceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.WaitanyinvoiceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.WaitanyinvoiceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitanyinvoiceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getExpiresAt();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getAmountReceivedMsat();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBytes(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeUint64(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeUint64(
      14,
      f
    );
  }
  f = message.getPaidOutpoint();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.cln.WaitanyinvoicePaid_outpoint.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.WaitanyinvoiceResponse.WaitanyinvoiceStatus = {
  PAID: 0,
  EXPIRED: 1
};

/**
 * optional string label = 1;
 * @return {string}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes payment_hash = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes payment_hash = 3;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional WaitanyinvoiceStatus status = 4;
 * @return {!proto.cln.WaitanyinvoiceResponse.WaitanyinvoiceStatus}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getStatus = function() {
  return /** @type {!proto.cln.WaitanyinvoiceResponse.WaitanyinvoiceStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.cln.WaitanyinvoiceResponse.WaitanyinvoiceStatus} value
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional uint64 expires_at = 5;
 * @return {number}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getExpiresAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.setExpiresAt = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional Amount amount_msat = 6;
 * @return {?proto.cln.Amount}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 6));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
*/
proto.cln.WaitanyinvoiceResponse.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitanyinvoiceResponse.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string bolt11 = 7;
 * @return {string}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.setBolt11 = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.clearBolt11 = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitanyinvoiceResponse.prototype.hasBolt11 = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string bolt12 = 8;
 * @return {string}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getBolt12 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.setBolt12 = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.clearBolt12 = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitanyinvoiceResponse.prototype.hasBolt12 = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint64 pay_index = 9;
 * @return {number}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getPayIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.setPayIndex = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.clearPayIndex = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitanyinvoiceResponse.prototype.hasPayIndex = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Amount amount_received_msat = 10;
 * @return {?proto.cln.Amount}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getAmountReceivedMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 10));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
*/
proto.cln.WaitanyinvoiceResponse.prototype.setAmountReceivedMsat = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.clearAmountReceivedMsat = function() {
  return this.setAmountReceivedMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitanyinvoiceResponse.prototype.hasAmountReceivedMsat = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint64 paid_at = 11;
 * @return {number}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getPaidAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.setPaidAt = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.clearPaidAt = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitanyinvoiceResponse.prototype.hasPaidAt = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bytes payment_preimage = 12;
 * @return {!(string|Uint8Array)}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getPaymentPreimage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * optional bytes payment_preimage = 12;
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {string}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getPaymentPreimage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentPreimage()));
};


/**
 * optional bytes payment_preimage = 12;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {!Uint8Array}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getPaymentPreimage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentPreimage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.setPaymentPreimage = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.clearPaymentPreimage = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitanyinvoiceResponse.prototype.hasPaymentPreimage = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional uint64 created_index = 13;
 * @return {number}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getCreatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.setCreatedIndex = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.clearCreatedIndex = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitanyinvoiceResponse.prototype.hasCreatedIndex = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional uint64 updated_index = 14;
 * @return {number}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getUpdatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.setUpdatedIndex = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.clearUpdatedIndex = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitanyinvoiceResponse.prototype.hasUpdatedIndex = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional WaitanyinvoicePaid_outpoint paid_outpoint = 15;
 * @return {?proto.cln.WaitanyinvoicePaid_outpoint}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getPaidOutpoint = function() {
  return /** @type{?proto.cln.WaitanyinvoicePaid_outpoint} */ (
    jspb.Message.getWrapperField(this, proto.cln.WaitanyinvoicePaid_outpoint, 15));
};


/**
 * @param {?proto.cln.WaitanyinvoicePaid_outpoint|undefined} value
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
*/
proto.cln.WaitanyinvoiceResponse.prototype.setPaidOutpoint = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.clearPaidOutpoint = function() {
  return this.setPaidOutpoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitanyinvoiceResponse.prototype.hasPaidOutpoint = function() {
  return jspb.Message.getField(this, 15) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.WaitanyinvoicePaid_outpoint.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.WaitanyinvoicePaid_outpoint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.WaitanyinvoicePaid_outpoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitanyinvoicePaid_outpoint.toObject = function(includeInstance, msg) {
  var f, obj = {
    txid: msg.getTxid_asB64(),
    outnum: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.WaitanyinvoicePaid_outpoint}
 */
proto.cln.WaitanyinvoicePaid_outpoint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.WaitanyinvoicePaid_outpoint;
  return proto.cln.WaitanyinvoicePaid_outpoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.WaitanyinvoicePaid_outpoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.WaitanyinvoicePaid_outpoint}
 */
proto.cln.WaitanyinvoicePaid_outpoint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOutnum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.WaitanyinvoicePaid_outpoint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.WaitanyinvoicePaid_outpoint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.WaitanyinvoicePaid_outpoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitanyinvoicePaid_outpoint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getOutnum();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional bytes txid = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.WaitanyinvoicePaid_outpoint.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes txid = 1;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.WaitanyinvoicePaid_outpoint.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.WaitanyinvoicePaid_outpoint.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.WaitanyinvoicePaid_outpoint} returns this
 */
proto.cln.WaitanyinvoicePaid_outpoint.prototype.setTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint32 outnum = 2;
 * @return {number}
 */
proto.cln.WaitanyinvoicePaid_outpoint.prototype.getOutnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitanyinvoicePaid_outpoint} returns this
 */
proto.cln.WaitanyinvoicePaid_outpoint.prototype.setOutnum = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.WaitinvoiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.WaitinvoiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.WaitinvoiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitinvoiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.WaitinvoiceRequest}
 */
proto.cln.WaitinvoiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.WaitinvoiceRequest;
  return proto.cln.WaitinvoiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.WaitinvoiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.WaitinvoiceRequest}
 */
proto.cln.WaitinvoiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.WaitinvoiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.WaitinvoiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.WaitinvoiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitinvoiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string label = 1;
 * @return {string}
 */
proto.cln.WaitinvoiceRequest.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.WaitinvoiceRequest} returns this
 */
proto.cln.WaitinvoiceRequest.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.WaitinvoiceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.WaitinvoiceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.WaitinvoiceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitinvoiceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    paymentHash: msg.getPaymentHash_asB64(),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0),
    expiresAt: jspb.Message.getFieldWithDefault(msg, 5, 0),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    bolt11: jspb.Message.getFieldWithDefault(msg, 7, ""),
    bolt12: jspb.Message.getFieldWithDefault(msg, 8, ""),
    payIndex: jspb.Message.getFieldWithDefault(msg, 9, 0),
    amountReceivedMsat: (f = msg.getAmountReceivedMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    paidAt: jspb.Message.getFieldWithDefault(msg, 11, 0),
    paymentPreimage: msg.getPaymentPreimage_asB64(),
    createdIndex: jspb.Message.getFieldWithDefault(msg, 13, 0),
    updatedIndex: jspb.Message.getFieldWithDefault(msg, 14, 0),
    paidOutpoint: (f = msg.getPaidOutpoint()) && proto.cln.WaitinvoicePaid_outpoint.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.WaitinvoiceResponse}
 */
proto.cln.WaitinvoiceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.WaitinvoiceResponse;
  return proto.cln.WaitinvoiceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.WaitinvoiceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.WaitinvoiceResponse}
 */
proto.cln.WaitinvoiceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 4:
      var value = /** @type {!proto.cln.WaitinvoiceResponse.WaitinvoiceStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExpiresAt(value);
      break;
    case 6:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt12(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPayIndex(value);
      break;
    case 10:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountReceivedMsat(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPaidAt(value);
      break;
    case 12:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentPreimage(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedIndex(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpdatedIndex(value);
      break;
    case 15:
      var value = new proto.cln.WaitinvoicePaid_outpoint;
      reader.readMessage(value,proto.cln.WaitinvoicePaid_outpoint.deserializeBinaryFromReader);
      msg.setPaidOutpoint(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.WaitinvoiceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.WaitinvoiceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.WaitinvoiceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitinvoiceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getExpiresAt();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getAmountReceivedMsat();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBytes(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeUint64(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeUint64(
      14,
      f
    );
  }
  f = message.getPaidOutpoint();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.cln.WaitinvoicePaid_outpoint.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.WaitinvoiceResponse.WaitinvoiceStatus = {
  PAID: 0,
  EXPIRED: 1
};

/**
 * optional string label = 1;
 * @return {string}
 */
proto.cln.WaitinvoiceResponse.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.cln.WaitinvoiceResponse.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes payment_hash = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.WaitinvoiceResponse.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes payment_hash = 3;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.WaitinvoiceResponse.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.WaitinvoiceResponse.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional WaitinvoiceStatus status = 4;
 * @return {!proto.cln.WaitinvoiceResponse.WaitinvoiceStatus}
 */
proto.cln.WaitinvoiceResponse.prototype.getStatus = function() {
  return /** @type {!proto.cln.WaitinvoiceResponse.WaitinvoiceStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.cln.WaitinvoiceResponse.WaitinvoiceStatus} value
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional uint64 expires_at = 5;
 * @return {number}
 */
proto.cln.WaitinvoiceResponse.prototype.getExpiresAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.setExpiresAt = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional Amount amount_msat = 6;
 * @return {?proto.cln.Amount}
 */
proto.cln.WaitinvoiceResponse.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 6));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.WaitinvoiceResponse} returns this
*/
proto.cln.WaitinvoiceResponse.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitinvoiceResponse.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string bolt11 = 7;
 * @return {string}
 */
proto.cln.WaitinvoiceResponse.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.setBolt11 = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.clearBolt11 = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitinvoiceResponse.prototype.hasBolt11 = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string bolt12 = 8;
 * @return {string}
 */
proto.cln.WaitinvoiceResponse.prototype.getBolt12 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.setBolt12 = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.clearBolt12 = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitinvoiceResponse.prototype.hasBolt12 = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint64 pay_index = 9;
 * @return {number}
 */
proto.cln.WaitinvoiceResponse.prototype.getPayIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.setPayIndex = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.clearPayIndex = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitinvoiceResponse.prototype.hasPayIndex = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Amount amount_received_msat = 10;
 * @return {?proto.cln.Amount}
 */
proto.cln.WaitinvoiceResponse.prototype.getAmountReceivedMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 10));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.WaitinvoiceResponse} returns this
*/
proto.cln.WaitinvoiceResponse.prototype.setAmountReceivedMsat = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.clearAmountReceivedMsat = function() {
  return this.setAmountReceivedMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitinvoiceResponse.prototype.hasAmountReceivedMsat = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint64 paid_at = 11;
 * @return {number}
 */
proto.cln.WaitinvoiceResponse.prototype.getPaidAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.setPaidAt = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.clearPaidAt = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitinvoiceResponse.prototype.hasPaidAt = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bytes payment_preimage = 12;
 * @return {!(string|Uint8Array)}
 */
proto.cln.WaitinvoiceResponse.prototype.getPaymentPreimage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * optional bytes payment_preimage = 12;
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {string}
 */
proto.cln.WaitinvoiceResponse.prototype.getPaymentPreimage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentPreimage()));
};


/**
 * optional bytes payment_preimage = 12;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {!Uint8Array}
 */
proto.cln.WaitinvoiceResponse.prototype.getPaymentPreimage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentPreimage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.setPaymentPreimage = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.clearPaymentPreimage = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitinvoiceResponse.prototype.hasPaymentPreimage = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional uint64 created_index = 13;
 * @return {number}
 */
proto.cln.WaitinvoiceResponse.prototype.getCreatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.setCreatedIndex = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.clearCreatedIndex = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitinvoiceResponse.prototype.hasCreatedIndex = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional uint64 updated_index = 14;
 * @return {number}
 */
proto.cln.WaitinvoiceResponse.prototype.getUpdatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.setUpdatedIndex = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.clearUpdatedIndex = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitinvoiceResponse.prototype.hasUpdatedIndex = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional WaitinvoicePaid_outpoint paid_outpoint = 15;
 * @return {?proto.cln.WaitinvoicePaid_outpoint}
 */
proto.cln.WaitinvoiceResponse.prototype.getPaidOutpoint = function() {
  return /** @type{?proto.cln.WaitinvoicePaid_outpoint} */ (
    jspb.Message.getWrapperField(this, proto.cln.WaitinvoicePaid_outpoint, 15));
};


/**
 * @param {?proto.cln.WaitinvoicePaid_outpoint|undefined} value
 * @return {!proto.cln.WaitinvoiceResponse} returns this
*/
proto.cln.WaitinvoiceResponse.prototype.setPaidOutpoint = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.clearPaidOutpoint = function() {
  return this.setPaidOutpoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitinvoiceResponse.prototype.hasPaidOutpoint = function() {
  return jspb.Message.getField(this, 15) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.WaitinvoicePaid_outpoint.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.WaitinvoicePaid_outpoint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.WaitinvoicePaid_outpoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitinvoicePaid_outpoint.toObject = function(includeInstance, msg) {
  var f, obj = {
    txid: msg.getTxid_asB64(),
    outnum: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.WaitinvoicePaid_outpoint}
 */
proto.cln.WaitinvoicePaid_outpoint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.WaitinvoicePaid_outpoint;
  return proto.cln.WaitinvoicePaid_outpoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.WaitinvoicePaid_outpoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.WaitinvoicePaid_outpoint}
 */
proto.cln.WaitinvoicePaid_outpoint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOutnum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.WaitinvoicePaid_outpoint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.WaitinvoicePaid_outpoint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.WaitinvoicePaid_outpoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitinvoicePaid_outpoint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getOutnum();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional bytes txid = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.WaitinvoicePaid_outpoint.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes txid = 1;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.WaitinvoicePaid_outpoint.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.WaitinvoicePaid_outpoint.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.WaitinvoicePaid_outpoint} returns this
 */
proto.cln.WaitinvoicePaid_outpoint.prototype.setTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint32 outnum = 2;
 * @return {number}
 */
proto.cln.WaitinvoicePaid_outpoint.prototype.getOutnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitinvoicePaid_outpoint} returns this
 */
proto.cln.WaitinvoicePaid_outpoint.prototype.setOutnum = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.WaitsendpayRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.WaitsendpayRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.WaitsendpayRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitsendpayRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentHash: msg.getPaymentHash_asB64(),
    partid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    timeout: jspb.Message.getFieldWithDefault(msg, 3, 0),
    groupid: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.WaitsendpayRequest}
 */
proto.cln.WaitsendpayRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.WaitsendpayRequest;
  return proto.cln.WaitsendpayRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.WaitsendpayRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.WaitsendpayRequest}
 */
proto.cln.WaitsendpayRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPartid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTimeout(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGroupid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.WaitsendpayRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.WaitsendpayRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.WaitsendpayRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitsendpayRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint64(
      4,
      f
    );
  }
};


/**
 * optional bytes payment_hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.WaitsendpayRequest.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes payment_hash = 1;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.WaitsendpayRequest.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.WaitsendpayRequest.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.WaitsendpayRequest} returns this
 */
proto.cln.WaitsendpayRequest.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint64 partid = 2;
 * @return {number}
 */
proto.cln.WaitsendpayRequest.prototype.getPartid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitsendpayRequest} returns this
 */
proto.cln.WaitsendpayRequest.prototype.setPartid = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitsendpayRequest} returns this
 */
proto.cln.WaitsendpayRequest.prototype.clearPartid = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitsendpayRequest.prototype.hasPartid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 timeout = 3;
 * @return {number}
 */
proto.cln.WaitsendpayRequest.prototype.getTimeout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitsendpayRequest} returns this
 */
proto.cln.WaitsendpayRequest.prototype.setTimeout = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitsendpayRequest} returns this
 */
proto.cln.WaitsendpayRequest.prototype.clearTimeout = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitsendpayRequest.prototype.hasTimeout = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 groupid = 4;
 * @return {number}
 */
proto.cln.WaitsendpayRequest.prototype.getGroupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitsendpayRequest} returns this
 */
proto.cln.WaitsendpayRequest.prototype.setGroupid = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitsendpayRequest} returns this
 */
proto.cln.WaitsendpayRequest.prototype.clearGroupid = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitsendpayRequest.prototype.hasGroupid = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.WaitsendpayResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.WaitsendpayResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.WaitsendpayResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitsendpayResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    groupid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    paymentHash: msg.getPaymentHash_asB64(),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    destination: msg.getDestination_asB64(),
    createdAt: jspb.Message.getFieldWithDefault(msg, 7, 0),
    amountSentMsat: (f = msg.getAmountSentMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    label: jspb.Message.getFieldWithDefault(msg, 9, ""),
    partid: jspb.Message.getFieldWithDefault(msg, 10, 0),
    bolt11: jspb.Message.getFieldWithDefault(msg, 11, ""),
    bolt12: jspb.Message.getFieldWithDefault(msg, 12, ""),
    paymentPreimage: msg.getPaymentPreimage_asB64(),
    completedAt: jspb.Message.getFloatingPointFieldWithDefault(msg, 14, 0.0),
    createdIndex: jspb.Message.getFieldWithDefault(msg, 15, 0),
    updatedIndex: jspb.Message.getFieldWithDefault(msg, 16, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.WaitsendpayResponse}
 */
proto.cln.WaitsendpayResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.WaitsendpayResponse;
  return proto.cln.WaitsendpayResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.WaitsendpayResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.WaitsendpayResponse}
 */
proto.cln.WaitsendpayResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGroupid(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 4:
      var value = /** @type {!proto.cln.WaitsendpayResponse.WaitsendpayStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 5:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDestination(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedAt(value);
      break;
    case 8:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountSentMsat(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPartid(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt12(value);
      break;
    case 13:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentPreimage(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCompletedAt(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedIndex(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpdatedIndex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.WaitsendpayResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.WaitsendpayResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.WaitsendpayResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitsendpayResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getAmountSentMsat();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBytes(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeDouble(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint64(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint64(
      16,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.WaitsendpayResponse.WaitsendpayStatus = {
  COMPLETE: 0
};

/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.cln.WaitsendpayResponse.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 groupid = 2;
 * @return {number}
 */
proto.cln.WaitsendpayResponse.prototype.getGroupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.setGroupid = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.clearGroupid = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitsendpayResponse.prototype.hasGroupid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes payment_hash = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.WaitsendpayResponse.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes payment_hash = 3;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.WaitsendpayResponse.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.WaitsendpayResponse.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional WaitsendpayStatus status = 4;
 * @return {!proto.cln.WaitsendpayResponse.WaitsendpayStatus}
 */
proto.cln.WaitsendpayResponse.prototype.getStatus = function() {
  return /** @type {!proto.cln.WaitsendpayResponse.WaitsendpayStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.cln.WaitsendpayResponse.WaitsendpayStatus} value
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional Amount amount_msat = 5;
 * @return {?proto.cln.Amount}
 */
proto.cln.WaitsendpayResponse.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 5));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.WaitsendpayResponse} returns this
*/
proto.cln.WaitsendpayResponse.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitsendpayResponse.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bytes destination = 6;
 * @return {!(string|Uint8Array)}
 */
proto.cln.WaitsendpayResponse.prototype.getDestination = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes destination = 6;
 * This is a type-conversion wrapper around `getDestination()`
 * @return {string}
 */
proto.cln.WaitsendpayResponse.prototype.getDestination_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDestination()));
};


/**
 * optional bytes destination = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDestination()`
 * @return {!Uint8Array}
 */
proto.cln.WaitsendpayResponse.prototype.getDestination_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDestination()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.setDestination = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.clearDestination = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitsendpayResponse.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 created_at = 7;
 * @return {number}
 */
proto.cln.WaitsendpayResponse.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional Amount amount_sent_msat = 8;
 * @return {?proto.cln.Amount}
 */
proto.cln.WaitsendpayResponse.prototype.getAmountSentMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 8));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.WaitsendpayResponse} returns this
*/
proto.cln.WaitsendpayResponse.prototype.setAmountSentMsat = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.clearAmountSentMsat = function() {
  return this.setAmountSentMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitsendpayResponse.prototype.hasAmountSentMsat = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string label = 9;
 * @return {string}
 */
proto.cln.WaitsendpayResponse.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.setLabel = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.clearLabel = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitsendpayResponse.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint64 partid = 10;
 * @return {number}
 */
proto.cln.WaitsendpayResponse.prototype.getPartid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.setPartid = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.clearPartid = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitsendpayResponse.prototype.hasPartid = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string bolt11 = 11;
 * @return {string}
 */
proto.cln.WaitsendpayResponse.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.setBolt11 = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.clearBolt11 = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitsendpayResponse.prototype.hasBolt11 = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string bolt12 = 12;
 * @return {string}
 */
proto.cln.WaitsendpayResponse.prototype.getBolt12 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.setBolt12 = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.clearBolt12 = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitsendpayResponse.prototype.hasBolt12 = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bytes payment_preimage = 13;
 * @return {!(string|Uint8Array)}
 */
proto.cln.WaitsendpayResponse.prototype.getPaymentPreimage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * optional bytes payment_preimage = 13;
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {string}
 */
proto.cln.WaitsendpayResponse.prototype.getPaymentPreimage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentPreimage()));
};


/**
 * optional bytes payment_preimage = 13;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {!Uint8Array}
 */
proto.cln.WaitsendpayResponse.prototype.getPaymentPreimage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentPreimage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.setPaymentPreimage = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.clearPaymentPreimage = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitsendpayResponse.prototype.hasPaymentPreimage = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional double completed_at = 14;
 * @return {number}
 */
proto.cln.WaitsendpayResponse.prototype.getCompletedAt = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.setCompletedAt = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.clearCompletedAt = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitsendpayResponse.prototype.hasCompletedAt = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional uint64 created_index = 15;
 * @return {number}
 */
proto.cln.WaitsendpayResponse.prototype.getCreatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.setCreatedIndex = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.clearCreatedIndex = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitsendpayResponse.prototype.hasCreatedIndex = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional uint64 updated_index = 16;
 * @return {number}
 */
proto.cln.WaitsendpayResponse.prototype.getUpdatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.setUpdatedIndex = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.clearUpdatedIndex = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitsendpayResponse.prototype.hasUpdatedIndex = function() {
  return jspb.Message.getField(this, 16) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.NewaddrRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.NewaddrRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.NewaddrRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.NewaddrRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    addresstype: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.NewaddrRequest}
 */
proto.cln.NewaddrRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.NewaddrRequest;
  return proto.cln.NewaddrRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.NewaddrRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.NewaddrRequest}
 */
proto.cln.NewaddrRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.NewaddrRequest.NewaddrAddresstype} */ (reader.readEnum());
      msg.setAddresstype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.NewaddrRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.NewaddrRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.NewaddrRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.NewaddrRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.cln.NewaddrRequest.NewaddrAddresstype} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.NewaddrRequest.NewaddrAddresstype = {
  BECH32: 0,
  ALL: 2,
  P2TR: 3
};

/**
 * optional NewaddrAddresstype addresstype = 1;
 * @return {!proto.cln.NewaddrRequest.NewaddrAddresstype}
 */
proto.cln.NewaddrRequest.prototype.getAddresstype = function() {
  return /** @type {!proto.cln.NewaddrRequest.NewaddrAddresstype} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.NewaddrRequest.NewaddrAddresstype} value
 * @return {!proto.cln.NewaddrRequest} returns this
 */
proto.cln.NewaddrRequest.prototype.setAddresstype = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.NewaddrRequest} returns this
 */
proto.cln.NewaddrRequest.prototype.clearAddresstype = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.NewaddrRequest.prototype.hasAddresstype = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.NewaddrResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.NewaddrResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.NewaddrResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.NewaddrResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    bech32: jspb.Message.getFieldWithDefault(msg, 1, ""),
    p2tr: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.NewaddrResponse}
 */
proto.cln.NewaddrResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.NewaddrResponse;
  return proto.cln.NewaddrResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.NewaddrResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.NewaddrResponse}
 */
proto.cln.NewaddrResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBech32(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setP2tr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.NewaddrResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.NewaddrResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.NewaddrResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.NewaddrResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string bech32 = 1;
 * @return {string}
 */
proto.cln.NewaddrResponse.prototype.getBech32 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.NewaddrResponse} returns this
 */
proto.cln.NewaddrResponse.prototype.setBech32 = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.NewaddrResponse} returns this
 */
proto.cln.NewaddrResponse.prototype.clearBech32 = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.NewaddrResponse.prototype.hasBech32 = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string p2tr = 3;
 * @return {string}
 */
proto.cln.NewaddrResponse.prototype.getP2tr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.NewaddrResponse} returns this
 */
proto.cln.NewaddrResponse.prototype.setP2tr = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.NewaddrResponse} returns this
 */
proto.cln.NewaddrResponse.prototype.clearP2tr = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.NewaddrResponse.prototype.hasP2tr = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.WithdrawRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.WithdrawRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.WithdrawRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.WithdrawRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WithdrawRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    destination: jspb.Message.getFieldWithDefault(msg, 1, ""),
    satoshi: (f = msg.getSatoshi()) && cln_primitives_pb.AmountOrAll.toObject(includeInstance, f),
    minconf: jspb.Message.getFieldWithDefault(msg, 3, 0),
    utxosList: jspb.Message.toObjectList(msg.getUtxosList(),
    cln_primitives_pb.Outpoint.toObject, includeInstance),
    feerate: (f = msg.getFeerate()) && cln_primitives_pb.Feerate.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.WithdrawRequest}
 */
proto.cln.WithdrawRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.WithdrawRequest;
  return proto.cln.WithdrawRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.WithdrawRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.WithdrawRequest}
 */
proto.cln.WithdrawRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestination(value);
      break;
    case 2:
      var value = new cln_primitives_pb.AmountOrAll;
      reader.readMessage(value,cln_primitives_pb.AmountOrAll.deserializeBinaryFromReader);
      msg.setSatoshi(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinconf(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Outpoint;
      reader.readMessage(value,cln_primitives_pb.Outpoint.deserializeBinaryFromReader);
      msg.addUtxos(value);
      break;
    case 5:
      var value = new cln_primitives_pb.Feerate;
      reader.readMessage(value,cln_primitives_pb.Feerate.deserializeBinaryFromReader);
      msg.setFeerate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.WithdrawRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.WithdrawRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.WithdrawRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WithdrawRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDestination();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSatoshi();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cln_primitives_pb.AmountOrAll.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getUtxosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      cln_primitives_pb.Outpoint.serializeBinaryToWriter
    );
  }
  f = message.getFeerate();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cln_primitives_pb.Feerate.serializeBinaryToWriter
    );
  }
};


/**
 * optional string destination = 1;
 * @return {string}
 */
proto.cln.WithdrawRequest.prototype.getDestination = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.WithdrawRequest} returns this
 */
proto.cln.WithdrawRequest.prototype.setDestination = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional AmountOrAll satoshi = 2;
 * @return {?proto.cln.AmountOrAll}
 */
proto.cln.WithdrawRequest.prototype.getSatoshi = function() {
  return /** @type{?proto.cln.AmountOrAll} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.AmountOrAll, 2));
};


/**
 * @param {?proto.cln.AmountOrAll|undefined} value
 * @return {!proto.cln.WithdrawRequest} returns this
*/
proto.cln.WithdrawRequest.prototype.setSatoshi = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.WithdrawRequest} returns this
 */
proto.cln.WithdrawRequest.prototype.clearSatoshi = function() {
  return this.setSatoshi(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WithdrawRequest.prototype.hasSatoshi = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 minconf = 3;
 * @return {number}
 */
proto.cln.WithdrawRequest.prototype.getMinconf = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WithdrawRequest} returns this
 */
proto.cln.WithdrawRequest.prototype.setMinconf = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WithdrawRequest} returns this
 */
proto.cln.WithdrawRequest.prototype.clearMinconf = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WithdrawRequest.prototype.hasMinconf = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Outpoint utxos = 4;
 * @return {!Array<!proto.cln.Outpoint>}
 */
proto.cln.WithdrawRequest.prototype.getUtxosList = function() {
  return /** @type{!Array<!proto.cln.Outpoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, cln_primitives_pb.Outpoint, 4));
};


/**
 * @param {!Array<!proto.cln.Outpoint>} value
 * @return {!proto.cln.WithdrawRequest} returns this
*/
proto.cln.WithdrawRequest.prototype.setUtxosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.cln.Outpoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.Outpoint}
 */
proto.cln.WithdrawRequest.prototype.addUtxos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.cln.Outpoint, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.WithdrawRequest} returns this
 */
proto.cln.WithdrawRequest.prototype.clearUtxosList = function() {
  return this.setUtxosList([]);
};


/**
 * optional Feerate feerate = 5;
 * @return {?proto.cln.Feerate}
 */
proto.cln.WithdrawRequest.prototype.getFeerate = function() {
  return /** @type{?proto.cln.Feerate} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Feerate, 5));
};


/**
 * @param {?proto.cln.Feerate|undefined} value
 * @return {!proto.cln.WithdrawRequest} returns this
*/
proto.cln.WithdrawRequest.prototype.setFeerate = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.WithdrawRequest} returns this
 */
proto.cln.WithdrawRequest.prototype.clearFeerate = function() {
  return this.setFeerate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WithdrawRequest.prototype.hasFeerate = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.WithdrawResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.WithdrawResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.WithdrawResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WithdrawResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    tx: msg.getTx_asB64(),
    txid: msg.getTxid_asB64(),
    psbt: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.WithdrawResponse}
 */
proto.cln.WithdrawResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.WithdrawResponse;
  return proto.cln.WithdrawResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.WithdrawResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.WithdrawResponse}
 */
proto.cln.WithdrawResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTx(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPsbt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.WithdrawResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.WithdrawResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.WithdrawResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WithdrawResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTx_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getPsbt();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional bytes tx = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.WithdrawResponse.prototype.getTx = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes tx = 1;
 * This is a type-conversion wrapper around `getTx()`
 * @return {string}
 */
proto.cln.WithdrawResponse.prototype.getTx_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTx()));
};


/**
 * optional bytes tx = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTx()`
 * @return {!Uint8Array}
 */
proto.cln.WithdrawResponse.prototype.getTx_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTx()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.WithdrawResponse} returns this
 */
proto.cln.WithdrawResponse.prototype.setTx = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes txid = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.WithdrawResponse.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes txid = 2;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.WithdrawResponse.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.WithdrawResponse.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.WithdrawResponse} returns this
 */
proto.cln.WithdrawResponse.prototype.setTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string psbt = 3;
 * @return {string}
 */
proto.cln.WithdrawResponse.prototype.getPsbt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.WithdrawResponse} returns this
 */
proto.cln.WithdrawResponse.prototype.setPsbt = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.KeysendRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.KeysendRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.KeysendRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.KeysendRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    destination: msg.getDestination_asB64(),
    label: jspb.Message.getFieldWithDefault(msg, 3, ""),
    maxfeepercent: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    retryFor: jspb.Message.getFieldWithDefault(msg, 5, 0),
    maxdelay: jspb.Message.getFieldWithDefault(msg, 6, 0),
    exemptfee: (f = msg.getExemptfee()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    routehints: (f = msg.getRoutehints()) && cln_primitives_pb.RoutehintList.toObject(includeInstance, f),
    extratlvs: (f = msg.getExtratlvs()) && cln_primitives_pb.TlvStream.toObject(includeInstance, f),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.KeysendRequest}
 */
proto.cln.KeysendRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.KeysendRequest;
  return proto.cln.KeysendRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.KeysendRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.KeysendRequest}
 */
proto.cln.KeysendRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDestination(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaxfeepercent(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRetryFor(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxdelay(value);
      break;
    case 7:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setExemptfee(value);
      break;
    case 8:
      var value = new cln_primitives_pb.RoutehintList;
      reader.readMessage(value,cln_primitives_pb.RoutehintList.deserializeBinaryFromReader);
      msg.setRoutehints(value);
      break;
    case 9:
      var value = new cln_primitives_pb.TlvStream;
      reader.readMessage(value,cln_primitives_pb.TlvStream.deserializeBinaryFromReader);
      msg.setExtratlvs(value);
      break;
    case 10:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.KeysendRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.KeysendRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.KeysendRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.KeysendRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDestination_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getExemptfee();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getRoutehints();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      cln_primitives_pb.RoutehintList.serializeBinaryToWriter
    );
  }
  f = message.getExtratlvs();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      cln_primitives_pb.TlvStream.serializeBinaryToWriter
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes destination = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.KeysendRequest.prototype.getDestination = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes destination = 1;
 * This is a type-conversion wrapper around `getDestination()`
 * @return {string}
 */
proto.cln.KeysendRequest.prototype.getDestination_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDestination()));
};


/**
 * optional bytes destination = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDestination()`
 * @return {!Uint8Array}
 */
proto.cln.KeysendRequest.prototype.getDestination_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDestination()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.KeysendRequest} returns this
 */
proto.cln.KeysendRequest.prototype.setDestination = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string label = 3;
 * @return {string}
 */
proto.cln.KeysendRequest.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.KeysendRequest} returns this
 */
proto.cln.KeysendRequest.prototype.setLabel = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.KeysendRequest} returns this
 */
proto.cln.KeysendRequest.prototype.clearLabel = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.KeysendRequest.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double maxfeepercent = 4;
 * @return {number}
 */
proto.cln.KeysendRequest.prototype.getMaxfeepercent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.cln.KeysendRequest} returns this
 */
proto.cln.KeysendRequest.prototype.setMaxfeepercent = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.KeysendRequest} returns this
 */
proto.cln.KeysendRequest.prototype.clearMaxfeepercent = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.KeysendRequest.prototype.hasMaxfeepercent = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 retry_for = 5;
 * @return {number}
 */
proto.cln.KeysendRequest.prototype.getRetryFor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.KeysendRequest} returns this
 */
proto.cln.KeysendRequest.prototype.setRetryFor = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.KeysendRequest} returns this
 */
proto.cln.KeysendRequest.prototype.clearRetryFor = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.KeysendRequest.prototype.hasRetryFor = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 maxdelay = 6;
 * @return {number}
 */
proto.cln.KeysendRequest.prototype.getMaxdelay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.KeysendRequest} returns this
 */
proto.cln.KeysendRequest.prototype.setMaxdelay = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.KeysendRequest} returns this
 */
proto.cln.KeysendRequest.prototype.clearMaxdelay = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.KeysendRequest.prototype.hasMaxdelay = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Amount exemptfee = 7;
 * @return {?proto.cln.Amount}
 */
proto.cln.KeysendRequest.prototype.getExemptfee = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 7));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.KeysendRequest} returns this
*/
proto.cln.KeysendRequest.prototype.setExemptfee = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.KeysendRequest} returns this
 */
proto.cln.KeysendRequest.prototype.clearExemptfee = function() {
  return this.setExemptfee(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.KeysendRequest.prototype.hasExemptfee = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional RoutehintList routehints = 8;
 * @return {?proto.cln.RoutehintList}
 */
proto.cln.KeysendRequest.prototype.getRoutehints = function() {
  return /** @type{?proto.cln.RoutehintList} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.RoutehintList, 8));
};


/**
 * @param {?proto.cln.RoutehintList|undefined} value
 * @return {!proto.cln.KeysendRequest} returns this
*/
proto.cln.KeysendRequest.prototype.setRoutehints = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.KeysendRequest} returns this
 */
proto.cln.KeysendRequest.prototype.clearRoutehints = function() {
  return this.setRoutehints(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.KeysendRequest.prototype.hasRoutehints = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional TlvStream extratlvs = 9;
 * @return {?proto.cln.TlvStream}
 */
proto.cln.KeysendRequest.prototype.getExtratlvs = function() {
  return /** @type{?proto.cln.TlvStream} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.TlvStream, 9));
};


/**
 * @param {?proto.cln.TlvStream|undefined} value
 * @return {!proto.cln.KeysendRequest} returns this
*/
proto.cln.KeysendRequest.prototype.setExtratlvs = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.KeysendRequest} returns this
 */
proto.cln.KeysendRequest.prototype.clearExtratlvs = function() {
  return this.setExtratlvs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.KeysendRequest.prototype.hasExtratlvs = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Amount amount_msat = 10;
 * @return {?proto.cln.Amount}
 */
proto.cln.KeysendRequest.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 10));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.KeysendRequest} returns this
*/
proto.cln.KeysendRequest.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.KeysendRequest} returns this
 */
proto.cln.KeysendRequest.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.KeysendRequest.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.KeysendResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.KeysendResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.KeysendResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.KeysendResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentPreimage: msg.getPaymentPreimage_asB64(),
    destination: msg.getDestination_asB64(),
    paymentHash: msg.getPaymentHash_asB64(),
    createdAt: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    parts: jspb.Message.getFieldWithDefault(msg, 5, 0),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    amountSentMsat: (f = msg.getAmountSentMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    warningPartialCompletion: jspb.Message.getFieldWithDefault(msg, 8, ""),
    status: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.KeysendResponse}
 */
proto.cln.KeysendResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.KeysendResponse;
  return proto.cln.KeysendResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.KeysendResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.KeysendResponse}
 */
proto.cln.KeysendResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentPreimage(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDestination(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCreatedAt(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setParts(value);
      break;
    case 6:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 7:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountSentMsat(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningPartialCompletion(value);
      break;
    case 9:
      var value = /** @type {!proto.cln.KeysendResponse.KeysendStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.KeysendResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.KeysendResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.KeysendResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.KeysendResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentPreimage_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getParts();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getAmountSentMsat();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.KeysendResponse.KeysendStatus = {
  COMPLETE: 0
};

/**
 * optional bytes payment_preimage = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.KeysendResponse.prototype.getPaymentPreimage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes payment_preimage = 1;
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {string}
 */
proto.cln.KeysendResponse.prototype.getPaymentPreimage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentPreimage()));
};


/**
 * optional bytes payment_preimage = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {!Uint8Array}
 */
proto.cln.KeysendResponse.prototype.getPaymentPreimage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentPreimage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.KeysendResponse} returns this
 */
proto.cln.KeysendResponse.prototype.setPaymentPreimage = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes destination = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.KeysendResponse.prototype.getDestination = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes destination = 2;
 * This is a type-conversion wrapper around `getDestination()`
 * @return {string}
 */
proto.cln.KeysendResponse.prototype.getDestination_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDestination()));
};


/**
 * optional bytes destination = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDestination()`
 * @return {!Uint8Array}
 */
proto.cln.KeysendResponse.prototype.getDestination_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDestination()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.KeysendResponse} returns this
 */
proto.cln.KeysendResponse.prototype.setDestination = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.KeysendResponse} returns this
 */
proto.cln.KeysendResponse.prototype.clearDestination = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.KeysendResponse.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes payment_hash = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.KeysendResponse.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes payment_hash = 3;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.KeysendResponse.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.KeysendResponse.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.KeysendResponse} returns this
 */
proto.cln.KeysendResponse.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional double created_at = 4;
 * @return {number}
 */
proto.cln.KeysendResponse.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.cln.KeysendResponse} returns this
 */
proto.cln.KeysendResponse.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional uint32 parts = 5;
 * @return {number}
 */
proto.cln.KeysendResponse.prototype.getParts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.KeysendResponse} returns this
 */
proto.cln.KeysendResponse.prototype.setParts = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional Amount amount_msat = 6;
 * @return {?proto.cln.Amount}
 */
proto.cln.KeysendResponse.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 6));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.KeysendResponse} returns this
*/
proto.cln.KeysendResponse.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.KeysendResponse} returns this
 */
proto.cln.KeysendResponse.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.KeysendResponse.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Amount amount_sent_msat = 7;
 * @return {?proto.cln.Amount}
 */
proto.cln.KeysendResponse.prototype.getAmountSentMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 7));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.KeysendResponse} returns this
*/
proto.cln.KeysendResponse.prototype.setAmountSentMsat = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.KeysendResponse} returns this
 */
proto.cln.KeysendResponse.prototype.clearAmountSentMsat = function() {
  return this.setAmountSentMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.KeysendResponse.prototype.hasAmountSentMsat = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string warning_partial_completion = 8;
 * @return {string}
 */
proto.cln.KeysendResponse.prototype.getWarningPartialCompletion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.KeysendResponse} returns this
 */
proto.cln.KeysendResponse.prototype.setWarningPartialCompletion = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.KeysendResponse} returns this
 */
proto.cln.KeysendResponse.prototype.clearWarningPartialCompletion = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.KeysendResponse.prototype.hasWarningPartialCompletion = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional KeysendStatus status = 9;
 * @return {!proto.cln.KeysendResponse.KeysendStatus}
 */
proto.cln.KeysendResponse.prototype.getStatus = function() {
  return /** @type {!proto.cln.KeysendResponse.KeysendStatus} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.cln.KeysendResponse.KeysendStatus} value
 * @return {!proto.cln.KeysendResponse} returns this
 */
proto.cln.KeysendResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.FundpsbtRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.FundpsbtRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.FundpsbtRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FundpsbtRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    satoshi: (f = msg.getSatoshi()) && cln_primitives_pb.AmountOrAll.toObject(includeInstance, f),
    feerate: (f = msg.getFeerate()) && cln_primitives_pb.Feerate.toObject(includeInstance, f),
    startweight: jspb.Message.getFieldWithDefault(msg, 3, 0),
    minconf: jspb.Message.getFieldWithDefault(msg, 4, 0),
    reserve: jspb.Message.getFieldWithDefault(msg, 5, 0),
    locktime: jspb.Message.getFieldWithDefault(msg, 6, 0),
    minWitnessWeight: jspb.Message.getFieldWithDefault(msg, 7, 0),
    excessAsChange: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    nonwrapped: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    openingAnchorChannel: jspb.Message.getBooleanFieldWithDefault(msg, 10, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.FundpsbtRequest}
 */
proto.cln.FundpsbtRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.FundpsbtRequest;
  return proto.cln.FundpsbtRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.FundpsbtRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.FundpsbtRequest}
 */
proto.cln.FundpsbtRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cln_primitives_pb.AmountOrAll;
      reader.readMessage(value,cln_primitives_pb.AmountOrAll.deserializeBinaryFromReader);
      msg.setSatoshi(value);
      break;
    case 2:
      var value = new cln_primitives_pb.Feerate;
      reader.readMessage(value,cln_primitives_pb.Feerate.deserializeBinaryFromReader);
      msg.setFeerate(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStartweight(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinconf(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setReserve(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLocktime(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinWitnessWeight(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExcessAsChange(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNonwrapped(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOpeningAnchorChannel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.FundpsbtRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.FundpsbtRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.FundpsbtRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FundpsbtRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSatoshi();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cln_primitives_pb.AmountOrAll.serializeBinaryToWriter
    );
  }
  f = message.getFeerate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cln_primitives_pb.Feerate.serializeBinaryToWriter
    );
  }
  f = message.getStartweight();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
};


/**
 * optional AmountOrAll satoshi = 1;
 * @return {?proto.cln.AmountOrAll}
 */
proto.cln.FundpsbtRequest.prototype.getSatoshi = function() {
  return /** @type{?proto.cln.AmountOrAll} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.AmountOrAll, 1));
};


/**
 * @param {?proto.cln.AmountOrAll|undefined} value
 * @return {!proto.cln.FundpsbtRequest} returns this
*/
proto.cln.FundpsbtRequest.prototype.setSatoshi = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FundpsbtRequest} returns this
 */
proto.cln.FundpsbtRequest.prototype.clearSatoshi = function() {
  return this.setSatoshi(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundpsbtRequest.prototype.hasSatoshi = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Feerate feerate = 2;
 * @return {?proto.cln.Feerate}
 */
proto.cln.FundpsbtRequest.prototype.getFeerate = function() {
  return /** @type{?proto.cln.Feerate} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Feerate, 2));
};


/**
 * @param {?proto.cln.Feerate|undefined} value
 * @return {!proto.cln.FundpsbtRequest} returns this
*/
proto.cln.FundpsbtRequest.prototype.setFeerate = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FundpsbtRequest} returns this
 */
proto.cln.FundpsbtRequest.prototype.clearFeerate = function() {
  return this.setFeerate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundpsbtRequest.prototype.hasFeerate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 startweight = 3;
 * @return {number}
 */
proto.cln.FundpsbtRequest.prototype.getStartweight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FundpsbtRequest} returns this
 */
proto.cln.FundpsbtRequest.prototype.setStartweight = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 minconf = 4;
 * @return {number}
 */
proto.cln.FundpsbtRequest.prototype.getMinconf = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FundpsbtRequest} returns this
 */
proto.cln.FundpsbtRequest.prototype.setMinconf = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FundpsbtRequest} returns this
 */
proto.cln.FundpsbtRequest.prototype.clearMinconf = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundpsbtRequest.prototype.hasMinconf = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 reserve = 5;
 * @return {number}
 */
proto.cln.FundpsbtRequest.prototype.getReserve = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FundpsbtRequest} returns this
 */
proto.cln.FundpsbtRequest.prototype.setReserve = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FundpsbtRequest} returns this
 */
proto.cln.FundpsbtRequest.prototype.clearReserve = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundpsbtRequest.prototype.hasReserve = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 locktime = 6;
 * @return {number}
 */
proto.cln.FundpsbtRequest.prototype.getLocktime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FundpsbtRequest} returns this
 */
proto.cln.FundpsbtRequest.prototype.setLocktime = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FundpsbtRequest} returns this
 */
proto.cln.FundpsbtRequest.prototype.clearLocktime = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundpsbtRequest.prototype.hasLocktime = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 min_witness_weight = 7;
 * @return {number}
 */
proto.cln.FundpsbtRequest.prototype.getMinWitnessWeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FundpsbtRequest} returns this
 */
proto.cln.FundpsbtRequest.prototype.setMinWitnessWeight = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FundpsbtRequest} returns this
 */
proto.cln.FundpsbtRequest.prototype.clearMinWitnessWeight = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundpsbtRequest.prototype.hasMinWitnessWeight = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool excess_as_change = 8;
 * @return {boolean}
 */
proto.cln.FundpsbtRequest.prototype.getExcessAsChange = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.FundpsbtRequest} returns this
 */
proto.cln.FundpsbtRequest.prototype.setExcessAsChange = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FundpsbtRequest} returns this
 */
proto.cln.FundpsbtRequest.prototype.clearExcessAsChange = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundpsbtRequest.prototype.hasExcessAsChange = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool nonwrapped = 9;
 * @return {boolean}
 */
proto.cln.FundpsbtRequest.prototype.getNonwrapped = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.FundpsbtRequest} returns this
 */
proto.cln.FundpsbtRequest.prototype.setNonwrapped = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FundpsbtRequest} returns this
 */
proto.cln.FundpsbtRequest.prototype.clearNonwrapped = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundpsbtRequest.prototype.hasNonwrapped = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool opening_anchor_channel = 10;
 * @return {boolean}
 */
proto.cln.FundpsbtRequest.prototype.getOpeningAnchorChannel = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.FundpsbtRequest} returns this
 */
proto.cln.FundpsbtRequest.prototype.setOpeningAnchorChannel = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FundpsbtRequest} returns this
 */
proto.cln.FundpsbtRequest.prototype.clearOpeningAnchorChannel = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundpsbtRequest.prototype.hasOpeningAnchorChannel = function() {
  return jspb.Message.getField(this, 10) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.FundpsbtResponse.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.FundpsbtResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.FundpsbtResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.FundpsbtResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FundpsbtResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    psbt: jspb.Message.getFieldWithDefault(msg, 1, ""),
    feeratePerKw: jspb.Message.getFieldWithDefault(msg, 2, 0),
    estimatedFinalWeight: jspb.Message.getFieldWithDefault(msg, 3, 0),
    excessMsat: (f = msg.getExcessMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    changeOutnum: jspb.Message.getFieldWithDefault(msg, 5, 0),
    reservationsList: jspb.Message.toObjectList(msg.getReservationsList(),
    proto.cln.FundpsbtReservations.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.FundpsbtResponse}
 */
proto.cln.FundpsbtResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.FundpsbtResponse;
  return proto.cln.FundpsbtResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.FundpsbtResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.FundpsbtResponse}
 */
proto.cln.FundpsbtResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPsbt(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFeeratePerKw(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setEstimatedFinalWeight(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setExcessMsat(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setChangeOutnum(value);
      break;
    case 6:
      var value = new proto.cln.FundpsbtReservations;
      reader.readMessage(value,proto.cln.FundpsbtReservations.deserializeBinaryFromReader);
      msg.addReservations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.FundpsbtResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.FundpsbtResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.FundpsbtResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FundpsbtResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPsbt();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFeeratePerKw();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getEstimatedFinalWeight();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getExcessMsat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getReservationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.cln.FundpsbtReservations.serializeBinaryToWriter
    );
  }
};


/**
 * optional string psbt = 1;
 * @return {string}
 */
proto.cln.FundpsbtResponse.prototype.getPsbt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.FundpsbtResponse} returns this
 */
proto.cln.FundpsbtResponse.prototype.setPsbt = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 feerate_per_kw = 2;
 * @return {number}
 */
proto.cln.FundpsbtResponse.prototype.getFeeratePerKw = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FundpsbtResponse} returns this
 */
proto.cln.FundpsbtResponse.prototype.setFeeratePerKw = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 estimated_final_weight = 3;
 * @return {number}
 */
proto.cln.FundpsbtResponse.prototype.getEstimatedFinalWeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FundpsbtResponse} returns this
 */
proto.cln.FundpsbtResponse.prototype.setEstimatedFinalWeight = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional Amount excess_msat = 4;
 * @return {?proto.cln.Amount}
 */
proto.cln.FundpsbtResponse.prototype.getExcessMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 4));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.FundpsbtResponse} returns this
*/
proto.cln.FundpsbtResponse.prototype.setExcessMsat = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FundpsbtResponse} returns this
 */
proto.cln.FundpsbtResponse.prototype.clearExcessMsat = function() {
  return this.setExcessMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundpsbtResponse.prototype.hasExcessMsat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 change_outnum = 5;
 * @return {number}
 */
proto.cln.FundpsbtResponse.prototype.getChangeOutnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FundpsbtResponse} returns this
 */
proto.cln.FundpsbtResponse.prototype.setChangeOutnum = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FundpsbtResponse} returns this
 */
proto.cln.FundpsbtResponse.prototype.clearChangeOutnum = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundpsbtResponse.prototype.hasChangeOutnum = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated FundpsbtReservations reservations = 6;
 * @return {!Array<!proto.cln.FundpsbtReservations>}
 */
proto.cln.FundpsbtResponse.prototype.getReservationsList = function() {
  return /** @type{!Array<!proto.cln.FundpsbtReservations>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.FundpsbtReservations, 6));
};


/**
 * @param {!Array<!proto.cln.FundpsbtReservations>} value
 * @return {!proto.cln.FundpsbtResponse} returns this
*/
proto.cln.FundpsbtResponse.prototype.setReservationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.cln.FundpsbtReservations=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.FundpsbtReservations}
 */
proto.cln.FundpsbtResponse.prototype.addReservations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.cln.FundpsbtReservations, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.FundpsbtResponse} returns this
 */
proto.cln.FundpsbtResponse.prototype.clearReservationsList = function() {
  return this.setReservationsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.FundpsbtReservations.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.FundpsbtReservations.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.FundpsbtReservations} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FundpsbtReservations.toObject = function(includeInstance, msg) {
  var f, obj = {
    txid: msg.getTxid_asB64(),
    vout: jspb.Message.getFieldWithDefault(msg, 2, 0),
    wasReserved: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    reserved: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    reservedToBlock: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.FundpsbtReservations}
 */
proto.cln.FundpsbtReservations.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.FundpsbtReservations;
  return proto.cln.FundpsbtReservations.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.FundpsbtReservations} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.FundpsbtReservations}
 */
proto.cln.FundpsbtReservations.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVout(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWasReserved(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReserved(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setReservedToBlock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.FundpsbtReservations.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.FundpsbtReservations.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.FundpsbtReservations} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FundpsbtReservations.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getVout();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getWasReserved();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getReserved();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getReservedToBlock();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * optional bytes txid = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.FundpsbtReservations.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes txid = 1;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.FundpsbtReservations.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.FundpsbtReservations.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.FundpsbtReservations} returns this
 */
proto.cln.FundpsbtReservations.prototype.setTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint32 vout = 2;
 * @return {number}
 */
proto.cln.FundpsbtReservations.prototype.getVout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FundpsbtReservations} returns this
 */
proto.cln.FundpsbtReservations.prototype.setVout = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool was_reserved = 3;
 * @return {boolean}
 */
proto.cln.FundpsbtReservations.prototype.getWasReserved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.FundpsbtReservations} returns this
 */
proto.cln.FundpsbtReservations.prototype.setWasReserved = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool reserved = 4;
 * @return {boolean}
 */
proto.cln.FundpsbtReservations.prototype.getReserved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.FundpsbtReservations} returns this
 */
proto.cln.FundpsbtReservations.prototype.setReserved = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional uint32 reserved_to_block = 5;
 * @return {number}
 */
proto.cln.FundpsbtReservations.prototype.getReservedToBlock = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FundpsbtReservations} returns this
 */
proto.cln.FundpsbtReservations.prototype.setReservedToBlock = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SendpsbtRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SendpsbtRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SendpsbtRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendpsbtRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    psbt: jspb.Message.getFieldWithDefault(msg, 1, ""),
    reserve: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SendpsbtRequest}
 */
proto.cln.SendpsbtRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SendpsbtRequest;
  return proto.cln.SendpsbtRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SendpsbtRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SendpsbtRequest}
 */
proto.cln.SendpsbtRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPsbt(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setReserve(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SendpsbtRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SendpsbtRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SendpsbtRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendpsbtRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPsbt();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional string psbt = 1;
 * @return {string}
 */
proto.cln.SendpsbtRequest.prototype.getPsbt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SendpsbtRequest} returns this
 */
proto.cln.SendpsbtRequest.prototype.setPsbt = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 reserve = 2;
 * @return {number}
 */
proto.cln.SendpsbtRequest.prototype.getReserve = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendpsbtRequest} returns this
 */
proto.cln.SendpsbtRequest.prototype.setReserve = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpsbtRequest} returns this
 */
proto.cln.SendpsbtRequest.prototype.clearReserve = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpsbtRequest.prototype.hasReserve = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SendpsbtResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SendpsbtResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SendpsbtResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendpsbtResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    tx: msg.getTx_asB64(),
    txid: msg.getTxid_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SendpsbtResponse}
 */
proto.cln.SendpsbtResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SendpsbtResponse;
  return proto.cln.SendpsbtResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SendpsbtResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SendpsbtResponse}
 */
proto.cln.SendpsbtResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTx(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SendpsbtResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SendpsbtResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SendpsbtResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendpsbtResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTx_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional bytes tx = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendpsbtResponse.prototype.getTx = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes tx = 1;
 * This is a type-conversion wrapper around `getTx()`
 * @return {string}
 */
proto.cln.SendpsbtResponse.prototype.getTx_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTx()));
};


/**
 * optional bytes tx = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTx()`
 * @return {!Uint8Array}
 */
proto.cln.SendpsbtResponse.prototype.getTx_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTx()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendpsbtResponse} returns this
 */
proto.cln.SendpsbtResponse.prototype.setTx = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes txid = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendpsbtResponse.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes txid = 2;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.SendpsbtResponse.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.SendpsbtResponse.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendpsbtResponse} returns this
 */
proto.cln.SendpsbtResponse.prototype.setTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.SignpsbtRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SignpsbtRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SignpsbtRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SignpsbtRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SignpsbtRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    psbt: jspb.Message.getFieldWithDefault(msg, 1, ""),
    signonlyList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SignpsbtRequest}
 */
proto.cln.SignpsbtRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SignpsbtRequest;
  return proto.cln.SignpsbtRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SignpsbtRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SignpsbtRequest}
 */
proto.cln.SignpsbtRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPsbt(value);
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSignonly(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SignpsbtRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SignpsbtRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SignpsbtRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SignpsbtRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPsbt();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSignonlyList();
  if (f.length > 0) {
    writer.writePackedUint32(
      2,
      f
    );
  }
};


/**
 * optional string psbt = 1;
 * @return {string}
 */
proto.cln.SignpsbtRequest.prototype.getPsbt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SignpsbtRequest} returns this
 */
proto.cln.SignpsbtRequest.prototype.setPsbt = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated uint32 signonly = 2;
 * @return {!Array<number>}
 */
proto.cln.SignpsbtRequest.prototype.getSignonlyList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.cln.SignpsbtRequest} returns this
 */
proto.cln.SignpsbtRequest.prototype.setSignonlyList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.cln.SignpsbtRequest} returns this
 */
proto.cln.SignpsbtRequest.prototype.addSignonly = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.SignpsbtRequest} returns this
 */
proto.cln.SignpsbtRequest.prototype.clearSignonlyList = function() {
  return this.setSignonlyList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SignpsbtResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SignpsbtResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SignpsbtResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SignpsbtResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    signedPsbt: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SignpsbtResponse}
 */
proto.cln.SignpsbtResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SignpsbtResponse;
  return proto.cln.SignpsbtResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SignpsbtResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SignpsbtResponse}
 */
proto.cln.SignpsbtResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignedPsbt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SignpsbtResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SignpsbtResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SignpsbtResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SignpsbtResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSignedPsbt();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string signed_psbt = 1;
 * @return {string}
 */
proto.cln.SignpsbtResponse.prototype.getSignedPsbt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SignpsbtResponse} returns this
 */
proto.cln.SignpsbtResponse.prototype.setSignedPsbt = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.UtxopsbtRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.UtxopsbtRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.UtxopsbtRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.UtxopsbtRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.UtxopsbtRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    satoshi: (f = msg.getSatoshi()) && cln_primitives_pb.AmountOrAll.toObject(includeInstance, f),
    feerate: (f = msg.getFeerate()) && cln_primitives_pb.Feerate.toObject(includeInstance, f),
    startweight: jspb.Message.getFieldWithDefault(msg, 3, 0),
    utxosList: jspb.Message.toObjectList(msg.getUtxosList(),
    cln_primitives_pb.Outpoint.toObject, includeInstance),
    reserve: jspb.Message.getFieldWithDefault(msg, 5, 0),
    locktime: jspb.Message.getFieldWithDefault(msg, 6, 0),
    minWitnessWeight: jspb.Message.getFieldWithDefault(msg, 7, 0),
    reservedok: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    excessAsChange: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    openingAnchorChannel: jspb.Message.getBooleanFieldWithDefault(msg, 10, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.UtxopsbtRequest}
 */
proto.cln.UtxopsbtRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.UtxopsbtRequest;
  return proto.cln.UtxopsbtRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.UtxopsbtRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.UtxopsbtRequest}
 */
proto.cln.UtxopsbtRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cln_primitives_pb.AmountOrAll;
      reader.readMessage(value,cln_primitives_pb.AmountOrAll.deserializeBinaryFromReader);
      msg.setSatoshi(value);
      break;
    case 2:
      var value = new cln_primitives_pb.Feerate;
      reader.readMessage(value,cln_primitives_pb.Feerate.deserializeBinaryFromReader);
      msg.setFeerate(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStartweight(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Outpoint;
      reader.readMessage(value,cln_primitives_pb.Outpoint.deserializeBinaryFromReader);
      msg.addUtxos(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setReserve(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLocktime(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinWitnessWeight(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReservedok(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExcessAsChange(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOpeningAnchorChannel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.UtxopsbtRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.UtxopsbtRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.UtxopsbtRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.UtxopsbtRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSatoshi();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cln_primitives_pb.AmountOrAll.serializeBinaryToWriter
    );
  }
  f = message.getFeerate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cln_primitives_pb.Feerate.serializeBinaryToWriter
    );
  }
  f = message.getStartweight();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getUtxosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      cln_primitives_pb.Outpoint.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
};


/**
 * optional AmountOrAll satoshi = 1;
 * @return {?proto.cln.AmountOrAll}
 */
proto.cln.UtxopsbtRequest.prototype.getSatoshi = function() {
  return /** @type{?proto.cln.AmountOrAll} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.AmountOrAll, 1));
};


/**
 * @param {?proto.cln.AmountOrAll|undefined} value
 * @return {!proto.cln.UtxopsbtRequest} returns this
*/
proto.cln.UtxopsbtRequest.prototype.setSatoshi = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.UtxopsbtRequest} returns this
 */
proto.cln.UtxopsbtRequest.prototype.clearSatoshi = function() {
  return this.setSatoshi(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.UtxopsbtRequest.prototype.hasSatoshi = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Feerate feerate = 2;
 * @return {?proto.cln.Feerate}
 */
proto.cln.UtxopsbtRequest.prototype.getFeerate = function() {
  return /** @type{?proto.cln.Feerate} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Feerate, 2));
};


/**
 * @param {?proto.cln.Feerate|undefined} value
 * @return {!proto.cln.UtxopsbtRequest} returns this
*/
proto.cln.UtxopsbtRequest.prototype.setFeerate = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.UtxopsbtRequest} returns this
 */
proto.cln.UtxopsbtRequest.prototype.clearFeerate = function() {
  return this.setFeerate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.UtxopsbtRequest.prototype.hasFeerate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 startweight = 3;
 * @return {number}
 */
proto.cln.UtxopsbtRequest.prototype.getStartweight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.UtxopsbtRequest} returns this
 */
proto.cln.UtxopsbtRequest.prototype.setStartweight = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated Outpoint utxos = 4;
 * @return {!Array<!proto.cln.Outpoint>}
 */
proto.cln.UtxopsbtRequest.prototype.getUtxosList = function() {
  return /** @type{!Array<!proto.cln.Outpoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, cln_primitives_pb.Outpoint, 4));
};


/**
 * @param {!Array<!proto.cln.Outpoint>} value
 * @return {!proto.cln.UtxopsbtRequest} returns this
*/
proto.cln.UtxopsbtRequest.prototype.setUtxosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.cln.Outpoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.Outpoint}
 */
proto.cln.UtxopsbtRequest.prototype.addUtxos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.cln.Outpoint, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.UtxopsbtRequest} returns this
 */
proto.cln.UtxopsbtRequest.prototype.clearUtxosList = function() {
  return this.setUtxosList([]);
};


/**
 * optional uint32 reserve = 5;
 * @return {number}
 */
proto.cln.UtxopsbtRequest.prototype.getReserve = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.UtxopsbtRequest} returns this
 */
proto.cln.UtxopsbtRequest.prototype.setReserve = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.UtxopsbtRequest} returns this
 */
proto.cln.UtxopsbtRequest.prototype.clearReserve = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.UtxopsbtRequest.prototype.hasReserve = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 locktime = 6;
 * @return {number}
 */
proto.cln.UtxopsbtRequest.prototype.getLocktime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.UtxopsbtRequest} returns this
 */
proto.cln.UtxopsbtRequest.prototype.setLocktime = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.UtxopsbtRequest} returns this
 */
proto.cln.UtxopsbtRequest.prototype.clearLocktime = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.UtxopsbtRequest.prototype.hasLocktime = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 min_witness_weight = 7;
 * @return {number}
 */
proto.cln.UtxopsbtRequest.prototype.getMinWitnessWeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.UtxopsbtRequest} returns this
 */
proto.cln.UtxopsbtRequest.prototype.setMinWitnessWeight = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.UtxopsbtRequest} returns this
 */
proto.cln.UtxopsbtRequest.prototype.clearMinWitnessWeight = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.UtxopsbtRequest.prototype.hasMinWitnessWeight = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool reservedok = 8;
 * @return {boolean}
 */
proto.cln.UtxopsbtRequest.prototype.getReservedok = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.UtxopsbtRequest} returns this
 */
proto.cln.UtxopsbtRequest.prototype.setReservedok = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.UtxopsbtRequest} returns this
 */
proto.cln.UtxopsbtRequest.prototype.clearReservedok = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.UtxopsbtRequest.prototype.hasReservedok = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool excess_as_change = 9;
 * @return {boolean}
 */
proto.cln.UtxopsbtRequest.prototype.getExcessAsChange = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.UtxopsbtRequest} returns this
 */
proto.cln.UtxopsbtRequest.prototype.setExcessAsChange = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.UtxopsbtRequest} returns this
 */
proto.cln.UtxopsbtRequest.prototype.clearExcessAsChange = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.UtxopsbtRequest.prototype.hasExcessAsChange = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool opening_anchor_channel = 10;
 * @return {boolean}
 */
proto.cln.UtxopsbtRequest.prototype.getOpeningAnchorChannel = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.UtxopsbtRequest} returns this
 */
proto.cln.UtxopsbtRequest.prototype.setOpeningAnchorChannel = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.UtxopsbtRequest} returns this
 */
proto.cln.UtxopsbtRequest.prototype.clearOpeningAnchorChannel = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.UtxopsbtRequest.prototype.hasOpeningAnchorChannel = function() {
  return jspb.Message.getField(this, 10) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.UtxopsbtResponse.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.UtxopsbtResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.UtxopsbtResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.UtxopsbtResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.UtxopsbtResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    psbt: jspb.Message.getFieldWithDefault(msg, 1, ""),
    feeratePerKw: jspb.Message.getFieldWithDefault(msg, 2, 0),
    estimatedFinalWeight: jspb.Message.getFieldWithDefault(msg, 3, 0),
    excessMsat: (f = msg.getExcessMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    changeOutnum: jspb.Message.getFieldWithDefault(msg, 5, 0),
    reservationsList: jspb.Message.toObjectList(msg.getReservationsList(),
    proto.cln.UtxopsbtReservations.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.UtxopsbtResponse}
 */
proto.cln.UtxopsbtResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.UtxopsbtResponse;
  return proto.cln.UtxopsbtResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.UtxopsbtResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.UtxopsbtResponse}
 */
proto.cln.UtxopsbtResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPsbt(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFeeratePerKw(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setEstimatedFinalWeight(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setExcessMsat(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setChangeOutnum(value);
      break;
    case 6:
      var value = new proto.cln.UtxopsbtReservations;
      reader.readMessage(value,proto.cln.UtxopsbtReservations.deserializeBinaryFromReader);
      msg.addReservations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.UtxopsbtResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.UtxopsbtResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.UtxopsbtResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.UtxopsbtResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPsbt();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFeeratePerKw();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getEstimatedFinalWeight();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getExcessMsat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getReservationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.cln.UtxopsbtReservations.serializeBinaryToWriter
    );
  }
};


/**
 * optional string psbt = 1;
 * @return {string}
 */
proto.cln.UtxopsbtResponse.prototype.getPsbt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.UtxopsbtResponse} returns this
 */
proto.cln.UtxopsbtResponse.prototype.setPsbt = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 feerate_per_kw = 2;
 * @return {number}
 */
proto.cln.UtxopsbtResponse.prototype.getFeeratePerKw = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.UtxopsbtResponse} returns this
 */
proto.cln.UtxopsbtResponse.prototype.setFeeratePerKw = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 estimated_final_weight = 3;
 * @return {number}
 */
proto.cln.UtxopsbtResponse.prototype.getEstimatedFinalWeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.UtxopsbtResponse} returns this
 */
proto.cln.UtxopsbtResponse.prototype.setEstimatedFinalWeight = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional Amount excess_msat = 4;
 * @return {?proto.cln.Amount}
 */
proto.cln.UtxopsbtResponse.prototype.getExcessMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 4));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.UtxopsbtResponse} returns this
*/
proto.cln.UtxopsbtResponse.prototype.setExcessMsat = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.UtxopsbtResponse} returns this
 */
proto.cln.UtxopsbtResponse.prototype.clearExcessMsat = function() {
  return this.setExcessMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.UtxopsbtResponse.prototype.hasExcessMsat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 change_outnum = 5;
 * @return {number}
 */
proto.cln.UtxopsbtResponse.prototype.getChangeOutnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.UtxopsbtResponse} returns this
 */
proto.cln.UtxopsbtResponse.prototype.setChangeOutnum = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.UtxopsbtResponse} returns this
 */
proto.cln.UtxopsbtResponse.prototype.clearChangeOutnum = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.UtxopsbtResponse.prototype.hasChangeOutnum = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated UtxopsbtReservations reservations = 6;
 * @return {!Array<!proto.cln.UtxopsbtReservations>}
 */
proto.cln.UtxopsbtResponse.prototype.getReservationsList = function() {
  return /** @type{!Array<!proto.cln.UtxopsbtReservations>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.UtxopsbtReservations, 6));
};


/**
 * @param {!Array<!proto.cln.UtxopsbtReservations>} value
 * @return {!proto.cln.UtxopsbtResponse} returns this
*/
proto.cln.UtxopsbtResponse.prototype.setReservationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.cln.UtxopsbtReservations=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.UtxopsbtReservations}
 */
proto.cln.UtxopsbtResponse.prototype.addReservations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.cln.UtxopsbtReservations, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.UtxopsbtResponse} returns this
 */
proto.cln.UtxopsbtResponse.prototype.clearReservationsList = function() {
  return this.setReservationsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.UtxopsbtReservations.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.UtxopsbtReservations.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.UtxopsbtReservations} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.UtxopsbtReservations.toObject = function(includeInstance, msg) {
  var f, obj = {
    txid: msg.getTxid_asB64(),
    vout: jspb.Message.getFieldWithDefault(msg, 2, 0),
    wasReserved: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    reserved: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    reservedToBlock: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.UtxopsbtReservations}
 */
proto.cln.UtxopsbtReservations.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.UtxopsbtReservations;
  return proto.cln.UtxopsbtReservations.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.UtxopsbtReservations} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.UtxopsbtReservations}
 */
proto.cln.UtxopsbtReservations.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVout(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWasReserved(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReserved(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setReservedToBlock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.UtxopsbtReservations.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.UtxopsbtReservations.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.UtxopsbtReservations} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.UtxopsbtReservations.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getVout();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getWasReserved();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getReserved();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getReservedToBlock();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * optional bytes txid = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.UtxopsbtReservations.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes txid = 1;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.UtxopsbtReservations.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.UtxopsbtReservations.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.UtxopsbtReservations} returns this
 */
proto.cln.UtxopsbtReservations.prototype.setTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint32 vout = 2;
 * @return {number}
 */
proto.cln.UtxopsbtReservations.prototype.getVout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.UtxopsbtReservations} returns this
 */
proto.cln.UtxopsbtReservations.prototype.setVout = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool was_reserved = 3;
 * @return {boolean}
 */
proto.cln.UtxopsbtReservations.prototype.getWasReserved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.UtxopsbtReservations} returns this
 */
proto.cln.UtxopsbtReservations.prototype.setWasReserved = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool reserved = 4;
 * @return {boolean}
 */
proto.cln.UtxopsbtReservations.prototype.getReserved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.UtxopsbtReservations} returns this
 */
proto.cln.UtxopsbtReservations.prototype.setReserved = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional uint32 reserved_to_block = 5;
 * @return {number}
 */
proto.cln.UtxopsbtReservations.prototype.getReservedToBlock = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.UtxopsbtReservations} returns this
 */
proto.cln.UtxopsbtReservations.prototype.setReservedToBlock = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.TxdiscardRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.TxdiscardRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.TxdiscardRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.TxdiscardRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    txid: msg.getTxid_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.TxdiscardRequest}
 */
proto.cln.TxdiscardRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.TxdiscardRequest;
  return proto.cln.TxdiscardRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.TxdiscardRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.TxdiscardRequest}
 */
proto.cln.TxdiscardRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.TxdiscardRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.TxdiscardRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.TxdiscardRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.TxdiscardRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes txid = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.TxdiscardRequest.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes txid = 1;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.TxdiscardRequest.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.TxdiscardRequest.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.TxdiscardRequest} returns this
 */
proto.cln.TxdiscardRequest.prototype.setTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.TxdiscardResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.TxdiscardResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.TxdiscardResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.TxdiscardResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    unsignedTx: msg.getUnsignedTx_asB64(),
    txid: msg.getTxid_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.TxdiscardResponse}
 */
proto.cln.TxdiscardResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.TxdiscardResponse;
  return proto.cln.TxdiscardResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.TxdiscardResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.TxdiscardResponse}
 */
proto.cln.TxdiscardResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setUnsignedTx(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.TxdiscardResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.TxdiscardResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.TxdiscardResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.TxdiscardResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUnsignedTx_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional bytes unsigned_tx = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.TxdiscardResponse.prototype.getUnsignedTx = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes unsigned_tx = 1;
 * This is a type-conversion wrapper around `getUnsignedTx()`
 * @return {string}
 */
proto.cln.TxdiscardResponse.prototype.getUnsignedTx_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getUnsignedTx()));
};


/**
 * optional bytes unsigned_tx = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getUnsignedTx()`
 * @return {!Uint8Array}
 */
proto.cln.TxdiscardResponse.prototype.getUnsignedTx_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getUnsignedTx()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.TxdiscardResponse} returns this
 */
proto.cln.TxdiscardResponse.prototype.setUnsignedTx = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes txid = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.TxdiscardResponse.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes txid = 2;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.TxdiscardResponse.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.TxdiscardResponse.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.TxdiscardResponse} returns this
 */
proto.cln.TxdiscardResponse.prototype.setTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.TxprepareRequest.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.TxprepareRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.TxprepareRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.TxprepareRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.TxprepareRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    feerate: (f = msg.getFeerate()) && cln_primitives_pb.Feerate.toObject(includeInstance, f),
    minconf: jspb.Message.getFieldWithDefault(msg, 3, 0),
    utxosList: jspb.Message.toObjectList(msg.getUtxosList(),
    cln_primitives_pb.Outpoint.toObject, includeInstance),
    outputsList: jspb.Message.toObjectList(msg.getOutputsList(),
    cln_primitives_pb.OutputDesc.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.TxprepareRequest}
 */
proto.cln.TxprepareRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.TxprepareRequest;
  return proto.cln.TxprepareRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.TxprepareRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.TxprepareRequest}
 */
proto.cln.TxprepareRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new cln_primitives_pb.Feerate;
      reader.readMessage(value,cln_primitives_pb.Feerate.deserializeBinaryFromReader);
      msg.setFeerate(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinconf(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Outpoint;
      reader.readMessage(value,cln_primitives_pb.Outpoint.deserializeBinaryFromReader);
      msg.addUtxos(value);
      break;
    case 5:
      var value = new cln_primitives_pb.OutputDesc;
      reader.readMessage(value,cln_primitives_pb.OutputDesc.deserializeBinaryFromReader);
      msg.addOutputs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.TxprepareRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.TxprepareRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.TxprepareRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.TxprepareRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeerate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cln_primitives_pb.Feerate.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getUtxosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      cln_primitives_pb.Outpoint.serializeBinaryToWriter
    );
  }
  f = message.getOutputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      cln_primitives_pb.OutputDesc.serializeBinaryToWriter
    );
  }
};


/**
 * optional Feerate feerate = 2;
 * @return {?proto.cln.Feerate}
 */
proto.cln.TxprepareRequest.prototype.getFeerate = function() {
  return /** @type{?proto.cln.Feerate} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Feerate, 2));
};


/**
 * @param {?proto.cln.Feerate|undefined} value
 * @return {!proto.cln.TxprepareRequest} returns this
*/
proto.cln.TxprepareRequest.prototype.setFeerate = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.TxprepareRequest} returns this
 */
proto.cln.TxprepareRequest.prototype.clearFeerate = function() {
  return this.setFeerate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.TxprepareRequest.prototype.hasFeerate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 minconf = 3;
 * @return {number}
 */
proto.cln.TxprepareRequest.prototype.getMinconf = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.TxprepareRequest} returns this
 */
proto.cln.TxprepareRequest.prototype.setMinconf = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.TxprepareRequest} returns this
 */
proto.cln.TxprepareRequest.prototype.clearMinconf = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.TxprepareRequest.prototype.hasMinconf = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Outpoint utxos = 4;
 * @return {!Array<!proto.cln.Outpoint>}
 */
proto.cln.TxprepareRequest.prototype.getUtxosList = function() {
  return /** @type{!Array<!proto.cln.Outpoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, cln_primitives_pb.Outpoint, 4));
};


/**
 * @param {!Array<!proto.cln.Outpoint>} value
 * @return {!proto.cln.TxprepareRequest} returns this
*/
proto.cln.TxprepareRequest.prototype.setUtxosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.cln.Outpoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.Outpoint}
 */
proto.cln.TxprepareRequest.prototype.addUtxos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.cln.Outpoint, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.TxprepareRequest} returns this
 */
proto.cln.TxprepareRequest.prototype.clearUtxosList = function() {
  return this.setUtxosList([]);
};


/**
 * repeated OutputDesc outputs = 5;
 * @return {!Array<!proto.cln.OutputDesc>}
 */
proto.cln.TxprepareRequest.prototype.getOutputsList = function() {
  return /** @type{!Array<!proto.cln.OutputDesc>} */ (
    jspb.Message.getRepeatedWrapperField(this, cln_primitives_pb.OutputDesc, 5));
};


/**
 * @param {!Array<!proto.cln.OutputDesc>} value
 * @return {!proto.cln.TxprepareRequest} returns this
*/
proto.cln.TxprepareRequest.prototype.setOutputsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.cln.OutputDesc=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.OutputDesc}
 */
proto.cln.TxprepareRequest.prototype.addOutputs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.cln.OutputDesc, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.TxprepareRequest} returns this
 */
proto.cln.TxprepareRequest.prototype.clearOutputsList = function() {
  return this.setOutputsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.TxprepareResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.TxprepareResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.TxprepareResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.TxprepareResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    psbt: jspb.Message.getFieldWithDefault(msg, 1, ""),
    unsignedTx: msg.getUnsignedTx_asB64(),
    txid: msg.getTxid_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.TxprepareResponse}
 */
proto.cln.TxprepareResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.TxprepareResponse;
  return proto.cln.TxprepareResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.TxprepareResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.TxprepareResponse}
 */
proto.cln.TxprepareResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPsbt(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setUnsignedTx(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.TxprepareResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.TxprepareResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.TxprepareResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.TxprepareResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPsbt();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUnsignedTx_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional string psbt = 1;
 * @return {string}
 */
proto.cln.TxprepareResponse.prototype.getPsbt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.TxprepareResponse} returns this
 */
proto.cln.TxprepareResponse.prototype.setPsbt = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes unsigned_tx = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.TxprepareResponse.prototype.getUnsignedTx = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes unsigned_tx = 2;
 * This is a type-conversion wrapper around `getUnsignedTx()`
 * @return {string}
 */
proto.cln.TxprepareResponse.prototype.getUnsignedTx_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getUnsignedTx()));
};


/**
 * optional bytes unsigned_tx = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getUnsignedTx()`
 * @return {!Uint8Array}
 */
proto.cln.TxprepareResponse.prototype.getUnsignedTx_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getUnsignedTx()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.TxprepareResponse} returns this
 */
proto.cln.TxprepareResponse.prototype.setUnsignedTx = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes txid = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.TxprepareResponse.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes txid = 3;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.TxprepareResponse.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.TxprepareResponse.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.TxprepareResponse} returns this
 */
proto.cln.TxprepareResponse.prototype.setTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.TxsendRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.TxsendRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.TxsendRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.TxsendRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    txid: msg.getTxid_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.TxsendRequest}
 */
proto.cln.TxsendRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.TxsendRequest;
  return proto.cln.TxsendRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.TxsendRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.TxsendRequest}
 */
proto.cln.TxsendRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.TxsendRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.TxsendRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.TxsendRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.TxsendRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes txid = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.TxsendRequest.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes txid = 1;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.TxsendRequest.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.TxsendRequest.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.TxsendRequest} returns this
 */
proto.cln.TxsendRequest.prototype.setTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.TxsendResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.TxsendResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.TxsendResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.TxsendResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    psbt: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tx: msg.getTx_asB64(),
    txid: msg.getTxid_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.TxsendResponse}
 */
proto.cln.TxsendResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.TxsendResponse;
  return proto.cln.TxsendResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.TxsendResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.TxsendResponse}
 */
proto.cln.TxsendResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPsbt(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTx(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.TxsendResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.TxsendResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.TxsendResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.TxsendResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPsbt();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTx_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional string psbt = 1;
 * @return {string}
 */
proto.cln.TxsendResponse.prototype.getPsbt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.TxsendResponse} returns this
 */
proto.cln.TxsendResponse.prototype.setPsbt = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes tx = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.TxsendResponse.prototype.getTx = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes tx = 2;
 * This is a type-conversion wrapper around `getTx()`
 * @return {string}
 */
proto.cln.TxsendResponse.prototype.getTx_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTx()));
};


/**
 * optional bytes tx = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTx()`
 * @return {!Uint8Array}
 */
proto.cln.TxsendResponse.prototype.getTx_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTx()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.TxsendResponse} returns this
 */
proto.cln.TxsendResponse.prototype.setTx = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes txid = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.TxsendResponse.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes txid = 3;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.TxsendResponse.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.TxsendResponse.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.TxsendResponse} returns this
 */
proto.cln.TxsendResponse.prototype.setTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpeerchannelsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpeerchannelsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpeerchannelsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpeerchannelsRequest}
 */
proto.cln.ListpeerchannelsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpeerchannelsRequest;
  return proto.cln.ListpeerchannelsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpeerchannelsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpeerchannelsRequest}
 */
proto.cln.ListpeerchannelsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpeerchannelsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpeerchannelsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpeerchannelsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpeerchannelsRequest.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes id = 1;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.cln.ListpeerchannelsRequest.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.cln.ListpeerchannelsRequest.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpeerchannelsRequest} returns this
 */
proto.cln.ListpeerchannelsRequest.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsRequest} returns this
 */
proto.cln.ListpeerchannelsRequest.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListpeerchannelsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpeerchannelsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpeerchannelsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpeerchannelsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelsList: jspb.Message.toObjectList(msg.getChannelsList(),
    proto.cln.ListpeerchannelsChannels.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpeerchannelsResponse}
 */
proto.cln.ListpeerchannelsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpeerchannelsResponse;
  return proto.cln.ListpeerchannelsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpeerchannelsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpeerchannelsResponse}
 */
proto.cln.ListpeerchannelsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.ListpeerchannelsChannels;
      reader.readMessage(value,proto.cln.ListpeerchannelsChannels.deserializeBinaryFromReader);
      msg.addChannels(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpeerchannelsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpeerchannelsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpeerchannelsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.ListpeerchannelsChannels.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ListpeerchannelsChannels channels = 1;
 * @return {!Array<!proto.cln.ListpeerchannelsChannels>}
 */
proto.cln.ListpeerchannelsResponse.prototype.getChannelsList = function() {
  return /** @type{!Array<!proto.cln.ListpeerchannelsChannels>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListpeerchannelsChannels, 1));
};


/**
 * @param {!Array<!proto.cln.ListpeerchannelsChannels>} value
 * @return {!proto.cln.ListpeerchannelsResponse} returns this
*/
proto.cln.ListpeerchannelsResponse.prototype.setChannelsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.ListpeerchannelsChannels=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListpeerchannelsChannels}
 */
proto.cln.ListpeerchannelsResponse.prototype.addChannels = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.ListpeerchannelsChannels, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListpeerchannelsResponse} returns this
 */
proto.cln.ListpeerchannelsResponse.prototype.clearChannelsList = function() {
  return this.setChannelsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListpeerchannelsChannels.repeatedFields_ = [16,43,52];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpeerchannelsChannels.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpeerchannelsChannels.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpeerchannelsChannels} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsChannels.toObject = function(includeInstance, msg) {
  var f, obj = {
    peerId: msg.getPeerId_asB64(),
    peerConnected: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    state: jspb.Message.getFieldWithDefault(msg, 3, 0),
    scratchTxid: msg.getScratchTxid_asB64(),
    feerate: (f = msg.getFeerate()) && proto.cln.ListpeerchannelsChannelsFeerate.toObject(includeInstance, f),
    owner: jspb.Message.getFieldWithDefault(msg, 7, ""),
    shortChannelId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    channelId: msg.getChannelId_asB64(),
    fundingTxid: msg.getFundingTxid_asB64(),
    fundingOutnum: jspb.Message.getFieldWithDefault(msg, 11, 0),
    initialFeerate: jspb.Message.getFieldWithDefault(msg, 12, ""),
    lastFeerate: jspb.Message.getFieldWithDefault(msg, 13, ""),
    nextFeerate: jspb.Message.getFieldWithDefault(msg, 14, ""),
    nextFeeStep: jspb.Message.getFieldWithDefault(msg, 15, 0),
    inflightList: jspb.Message.toObjectList(msg.getInflightList(),
    proto.cln.ListpeerchannelsChannelsInflight.toObject, includeInstance),
    closeTo: msg.getCloseTo_asB64(),
    pb_private: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
    opener: jspb.Message.getFieldWithDefault(msg, 19, 0),
    closer: jspb.Message.getFieldWithDefault(msg, 20, 0),
    funding: (f = msg.getFunding()) && proto.cln.ListpeerchannelsChannelsFunding.toObject(includeInstance, f),
    toUsMsat: (f = msg.getToUsMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    minToUsMsat: (f = msg.getMinToUsMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    maxToUsMsat: (f = msg.getMaxToUsMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    totalMsat: (f = msg.getTotalMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    feeBaseMsat: (f = msg.getFeeBaseMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    feeProportionalMillionths: jspb.Message.getFieldWithDefault(msg, 28, 0),
    dustLimitMsat: (f = msg.getDustLimitMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    maxTotalHtlcInMsat: (f = msg.getMaxTotalHtlcInMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    theirReserveMsat: (f = msg.getTheirReserveMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    ourReserveMsat: (f = msg.getOurReserveMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    spendableMsat: (f = msg.getSpendableMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    receivableMsat: (f = msg.getReceivableMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    minimumHtlcInMsat: (f = msg.getMinimumHtlcInMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    minimumHtlcOutMsat: (f = msg.getMinimumHtlcOutMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    maximumHtlcOutMsat: (f = msg.getMaximumHtlcOutMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    theirToSelfDelay: jspb.Message.getFieldWithDefault(msg, 38, 0),
    ourToSelfDelay: jspb.Message.getFieldWithDefault(msg, 39, 0),
    maxAcceptedHtlcs: jspb.Message.getFieldWithDefault(msg, 40, 0),
    alias: (f = msg.getAlias()) && proto.cln.ListpeerchannelsChannelsAlias.toObject(includeInstance, f),
    statusList: (f = jspb.Message.getRepeatedField(msg, 43)) == null ? undefined : f,
    inPaymentsOffered: jspb.Message.getFieldWithDefault(msg, 44, 0),
    inOfferedMsat: (f = msg.getInOfferedMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    inPaymentsFulfilled: jspb.Message.getFieldWithDefault(msg, 46, 0),
    inFulfilledMsat: (f = msg.getInFulfilledMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    outPaymentsOffered: jspb.Message.getFieldWithDefault(msg, 48, 0),
    outOfferedMsat: (f = msg.getOutOfferedMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    outPaymentsFulfilled: jspb.Message.getFieldWithDefault(msg, 50, 0),
    outFulfilledMsat: (f = msg.getOutFulfilledMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    htlcsList: jspb.Message.toObjectList(msg.getHtlcsList(),
    proto.cln.ListpeerchannelsChannelsHtlcs.toObject, includeInstance),
    closeToAddr: jspb.Message.getFieldWithDefault(msg, 53, ""),
    ignoreFeeLimits: jspb.Message.getBooleanFieldWithDefault(msg, 54, false),
    updates: (f = msg.getUpdates()) && proto.cln.ListpeerchannelsChannelsUpdates.toObject(includeInstance, f),
    lastStableConnection: jspb.Message.getFieldWithDefault(msg, 56, 0),
    lostState: jspb.Message.getBooleanFieldWithDefault(msg, 57, false),
    reestablished: jspb.Message.getBooleanFieldWithDefault(msg, 58, false),
    lastTxFeeMsat: (f = msg.getLastTxFeeMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    direction: jspb.Message.getFieldWithDefault(msg, 60, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpeerchannelsChannels}
 */
proto.cln.ListpeerchannelsChannels.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpeerchannelsChannels;
  return proto.cln.ListpeerchannelsChannels.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpeerchannelsChannels} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpeerchannelsChannels}
 */
proto.cln.ListpeerchannelsChannels.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPeerId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPeerConnected(value);
      break;
    case 3:
      var value = /** @type {!proto.cln.ListpeerchannelsChannels.ListpeerchannelsChannelsState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setScratchTxid(value);
      break;
    case 6:
      var value = new proto.cln.ListpeerchannelsChannelsFeerate;
      reader.readMessage(value,proto.cln.ListpeerchannelsChannelsFeerate.deserializeBinaryFromReader);
      msg.setFeerate(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setShortChannelId(value);
      break;
    case 9:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChannelId(value);
      break;
    case 10:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFundingTxid(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFundingOutnum(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setInitialFeerate(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastFeerate(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextFeerate(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNextFeeStep(value);
      break;
    case 16:
      var value = new proto.cln.ListpeerchannelsChannelsInflight;
      reader.readMessage(value,proto.cln.ListpeerchannelsChannelsInflight.deserializeBinaryFromReader);
      msg.addInflight(value);
      break;
    case 17:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setCloseTo(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPrivate(value);
      break;
    case 19:
      var value = /** @type {!proto.cln.ChannelSide} */ (reader.readEnum());
      msg.setOpener(value);
      break;
    case 20:
      var value = /** @type {!proto.cln.ChannelSide} */ (reader.readEnum());
      msg.setCloser(value);
      break;
    case 22:
      var value = new proto.cln.ListpeerchannelsChannelsFunding;
      reader.readMessage(value,proto.cln.ListpeerchannelsChannelsFunding.deserializeBinaryFromReader);
      msg.setFunding(value);
      break;
    case 23:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setToUsMsat(value);
      break;
    case 24:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setMinToUsMsat(value);
      break;
    case 25:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setMaxToUsMsat(value);
      break;
    case 26:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setTotalMsat(value);
      break;
    case 27:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setFeeBaseMsat(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFeeProportionalMillionths(value);
      break;
    case 29:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setDustLimitMsat(value);
      break;
    case 30:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setMaxTotalHtlcInMsat(value);
      break;
    case 31:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setTheirReserveMsat(value);
      break;
    case 32:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setOurReserveMsat(value);
      break;
    case 33:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setSpendableMsat(value);
      break;
    case 34:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setReceivableMsat(value);
      break;
    case 35:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setMinimumHtlcInMsat(value);
      break;
    case 36:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setMinimumHtlcOutMsat(value);
      break;
    case 37:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setMaximumHtlcOutMsat(value);
      break;
    case 38:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTheirToSelfDelay(value);
      break;
    case 39:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOurToSelfDelay(value);
      break;
    case 40:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxAcceptedHtlcs(value);
      break;
    case 41:
      var value = new proto.cln.ListpeerchannelsChannelsAlias;
      reader.readMessage(value,proto.cln.ListpeerchannelsChannelsAlias.deserializeBinaryFromReader);
      msg.setAlias(value);
      break;
    case 43:
      var value = /** @type {string} */ (reader.readString());
      msg.addStatus(value);
      break;
    case 44:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInPaymentsOffered(value);
      break;
    case 45:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setInOfferedMsat(value);
      break;
    case 46:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInPaymentsFulfilled(value);
      break;
    case 47:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setInFulfilledMsat(value);
      break;
    case 48:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOutPaymentsOffered(value);
      break;
    case 49:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setOutOfferedMsat(value);
      break;
    case 50:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOutPaymentsFulfilled(value);
      break;
    case 51:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setOutFulfilledMsat(value);
      break;
    case 52:
      var value = new proto.cln.ListpeerchannelsChannelsHtlcs;
      reader.readMessage(value,proto.cln.ListpeerchannelsChannelsHtlcs.deserializeBinaryFromReader);
      msg.addHtlcs(value);
      break;
    case 53:
      var value = /** @type {string} */ (reader.readString());
      msg.setCloseToAddr(value);
      break;
    case 54:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIgnoreFeeLimits(value);
      break;
    case 55:
      var value = new proto.cln.ListpeerchannelsChannelsUpdates;
      reader.readMessage(value,proto.cln.ListpeerchannelsChannelsUpdates.deserializeBinaryFromReader);
      msg.setUpdates(value);
      break;
    case 56:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLastStableConnection(value);
      break;
    case 57:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLostState(value);
      break;
    case 58:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReestablished(value);
      break;
    case 59:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setLastTxFeeMsat(value);
      break;
    case 60:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDirection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpeerchannelsChannels.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpeerchannelsChannels.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpeerchannelsChannels} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsChannels.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeerId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getPeerConnected();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getFeerate();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.cln.ListpeerchannelsChannelsFeerate.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBytes(
      9,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBytes(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint32(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint32(
      15,
      f
    );
  }
  f = message.getInflightList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      16,
      f,
      proto.cln.ListpeerchannelsChannelsInflight.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeBytes(
      17,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getOpener();
  if (f !== 0.0) {
    writer.writeEnum(
      19,
      f
    );
  }
  f = /** @type {!proto.cln.ChannelSide} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeEnum(
      20,
      f
    );
  }
  f = message.getFunding();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.cln.ListpeerchannelsChannelsFunding.serializeBinaryToWriter
    );
  }
  f = message.getToUsMsat();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getMinToUsMsat();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getMaxToUsMsat();
  if (f != null) {
    writer.writeMessage(
      25,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getTotalMsat();
  if (f != null) {
    writer.writeMessage(
      26,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getFeeBaseMsat();
  if (f != null) {
    writer.writeMessage(
      27,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 28));
  if (f != null) {
    writer.writeUint32(
      28,
      f
    );
  }
  f = message.getDustLimitMsat();
  if (f != null) {
    writer.writeMessage(
      29,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getMaxTotalHtlcInMsat();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getTheirReserveMsat();
  if (f != null) {
    writer.writeMessage(
      31,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getOurReserveMsat();
  if (f != null) {
    writer.writeMessage(
      32,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getSpendableMsat();
  if (f != null) {
    writer.writeMessage(
      33,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getReceivableMsat();
  if (f != null) {
    writer.writeMessage(
      34,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getMinimumHtlcInMsat();
  if (f != null) {
    writer.writeMessage(
      35,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getMinimumHtlcOutMsat();
  if (f != null) {
    writer.writeMessage(
      36,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getMaximumHtlcOutMsat();
  if (f != null) {
    writer.writeMessage(
      37,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 38));
  if (f != null) {
    writer.writeUint32(
      38,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 39));
  if (f != null) {
    writer.writeUint32(
      39,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 40));
  if (f != null) {
    writer.writeUint32(
      40,
      f
    );
  }
  f = message.getAlias();
  if (f != null) {
    writer.writeMessage(
      41,
      f,
      proto.cln.ListpeerchannelsChannelsAlias.serializeBinaryToWriter
    );
  }
  f = message.getStatusList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      43,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 44));
  if (f != null) {
    writer.writeUint64(
      44,
      f
    );
  }
  f = message.getInOfferedMsat();
  if (f != null) {
    writer.writeMessage(
      45,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 46));
  if (f != null) {
    writer.writeUint64(
      46,
      f
    );
  }
  f = message.getInFulfilledMsat();
  if (f != null) {
    writer.writeMessage(
      47,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 48));
  if (f != null) {
    writer.writeUint64(
      48,
      f
    );
  }
  f = message.getOutOfferedMsat();
  if (f != null) {
    writer.writeMessage(
      49,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 50));
  if (f != null) {
    writer.writeUint64(
      50,
      f
    );
  }
  f = message.getOutFulfilledMsat();
  if (f != null) {
    writer.writeMessage(
      51,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getHtlcsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      52,
      f,
      proto.cln.ListpeerchannelsChannelsHtlcs.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 53));
  if (f != null) {
    writer.writeString(
      53,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 54));
  if (f != null) {
    writer.writeBool(
      54,
      f
    );
  }
  f = message.getUpdates();
  if (f != null) {
    writer.writeMessage(
      55,
      f,
      proto.cln.ListpeerchannelsChannelsUpdates.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 56));
  if (f != null) {
    writer.writeUint64(
      56,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 57));
  if (f != null) {
    writer.writeBool(
      57,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 58));
  if (f != null) {
    writer.writeBool(
      58,
      f
    );
  }
  f = message.getLastTxFeeMsat();
  if (f != null) {
    writer.writeMessage(
      59,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 60));
  if (f != null) {
    writer.writeUint32(
      60,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ListpeerchannelsChannels.ListpeerchannelsChannelsState = {
  OPENINGD: 0,
  CHANNELD_AWAITING_LOCKIN: 1,
  CHANNELD_NORMAL: 2,
  CHANNELD_SHUTTING_DOWN: 3,
  CLOSINGD_SIGEXCHANGE: 4,
  CLOSINGD_COMPLETE: 5,
  AWAITING_UNILATERAL: 6,
  FUNDING_SPEND_SEEN: 7,
  ONCHAIN: 8,
  DUALOPEND_OPEN_INIT: 9,
  DUALOPEND_AWAITING_LOCKIN: 10,
  CHANNELD_AWAITING_SPLICE: 11,
  DUALOPEND_OPEN_COMMITTED: 12,
  DUALOPEND_OPEN_COMMIT_READY: 13
};

/**
 * optional bytes peer_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpeerchannelsChannels.prototype.getPeerId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes peer_id = 1;
 * This is a type-conversion wrapper around `getPeerId()`
 * @return {string}
 */
proto.cln.ListpeerchannelsChannels.prototype.getPeerId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPeerId()));
};


/**
 * optional bytes peer_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPeerId()`
 * @return {!Uint8Array}
 */
proto.cln.ListpeerchannelsChannels.prototype.getPeerId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPeerId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setPeerId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bool peer_connected = 2;
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.getPeerConnected = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setPeerConnected = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional ListpeerchannelsChannelsState state = 3;
 * @return {!proto.cln.ListpeerchannelsChannels.ListpeerchannelsChannelsState}
 */
proto.cln.ListpeerchannelsChannels.prototype.getState = function() {
  return /** @type {!proto.cln.ListpeerchannelsChannels.ListpeerchannelsChannelsState} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.cln.ListpeerchannelsChannels.ListpeerchannelsChannelsState} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional bytes scratch_txid = 4;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpeerchannelsChannels.prototype.getScratchTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes scratch_txid = 4;
 * This is a type-conversion wrapper around `getScratchTxid()`
 * @return {string}
 */
proto.cln.ListpeerchannelsChannels.prototype.getScratchTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getScratchTxid()));
};


/**
 * optional bytes scratch_txid = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getScratchTxid()`
 * @return {!Uint8Array}
 */
proto.cln.ListpeerchannelsChannels.prototype.getScratchTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getScratchTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setScratchTxid = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearScratchTxid = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasScratchTxid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ListpeerchannelsChannelsFeerate feerate = 6;
 * @return {?proto.cln.ListpeerchannelsChannelsFeerate}
 */
proto.cln.ListpeerchannelsChannels.prototype.getFeerate = function() {
  return /** @type{?proto.cln.ListpeerchannelsChannelsFeerate} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListpeerchannelsChannelsFeerate, 6));
};


/**
 * @param {?proto.cln.ListpeerchannelsChannelsFeerate|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setFeerate = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearFeerate = function() {
  return this.setFeerate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasFeerate = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string owner = 7;
 * @return {string}
 */
proto.cln.ListpeerchannelsChannels.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setOwner = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearOwner = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasOwner = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string short_channel_id = 8;
 * @return {string}
 */
proto.cln.ListpeerchannelsChannels.prototype.getShortChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setShortChannelId = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearShortChannelId = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasShortChannelId = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bytes channel_id = 9;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpeerchannelsChannels.prototype.getChannelId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * optional bytes channel_id = 9;
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {string}
 */
proto.cln.ListpeerchannelsChannels.prototype.getChannelId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChannelId()));
};


/**
 * optional bytes channel_id = 9;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {!Uint8Array}
 */
proto.cln.ListpeerchannelsChannels.prototype.getChannelId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChannelId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setChannelId = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearChannelId = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasChannelId = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bytes funding_txid = 10;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpeerchannelsChannels.prototype.getFundingTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * optional bytes funding_txid = 10;
 * This is a type-conversion wrapper around `getFundingTxid()`
 * @return {string}
 */
proto.cln.ListpeerchannelsChannels.prototype.getFundingTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFundingTxid()));
};


/**
 * optional bytes funding_txid = 10;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFundingTxid()`
 * @return {!Uint8Array}
 */
proto.cln.ListpeerchannelsChannels.prototype.getFundingTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFundingTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setFundingTxid = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearFundingTxid = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasFundingTxid = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint32 funding_outnum = 11;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannels.prototype.getFundingOutnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setFundingOutnum = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearFundingOutnum = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasFundingOutnum = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string initial_feerate = 12;
 * @return {string}
 */
proto.cln.ListpeerchannelsChannels.prototype.getInitialFeerate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setInitialFeerate = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearInitialFeerate = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasInitialFeerate = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string last_feerate = 13;
 * @return {string}
 */
proto.cln.ListpeerchannelsChannels.prototype.getLastFeerate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setLastFeerate = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearLastFeerate = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasLastFeerate = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string next_feerate = 14;
 * @return {string}
 */
proto.cln.ListpeerchannelsChannels.prototype.getNextFeerate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setNextFeerate = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearNextFeerate = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasNextFeerate = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional uint32 next_fee_step = 15;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannels.prototype.getNextFeeStep = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setNextFeeStep = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearNextFeeStep = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasNextFeeStep = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * repeated ListpeerchannelsChannelsInflight inflight = 16;
 * @return {!Array<!proto.cln.ListpeerchannelsChannelsInflight>}
 */
proto.cln.ListpeerchannelsChannels.prototype.getInflightList = function() {
  return /** @type{!Array<!proto.cln.ListpeerchannelsChannelsInflight>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListpeerchannelsChannelsInflight, 16));
};


/**
 * @param {!Array<!proto.cln.ListpeerchannelsChannelsInflight>} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setInflightList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 16, value);
};


/**
 * @param {!proto.cln.ListpeerchannelsChannelsInflight=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListpeerchannelsChannelsInflight}
 */
proto.cln.ListpeerchannelsChannels.prototype.addInflight = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.cln.ListpeerchannelsChannelsInflight, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearInflightList = function() {
  return this.setInflightList([]);
};


/**
 * optional bytes close_to = 17;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpeerchannelsChannels.prototype.getCloseTo = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * optional bytes close_to = 17;
 * This is a type-conversion wrapper around `getCloseTo()`
 * @return {string}
 */
proto.cln.ListpeerchannelsChannels.prototype.getCloseTo_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getCloseTo()));
};


/**
 * optional bytes close_to = 17;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCloseTo()`
 * @return {!Uint8Array}
 */
proto.cln.ListpeerchannelsChannels.prototype.getCloseTo_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getCloseTo()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setCloseTo = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearCloseTo = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasCloseTo = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional bool private = 18;
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.getPrivate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setPrivate = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearPrivate = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasPrivate = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional ChannelSide opener = 19;
 * @return {!proto.cln.ChannelSide}
 */
proto.cln.ListpeerchannelsChannels.prototype.getOpener = function() {
  return /** @type {!proto.cln.ChannelSide} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {!proto.cln.ChannelSide} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setOpener = function(value) {
  return jspb.Message.setProto3EnumField(this, 19, value);
};


/**
 * optional ChannelSide closer = 20;
 * @return {!proto.cln.ChannelSide}
 */
proto.cln.ListpeerchannelsChannels.prototype.getCloser = function() {
  return /** @type {!proto.cln.ChannelSide} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {!proto.cln.ChannelSide} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setCloser = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearCloser = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasCloser = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional ListpeerchannelsChannelsFunding funding = 22;
 * @return {?proto.cln.ListpeerchannelsChannelsFunding}
 */
proto.cln.ListpeerchannelsChannels.prototype.getFunding = function() {
  return /** @type{?proto.cln.ListpeerchannelsChannelsFunding} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListpeerchannelsChannelsFunding, 22));
};


/**
 * @param {?proto.cln.ListpeerchannelsChannelsFunding|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setFunding = function(value) {
  return jspb.Message.setWrapperField(this, 22, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearFunding = function() {
  return this.setFunding(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasFunding = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional Amount to_us_msat = 23;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannels.prototype.getToUsMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 23));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setToUsMsat = function(value) {
  return jspb.Message.setWrapperField(this, 23, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearToUsMsat = function() {
  return this.setToUsMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasToUsMsat = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional Amount min_to_us_msat = 24;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannels.prototype.getMinToUsMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 24));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setMinToUsMsat = function(value) {
  return jspb.Message.setWrapperField(this, 24, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearMinToUsMsat = function() {
  return this.setMinToUsMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasMinToUsMsat = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional Amount max_to_us_msat = 25;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannels.prototype.getMaxToUsMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 25));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setMaxToUsMsat = function(value) {
  return jspb.Message.setWrapperField(this, 25, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearMaxToUsMsat = function() {
  return this.setMaxToUsMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasMaxToUsMsat = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional Amount total_msat = 26;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannels.prototype.getTotalMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 26));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setTotalMsat = function(value) {
  return jspb.Message.setWrapperField(this, 26, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearTotalMsat = function() {
  return this.setTotalMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasTotalMsat = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional Amount fee_base_msat = 27;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannels.prototype.getFeeBaseMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 27));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setFeeBaseMsat = function(value) {
  return jspb.Message.setWrapperField(this, 27, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearFeeBaseMsat = function() {
  return this.setFeeBaseMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasFeeBaseMsat = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional uint32 fee_proportional_millionths = 28;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannels.prototype.getFeeProportionalMillionths = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 28, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setFeeProportionalMillionths = function(value) {
  return jspb.Message.setField(this, 28, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearFeeProportionalMillionths = function() {
  return jspb.Message.setField(this, 28, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasFeeProportionalMillionths = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional Amount dust_limit_msat = 29;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannels.prototype.getDustLimitMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 29));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setDustLimitMsat = function(value) {
  return jspb.Message.setWrapperField(this, 29, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearDustLimitMsat = function() {
  return this.setDustLimitMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasDustLimitMsat = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional Amount max_total_htlc_in_msat = 30;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannels.prototype.getMaxTotalHtlcInMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 30));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setMaxTotalHtlcInMsat = function(value) {
  return jspb.Message.setWrapperField(this, 30, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearMaxTotalHtlcInMsat = function() {
  return this.setMaxTotalHtlcInMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasMaxTotalHtlcInMsat = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional Amount their_reserve_msat = 31;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannels.prototype.getTheirReserveMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 31));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setTheirReserveMsat = function(value) {
  return jspb.Message.setWrapperField(this, 31, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearTheirReserveMsat = function() {
  return this.setTheirReserveMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasTheirReserveMsat = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional Amount our_reserve_msat = 32;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannels.prototype.getOurReserveMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 32));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setOurReserveMsat = function(value) {
  return jspb.Message.setWrapperField(this, 32, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearOurReserveMsat = function() {
  return this.setOurReserveMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasOurReserveMsat = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional Amount spendable_msat = 33;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannels.prototype.getSpendableMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 33));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setSpendableMsat = function(value) {
  return jspb.Message.setWrapperField(this, 33, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearSpendableMsat = function() {
  return this.setSpendableMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasSpendableMsat = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * optional Amount receivable_msat = 34;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannels.prototype.getReceivableMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 34));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setReceivableMsat = function(value) {
  return jspb.Message.setWrapperField(this, 34, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearReceivableMsat = function() {
  return this.setReceivableMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasReceivableMsat = function() {
  return jspb.Message.getField(this, 34) != null;
};


/**
 * optional Amount minimum_htlc_in_msat = 35;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannels.prototype.getMinimumHtlcInMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 35));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setMinimumHtlcInMsat = function(value) {
  return jspb.Message.setWrapperField(this, 35, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearMinimumHtlcInMsat = function() {
  return this.setMinimumHtlcInMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasMinimumHtlcInMsat = function() {
  return jspb.Message.getField(this, 35) != null;
};


/**
 * optional Amount minimum_htlc_out_msat = 36;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannels.prototype.getMinimumHtlcOutMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 36));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setMinimumHtlcOutMsat = function(value) {
  return jspb.Message.setWrapperField(this, 36, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearMinimumHtlcOutMsat = function() {
  return this.setMinimumHtlcOutMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasMinimumHtlcOutMsat = function() {
  return jspb.Message.getField(this, 36) != null;
};


/**
 * optional Amount maximum_htlc_out_msat = 37;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannels.prototype.getMaximumHtlcOutMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 37));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setMaximumHtlcOutMsat = function(value) {
  return jspb.Message.setWrapperField(this, 37, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearMaximumHtlcOutMsat = function() {
  return this.setMaximumHtlcOutMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasMaximumHtlcOutMsat = function() {
  return jspb.Message.getField(this, 37) != null;
};


/**
 * optional uint32 their_to_self_delay = 38;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannels.prototype.getTheirToSelfDelay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 38, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setTheirToSelfDelay = function(value) {
  return jspb.Message.setField(this, 38, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearTheirToSelfDelay = function() {
  return jspb.Message.setField(this, 38, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasTheirToSelfDelay = function() {
  return jspb.Message.getField(this, 38) != null;
};


/**
 * optional uint32 our_to_self_delay = 39;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannels.prototype.getOurToSelfDelay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 39, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setOurToSelfDelay = function(value) {
  return jspb.Message.setField(this, 39, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearOurToSelfDelay = function() {
  return jspb.Message.setField(this, 39, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasOurToSelfDelay = function() {
  return jspb.Message.getField(this, 39) != null;
};


/**
 * optional uint32 max_accepted_htlcs = 40;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannels.prototype.getMaxAcceptedHtlcs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 40, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setMaxAcceptedHtlcs = function(value) {
  return jspb.Message.setField(this, 40, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearMaxAcceptedHtlcs = function() {
  return jspb.Message.setField(this, 40, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasMaxAcceptedHtlcs = function() {
  return jspb.Message.getField(this, 40) != null;
};


/**
 * optional ListpeerchannelsChannelsAlias alias = 41;
 * @return {?proto.cln.ListpeerchannelsChannelsAlias}
 */
proto.cln.ListpeerchannelsChannels.prototype.getAlias = function() {
  return /** @type{?proto.cln.ListpeerchannelsChannelsAlias} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListpeerchannelsChannelsAlias, 41));
};


/**
 * @param {?proto.cln.ListpeerchannelsChannelsAlias|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setAlias = function(value) {
  return jspb.Message.setWrapperField(this, 41, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearAlias = function() {
  return this.setAlias(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasAlias = function() {
  return jspb.Message.getField(this, 41) != null;
};


/**
 * repeated string status = 43;
 * @return {!Array<string>}
 */
proto.cln.ListpeerchannelsChannels.prototype.getStatusList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 43));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setStatusList = function(value) {
  return jspb.Message.setField(this, 43, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.addStatus = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 43, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearStatusList = function() {
  return this.setStatusList([]);
};


/**
 * optional uint64 in_payments_offered = 44;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannels.prototype.getInPaymentsOffered = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 44, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setInPaymentsOffered = function(value) {
  return jspb.Message.setField(this, 44, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearInPaymentsOffered = function() {
  return jspb.Message.setField(this, 44, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasInPaymentsOffered = function() {
  return jspb.Message.getField(this, 44) != null;
};


/**
 * optional Amount in_offered_msat = 45;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannels.prototype.getInOfferedMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 45));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setInOfferedMsat = function(value) {
  return jspb.Message.setWrapperField(this, 45, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearInOfferedMsat = function() {
  return this.setInOfferedMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasInOfferedMsat = function() {
  return jspb.Message.getField(this, 45) != null;
};


/**
 * optional uint64 in_payments_fulfilled = 46;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannels.prototype.getInPaymentsFulfilled = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 46, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setInPaymentsFulfilled = function(value) {
  return jspb.Message.setField(this, 46, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearInPaymentsFulfilled = function() {
  return jspb.Message.setField(this, 46, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasInPaymentsFulfilled = function() {
  return jspb.Message.getField(this, 46) != null;
};


/**
 * optional Amount in_fulfilled_msat = 47;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannels.prototype.getInFulfilledMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 47));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setInFulfilledMsat = function(value) {
  return jspb.Message.setWrapperField(this, 47, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearInFulfilledMsat = function() {
  return this.setInFulfilledMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasInFulfilledMsat = function() {
  return jspb.Message.getField(this, 47) != null;
};


/**
 * optional uint64 out_payments_offered = 48;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannels.prototype.getOutPaymentsOffered = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 48, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setOutPaymentsOffered = function(value) {
  return jspb.Message.setField(this, 48, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearOutPaymentsOffered = function() {
  return jspb.Message.setField(this, 48, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasOutPaymentsOffered = function() {
  return jspb.Message.getField(this, 48) != null;
};


/**
 * optional Amount out_offered_msat = 49;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannels.prototype.getOutOfferedMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 49));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setOutOfferedMsat = function(value) {
  return jspb.Message.setWrapperField(this, 49, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearOutOfferedMsat = function() {
  return this.setOutOfferedMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasOutOfferedMsat = function() {
  return jspb.Message.getField(this, 49) != null;
};


/**
 * optional uint64 out_payments_fulfilled = 50;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannels.prototype.getOutPaymentsFulfilled = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 50, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setOutPaymentsFulfilled = function(value) {
  return jspb.Message.setField(this, 50, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearOutPaymentsFulfilled = function() {
  return jspb.Message.setField(this, 50, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasOutPaymentsFulfilled = function() {
  return jspb.Message.getField(this, 50) != null;
};


/**
 * optional Amount out_fulfilled_msat = 51;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannels.prototype.getOutFulfilledMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 51));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setOutFulfilledMsat = function(value) {
  return jspb.Message.setWrapperField(this, 51, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearOutFulfilledMsat = function() {
  return this.setOutFulfilledMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasOutFulfilledMsat = function() {
  return jspb.Message.getField(this, 51) != null;
};


/**
 * repeated ListpeerchannelsChannelsHtlcs htlcs = 52;
 * @return {!Array<!proto.cln.ListpeerchannelsChannelsHtlcs>}
 */
proto.cln.ListpeerchannelsChannels.prototype.getHtlcsList = function() {
  return /** @type{!Array<!proto.cln.ListpeerchannelsChannelsHtlcs>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListpeerchannelsChannelsHtlcs, 52));
};


/**
 * @param {!Array<!proto.cln.ListpeerchannelsChannelsHtlcs>} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setHtlcsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 52, value);
};


/**
 * @param {!proto.cln.ListpeerchannelsChannelsHtlcs=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListpeerchannelsChannelsHtlcs}
 */
proto.cln.ListpeerchannelsChannels.prototype.addHtlcs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 52, opt_value, proto.cln.ListpeerchannelsChannelsHtlcs, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearHtlcsList = function() {
  return this.setHtlcsList([]);
};


/**
 * optional string close_to_addr = 53;
 * @return {string}
 */
proto.cln.ListpeerchannelsChannels.prototype.getCloseToAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 53, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setCloseToAddr = function(value) {
  return jspb.Message.setField(this, 53, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearCloseToAddr = function() {
  return jspb.Message.setField(this, 53, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasCloseToAddr = function() {
  return jspb.Message.getField(this, 53) != null;
};


/**
 * optional bool ignore_fee_limits = 54;
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.getIgnoreFeeLimits = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 54, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setIgnoreFeeLimits = function(value) {
  return jspb.Message.setField(this, 54, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearIgnoreFeeLimits = function() {
  return jspb.Message.setField(this, 54, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasIgnoreFeeLimits = function() {
  return jspb.Message.getField(this, 54) != null;
};


/**
 * optional ListpeerchannelsChannelsUpdates updates = 55;
 * @return {?proto.cln.ListpeerchannelsChannelsUpdates}
 */
proto.cln.ListpeerchannelsChannels.prototype.getUpdates = function() {
  return /** @type{?proto.cln.ListpeerchannelsChannelsUpdates} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListpeerchannelsChannelsUpdates, 55));
};


/**
 * @param {?proto.cln.ListpeerchannelsChannelsUpdates|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setUpdates = function(value) {
  return jspb.Message.setWrapperField(this, 55, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearUpdates = function() {
  return this.setUpdates(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasUpdates = function() {
  return jspb.Message.getField(this, 55) != null;
};


/**
 * optional uint64 last_stable_connection = 56;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannels.prototype.getLastStableConnection = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 56, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setLastStableConnection = function(value) {
  return jspb.Message.setField(this, 56, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearLastStableConnection = function() {
  return jspb.Message.setField(this, 56, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasLastStableConnection = function() {
  return jspb.Message.getField(this, 56) != null;
};


/**
 * optional bool lost_state = 57;
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.getLostState = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 57, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setLostState = function(value) {
  return jspb.Message.setField(this, 57, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearLostState = function() {
  return jspb.Message.setField(this, 57, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasLostState = function() {
  return jspb.Message.getField(this, 57) != null;
};


/**
 * optional bool reestablished = 58;
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.getReestablished = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 58, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setReestablished = function(value) {
  return jspb.Message.setField(this, 58, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearReestablished = function() {
  return jspb.Message.setField(this, 58, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasReestablished = function() {
  return jspb.Message.getField(this, 58) != null;
};


/**
 * optional Amount last_tx_fee_msat = 59;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannels.prototype.getLastTxFeeMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 59));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setLastTxFeeMsat = function(value) {
  return jspb.Message.setWrapperField(this, 59, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearLastTxFeeMsat = function() {
  return this.setLastTxFeeMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasLastTxFeeMsat = function() {
  return jspb.Message.getField(this, 59) != null;
};


/**
 * optional uint32 direction = 60;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannels.prototype.getDirection = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 60, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setDirection = function(value) {
  return jspb.Message.setField(this, 60, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearDirection = function() {
  return jspb.Message.setField(this, 60, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasDirection = function() {
  return jspb.Message.getField(this, 60) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpeerchannelsChannelsUpdates.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpeerchannelsChannelsUpdates.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpeerchannelsChannelsUpdates} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsChannelsUpdates.toObject = function(includeInstance, msg) {
  var f, obj = {
    local: (f = msg.getLocal()) && proto.cln.ListpeerchannelsChannelsUpdatesLocal.toObject(includeInstance, f),
    remote: (f = msg.getRemote()) && proto.cln.ListpeerchannelsChannelsUpdatesRemote.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpeerchannelsChannelsUpdates}
 */
proto.cln.ListpeerchannelsChannelsUpdates.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpeerchannelsChannelsUpdates;
  return proto.cln.ListpeerchannelsChannelsUpdates.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpeerchannelsChannelsUpdates} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpeerchannelsChannelsUpdates}
 */
proto.cln.ListpeerchannelsChannelsUpdates.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.ListpeerchannelsChannelsUpdatesLocal;
      reader.readMessage(value,proto.cln.ListpeerchannelsChannelsUpdatesLocal.deserializeBinaryFromReader);
      msg.setLocal(value);
      break;
    case 2:
      var value = new proto.cln.ListpeerchannelsChannelsUpdatesRemote;
      reader.readMessage(value,proto.cln.ListpeerchannelsChannelsUpdatesRemote.deserializeBinaryFromReader);
      msg.setRemote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpeerchannelsChannelsUpdates.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpeerchannelsChannelsUpdates.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpeerchannelsChannelsUpdates} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsChannelsUpdates.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocal();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cln.ListpeerchannelsChannelsUpdatesLocal.serializeBinaryToWriter
    );
  }
  f = message.getRemote();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cln.ListpeerchannelsChannelsUpdatesRemote.serializeBinaryToWriter
    );
  }
};


/**
 * optional ListpeerchannelsChannelsUpdatesLocal local = 1;
 * @return {?proto.cln.ListpeerchannelsChannelsUpdatesLocal}
 */
proto.cln.ListpeerchannelsChannelsUpdates.prototype.getLocal = function() {
  return /** @type{?proto.cln.ListpeerchannelsChannelsUpdatesLocal} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListpeerchannelsChannelsUpdatesLocal, 1));
};


/**
 * @param {?proto.cln.ListpeerchannelsChannelsUpdatesLocal|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannelsUpdates} returns this
*/
proto.cln.ListpeerchannelsChannelsUpdates.prototype.setLocal = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsUpdates} returns this
 */
proto.cln.ListpeerchannelsChannelsUpdates.prototype.clearLocal = function() {
  return this.setLocal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsUpdates.prototype.hasLocal = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ListpeerchannelsChannelsUpdatesRemote remote = 2;
 * @return {?proto.cln.ListpeerchannelsChannelsUpdatesRemote}
 */
proto.cln.ListpeerchannelsChannelsUpdates.prototype.getRemote = function() {
  return /** @type{?proto.cln.ListpeerchannelsChannelsUpdatesRemote} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListpeerchannelsChannelsUpdatesRemote, 2));
};


/**
 * @param {?proto.cln.ListpeerchannelsChannelsUpdatesRemote|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannelsUpdates} returns this
*/
proto.cln.ListpeerchannelsChannelsUpdates.prototype.setRemote = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsUpdates} returns this
 */
proto.cln.ListpeerchannelsChannelsUpdates.prototype.clearRemote = function() {
  return this.setRemote(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsUpdates.prototype.hasRemote = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpeerchannelsChannelsUpdatesLocal.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpeerchannelsChannelsUpdatesLocal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpeerchannelsChannelsUpdatesLocal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsChannelsUpdatesLocal.toObject = function(includeInstance, msg) {
  var f, obj = {
    htlcMinimumMsat: (f = msg.getHtlcMinimumMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    htlcMaximumMsat: (f = msg.getHtlcMaximumMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    cltvExpiryDelta: jspb.Message.getFieldWithDefault(msg, 3, 0),
    feeBaseMsat: (f = msg.getFeeBaseMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    feeProportionalMillionths: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpeerchannelsChannelsUpdatesLocal}
 */
proto.cln.ListpeerchannelsChannelsUpdatesLocal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpeerchannelsChannelsUpdatesLocal;
  return proto.cln.ListpeerchannelsChannelsUpdatesLocal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpeerchannelsChannelsUpdatesLocal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpeerchannelsChannelsUpdatesLocal}
 */
proto.cln.ListpeerchannelsChannelsUpdatesLocal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setHtlcMinimumMsat(value);
      break;
    case 2:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setHtlcMaximumMsat(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCltvExpiryDelta(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setFeeBaseMsat(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFeeProportionalMillionths(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpeerchannelsChannelsUpdatesLocal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpeerchannelsChannelsUpdatesLocal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpeerchannelsChannelsUpdatesLocal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsChannelsUpdatesLocal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHtlcMinimumMsat();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getHtlcMaximumMsat();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getCltvExpiryDelta();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getFeeBaseMsat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getFeeProportionalMillionths();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * optional Amount htlc_minimum_msat = 1;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannelsUpdatesLocal.prototype.getHtlcMinimumMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 1));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannelsUpdatesLocal} returns this
*/
proto.cln.ListpeerchannelsChannelsUpdatesLocal.prototype.setHtlcMinimumMsat = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsUpdatesLocal} returns this
 */
proto.cln.ListpeerchannelsChannelsUpdatesLocal.prototype.clearHtlcMinimumMsat = function() {
  return this.setHtlcMinimumMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsUpdatesLocal.prototype.hasHtlcMinimumMsat = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Amount htlc_maximum_msat = 2;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannelsUpdatesLocal.prototype.getHtlcMaximumMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 2));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannelsUpdatesLocal} returns this
*/
proto.cln.ListpeerchannelsChannelsUpdatesLocal.prototype.setHtlcMaximumMsat = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsUpdatesLocal} returns this
 */
proto.cln.ListpeerchannelsChannelsUpdatesLocal.prototype.clearHtlcMaximumMsat = function() {
  return this.setHtlcMaximumMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsUpdatesLocal.prototype.hasHtlcMaximumMsat = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 cltv_expiry_delta = 3;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannelsUpdatesLocal.prototype.getCltvExpiryDelta = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannelsUpdatesLocal} returns this
 */
proto.cln.ListpeerchannelsChannelsUpdatesLocal.prototype.setCltvExpiryDelta = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional Amount fee_base_msat = 4;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannelsUpdatesLocal.prototype.getFeeBaseMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 4));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannelsUpdatesLocal} returns this
*/
proto.cln.ListpeerchannelsChannelsUpdatesLocal.prototype.setFeeBaseMsat = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsUpdatesLocal} returns this
 */
proto.cln.ListpeerchannelsChannelsUpdatesLocal.prototype.clearFeeBaseMsat = function() {
  return this.setFeeBaseMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsUpdatesLocal.prototype.hasFeeBaseMsat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 fee_proportional_millionths = 5;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannelsUpdatesLocal.prototype.getFeeProportionalMillionths = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannelsUpdatesLocal} returns this
 */
proto.cln.ListpeerchannelsChannelsUpdatesLocal.prototype.setFeeProportionalMillionths = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpeerchannelsChannelsUpdatesRemote.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpeerchannelsChannelsUpdatesRemote.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpeerchannelsChannelsUpdatesRemote} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsChannelsUpdatesRemote.toObject = function(includeInstance, msg) {
  var f, obj = {
    htlcMinimumMsat: (f = msg.getHtlcMinimumMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    htlcMaximumMsat: (f = msg.getHtlcMaximumMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    cltvExpiryDelta: jspb.Message.getFieldWithDefault(msg, 3, 0),
    feeBaseMsat: (f = msg.getFeeBaseMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    feeProportionalMillionths: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpeerchannelsChannelsUpdatesRemote}
 */
proto.cln.ListpeerchannelsChannelsUpdatesRemote.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpeerchannelsChannelsUpdatesRemote;
  return proto.cln.ListpeerchannelsChannelsUpdatesRemote.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpeerchannelsChannelsUpdatesRemote} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpeerchannelsChannelsUpdatesRemote}
 */
proto.cln.ListpeerchannelsChannelsUpdatesRemote.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setHtlcMinimumMsat(value);
      break;
    case 2:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setHtlcMaximumMsat(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCltvExpiryDelta(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setFeeBaseMsat(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFeeProportionalMillionths(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpeerchannelsChannelsUpdatesRemote.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpeerchannelsChannelsUpdatesRemote.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpeerchannelsChannelsUpdatesRemote} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsChannelsUpdatesRemote.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHtlcMinimumMsat();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getHtlcMaximumMsat();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getCltvExpiryDelta();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getFeeBaseMsat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getFeeProportionalMillionths();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * optional Amount htlc_minimum_msat = 1;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannelsUpdatesRemote.prototype.getHtlcMinimumMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 1));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannelsUpdatesRemote} returns this
*/
proto.cln.ListpeerchannelsChannelsUpdatesRemote.prototype.setHtlcMinimumMsat = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsUpdatesRemote} returns this
 */
proto.cln.ListpeerchannelsChannelsUpdatesRemote.prototype.clearHtlcMinimumMsat = function() {
  return this.setHtlcMinimumMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsUpdatesRemote.prototype.hasHtlcMinimumMsat = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Amount htlc_maximum_msat = 2;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannelsUpdatesRemote.prototype.getHtlcMaximumMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 2));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannelsUpdatesRemote} returns this
*/
proto.cln.ListpeerchannelsChannelsUpdatesRemote.prototype.setHtlcMaximumMsat = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsUpdatesRemote} returns this
 */
proto.cln.ListpeerchannelsChannelsUpdatesRemote.prototype.clearHtlcMaximumMsat = function() {
  return this.setHtlcMaximumMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsUpdatesRemote.prototype.hasHtlcMaximumMsat = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 cltv_expiry_delta = 3;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannelsUpdatesRemote.prototype.getCltvExpiryDelta = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannelsUpdatesRemote} returns this
 */
proto.cln.ListpeerchannelsChannelsUpdatesRemote.prototype.setCltvExpiryDelta = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional Amount fee_base_msat = 4;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannelsUpdatesRemote.prototype.getFeeBaseMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 4));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannelsUpdatesRemote} returns this
*/
proto.cln.ListpeerchannelsChannelsUpdatesRemote.prototype.setFeeBaseMsat = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsUpdatesRemote} returns this
 */
proto.cln.ListpeerchannelsChannelsUpdatesRemote.prototype.clearFeeBaseMsat = function() {
  return this.setFeeBaseMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsUpdatesRemote.prototype.hasFeeBaseMsat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 fee_proportional_millionths = 5;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannelsUpdatesRemote.prototype.getFeeProportionalMillionths = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannelsUpdatesRemote} returns this
 */
proto.cln.ListpeerchannelsChannelsUpdatesRemote.prototype.setFeeProportionalMillionths = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpeerchannelsChannelsFeerate.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpeerchannelsChannelsFeerate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpeerchannelsChannelsFeerate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsChannelsFeerate.toObject = function(includeInstance, msg) {
  var f, obj = {
    perkw: jspb.Message.getFieldWithDefault(msg, 1, 0),
    perkb: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpeerchannelsChannelsFeerate}
 */
proto.cln.ListpeerchannelsChannelsFeerate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpeerchannelsChannelsFeerate;
  return proto.cln.ListpeerchannelsChannelsFeerate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpeerchannelsChannelsFeerate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpeerchannelsChannelsFeerate}
 */
proto.cln.ListpeerchannelsChannelsFeerate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPerkw(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPerkb(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpeerchannelsChannelsFeerate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpeerchannelsChannelsFeerate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpeerchannelsChannelsFeerate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsChannelsFeerate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPerkw();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getPerkb();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 perkw = 1;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannelsFeerate.prototype.getPerkw = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannelsFeerate} returns this
 */
proto.cln.ListpeerchannelsChannelsFeerate.prototype.setPerkw = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 perkb = 2;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannelsFeerate.prototype.getPerkb = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannelsFeerate} returns this
 */
proto.cln.ListpeerchannelsChannelsFeerate.prototype.setPerkb = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpeerchannelsChannelsInflight.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpeerchannelsChannelsInflight} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsChannelsInflight.toObject = function(includeInstance, msg) {
  var f, obj = {
    fundingTxid: msg.getFundingTxid_asB64(),
    fundingOutnum: jspb.Message.getFieldWithDefault(msg, 2, 0),
    feerate: jspb.Message.getFieldWithDefault(msg, 3, ""),
    totalFundingMsat: (f = msg.getTotalFundingMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    ourFundingMsat: (f = msg.getOurFundingMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    scratchTxid: msg.getScratchTxid_asB64(),
    spliceAmount: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpeerchannelsChannelsInflight}
 */
proto.cln.ListpeerchannelsChannelsInflight.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpeerchannelsChannelsInflight;
  return proto.cln.ListpeerchannelsChannelsInflight.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpeerchannelsChannelsInflight} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpeerchannelsChannelsInflight}
 */
proto.cln.ListpeerchannelsChannelsInflight.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFundingTxid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFundingOutnum(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeerate(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setTotalFundingMsat(value);
      break;
    case 5:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setOurFundingMsat(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setScratchTxid(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setSpliceAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpeerchannelsChannelsInflight.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpeerchannelsChannelsInflight} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsChannelsInflight.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFundingTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getFundingOutnum();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getFeerate();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTotalFundingMsat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getOurFundingMsat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeSint64(
      7,
      f
    );
  }
};


/**
 * optional bytes funding_txid = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.getFundingTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes funding_txid = 1;
 * This is a type-conversion wrapper around `getFundingTxid()`
 * @return {string}
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.getFundingTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFundingTxid()));
};


/**
 * optional bytes funding_txid = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFundingTxid()`
 * @return {!Uint8Array}
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.getFundingTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFundingTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpeerchannelsChannelsInflight} returns this
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.setFundingTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint32 funding_outnum = 2;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.getFundingOutnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannelsInflight} returns this
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.setFundingOutnum = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string feerate = 3;
 * @return {string}
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.getFeerate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeerchannelsChannelsInflight} returns this
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.setFeerate = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Amount total_funding_msat = 4;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.getTotalFundingMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 4));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannelsInflight} returns this
*/
proto.cln.ListpeerchannelsChannelsInflight.prototype.setTotalFundingMsat = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsInflight} returns this
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.clearTotalFundingMsat = function() {
  return this.setTotalFundingMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.hasTotalFundingMsat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Amount our_funding_msat = 5;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.getOurFundingMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 5));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannelsInflight} returns this
*/
proto.cln.ListpeerchannelsChannelsInflight.prototype.setOurFundingMsat = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsInflight} returns this
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.clearOurFundingMsat = function() {
  return this.setOurFundingMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.hasOurFundingMsat = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bytes scratch_txid = 6;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.getScratchTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes scratch_txid = 6;
 * This is a type-conversion wrapper around `getScratchTxid()`
 * @return {string}
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.getScratchTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getScratchTxid()));
};


/**
 * optional bytes scratch_txid = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getScratchTxid()`
 * @return {!Uint8Array}
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.getScratchTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getScratchTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpeerchannelsChannelsInflight} returns this
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.setScratchTxid = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsInflight} returns this
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.clearScratchTxid = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.hasScratchTxid = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional sint64 splice_amount = 7;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.getSpliceAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannelsInflight} returns this
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.setSpliceAmount = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsInflight} returns this
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.clearSpliceAmount = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.hasSpliceAmount = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpeerchannelsChannelsFunding.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpeerchannelsChannelsFunding.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpeerchannelsChannelsFunding} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsChannelsFunding.toObject = function(includeInstance, msg) {
  var f, obj = {
    pushedMsat: (f = msg.getPushedMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    localFundsMsat: (f = msg.getLocalFundsMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    remoteFundsMsat: (f = msg.getRemoteFundsMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    feePaidMsat: (f = msg.getFeePaidMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    feeRcvdMsat: (f = msg.getFeeRcvdMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpeerchannelsChannelsFunding}
 */
proto.cln.ListpeerchannelsChannelsFunding.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpeerchannelsChannelsFunding;
  return proto.cln.ListpeerchannelsChannelsFunding.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpeerchannelsChannelsFunding} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpeerchannelsChannelsFunding}
 */
proto.cln.ListpeerchannelsChannelsFunding.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setPushedMsat(value);
      break;
    case 2:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setLocalFundsMsat(value);
      break;
    case 3:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setRemoteFundsMsat(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setFeePaidMsat(value);
      break;
    case 5:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setFeeRcvdMsat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpeerchannelsChannelsFunding.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpeerchannelsChannelsFunding.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpeerchannelsChannelsFunding} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsChannelsFunding.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPushedMsat();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getLocalFundsMsat();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getRemoteFundsMsat();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getFeePaidMsat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getFeeRcvdMsat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
};


/**
 * optional Amount pushed_msat = 1;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannelsFunding.prototype.getPushedMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 1));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannelsFunding} returns this
*/
proto.cln.ListpeerchannelsChannelsFunding.prototype.setPushedMsat = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsFunding} returns this
 */
proto.cln.ListpeerchannelsChannelsFunding.prototype.clearPushedMsat = function() {
  return this.setPushedMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsFunding.prototype.hasPushedMsat = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Amount local_funds_msat = 2;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannelsFunding.prototype.getLocalFundsMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 2));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannelsFunding} returns this
*/
proto.cln.ListpeerchannelsChannelsFunding.prototype.setLocalFundsMsat = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsFunding} returns this
 */
proto.cln.ListpeerchannelsChannelsFunding.prototype.clearLocalFundsMsat = function() {
  return this.setLocalFundsMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsFunding.prototype.hasLocalFundsMsat = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Amount remote_funds_msat = 3;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannelsFunding.prototype.getRemoteFundsMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 3));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannelsFunding} returns this
*/
proto.cln.ListpeerchannelsChannelsFunding.prototype.setRemoteFundsMsat = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsFunding} returns this
 */
proto.cln.ListpeerchannelsChannelsFunding.prototype.clearRemoteFundsMsat = function() {
  return this.setRemoteFundsMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsFunding.prototype.hasRemoteFundsMsat = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Amount fee_paid_msat = 4;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannelsFunding.prototype.getFeePaidMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 4));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannelsFunding} returns this
*/
proto.cln.ListpeerchannelsChannelsFunding.prototype.setFeePaidMsat = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsFunding} returns this
 */
proto.cln.ListpeerchannelsChannelsFunding.prototype.clearFeePaidMsat = function() {
  return this.setFeePaidMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsFunding.prototype.hasFeePaidMsat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Amount fee_rcvd_msat = 5;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannelsFunding.prototype.getFeeRcvdMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 5));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannelsFunding} returns this
*/
proto.cln.ListpeerchannelsChannelsFunding.prototype.setFeeRcvdMsat = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsFunding} returns this
 */
proto.cln.ListpeerchannelsChannelsFunding.prototype.clearFeeRcvdMsat = function() {
  return this.setFeeRcvdMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsFunding.prototype.hasFeeRcvdMsat = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpeerchannelsChannelsAlias.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpeerchannelsChannelsAlias.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpeerchannelsChannelsAlias} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsChannelsAlias.toObject = function(includeInstance, msg) {
  var f, obj = {
    local: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remote: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpeerchannelsChannelsAlias}
 */
proto.cln.ListpeerchannelsChannelsAlias.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpeerchannelsChannelsAlias;
  return proto.cln.ListpeerchannelsChannelsAlias.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpeerchannelsChannelsAlias} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpeerchannelsChannelsAlias}
 */
proto.cln.ListpeerchannelsChannelsAlias.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocal(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpeerchannelsChannelsAlias.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpeerchannelsChannelsAlias.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpeerchannelsChannelsAlias} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsChannelsAlias.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string local = 1;
 * @return {string}
 */
proto.cln.ListpeerchannelsChannelsAlias.prototype.getLocal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeerchannelsChannelsAlias} returns this
 */
proto.cln.ListpeerchannelsChannelsAlias.prototype.setLocal = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsAlias} returns this
 */
proto.cln.ListpeerchannelsChannelsAlias.prototype.clearLocal = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsAlias.prototype.hasLocal = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string remote = 2;
 * @return {string}
 */
proto.cln.ListpeerchannelsChannelsAlias.prototype.getRemote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeerchannelsChannelsAlias} returns this
 */
proto.cln.ListpeerchannelsChannelsAlias.prototype.setRemote = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsAlias} returns this
 */
proto.cln.ListpeerchannelsChannelsAlias.prototype.clearRemote = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsAlias.prototype.hasRemote = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpeerchannelsChannelsHtlcs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpeerchannelsChannelsHtlcs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsChannelsHtlcs.toObject = function(includeInstance, msg) {
  var f, obj = {
    direction: jspb.Message.getFieldWithDefault(msg, 1, 0),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    expiry: jspb.Message.getFieldWithDefault(msg, 4, 0),
    paymentHash: msg.getPaymentHash_asB64(),
    localTrimmed: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    status: jspb.Message.getFieldWithDefault(msg, 7, ""),
    state: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpeerchannelsChannelsHtlcs}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpeerchannelsChannelsHtlcs;
  return proto.cln.ListpeerchannelsChannelsHtlcs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpeerchannelsChannelsHtlcs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpeerchannelsChannelsHtlcs}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.ListpeerchannelsChannelsHtlcs.ListpeerchannelsChannelsHtlcsDirection} */ (reader.readEnum());
      msg.setDirection(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 3:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setExpiry(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLocalTrimmed(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 8:
      var value = /** @type {!proto.cln.HtlcState} */ (reader.readEnum());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpeerchannelsChannelsHtlcs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpeerchannelsChannelsHtlcs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsChannelsHtlcs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDirection();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getExpiry();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.ListpeerchannelsChannelsHtlcsDirection = {
  IN: 0,
  OUT: 1
};

/**
 * optional ListpeerchannelsChannelsHtlcsDirection direction = 1;
 * @return {!proto.cln.ListpeerchannelsChannelsHtlcs.ListpeerchannelsChannelsHtlcsDirection}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.getDirection = function() {
  return /** @type {!proto.cln.ListpeerchannelsChannelsHtlcs.ListpeerchannelsChannelsHtlcsDirection} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.ListpeerchannelsChannelsHtlcs.ListpeerchannelsChannelsHtlcsDirection} value
 * @return {!proto.cln.ListpeerchannelsChannelsHtlcs} returns this
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.setDirection = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint64 id = 2;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannelsHtlcs} returns this
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Amount amount_msat = 3;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 3));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannelsHtlcs} returns this
*/
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsHtlcs} returns this
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 expiry = 4;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.getExpiry = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannelsHtlcs} returns this
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.setExpiry = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bytes payment_hash = 5;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes payment_hash = 5;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpeerchannelsChannelsHtlcs} returns this
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};


/**
 * optional bool local_trimmed = 6;
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.getLocalTrimmed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListpeerchannelsChannelsHtlcs} returns this
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.setLocalTrimmed = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsHtlcs} returns this
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.clearLocalTrimmed = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.hasLocalTrimmed = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string status = 7;
 * @return {string}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeerchannelsChannelsHtlcs} returns this
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.setStatus = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsHtlcs} returns this
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.clearStatus = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional HtlcState state = 8;
 * @return {!proto.cln.HtlcState}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.getState = function() {
  return /** @type {!proto.cln.HtlcState} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.cln.HtlcState} value
 * @return {!proto.cln.ListpeerchannelsChannelsHtlcs} returns this
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListclosedchannelsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListclosedchannelsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListclosedchannelsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListclosedchannelsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListclosedchannelsRequest}
 */
proto.cln.ListclosedchannelsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListclosedchannelsRequest;
  return proto.cln.ListclosedchannelsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListclosedchannelsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListclosedchannelsRequest}
 */
proto.cln.ListclosedchannelsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListclosedchannelsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListclosedchannelsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListclosedchannelsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListclosedchannelsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListclosedchannelsRequest.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes id = 1;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.cln.ListclosedchannelsRequest.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.cln.ListclosedchannelsRequest.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListclosedchannelsRequest} returns this
 */
proto.cln.ListclosedchannelsRequest.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListclosedchannelsRequest} returns this
 */
proto.cln.ListclosedchannelsRequest.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListclosedchannelsRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListclosedchannelsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListclosedchannelsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListclosedchannelsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListclosedchannelsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListclosedchannelsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    closedchannelsList: jspb.Message.toObjectList(msg.getClosedchannelsList(),
    proto.cln.ListclosedchannelsClosedchannels.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListclosedchannelsResponse}
 */
proto.cln.ListclosedchannelsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListclosedchannelsResponse;
  return proto.cln.ListclosedchannelsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListclosedchannelsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListclosedchannelsResponse}
 */
proto.cln.ListclosedchannelsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.ListclosedchannelsClosedchannels;
      reader.readMessage(value,proto.cln.ListclosedchannelsClosedchannels.deserializeBinaryFromReader);
      msg.addClosedchannels(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListclosedchannelsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListclosedchannelsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListclosedchannelsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListclosedchannelsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClosedchannelsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.ListclosedchannelsClosedchannels.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ListclosedchannelsClosedchannels closedchannels = 1;
 * @return {!Array<!proto.cln.ListclosedchannelsClosedchannels>}
 */
proto.cln.ListclosedchannelsResponse.prototype.getClosedchannelsList = function() {
  return /** @type{!Array<!proto.cln.ListclosedchannelsClosedchannels>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListclosedchannelsClosedchannels, 1));
};


/**
 * @param {!Array<!proto.cln.ListclosedchannelsClosedchannels>} value
 * @return {!proto.cln.ListclosedchannelsResponse} returns this
*/
proto.cln.ListclosedchannelsResponse.prototype.setClosedchannelsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.ListclosedchannelsClosedchannels=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListclosedchannelsClosedchannels}
 */
proto.cln.ListclosedchannelsResponse.prototype.addClosedchannels = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.ListclosedchannelsClosedchannels, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListclosedchannelsResponse} returns this
 */
proto.cln.ListclosedchannelsResponse.prototype.clearClosedchannelsList = function() {
  return this.setClosedchannelsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListclosedchannelsClosedchannels.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListclosedchannelsClosedchannels} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListclosedchannelsClosedchannels.toObject = function(includeInstance, msg) {
  var f, obj = {
    peerId: msg.getPeerId_asB64(),
    channelId: msg.getChannelId_asB64(),
    shortChannelId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    alias: (f = msg.getAlias()) && proto.cln.ListclosedchannelsClosedchannelsAlias.toObject(includeInstance, f),
    opener: jspb.Message.getFieldWithDefault(msg, 5, 0),
    closer: jspb.Message.getFieldWithDefault(msg, 6, 0),
    pb_private: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    totalLocalCommitments: jspb.Message.getFieldWithDefault(msg, 9, 0),
    totalRemoteCommitments: jspb.Message.getFieldWithDefault(msg, 10, 0),
    totalHtlcsSent: jspb.Message.getFieldWithDefault(msg, 11, 0),
    fundingTxid: msg.getFundingTxid_asB64(),
    fundingOutnum: jspb.Message.getFieldWithDefault(msg, 13, 0),
    leased: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    fundingFeePaidMsat: (f = msg.getFundingFeePaidMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    fundingFeeRcvdMsat: (f = msg.getFundingFeeRcvdMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    fundingPushedMsat: (f = msg.getFundingPushedMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    totalMsat: (f = msg.getTotalMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    finalToUsMsat: (f = msg.getFinalToUsMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    minToUsMsat: (f = msg.getMinToUsMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    maxToUsMsat: (f = msg.getMaxToUsMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    lastCommitmentTxid: msg.getLastCommitmentTxid_asB64(),
    lastCommitmentFeeMsat: (f = msg.getLastCommitmentFeeMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    closeCause: jspb.Message.getFieldWithDefault(msg, 24, 0),
    lastStableConnection: jspb.Message.getFieldWithDefault(msg, 25, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListclosedchannelsClosedchannels}
 */
proto.cln.ListclosedchannelsClosedchannels.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListclosedchannelsClosedchannels;
  return proto.cln.ListclosedchannelsClosedchannels.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListclosedchannelsClosedchannels} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListclosedchannelsClosedchannels}
 */
proto.cln.ListclosedchannelsClosedchannels.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPeerId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChannelId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setShortChannelId(value);
      break;
    case 4:
      var value = new proto.cln.ListclosedchannelsClosedchannelsAlias;
      reader.readMessage(value,proto.cln.ListclosedchannelsClosedchannelsAlias.deserializeBinaryFromReader);
      msg.setAlias(value);
      break;
    case 5:
      var value = /** @type {!proto.cln.ChannelSide} */ (reader.readEnum());
      msg.setOpener(value);
      break;
    case 6:
      var value = /** @type {!proto.cln.ChannelSide} */ (reader.readEnum());
      msg.setCloser(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPrivate(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalLocalCommitments(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalRemoteCommitments(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalHtlcsSent(value);
      break;
    case 12:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFundingTxid(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFundingOutnum(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLeased(value);
      break;
    case 15:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setFundingFeePaidMsat(value);
      break;
    case 16:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setFundingFeeRcvdMsat(value);
      break;
    case 17:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setFundingPushedMsat(value);
      break;
    case 18:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setTotalMsat(value);
      break;
    case 19:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setFinalToUsMsat(value);
      break;
    case 20:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setMinToUsMsat(value);
      break;
    case 21:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setMaxToUsMsat(value);
      break;
    case 22:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setLastCommitmentTxid(value);
      break;
    case 23:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setLastCommitmentFeeMsat(value);
      break;
    case 24:
      var value = /** @type {!proto.cln.ListclosedchannelsClosedchannels.ListclosedchannelsClosedchannelsClose_cause} */ (reader.readEnum());
      msg.setCloseCause(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLastStableConnection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListclosedchannelsClosedchannels.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListclosedchannelsClosedchannels} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListclosedchannelsClosedchannels.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getChannelId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAlias();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.cln.ListclosedchannelsClosedchannelsAlias.serializeBinaryToWriter
    );
  }
  f = message.getOpener();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = /** @type {!proto.cln.ChannelSide} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getPrivate();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getTotalLocalCommitments();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getTotalRemoteCommitments();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getTotalHtlcsSent();
  if (f !== 0) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = message.getFundingTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      12,
      f
    );
  }
  f = message.getFundingOutnum();
  if (f !== 0) {
    writer.writeUint32(
      13,
      f
    );
  }
  f = message.getLeased();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getFundingFeePaidMsat();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getFundingFeeRcvdMsat();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getFundingPushedMsat();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getTotalMsat();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getFinalToUsMsat();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getMinToUsMsat();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getMaxToUsMsat();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeBytes(
      22,
      f
    );
  }
  f = message.getLastCommitmentFeeMsat();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getCloseCause();
  if (f !== 0.0) {
    writer.writeEnum(
      24,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeUint64(
      25,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ListclosedchannelsClosedchannels.ListclosedchannelsClosedchannelsClose_cause = {
  UNKNOWN: 0,
  LOCAL: 1,
  USER: 2,
  REMOTE: 3,
  PROTOCOL: 4,
  ONCHAIN: 5
};

/**
 * optional bytes peer_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getPeerId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes peer_id = 1;
 * This is a type-conversion wrapper around `getPeerId()`
 * @return {string}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getPeerId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPeerId()));
};


/**
 * optional bytes peer_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPeerId()`
 * @return {!Uint8Array}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getPeerId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPeerId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.setPeerId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.clearPeerId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.hasPeerId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes channel_id = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getChannelId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes channel_id = 2;
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {string}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getChannelId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChannelId()));
};


/**
 * optional bytes channel_id = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {!Uint8Array}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getChannelId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChannelId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string short_channel_id = 3;
 * @return {string}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getShortChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.setShortChannelId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.clearShortChannelId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.hasShortChannelId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ListclosedchannelsClosedchannelsAlias alias = 4;
 * @return {?proto.cln.ListclosedchannelsClosedchannelsAlias}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getAlias = function() {
  return /** @type{?proto.cln.ListclosedchannelsClosedchannelsAlias} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListclosedchannelsClosedchannelsAlias, 4));
};


/**
 * @param {?proto.cln.ListclosedchannelsClosedchannelsAlias|undefined} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
*/
proto.cln.ListclosedchannelsClosedchannels.prototype.setAlias = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.clearAlias = function() {
  return this.setAlias(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.hasAlias = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ChannelSide opener = 5;
 * @return {!proto.cln.ChannelSide}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getOpener = function() {
  return /** @type {!proto.cln.ChannelSide} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.cln.ChannelSide} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.setOpener = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional ChannelSide closer = 6;
 * @return {!proto.cln.ChannelSide}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getCloser = function() {
  return /** @type {!proto.cln.ChannelSide} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.cln.ChannelSide} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.setCloser = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.clearCloser = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.hasCloser = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool private = 7;
 * @return {boolean}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getPrivate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.setPrivate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional uint64 total_local_commitments = 9;
 * @return {number}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getTotalLocalCommitments = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.setTotalLocalCommitments = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional uint64 total_remote_commitments = 10;
 * @return {number}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getTotalRemoteCommitments = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.setTotalRemoteCommitments = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional uint64 total_htlcs_sent = 11;
 * @return {number}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getTotalHtlcsSent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.setTotalHtlcsSent = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional bytes funding_txid = 12;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getFundingTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * optional bytes funding_txid = 12;
 * This is a type-conversion wrapper around `getFundingTxid()`
 * @return {string}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getFundingTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFundingTxid()));
};


/**
 * optional bytes funding_txid = 12;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFundingTxid()`
 * @return {!Uint8Array}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getFundingTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFundingTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.setFundingTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 12, value);
};


/**
 * optional uint32 funding_outnum = 13;
 * @return {number}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getFundingOutnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.setFundingOutnum = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional bool leased = 14;
 * @return {boolean}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getLeased = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.setLeased = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional Amount funding_fee_paid_msat = 15;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getFundingFeePaidMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 15));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
*/
proto.cln.ListclosedchannelsClosedchannels.prototype.setFundingFeePaidMsat = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.clearFundingFeePaidMsat = function() {
  return this.setFundingFeePaidMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.hasFundingFeePaidMsat = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional Amount funding_fee_rcvd_msat = 16;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getFundingFeeRcvdMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 16));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
*/
proto.cln.ListclosedchannelsClosedchannels.prototype.setFundingFeeRcvdMsat = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.clearFundingFeeRcvdMsat = function() {
  return this.setFundingFeeRcvdMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.hasFundingFeeRcvdMsat = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional Amount funding_pushed_msat = 17;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getFundingPushedMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 17));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
*/
proto.cln.ListclosedchannelsClosedchannels.prototype.setFundingPushedMsat = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.clearFundingPushedMsat = function() {
  return this.setFundingPushedMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.hasFundingPushedMsat = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional Amount total_msat = 18;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getTotalMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 18));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
*/
proto.cln.ListclosedchannelsClosedchannels.prototype.setTotalMsat = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.clearTotalMsat = function() {
  return this.setTotalMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.hasTotalMsat = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional Amount final_to_us_msat = 19;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getFinalToUsMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 19));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
*/
proto.cln.ListclosedchannelsClosedchannels.prototype.setFinalToUsMsat = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.clearFinalToUsMsat = function() {
  return this.setFinalToUsMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.hasFinalToUsMsat = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional Amount min_to_us_msat = 20;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getMinToUsMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 20));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
*/
proto.cln.ListclosedchannelsClosedchannels.prototype.setMinToUsMsat = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.clearMinToUsMsat = function() {
  return this.setMinToUsMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.hasMinToUsMsat = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional Amount max_to_us_msat = 21;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getMaxToUsMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 21));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
*/
proto.cln.ListclosedchannelsClosedchannels.prototype.setMaxToUsMsat = function(value) {
  return jspb.Message.setWrapperField(this, 21, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.clearMaxToUsMsat = function() {
  return this.setMaxToUsMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.hasMaxToUsMsat = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional bytes last_commitment_txid = 22;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getLastCommitmentTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * optional bytes last_commitment_txid = 22;
 * This is a type-conversion wrapper around `getLastCommitmentTxid()`
 * @return {string}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getLastCommitmentTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getLastCommitmentTxid()));
};


/**
 * optional bytes last_commitment_txid = 22;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getLastCommitmentTxid()`
 * @return {!Uint8Array}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getLastCommitmentTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getLastCommitmentTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.setLastCommitmentTxid = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.clearLastCommitmentTxid = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.hasLastCommitmentTxid = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional Amount last_commitment_fee_msat = 23;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getLastCommitmentFeeMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 23));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
*/
proto.cln.ListclosedchannelsClosedchannels.prototype.setLastCommitmentFeeMsat = function(value) {
  return jspb.Message.setWrapperField(this, 23, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.clearLastCommitmentFeeMsat = function() {
  return this.setLastCommitmentFeeMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.hasLastCommitmentFeeMsat = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional ListclosedchannelsClosedchannelsClose_cause close_cause = 24;
 * @return {!proto.cln.ListclosedchannelsClosedchannels.ListclosedchannelsClosedchannelsClose_cause}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getCloseCause = function() {
  return /** @type {!proto.cln.ListclosedchannelsClosedchannels.ListclosedchannelsClosedchannelsClose_cause} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/**
 * @param {!proto.cln.ListclosedchannelsClosedchannels.ListclosedchannelsClosedchannelsClose_cause} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.setCloseCause = function(value) {
  return jspb.Message.setProto3EnumField(this, 24, value);
};


/**
 * optional uint64 last_stable_connection = 25;
 * @return {number}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getLastStableConnection = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.setLastStableConnection = function(value) {
  return jspb.Message.setField(this, 25, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.clearLastStableConnection = function() {
  return jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.hasLastStableConnection = function() {
  return jspb.Message.getField(this, 25) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListclosedchannelsClosedchannelsAlias.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListclosedchannelsClosedchannelsAlias.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListclosedchannelsClosedchannelsAlias} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListclosedchannelsClosedchannelsAlias.toObject = function(includeInstance, msg) {
  var f, obj = {
    local: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remote: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListclosedchannelsClosedchannelsAlias}
 */
proto.cln.ListclosedchannelsClosedchannelsAlias.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListclosedchannelsClosedchannelsAlias;
  return proto.cln.ListclosedchannelsClosedchannelsAlias.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListclosedchannelsClosedchannelsAlias} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListclosedchannelsClosedchannelsAlias}
 */
proto.cln.ListclosedchannelsClosedchannelsAlias.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocal(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListclosedchannelsClosedchannelsAlias.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListclosedchannelsClosedchannelsAlias.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListclosedchannelsClosedchannelsAlias} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListclosedchannelsClosedchannelsAlias.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string local = 1;
 * @return {string}
 */
proto.cln.ListclosedchannelsClosedchannelsAlias.prototype.getLocal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListclosedchannelsClosedchannelsAlias} returns this
 */
proto.cln.ListclosedchannelsClosedchannelsAlias.prototype.setLocal = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListclosedchannelsClosedchannelsAlias} returns this
 */
proto.cln.ListclosedchannelsClosedchannelsAlias.prototype.clearLocal = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListclosedchannelsClosedchannelsAlias.prototype.hasLocal = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string remote = 2;
 * @return {string}
 */
proto.cln.ListclosedchannelsClosedchannelsAlias.prototype.getRemote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListclosedchannelsClosedchannelsAlias} returns this
 */
proto.cln.ListclosedchannelsClosedchannelsAlias.prototype.setRemote = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListclosedchannelsClosedchannelsAlias} returns this
 */
proto.cln.ListclosedchannelsClosedchannelsAlias.prototype.clearRemote = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListclosedchannelsClosedchannelsAlias.prototype.hasRemote = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DecodepayRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DecodepayRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DecodepayRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodepayRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    bolt11: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DecodepayRequest}
 */
proto.cln.DecodepayRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DecodepayRequest;
  return proto.cln.DecodepayRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DecodepayRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DecodepayRequest}
 */
proto.cln.DecodepayRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DecodepayRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DecodepayRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DecodepayRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodepayRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBolt11();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string bolt11 = 1;
 * @return {string}
 */
proto.cln.DecodepayRequest.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodepayRequest} returns this
 */
proto.cln.DecodepayRequest.prototype.setBolt11 = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.cln.DecodepayRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodepayRequest} returns this
 */
proto.cln.DecodepayRequest.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodepayRequest} returns this
 */
proto.cln.DecodepayRequest.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodepayRequest.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.DecodepayResponse.repeatedFields_ = [14,16];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DecodepayResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DecodepayResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DecodepayResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodepayResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    currency: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    expiry: jspb.Message.getFieldWithDefault(msg, 3, 0),
    payee: msg.getPayee_asB64(),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    paymentHash: msg.getPaymentHash_asB64(),
    signature: jspb.Message.getFieldWithDefault(msg, 7, ""),
    description: jspb.Message.getFieldWithDefault(msg, 8, ""),
    descriptionHash: msg.getDescriptionHash_asB64(),
    minFinalCltvExpiry: jspb.Message.getFieldWithDefault(msg, 10, 0),
    paymentSecret: msg.getPaymentSecret_asB64(),
    features: msg.getFeatures_asB64(),
    paymentMetadata: msg.getPaymentMetadata_asB64(),
    fallbacksList: jspb.Message.toObjectList(msg.getFallbacksList(),
    proto.cln.DecodepayFallbacks.toObject, includeInstance),
    extraList: jspb.Message.toObjectList(msg.getExtraList(),
    proto.cln.DecodepayExtra.toObject, includeInstance),
    routes: (f = msg.getRoutes()) && cln_primitives_pb.DecodeRoutehintList.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DecodepayResponse}
 */
proto.cln.DecodepayResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DecodepayResponse;
  return proto.cln.DecodepayResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DecodepayResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DecodepayResponse}
 */
proto.cln.DecodepayResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedAt(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExpiry(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPayee(value);
      break;
    case 5:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignature(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 9:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDescriptionHash(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinFinalCltvExpiry(value);
      break;
    case 11:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentSecret(value);
      break;
    case 12:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFeatures(value);
      break;
    case 13:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentMetadata(value);
      break;
    case 14:
      var value = new proto.cln.DecodepayFallbacks;
      reader.readMessage(value,proto.cln.DecodepayFallbacks.deserializeBinaryFromReader);
      msg.addFallbacks(value);
      break;
    case 16:
      var value = new proto.cln.DecodepayExtra;
      reader.readMessage(value,proto.cln.DecodepayExtra.deserializeBinaryFromReader);
      msg.addExtra(value);
      break;
    case 17:
      var value = new cln_primitives_pb.DecodeRoutehintList;
      reader.readMessage(value,cln_primitives_pb.DecodeRoutehintList.deserializeBinaryFromReader);
      msg.setRoutes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DecodepayResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DecodepayResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DecodepayResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodepayResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getExpiry();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getPayee_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getSignature();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBytes(
      9,
      f
    );
  }
  f = message.getMinFinalCltvExpiry();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeBytes(
      11,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBytes(
      12,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBytes(
      13,
      f
    );
  }
  f = message.getFallbacksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      14,
      f,
      proto.cln.DecodepayFallbacks.serializeBinaryToWriter
    );
  }
  f = message.getExtraList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      16,
      f,
      proto.cln.DecodepayExtra.serializeBinaryToWriter
    );
  }
  f = message.getRoutes();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      cln_primitives_pb.DecodeRoutehintList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string currency = 1;
 * @return {string}
 */
proto.cln.DecodepayResponse.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 created_at = 2;
 * @return {number}
 */
proto.cln.DecodepayResponse.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 expiry = 3;
 * @return {number}
 */
proto.cln.DecodepayResponse.prototype.getExpiry = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.setExpiry = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bytes payee = 4;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodepayResponse.prototype.getPayee = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes payee = 4;
 * This is a type-conversion wrapper around `getPayee()`
 * @return {string}
 */
proto.cln.DecodepayResponse.prototype.getPayee_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPayee()));
};


/**
 * optional bytes payee = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPayee()`
 * @return {!Uint8Array}
 */
proto.cln.DecodepayResponse.prototype.getPayee_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPayee()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.setPayee = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional Amount amount_msat = 5;
 * @return {?proto.cln.Amount}
 */
proto.cln.DecodepayResponse.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 5));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.DecodepayResponse} returns this
*/
proto.cln.DecodepayResponse.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodepayResponse.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bytes payment_hash = 6;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodepayResponse.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes payment_hash = 6;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.DecodepayResponse.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.DecodepayResponse.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional string signature = 7;
 * @return {string}
 */
proto.cln.DecodepayResponse.prototype.getSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.setSignature = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string description = 8;
 * @return {string}
 */
proto.cln.DecodepayResponse.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodepayResponse.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bytes description_hash = 9;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodepayResponse.prototype.getDescriptionHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * optional bytes description_hash = 9;
 * This is a type-conversion wrapper around `getDescriptionHash()`
 * @return {string}
 */
proto.cln.DecodepayResponse.prototype.getDescriptionHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDescriptionHash()));
};


/**
 * optional bytes description_hash = 9;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDescriptionHash()`
 * @return {!Uint8Array}
 */
proto.cln.DecodepayResponse.prototype.getDescriptionHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDescriptionHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.setDescriptionHash = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.clearDescriptionHash = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodepayResponse.prototype.hasDescriptionHash = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint32 min_final_cltv_expiry = 10;
 * @return {number}
 */
proto.cln.DecodepayResponse.prototype.getMinFinalCltvExpiry = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.setMinFinalCltvExpiry = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional bytes payment_secret = 11;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodepayResponse.prototype.getPaymentSecret = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * optional bytes payment_secret = 11;
 * This is a type-conversion wrapper around `getPaymentSecret()`
 * @return {string}
 */
proto.cln.DecodepayResponse.prototype.getPaymentSecret_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentSecret()));
};


/**
 * optional bytes payment_secret = 11;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentSecret()`
 * @return {!Uint8Array}
 */
proto.cln.DecodepayResponse.prototype.getPaymentSecret_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentSecret()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.setPaymentSecret = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.clearPaymentSecret = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodepayResponse.prototype.hasPaymentSecret = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bytes features = 12;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodepayResponse.prototype.getFeatures = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * optional bytes features = 12;
 * This is a type-conversion wrapper around `getFeatures()`
 * @return {string}
 */
proto.cln.DecodepayResponse.prototype.getFeatures_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFeatures()));
};


/**
 * optional bytes features = 12;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFeatures()`
 * @return {!Uint8Array}
 */
proto.cln.DecodepayResponse.prototype.getFeatures_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFeatures()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.setFeatures = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.clearFeatures = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodepayResponse.prototype.hasFeatures = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bytes payment_metadata = 13;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodepayResponse.prototype.getPaymentMetadata = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * optional bytes payment_metadata = 13;
 * This is a type-conversion wrapper around `getPaymentMetadata()`
 * @return {string}
 */
proto.cln.DecodepayResponse.prototype.getPaymentMetadata_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentMetadata()));
};


/**
 * optional bytes payment_metadata = 13;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentMetadata()`
 * @return {!Uint8Array}
 */
proto.cln.DecodepayResponse.prototype.getPaymentMetadata_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentMetadata()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.setPaymentMetadata = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.clearPaymentMetadata = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodepayResponse.prototype.hasPaymentMetadata = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * repeated DecodepayFallbacks fallbacks = 14;
 * @return {!Array<!proto.cln.DecodepayFallbacks>}
 */
proto.cln.DecodepayResponse.prototype.getFallbacksList = function() {
  return /** @type{!Array<!proto.cln.DecodepayFallbacks>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.DecodepayFallbacks, 14));
};


/**
 * @param {!Array<!proto.cln.DecodepayFallbacks>} value
 * @return {!proto.cln.DecodepayResponse} returns this
*/
proto.cln.DecodepayResponse.prototype.setFallbacksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 14, value);
};


/**
 * @param {!proto.cln.DecodepayFallbacks=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.DecodepayFallbacks}
 */
proto.cln.DecodepayResponse.prototype.addFallbacks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 14, opt_value, proto.cln.DecodepayFallbacks, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.clearFallbacksList = function() {
  return this.setFallbacksList([]);
};


/**
 * repeated DecodepayExtra extra = 16;
 * @return {!Array<!proto.cln.DecodepayExtra>}
 */
proto.cln.DecodepayResponse.prototype.getExtraList = function() {
  return /** @type{!Array<!proto.cln.DecodepayExtra>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.DecodepayExtra, 16));
};


/**
 * @param {!Array<!proto.cln.DecodepayExtra>} value
 * @return {!proto.cln.DecodepayResponse} returns this
*/
proto.cln.DecodepayResponse.prototype.setExtraList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 16, value);
};


/**
 * @param {!proto.cln.DecodepayExtra=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.DecodepayExtra}
 */
proto.cln.DecodepayResponse.prototype.addExtra = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.cln.DecodepayExtra, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.clearExtraList = function() {
  return this.setExtraList([]);
};


/**
 * optional DecodeRoutehintList routes = 17;
 * @return {?proto.cln.DecodeRoutehintList}
 */
proto.cln.DecodepayResponse.prototype.getRoutes = function() {
  return /** @type{?proto.cln.DecodeRoutehintList} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.DecodeRoutehintList, 17));
};


/**
 * @param {?proto.cln.DecodeRoutehintList|undefined} value
 * @return {!proto.cln.DecodepayResponse} returns this
*/
proto.cln.DecodepayResponse.prototype.setRoutes = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.clearRoutes = function() {
  return this.setRoutes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodepayResponse.prototype.hasRoutes = function() {
  return jspb.Message.getField(this, 17) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DecodepayFallbacks.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DecodepayFallbacks.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DecodepayFallbacks} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodepayFallbacks.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    addr: jspb.Message.getFieldWithDefault(msg, 2, ""),
    hex: msg.getHex_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DecodepayFallbacks}
 */
proto.cln.DecodepayFallbacks.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DecodepayFallbacks;
  return proto.cln.DecodepayFallbacks.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DecodepayFallbacks} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DecodepayFallbacks}
 */
proto.cln.DecodepayFallbacks.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.DecodepayFallbacks.DecodepayFallbacksType} */ (reader.readEnum());
      msg.setItemType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddr(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DecodepayFallbacks.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DecodepayFallbacks.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DecodepayFallbacks} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodepayFallbacks.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHex_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.DecodepayFallbacks.DecodepayFallbacksType = {
  P2PKH: 0,
  P2SH: 1,
  P2WPKH: 2,
  P2WSH: 3,
  P2TR: 4
};

/**
 * optional DecodepayFallbacksType item_type = 1;
 * @return {!proto.cln.DecodepayFallbacks.DecodepayFallbacksType}
 */
proto.cln.DecodepayFallbacks.prototype.getItemType = function() {
  return /** @type {!proto.cln.DecodepayFallbacks.DecodepayFallbacksType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.DecodepayFallbacks.DecodepayFallbacksType} value
 * @return {!proto.cln.DecodepayFallbacks} returns this
 */
proto.cln.DecodepayFallbacks.prototype.setItemType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string addr = 2;
 * @return {string}
 */
proto.cln.DecodepayFallbacks.prototype.getAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodepayFallbacks} returns this
 */
proto.cln.DecodepayFallbacks.prototype.setAddr = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodepayFallbacks} returns this
 */
proto.cln.DecodepayFallbacks.prototype.clearAddr = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodepayFallbacks.prototype.hasAddr = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes hex = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodepayFallbacks.prototype.getHex = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes hex = 3;
 * This is a type-conversion wrapper around `getHex()`
 * @return {string}
 */
proto.cln.DecodepayFallbacks.prototype.getHex_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHex()));
};


/**
 * optional bytes hex = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHex()`
 * @return {!Uint8Array}
 */
proto.cln.DecodepayFallbacks.prototype.getHex_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHex()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodepayFallbacks} returns this
 */
proto.cln.DecodepayFallbacks.prototype.setHex = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DecodepayExtra.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DecodepayExtra.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DecodepayExtra} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodepayExtra.toObject = function(includeInstance, msg) {
  var f, obj = {
    tag: jspb.Message.getFieldWithDefault(msg, 1, ""),
    data: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DecodepayExtra}
 */
proto.cln.DecodepayExtra.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DecodepayExtra;
  return proto.cln.DecodepayExtra.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DecodepayExtra} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DecodepayExtra}
 */
proto.cln.DecodepayExtra.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTag(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DecodepayExtra.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DecodepayExtra.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DecodepayExtra} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodepayExtra.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTag();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getData();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string tag = 1;
 * @return {string}
 */
proto.cln.DecodepayExtra.prototype.getTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodepayExtra} returns this
 */
proto.cln.DecodepayExtra.prototype.setTag = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string data = 2;
 * @return {string}
 */
proto.cln.DecodepayExtra.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodepayExtra} returns this
 */
proto.cln.DecodepayExtra.prototype.setData = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DecodeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DecodeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DecodeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    string: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DecodeRequest}
 */
proto.cln.DecodeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DecodeRequest;
  return proto.cln.DecodeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DecodeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DecodeRequest}
 */
proto.cln.DecodeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setString(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DecodeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DecodeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DecodeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getString();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string string = 1;
 * @return {string}
 */
proto.cln.DecodeRequest.prototype.getString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeRequest} returns this
 */
proto.cln.DecodeRequest.prototype.setString = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.DecodeResponse.repeatedFields_ = [4,16,45,59,69,73];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DecodeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DecodeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DecodeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    valid: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    offerId: msg.getOfferId_asB64(),
    offerChainsList: msg.getOfferChainsList_asB64(),
    offerMetadata: msg.getOfferMetadata_asB64(),
    offerCurrency: jspb.Message.getFieldWithDefault(msg, 6, ""),
    warningUnknownOfferCurrency: jspb.Message.getFieldWithDefault(msg, 7, ""),
    currencyMinorUnit: jspb.Message.getFieldWithDefault(msg, 8, 0),
    offerAmount: jspb.Message.getFieldWithDefault(msg, 9, 0),
    offerAmountMsat: (f = msg.getOfferAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    offerDescription: jspb.Message.getFieldWithDefault(msg, 11, ""),
    offerIssuer: jspb.Message.getFieldWithDefault(msg, 12, ""),
    offerFeatures: msg.getOfferFeatures_asB64(),
    offerAbsoluteExpiry: jspb.Message.getFieldWithDefault(msg, 14, 0),
    offerQuantityMax: jspb.Message.getFieldWithDefault(msg, 15, 0),
    offerPathsList: jspb.Message.toObjectList(msg.getOfferPathsList(),
    proto.cln.DecodeOffer_paths.toObject, includeInstance),
    offerNodeId: msg.getOfferNodeId_asB64(),
    warningMissingOfferNodeId: jspb.Message.getFieldWithDefault(msg, 20, ""),
    warningInvalidOfferDescription: jspb.Message.getFieldWithDefault(msg, 21, ""),
    warningMissingOfferDescription: jspb.Message.getFieldWithDefault(msg, 22, ""),
    warningInvalidOfferCurrency: jspb.Message.getFieldWithDefault(msg, 23, ""),
    warningInvalidOfferIssuer: jspb.Message.getFieldWithDefault(msg, 24, ""),
    invreqMetadata: msg.getInvreqMetadata_asB64(),
    invreqPayerId: msg.getInvreqPayerId_asB64(),
    invreqChain: msg.getInvreqChain_asB64(),
    invreqAmountMsat: (f = msg.getInvreqAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    invreqFeatures: msg.getInvreqFeatures_asB64(),
    invreqQuantity: jspb.Message.getFieldWithDefault(msg, 30, 0),
    invreqPayerNote: jspb.Message.getFieldWithDefault(msg, 31, ""),
    invreqRecurrenceCounter: jspb.Message.getFieldWithDefault(msg, 32, 0),
    invreqRecurrenceStart: jspb.Message.getFieldWithDefault(msg, 33, 0),
    warningMissingInvreqMetadata: jspb.Message.getFieldWithDefault(msg, 35, ""),
    warningMissingInvreqPayerId: jspb.Message.getFieldWithDefault(msg, 36, ""),
    warningInvalidInvreqPayerNote: jspb.Message.getFieldWithDefault(msg, 37, ""),
    warningMissingInvoiceRequestSignature: jspb.Message.getFieldWithDefault(msg, 38, ""),
    warningInvalidInvoiceRequestSignature: jspb.Message.getFieldWithDefault(msg, 39, ""),
    invoiceCreatedAt: jspb.Message.getFieldWithDefault(msg, 41, 0),
    invoiceRelativeExpiry: jspb.Message.getFieldWithDefault(msg, 42, 0),
    invoicePaymentHash: msg.getInvoicePaymentHash_asB64(),
    invoiceAmountMsat: (f = msg.getInvoiceAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    invoiceFallbacksList: jspb.Message.toObjectList(msg.getInvoiceFallbacksList(),
    proto.cln.DecodeInvoice_fallbacks.toObject, includeInstance),
    invoiceFeatures: msg.getInvoiceFeatures_asB64(),
    invoiceNodeId: msg.getInvoiceNodeId_asB64(),
    invoiceRecurrenceBasetime: jspb.Message.getFieldWithDefault(msg, 48, 0),
    warningMissingInvoicePaths: jspb.Message.getFieldWithDefault(msg, 50, ""),
    warningMissingInvoiceBlindedpay: jspb.Message.getFieldWithDefault(msg, 51, ""),
    warningMissingInvoiceCreatedAt: jspb.Message.getFieldWithDefault(msg, 52, ""),
    warningMissingInvoicePaymentHash: jspb.Message.getFieldWithDefault(msg, 53, ""),
    warningMissingInvoiceAmount: jspb.Message.getFieldWithDefault(msg, 54, ""),
    warningMissingInvoiceRecurrenceBasetime: jspb.Message.getFieldWithDefault(msg, 55, ""),
    warningMissingInvoiceNodeId: jspb.Message.getFieldWithDefault(msg, 56, ""),
    warningMissingInvoiceSignature: jspb.Message.getFieldWithDefault(msg, 57, ""),
    warningInvalidInvoiceSignature: jspb.Message.getFieldWithDefault(msg, 58, ""),
    fallbacksList: jspb.Message.toObjectList(msg.getFallbacksList(),
    proto.cln.DecodeFallbacks.toObject, includeInstance),
    createdAt: jspb.Message.getFieldWithDefault(msg, 60, 0),
    expiry: jspb.Message.getFieldWithDefault(msg, 61, 0),
    payee: msg.getPayee_asB64(),
    paymentHash: msg.getPaymentHash_asB64(),
    descriptionHash: msg.getDescriptionHash_asB64(),
    minFinalCltvExpiry: jspb.Message.getFieldWithDefault(msg, 65, 0),
    paymentSecret: msg.getPaymentSecret_asB64(),
    paymentMetadata: msg.getPaymentMetadata_asB64(),
    extraList: jspb.Message.toObjectList(msg.getExtraList(),
    proto.cln.DecodeExtra.toObject, includeInstance),
    uniqueId: jspb.Message.getFieldWithDefault(msg, 70, ""),
    version: jspb.Message.getFieldWithDefault(msg, 71, ""),
    string: jspb.Message.getFieldWithDefault(msg, 72, ""),
    restrictionsList: jspb.Message.toObjectList(msg.getRestrictionsList(),
    proto.cln.DecodeRestrictions.toObject, includeInstance),
    warningRuneInvalidUtf8: jspb.Message.getFieldWithDefault(msg, 74, ""),
    hex: msg.getHex_asB64(),
    decrypted: msg.getDecrypted_asB64(),
    signature: jspb.Message.getFieldWithDefault(msg, 77, ""),
    currency: jspb.Message.getFieldWithDefault(msg, 78, ""),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    description: jspb.Message.getFieldWithDefault(msg, 80, ""),
    features: msg.getFeatures_asB64(),
    routes: (f = msg.getRoutes()) && cln_primitives_pb.DecodeRoutehintList.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DecodeResponse}
 */
proto.cln.DecodeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DecodeResponse;
  return proto.cln.DecodeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DecodeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DecodeResponse}
 */
proto.cln.DecodeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.DecodeResponse.DecodeType} */ (reader.readEnum());
      msg.setItemType(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setValid(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOfferId(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addOfferChains(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOfferMetadata(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setOfferCurrency(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningUnknownOfferCurrency(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCurrencyMinorUnit(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOfferAmount(value);
      break;
    case 10:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setOfferAmountMsat(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setOfferDescription(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setOfferIssuer(value);
      break;
    case 13:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOfferFeatures(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOfferAbsoluteExpiry(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOfferQuantityMax(value);
      break;
    case 16:
      var value = new proto.cln.DecodeOffer_paths;
      reader.readMessage(value,proto.cln.DecodeOffer_paths.deserializeBinaryFromReader);
      msg.addOfferPaths(value);
      break;
    case 17:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOfferNodeId(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningMissingOfferNodeId(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningInvalidOfferDescription(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningMissingOfferDescription(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningInvalidOfferCurrency(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningInvalidOfferIssuer(value);
      break;
    case 25:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInvreqMetadata(value);
      break;
    case 26:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInvreqPayerId(value);
      break;
    case 27:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInvreqChain(value);
      break;
    case 28:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setInvreqAmountMsat(value);
      break;
    case 29:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInvreqFeatures(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInvreqQuantity(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvreqPayerNote(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setInvreqRecurrenceCounter(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setInvreqRecurrenceStart(value);
      break;
    case 35:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningMissingInvreqMetadata(value);
      break;
    case 36:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningMissingInvreqPayerId(value);
      break;
    case 37:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningInvalidInvreqPayerNote(value);
      break;
    case 38:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningMissingInvoiceRequestSignature(value);
      break;
    case 39:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningInvalidInvoiceRequestSignature(value);
      break;
    case 41:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInvoiceCreatedAt(value);
      break;
    case 42:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setInvoiceRelativeExpiry(value);
      break;
    case 43:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInvoicePaymentHash(value);
      break;
    case 44:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setInvoiceAmountMsat(value);
      break;
    case 45:
      var value = new proto.cln.DecodeInvoice_fallbacks;
      reader.readMessage(value,proto.cln.DecodeInvoice_fallbacks.deserializeBinaryFromReader);
      msg.addInvoiceFallbacks(value);
      break;
    case 46:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInvoiceFeatures(value);
      break;
    case 47:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInvoiceNodeId(value);
      break;
    case 48:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInvoiceRecurrenceBasetime(value);
      break;
    case 50:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningMissingInvoicePaths(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningMissingInvoiceBlindedpay(value);
      break;
    case 52:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningMissingInvoiceCreatedAt(value);
      break;
    case 53:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningMissingInvoicePaymentHash(value);
      break;
    case 54:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningMissingInvoiceAmount(value);
      break;
    case 55:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningMissingInvoiceRecurrenceBasetime(value);
      break;
    case 56:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningMissingInvoiceNodeId(value);
      break;
    case 57:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningMissingInvoiceSignature(value);
      break;
    case 58:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningInvalidInvoiceSignature(value);
      break;
    case 59:
      var value = new proto.cln.DecodeFallbacks;
      reader.readMessage(value,proto.cln.DecodeFallbacks.deserializeBinaryFromReader);
      msg.addFallbacks(value);
      break;
    case 60:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedAt(value);
      break;
    case 61:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExpiry(value);
      break;
    case 62:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPayee(value);
      break;
    case 63:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 64:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDescriptionHash(value);
      break;
    case 65:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinFinalCltvExpiry(value);
      break;
    case 66:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentSecret(value);
      break;
    case 67:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentMetadata(value);
      break;
    case 69:
      var value = new proto.cln.DecodeExtra;
      reader.readMessage(value,proto.cln.DecodeExtra.deserializeBinaryFromReader);
      msg.addExtra(value);
      break;
    case 70:
      var value = /** @type {string} */ (reader.readString());
      msg.setUniqueId(value);
      break;
    case 71:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 72:
      var value = /** @type {string} */ (reader.readString());
      msg.setString(value);
      break;
    case 73:
      var value = new proto.cln.DecodeRestrictions;
      reader.readMessage(value,proto.cln.DecodeRestrictions.deserializeBinaryFromReader);
      msg.addRestrictions(value);
      break;
    case 74:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningRuneInvalidUtf8(value);
      break;
    case 75:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHex(value);
      break;
    case 76:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDecrypted(value);
      break;
    case 77:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignature(value);
      break;
    case 78:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 79:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 80:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 81:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFeatures(value);
      break;
    case 82:
      var value = new cln_primitives_pb.DecodeRoutehintList;
      reader.readMessage(value,cln_primitives_pb.DecodeRoutehintList.deserializeBinaryFromReader);
      msg.setRoutes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DecodeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DecodeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getValid();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getOfferChainsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      4,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getOfferAmountMsat();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBytes(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeUint64(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint64(
      15,
      f
    );
  }
  f = message.getOfferPathsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      16,
      f,
      proto.cln.DecodeOffer_paths.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeBytes(
      17,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeString(
      20,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeString(
      21,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeString(
      22,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeString(
      23,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeString(
      24,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeBytes(
      25,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeBytes(
      26,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 27));
  if (f != null) {
    writer.writeBytes(
      27,
      f
    );
  }
  f = message.getInvreqAmountMsat();
  if (f != null) {
    writer.writeMessage(
      28,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 29));
  if (f != null) {
    writer.writeBytes(
      29,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 30));
  if (f != null) {
    writer.writeUint64(
      30,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 31));
  if (f != null) {
    writer.writeString(
      31,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 32));
  if (f != null) {
    writer.writeUint32(
      32,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 33));
  if (f != null) {
    writer.writeUint32(
      33,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 35));
  if (f != null) {
    writer.writeString(
      35,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 36));
  if (f != null) {
    writer.writeString(
      36,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 37));
  if (f != null) {
    writer.writeString(
      37,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 38));
  if (f != null) {
    writer.writeString(
      38,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 39));
  if (f != null) {
    writer.writeString(
      39,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 41));
  if (f != null) {
    writer.writeUint64(
      41,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 42));
  if (f != null) {
    writer.writeUint32(
      42,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 43));
  if (f != null) {
    writer.writeBytes(
      43,
      f
    );
  }
  f = message.getInvoiceAmountMsat();
  if (f != null) {
    writer.writeMessage(
      44,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getInvoiceFallbacksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      45,
      f,
      proto.cln.DecodeInvoice_fallbacks.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 46));
  if (f != null) {
    writer.writeBytes(
      46,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 47));
  if (f != null) {
    writer.writeBytes(
      47,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 48));
  if (f != null) {
    writer.writeUint64(
      48,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 50));
  if (f != null) {
    writer.writeString(
      50,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 51));
  if (f != null) {
    writer.writeString(
      51,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 52));
  if (f != null) {
    writer.writeString(
      52,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 53));
  if (f != null) {
    writer.writeString(
      53,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 54));
  if (f != null) {
    writer.writeString(
      54,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 55));
  if (f != null) {
    writer.writeString(
      55,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 56));
  if (f != null) {
    writer.writeString(
      56,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 57));
  if (f != null) {
    writer.writeString(
      57,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 58));
  if (f != null) {
    writer.writeString(
      58,
      f
    );
  }
  f = message.getFallbacksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      59,
      f,
      proto.cln.DecodeFallbacks.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 60));
  if (f != null) {
    writer.writeUint64(
      60,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 61));
  if (f != null) {
    writer.writeUint64(
      61,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 62));
  if (f != null) {
    writer.writeBytes(
      62,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 63));
  if (f != null) {
    writer.writeBytes(
      63,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 64));
  if (f != null) {
    writer.writeBytes(
      64,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 65));
  if (f != null) {
    writer.writeUint32(
      65,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 66));
  if (f != null) {
    writer.writeBytes(
      66,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 67));
  if (f != null) {
    writer.writeBytes(
      67,
      f
    );
  }
  f = message.getExtraList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      69,
      f,
      proto.cln.DecodeExtra.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 70));
  if (f != null) {
    writer.writeString(
      70,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 71));
  if (f != null) {
    writer.writeString(
      71,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 72));
  if (f != null) {
    writer.writeString(
      72,
      f
    );
  }
  f = message.getRestrictionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      73,
      f,
      proto.cln.DecodeRestrictions.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 74));
  if (f != null) {
    writer.writeString(
      74,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 75));
  if (f != null) {
    writer.writeBytes(
      75,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 76));
  if (f != null) {
    writer.writeBytes(
      76,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 77));
  if (f != null) {
    writer.writeString(
      77,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 78));
  if (f != null) {
    writer.writeString(
      78,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      79,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 80));
  if (f != null) {
    writer.writeString(
      80,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 81));
  if (f != null) {
    writer.writeBytes(
      81,
      f
    );
  }
  f = message.getRoutes();
  if (f != null) {
    writer.writeMessage(
      82,
      f,
      cln_primitives_pb.DecodeRoutehintList.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.DecodeResponse.DecodeType = {
  BOLT12_OFFER: 0,
  BOLT12_INVOICE: 1,
  BOLT12_INVOICE_REQUEST: 2,
  BOLT11_INVOICE: 3,
  RUNE: 4,
  EMERGENCY_RECOVER: 5
};

/**
 * optional DecodeType item_type = 1;
 * @return {!proto.cln.DecodeResponse.DecodeType}
 */
proto.cln.DecodeResponse.prototype.getItemType = function() {
  return /** @type {!proto.cln.DecodeResponse.DecodeType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.DecodeResponse.DecodeType} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setItemType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional bool valid = 2;
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.getValid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setValid = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bytes offer_id = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeResponse.prototype.getOfferId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes offer_id = 3;
 * This is a type-conversion wrapper around `getOfferId()`
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getOfferId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOfferId()));
};


/**
 * optional bytes offer_id = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOfferId()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.getOfferId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOfferId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setOfferId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearOfferId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasOfferId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated bytes offer_chains = 4;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.cln.DecodeResponse.prototype.getOfferChainsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * repeated bytes offer_chains = 4;
 * This is a type-conversion wrapper around `getOfferChainsList()`
 * @return {!Array<string>}
 */
proto.cln.DecodeResponse.prototype.getOfferChainsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getOfferChainsList()));
};


/**
 * repeated bytes offer_chains = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOfferChainsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.cln.DecodeResponse.prototype.getOfferChainsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getOfferChainsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setOfferChainsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.addOfferChains = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearOfferChainsList = function() {
  return this.setOfferChainsList([]);
};


/**
 * optional bytes offer_metadata = 5;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeResponse.prototype.getOfferMetadata = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes offer_metadata = 5;
 * This is a type-conversion wrapper around `getOfferMetadata()`
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getOfferMetadata_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOfferMetadata()));
};


/**
 * optional bytes offer_metadata = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOfferMetadata()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.getOfferMetadata_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOfferMetadata()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setOfferMetadata = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearOfferMetadata = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasOfferMetadata = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string offer_currency = 6;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getOfferCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setOfferCurrency = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearOfferCurrency = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasOfferCurrency = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string warning_unknown_offer_currency = 7;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningUnknownOfferCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningUnknownOfferCurrency = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningUnknownOfferCurrency = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningUnknownOfferCurrency = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 currency_minor_unit = 8;
 * @return {number}
 */
proto.cln.DecodeResponse.prototype.getCurrencyMinorUnit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setCurrencyMinorUnit = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearCurrencyMinorUnit = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasCurrencyMinorUnit = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint64 offer_amount = 9;
 * @return {number}
 */
proto.cln.DecodeResponse.prototype.getOfferAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setOfferAmount = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearOfferAmount = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasOfferAmount = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Amount offer_amount_msat = 10;
 * @return {?proto.cln.Amount}
 */
proto.cln.DecodeResponse.prototype.getOfferAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 10));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.DecodeResponse} returns this
*/
proto.cln.DecodeResponse.prototype.setOfferAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearOfferAmountMsat = function() {
  return this.setOfferAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasOfferAmountMsat = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string offer_description = 11;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getOfferDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setOfferDescription = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearOfferDescription = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasOfferDescription = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string offer_issuer = 12;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getOfferIssuer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setOfferIssuer = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearOfferIssuer = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasOfferIssuer = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bytes offer_features = 13;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeResponse.prototype.getOfferFeatures = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * optional bytes offer_features = 13;
 * This is a type-conversion wrapper around `getOfferFeatures()`
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getOfferFeatures_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOfferFeatures()));
};


/**
 * optional bytes offer_features = 13;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOfferFeatures()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.getOfferFeatures_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOfferFeatures()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setOfferFeatures = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearOfferFeatures = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasOfferFeatures = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional uint64 offer_absolute_expiry = 14;
 * @return {number}
 */
proto.cln.DecodeResponse.prototype.getOfferAbsoluteExpiry = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setOfferAbsoluteExpiry = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearOfferAbsoluteExpiry = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasOfferAbsoluteExpiry = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional uint64 offer_quantity_max = 15;
 * @return {number}
 */
proto.cln.DecodeResponse.prototype.getOfferQuantityMax = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setOfferQuantityMax = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearOfferQuantityMax = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasOfferQuantityMax = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * repeated DecodeOffer_paths offer_paths = 16;
 * @return {!Array<!proto.cln.DecodeOffer_paths>}
 */
proto.cln.DecodeResponse.prototype.getOfferPathsList = function() {
  return /** @type{!Array<!proto.cln.DecodeOffer_paths>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.DecodeOffer_paths, 16));
};


/**
 * @param {!Array<!proto.cln.DecodeOffer_paths>} value
 * @return {!proto.cln.DecodeResponse} returns this
*/
proto.cln.DecodeResponse.prototype.setOfferPathsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 16, value);
};


/**
 * @param {!proto.cln.DecodeOffer_paths=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.DecodeOffer_paths}
 */
proto.cln.DecodeResponse.prototype.addOfferPaths = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.cln.DecodeOffer_paths, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearOfferPathsList = function() {
  return this.setOfferPathsList([]);
};


/**
 * optional bytes offer_node_id = 17;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeResponse.prototype.getOfferNodeId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * optional bytes offer_node_id = 17;
 * This is a type-conversion wrapper around `getOfferNodeId()`
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getOfferNodeId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOfferNodeId()));
};


/**
 * optional bytes offer_node_id = 17;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOfferNodeId()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.getOfferNodeId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOfferNodeId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setOfferNodeId = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearOfferNodeId = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasOfferNodeId = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional string warning_missing_offer_node_id = 20;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningMissingOfferNodeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningMissingOfferNodeId = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningMissingOfferNodeId = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningMissingOfferNodeId = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional string warning_invalid_offer_description = 21;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningInvalidOfferDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningInvalidOfferDescription = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningInvalidOfferDescription = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningInvalidOfferDescription = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional string warning_missing_offer_description = 22;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningMissingOfferDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningMissingOfferDescription = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningMissingOfferDescription = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningMissingOfferDescription = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional string warning_invalid_offer_currency = 23;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningInvalidOfferCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningInvalidOfferCurrency = function(value) {
  return jspb.Message.setField(this, 23, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningInvalidOfferCurrency = function() {
  return jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningInvalidOfferCurrency = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional string warning_invalid_offer_issuer = 24;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningInvalidOfferIssuer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningInvalidOfferIssuer = function(value) {
  return jspb.Message.setField(this, 24, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningInvalidOfferIssuer = function() {
  return jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningInvalidOfferIssuer = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional bytes invreq_metadata = 25;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeResponse.prototype.getInvreqMetadata = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * optional bytes invreq_metadata = 25;
 * This is a type-conversion wrapper around `getInvreqMetadata()`
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getInvreqMetadata_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInvreqMetadata()));
};


/**
 * optional bytes invreq_metadata = 25;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInvreqMetadata()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.getInvreqMetadata_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInvreqMetadata()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setInvreqMetadata = function(value) {
  return jspb.Message.setField(this, 25, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearInvreqMetadata = function() {
  return jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasInvreqMetadata = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional bytes invreq_payer_id = 26;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeResponse.prototype.getInvreqPayerId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * optional bytes invreq_payer_id = 26;
 * This is a type-conversion wrapper around `getInvreqPayerId()`
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getInvreqPayerId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInvreqPayerId()));
};


/**
 * optional bytes invreq_payer_id = 26;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInvreqPayerId()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.getInvreqPayerId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInvreqPayerId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setInvreqPayerId = function(value) {
  return jspb.Message.setField(this, 26, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearInvreqPayerId = function() {
  return jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasInvreqPayerId = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional bytes invreq_chain = 27;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeResponse.prototype.getInvreqChain = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * optional bytes invreq_chain = 27;
 * This is a type-conversion wrapper around `getInvreqChain()`
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getInvreqChain_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInvreqChain()));
};


/**
 * optional bytes invreq_chain = 27;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInvreqChain()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.getInvreqChain_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInvreqChain()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setInvreqChain = function(value) {
  return jspb.Message.setField(this, 27, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearInvreqChain = function() {
  return jspb.Message.setField(this, 27, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasInvreqChain = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional Amount invreq_amount_msat = 28;
 * @return {?proto.cln.Amount}
 */
proto.cln.DecodeResponse.prototype.getInvreqAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 28));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.DecodeResponse} returns this
*/
proto.cln.DecodeResponse.prototype.setInvreqAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 28, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearInvreqAmountMsat = function() {
  return this.setInvreqAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasInvreqAmountMsat = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional bytes invreq_features = 29;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeResponse.prototype.getInvreqFeatures = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 29, ""));
};


/**
 * optional bytes invreq_features = 29;
 * This is a type-conversion wrapper around `getInvreqFeatures()`
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getInvreqFeatures_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInvreqFeatures()));
};


/**
 * optional bytes invreq_features = 29;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInvreqFeatures()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.getInvreqFeatures_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInvreqFeatures()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setInvreqFeatures = function(value) {
  return jspb.Message.setField(this, 29, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearInvreqFeatures = function() {
  return jspb.Message.setField(this, 29, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasInvreqFeatures = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional uint64 invreq_quantity = 30;
 * @return {number}
 */
proto.cln.DecodeResponse.prototype.getInvreqQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 30, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setInvreqQuantity = function(value) {
  return jspb.Message.setField(this, 30, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearInvreqQuantity = function() {
  return jspb.Message.setField(this, 30, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasInvreqQuantity = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional string invreq_payer_note = 31;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getInvreqPayerNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setInvreqPayerNote = function(value) {
  return jspb.Message.setField(this, 31, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearInvreqPayerNote = function() {
  return jspb.Message.setField(this, 31, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasInvreqPayerNote = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional uint32 invreq_recurrence_counter = 32;
 * @return {number}
 */
proto.cln.DecodeResponse.prototype.getInvreqRecurrenceCounter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 32, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setInvreqRecurrenceCounter = function(value) {
  return jspb.Message.setField(this, 32, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearInvreqRecurrenceCounter = function() {
  return jspb.Message.setField(this, 32, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasInvreqRecurrenceCounter = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional uint32 invreq_recurrence_start = 33;
 * @return {number}
 */
proto.cln.DecodeResponse.prototype.getInvreqRecurrenceStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 33, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setInvreqRecurrenceStart = function(value) {
  return jspb.Message.setField(this, 33, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearInvreqRecurrenceStart = function() {
  return jspb.Message.setField(this, 33, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasInvreqRecurrenceStart = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * optional string warning_missing_invreq_metadata = 35;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningMissingInvreqMetadata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 35, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningMissingInvreqMetadata = function(value) {
  return jspb.Message.setField(this, 35, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningMissingInvreqMetadata = function() {
  return jspb.Message.setField(this, 35, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningMissingInvreqMetadata = function() {
  return jspb.Message.getField(this, 35) != null;
};


/**
 * optional string warning_missing_invreq_payer_id = 36;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningMissingInvreqPayerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 36, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningMissingInvreqPayerId = function(value) {
  return jspb.Message.setField(this, 36, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningMissingInvreqPayerId = function() {
  return jspb.Message.setField(this, 36, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningMissingInvreqPayerId = function() {
  return jspb.Message.getField(this, 36) != null;
};


/**
 * optional string warning_invalid_invreq_payer_note = 37;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningInvalidInvreqPayerNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 37, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningInvalidInvreqPayerNote = function(value) {
  return jspb.Message.setField(this, 37, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningInvalidInvreqPayerNote = function() {
  return jspb.Message.setField(this, 37, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningInvalidInvreqPayerNote = function() {
  return jspb.Message.getField(this, 37) != null;
};


/**
 * optional string warning_missing_invoice_request_signature = 38;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningMissingInvoiceRequestSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 38, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningMissingInvoiceRequestSignature = function(value) {
  return jspb.Message.setField(this, 38, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningMissingInvoiceRequestSignature = function() {
  return jspb.Message.setField(this, 38, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningMissingInvoiceRequestSignature = function() {
  return jspb.Message.getField(this, 38) != null;
};


/**
 * optional string warning_invalid_invoice_request_signature = 39;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningInvalidInvoiceRequestSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 39, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningInvalidInvoiceRequestSignature = function(value) {
  return jspb.Message.setField(this, 39, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningInvalidInvoiceRequestSignature = function() {
  return jspb.Message.setField(this, 39, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningInvalidInvoiceRequestSignature = function() {
  return jspb.Message.getField(this, 39) != null;
};


/**
 * optional uint64 invoice_created_at = 41;
 * @return {number}
 */
proto.cln.DecodeResponse.prototype.getInvoiceCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 41, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setInvoiceCreatedAt = function(value) {
  return jspb.Message.setField(this, 41, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearInvoiceCreatedAt = function() {
  return jspb.Message.setField(this, 41, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasInvoiceCreatedAt = function() {
  return jspb.Message.getField(this, 41) != null;
};


/**
 * optional uint32 invoice_relative_expiry = 42;
 * @return {number}
 */
proto.cln.DecodeResponse.prototype.getInvoiceRelativeExpiry = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 42, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setInvoiceRelativeExpiry = function(value) {
  return jspb.Message.setField(this, 42, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearInvoiceRelativeExpiry = function() {
  return jspb.Message.setField(this, 42, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasInvoiceRelativeExpiry = function() {
  return jspb.Message.getField(this, 42) != null;
};


/**
 * optional bytes invoice_payment_hash = 43;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeResponse.prototype.getInvoicePaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 43, ""));
};


/**
 * optional bytes invoice_payment_hash = 43;
 * This is a type-conversion wrapper around `getInvoicePaymentHash()`
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getInvoicePaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInvoicePaymentHash()));
};


/**
 * optional bytes invoice_payment_hash = 43;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInvoicePaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.getInvoicePaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInvoicePaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setInvoicePaymentHash = function(value) {
  return jspb.Message.setField(this, 43, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearInvoicePaymentHash = function() {
  return jspb.Message.setField(this, 43, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasInvoicePaymentHash = function() {
  return jspb.Message.getField(this, 43) != null;
};


/**
 * optional Amount invoice_amount_msat = 44;
 * @return {?proto.cln.Amount}
 */
proto.cln.DecodeResponse.prototype.getInvoiceAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 44));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.DecodeResponse} returns this
*/
proto.cln.DecodeResponse.prototype.setInvoiceAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 44, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearInvoiceAmountMsat = function() {
  return this.setInvoiceAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasInvoiceAmountMsat = function() {
  return jspb.Message.getField(this, 44) != null;
};


/**
 * repeated DecodeInvoice_fallbacks invoice_fallbacks = 45;
 * @return {!Array<!proto.cln.DecodeInvoice_fallbacks>}
 */
proto.cln.DecodeResponse.prototype.getInvoiceFallbacksList = function() {
  return /** @type{!Array<!proto.cln.DecodeInvoice_fallbacks>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.DecodeInvoice_fallbacks, 45));
};


/**
 * @param {!Array<!proto.cln.DecodeInvoice_fallbacks>} value
 * @return {!proto.cln.DecodeResponse} returns this
*/
proto.cln.DecodeResponse.prototype.setInvoiceFallbacksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 45, value);
};


/**
 * @param {!proto.cln.DecodeInvoice_fallbacks=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.DecodeInvoice_fallbacks}
 */
proto.cln.DecodeResponse.prototype.addInvoiceFallbacks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 45, opt_value, proto.cln.DecodeInvoice_fallbacks, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearInvoiceFallbacksList = function() {
  return this.setInvoiceFallbacksList([]);
};


/**
 * optional bytes invoice_features = 46;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeResponse.prototype.getInvoiceFeatures = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 46, ""));
};


/**
 * optional bytes invoice_features = 46;
 * This is a type-conversion wrapper around `getInvoiceFeatures()`
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getInvoiceFeatures_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInvoiceFeatures()));
};


/**
 * optional bytes invoice_features = 46;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInvoiceFeatures()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.getInvoiceFeatures_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInvoiceFeatures()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setInvoiceFeatures = function(value) {
  return jspb.Message.setField(this, 46, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearInvoiceFeatures = function() {
  return jspb.Message.setField(this, 46, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasInvoiceFeatures = function() {
  return jspb.Message.getField(this, 46) != null;
};


/**
 * optional bytes invoice_node_id = 47;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeResponse.prototype.getInvoiceNodeId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 47, ""));
};


/**
 * optional bytes invoice_node_id = 47;
 * This is a type-conversion wrapper around `getInvoiceNodeId()`
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getInvoiceNodeId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInvoiceNodeId()));
};


/**
 * optional bytes invoice_node_id = 47;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInvoiceNodeId()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.getInvoiceNodeId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInvoiceNodeId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setInvoiceNodeId = function(value) {
  return jspb.Message.setField(this, 47, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearInvoiceNodeId = function() {
  return jspb.Message.setField(this, 47, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasInvoiceNodeId = function() {
  return jspb.Message.getField(this, 47) != null;
};


/**
 * optional uint64 invoice_recurrence_basetime = 48;
 * @return {number}
 */
proto.cln.DecodeResponse.prototype.getInvoiceRecurrenceBasetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 48, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setInvoiceRecurrenceBasetime = function(value) {
  return jspb.Message.setField(this, 48, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearInvoiceRecurrenceBasetime = function() {
  return jspb.Message.setField(this, 48, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasInvoiceRecurrenceBasetime = function() {
  return jspb.Message.getField(this, 48) != null;
};


/**
 * optional string warning_missing_invoice_paths = 50;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningMissingInvoicePaths = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 50, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningMissingInvoicePaths = function(value) {
  return jspb.Message.setField(this, 50, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningMissingInvoicePaths = function() {
  return jspb.Message.setField(this, 50, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningMissingInvoicePaths = function() {
  return jspb.Message.getField(this, 50) != null;
};


/**
 * optional string warning_missing_invoice_blindedpay = 51;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningMissingInvoiceBlindedpay = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningMissingInvoiceBlindedpay = function(value) {
  return jspb.Message.setField(this, 51, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningMissingInvoiceBlindedpay = function() {
  return jspb.Message.setField(this, 51, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningMissingInvoiceBlindedpay = function() {
  return jspb.Message.getField(this, 51) != null;
};


/**
 * optional string warning_missing_invoice_created_at = 52;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningMissingInvoiceCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 52, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningMissingInvoiceCreatedAt = function(value) {
  return jspb.Message.setField(this, 52, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningMissingInvoiceCreatedAt = function() {
  return jspb.Message.setField(this, 52, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningMissingInvoiceCreatedAt = function() {
  return jspb.Message.getField(this, 52) != null;
};


/**
 * optional string warning_missing_invoice_payment_hash = 53;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningMissingInvoicePaymentHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 53, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningMissingInvoicePaymentHash = function(value) {
  return jspb.Message.setField(this, 53, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningMissingInvoicePaymentHash = function() {
  return jspb.Message.setField(this, 53, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningMissingInvoicePaymentHash = function() {
  return jspb.Message.getField(this, 53) != null;
};


/**
 * optional string warning_missing_invoice_amount = 54;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningMissingInvoiceAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 54, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningMissingInvoiceAmount = function(value) {
  return jspb.Message.setField(this, 54, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningMissingInvoiceAmount = function() {
  return jspb.Message.setField(this, 54, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningMissingInvoiceAmount = function() {
  return jspb.Message.getField(this, 54) != null;
};


/**
 * optional string warning_missing_invoice_recurrence_basetime = 55;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningMissingInvoiceRecurrenceBasetime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 55, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningMissingInvoiceRecurrenceBasetime = function(value) {
  return jspb.Message.setField(this, 55, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningMissingInvoiceRecurrenceBasetime = function() {
  return jspb.Message.setField(this, 55, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningMissingInvoiceRecurrenceBasetime = function() {
  return jspb.Message.getField(this, 55) != null;
};


/**
 * optional string warning_missing_invoice_node_id = 56;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningMissingInvoiceNodeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 56, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningMissingInvoiceNodeId = function(value) {
  return jspb.Message.setField(this, 56, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningMissingInvoiceNodeId = function() {
  return jspb.Message.setField(this, 56, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningMissingInvoiceNodeId = function() {
  return jspb.Message.getField(this, 56) != null;
};


/**
 * optional string warning_missing_invoice_signature = 57;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningMissingInvoiceSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 57, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningMissingInvoiceSignature = function(value) {
  return jspb.Message.setField(this, 57, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningMissingInvoiceSignature = function() {
  return jspb.Message.setField(this, 57, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningMissingInvoiceSignature = function() {
  return jspb.Message.getField(this, 57) != null;
};


/**
 * optional string warning_invalid_invoice_signature = 58;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningInvalidInvoiceSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 58, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningInvalidInvoiceSignature = function(value) {
  return jspb.Message.setField(this, 58, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningInvalidInvoiceSignature = function() {
  return jspb.Message.setField(this, 58, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningInvalidInvoiceSignature = function() {
  return jspb.Message.getField(this, 58) != null;
};


/**
 * repeated DecodeFallbacks fallbacks = 59;
 * @return {!Array<!proto.cln.DecodeFallbacks>}
 */
proto.cln.DecodeResponse.prototype.getFallbacksList = function() {
  return /** @type{!Array<!proto.cln.DecodeFallbacks>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.DecodeFallbacks, 59));
};


/**
 * @param {!Array<!proto.cln.DecodeFallbacks>} value
 * @return {!proto.cln.DecodeResponse} returns this
*/
proto.cln.DecodeResponse.prototype.setFallbacksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 59, value);
};


/**
 * @param {!proto.cln.DecodeFallbacks=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.DecodeFallbacks}
 */
proto.cln.DecodeResponse.prototype.addFallbacks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 59, opt_value, proto.cln.DecodeFallbacks, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearFallbacksList = function() {
  return this.setFallbacksList([]);
};


/**
 * optional uint64 created_at = 60;
 * @return {number}
 */
proto.cln.DecodeResponse.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 60, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setCreatedAt = function(value) {
  return jspb.Message.setField(this, 60, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearCreatedAt = function() {
  return jspb.Message.setField(this, 60, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 60) != null;
};


/**
 * optional uint64 expiry = 61;
 * @return {number}
 */
proto.cln.DecodeResponse.prototype.getExpiry = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 61, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setExpiry = function(value) {
  return jspb.Message.setField(this, 61, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearExpiry = function() {
  return jspb.Message.setField(this, 61, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasExpiry = function() {
  return jspb.Message.getField(this, 61) != null;
};


/**
 * optional bytes payee = 62;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeResponse.prototype.getPayee = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 62, ""));
};


/**
 * optional bytes payee = 62;
 * This is a type-conversion wrapper around `getPayee()`
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getPayee_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPayee()));
};


/**
 * optional bytes payee = 62;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPayee()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.getPayee_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPayee()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setPayee = function(value) {
  return jspb.Message.setField(this, 62, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearPayee = function() {
  return jspb.Message.setField(this, 62, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasPayee = function() {
  return jspb.Message.getField(this, 62) != null;
};


/**
 * optional bytes payment_hash = 63;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeResponse.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 63, ""));
};


/**
 * optional bytes payment_hash = 63;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 63;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setPaymentHash = function(value) {
  return jspb.Message.setField(this, 63, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearPaymentHash = function() {
  return jspb.Message.setField(this, 63, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasPaymentHash = function() {
  return jspb.Message.getField(this, 63) != null;
};


/**
 * optional bytes description_hash = 64;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeResponse.prototype.getDescriptionHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 64, ""));
};


/**
 * optional bytes description_hash = 64;
 * This is a type-conversion wrapper around `getDescriptionHash()`
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getDescriptionHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDescriptionHash()));
};


/**
 * optional bytes description_hash = 64;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDescriptionHash()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.getDescriptionHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDescriptionHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setDescriptionHash = function(value) {
  return jspb.Message.setField(this, 64, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearDescriptionHash = function() {
  return jspb.Message.setField(this, 64, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasDescriptionHash = function() {
  return jspb.Message.getField(this, 64) != null;
};


/**
 * optional uint32 min_final_cltv_expiry = 65;
 * @return {number}
 */
proto.cln.DecodeResponse.prototype.getMinFinalCltvExpiry = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 65, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setMinFinalCltvExpiry = function(value) {
  return jspb.Message.setField(this, 65, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearMinFinalCltvExpiry = function() {
  return jspb.Message.setField(this, 65, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasMinFinalCltvExpiry = function() {
  return jspb.Message.getField(this, 65) != null;
};


/**
 * optional bytes payment_secret = 66;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeResponse.prototype.getPaymentSecret = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 66, ""));
};


/**
 * optional bytes payment_secret = 66;
 * This is a type-conversion wrapper around `getPaymentSecret()`
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getPaymentSecret_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentSecret()));
};


/**
 * optional bytes payment_secret = 66;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentSecret()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.getPaymentSecret_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentSecret()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setPaymentSecret = function(value) {
  return jspb.Message.setField(this, 66, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearPaymentSecret = function() {
  return jspb.Message.setField(this, 66, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasPaymentSecret = function() {
  return jspb.Message.getField(this, 66) != null;
};


/**
 * optional bytes payment_metadata = 67;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeResponse.prototype.getPaymentMetadata = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 67, ""));
};


/**
 * optional bytes payment_metadata = 67;
 * This is a type-conversion wrapper around `getPaymentMetadata()`
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getPaymentMetadata_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentMetadata()));
};


/**
 * optional bytes payment_metadata = 67;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentMetadata()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.getPaymentMetadata_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentMetadata()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setPaymentMetadata = function(value) {
  return jspb.Message.setField(this, 67, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearPaymentMetadata = function() {
  return jspb.Message.setField(this, 67, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasPaymentMetadata = function() {
  return jspb.Message.getField(this, 67) != null;
};


/**
 * repeated DecodeExtra extra = 69;
 * @return {!Array<!proto.cln.DecodeExtra>}
 */
proto.cln.DecodeResponse.prototype.getExtraList = function() {
  return /** @type{!Array<!proto.cln.DecodeExtra>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.DecodeExtra, 69));
};


/**
 * @param {!Array<!proto.cln.DecodeExtra>} value
 * @return {!proto.cln.DecodeResponse} returns this
*/
proto.cln.DecodeResponse.prototype.setExtraList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 69, value);
};


/**
 * @param {!proto.cln.DecodeExtra=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.DecodeExtra}
 */
proto.cln.DecodeResponse.prototype.addExtra = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 69, opt_value, proto.cln.DecodeExtra, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearExtraList = function() {
  return this.setExtraList([]);
};


/**
 * optional string unique_id = 70;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getUniqueId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 70, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setUniqueId = function(value) {
  return jspb.Message.setField(this, 70, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearUniqueId = function() {
  return jspb.Message.setField(this, 70, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasUniqueId = function() {
  return jspb.Message.getField(this, 70) != null;
};


/**
 * optional string version = 71;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 71, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setVersion = function(value) {
  return jspb.Message.setField(this, 71, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearVersion = function() {
  return jspb.Message.setField(this, 71, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasVersion = function() {
  return jspb.Message.getField(this, 71) != null;
};


/**
 * optional string string = 72;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 72, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setString = function(value) {
  return jspb.Message.setField(this, 72, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearString = function() {
  return jspb.Message.setField(this, 72, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasString = function() {
  return jspb.Message.getField(this, 72) != null;
};


/**
 * repeated DecodeRestrictions restrictions = 73;
 * @return {!Array<!proto.cln.DecodeRestrictions>}
 */
proto.cln.DecodeResponse.prototype.getRestrictionsList = function() {
  return /** @type{!Array<!proto.cln.DecodeRestrictions>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.DecodeRestrictions, 73));
};


/**
 * @param {!Array<!proto.cln.DecodeRestrictions>} value
 * @return {!proto.cln.DecodeResponse} returns this
*/
proto.cln.DecodeResponse.prototype.setRestrictionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 73, value);
};


/**
 * @param {!proto.cln.DecodeRestrictions=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.DecodeRestrictions}
 */
proto.cln.DecodeResponse.prototype.addRestrictions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 73, opt_value, proto.cln.DecodeRestrictions, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearRestrictionsList = function() {
  return this.setRestrictionsList([]);
};


/**
 * optional string warning_rune_invalid_utf8 = 74;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningRuneInvalidUtf8 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 74, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningRuneInvalidUtf8 = function(value) {
  return jspb.Message.setField(this, 74, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningRuneInvalidUtf8 = function() {
  return jspb.Message.setField(this, 74, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningRuneInvalidUtf8 = function() {
  return jspb.Message.getField(this, 74) != null;
};


/**
 * optional bytes hex = 75;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeResponse.prototype.getHex = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 75, ""));
};


/**
 * optional bytes hex = 75;
 * This is a type-conversion wrapper around `getHex()`
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getHex_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHex()));
};


/**
 * optional bytes hex = 75;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHex()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.getHex_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHex()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setHex = function(value) {
  return jspb.Message.setField(this, 75, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearHex = function() {
  return jspb.Message.setField(this, 75, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasHex = function() {
  return jspb.Message.getField(this, 75) != null;
};


/**
 * optional bytes decrypted = 76;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeResponse.prototype.getDecrypted = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 76, ""));
};


/**
 * optional bytes decrypted = 76;
 * This is a type-conversion wrapper around `getDecrypted()`
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getDecrypted_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDecrypted()));
};


/**
 * optional bytes decrypted = 76;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDecrypted()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.getDecrypted_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDecrypted()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setDecrypted = function(value) {
  return jspb.Message.setField(this, 76, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearDecrypted = function() {
  return jspb.Message.setField(this, 76, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasDecrypted = function() {
  return jspb.Message.getField(this, 76) != null;
};


/**
 * optional string signature = 77;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 77, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setSignature = function(value) {
  return jspb.Message.setField(this, 77, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearSignature = function() {
  return jspb.Message.setField(this, 77, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasSignature = function() {
  return jspb.Message.getField(this, 77) != null;
};


/**
 * optional string currency = 78;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 78, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setCurrency = function(value) {
  return jspb.Message.setField(this, 78, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearCurrency = function() {
  return jspb.Message.setField(this, 78, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasCurrency = function() {
  return jspb.Message.getField(this, 78) != null;
};


/**
 * optional Amount amount_msat = 79;
 * @return {?proto.cln.Amount}
 */
proto.cln.DecodeResponse.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 79));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.DecodeResponse} returns this
*/
proto.cln.DecodeResponse.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 79, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 79) != null;
};


/**
 * optional string description = 80;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 80, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 80, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 80, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 80) != null;
};


/**
 * optional bytes features = 81;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeResponse.prototype.getFeatures = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 81, ""));
};


/**
 * optional bytes features = 81;
 * This is a type-conversion wrapper around `getFeatures()`
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getFeatures_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFeatures()));
};


/**
 * optional bytes features = 81;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFeatures()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.getFeatures_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFeatures()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setFeatures = function(value) {
  return jspb.Message.setField(this, 81, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearFeatures = function() {
  return jspb.Message.setField(this, 81, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasFeatures = function() {
  return jspb.Message.getField(this, 81) != null;
};


/**
 * optional DecodeRoutehintList routes = 82;
 * @return {?proto.cln.DecodeRoutehintList}
 */
proto.cln.DecodeResponse.prototype.getRoutes = function() {
  return /** @type{?proto.cln.DecodeRoutehintList} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.DecodeRoutehintList, 82));
};


/**
 * @param {?proto.cln.DecodeRoutehintList|undefined} value
 * @return {!proto.cln.DecodeResponse} returns this
*/
proto.cln.DecodeResponse.prototype.setRoutes = function(value) {
  return jspb.Message.setWrapperField(this, 82, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearRoutes = function() {
  return this.setRoutes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasRoutes = function() {
  return jspb.Message.getField(this, 82) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DecodeOffer_paths.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DecodeOffer_paths.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DecodeOffer_paths} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodeOffer_paths.toObject = function(includeInstance, msg) {
  var f, obj = {
    firstNodeId: msg.getFirstNodeId_asB64(),
    blinding: msg.getBlinding_asB64(),
    firstScidDir: jspb.Message.getFieldWithDefault(msg, 4, 0),
    firstScid: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DecodeOffer_paths}
 */
proto.cln.DecodeOffer_paths.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DecodeOffer_paths;
  return proto.cln.DecodeOffer_paths.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DecodeOffer_paths} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DecodeOffer_paths}
 */
proto.cln.DecodeOffer_paths.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFirstNodeId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBlinding(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFirstScidDir(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstScid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DecodeOffer_paths.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DecodeOffer_paths.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DecodeOffer_paths} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodeOffer_paths.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getBlinding_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional bytes first_node_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeOffer_paths.prototype.getFirstNodeId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes first_node_id = 1;
 * This is a type-conversion wrapper around `getFirstNodeId()`
 * @return {string}
 */
proto.cln.DecodeOffer_paths.prototype.getFirstNodeId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFirstNodeId()));
};


/**
 * optional bytes first_node_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFirstNodeId()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeOffer_paths.prototype.getFirstNodeId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFirstNodeId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeOffer_paths} returns this
 */
proto.cln.DecodeOffer_paths.prototype.setFirstNodeId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeOffer_paths} returns this
 */
proto.cln.DecodeOffer_paths.prototype.clearFirstNodeId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeOffer_paths.prototype.hasFirstNodeId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes blinding = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeOffer_paths.prototype.getBlinding = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes blinding = 2;
 * This is a type-conversion wrapper around `getBlinding()`
 * @return {string}
 */
proto.cln.DecodeOffer_paths.prototype.getBlinding_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBlinding()));
};


/**
 * optional bytes blinding = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBlinding()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeOffer_paths.prototype.getBlinding_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBlinding()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeOffer_paths} returns this
 */
proto.cln.DecodeOffer_paths.prototype.setBlinding = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional uint32 first_scid_dir = 4;
 * @return {number}
 */
proto.cln.DecodeOffer_paths.prototype.getFirstScidDir = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodeOffer_paths} returns this
 */
proto.cln.DecodeOffer_paths.prototype.setFirstScidDir = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeOffer_paths} returns this
 */
proto.cln.DecodeOffer_paths.prototype.clearFirstScidDir = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeOffer_paths.prototype.hasFirstScidDir = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string first_scid = 5;
 * @return {string}
 */
proto.cln.DecodeOffer_paths.prototype.getFirstScid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeOffer_paths} returns this
 */
proto.cln.DecodeOffer_paths.prototype.setFirstScid = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeOffer_paths} returns this
 */
proto.cln.DecodeOffer_paths.prototype.clearFirstScid = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeOffer_paths.prototype.hasFirstScid = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DecodeOffer_recurrencePaywindow.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DecodeOffer_recurrencePaywindow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DecodeOffer_recurrencePaywindow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodeOffer_recurrencePaywindow.toObject = function(includeInstance, msg) {
  var f, obj = {
    secondsBefore: jspb.Message.getFieldWithDefault(msg, 1, 0),
    secondsAfter: jspb.Message.getFieldWithDefault(msg, 2, 0),
    proportionalAmount: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DecodeOffer_recurrencePaywindow}
 */
proto.cln.DecodeOffer_recurrencePaywindow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DecodeOffer_recurrencePaywindow;
  return proto.cln.DecodeOffer_recurrencePaywindow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DecodeOffer_recurrencePaywindow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DecodeOffer_recurrencePaywindow}
 */
proto.cln.DecodeOffer_recurrencePaywindow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSecondsBefore(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSecondsAfter(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setProportionalAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DecodeOffer_recurrencePaywindow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DecodeOffer_recurrencePaywindow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DecodeOffer_recurrencePaywindow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodeOffer_recurrencePaywindow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecondsBefore();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getSecondsAfter();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional uint32 seconds_before = 1;
 * @return {number}
 */
proto.cln.DecodeOffer_recurrencePaywindow.prototype.getSecondsBefore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodeOffer_recurrencePaywindow} returns this
 */
proto.cln.DecodeOffer_recurrencePaywindow.prototype.setSecondsBefore = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 seconds_after = 2;
 * @return {number}
 */
proto.cln.DecodeOffer_recurrencePaywindow.prototype.getSecondsAfter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodeOffer_recurrencePaywindow} returns this
 */
proto.cln.DecodeOffer_recurrencePaywindow.prototype.setSecondsAfter = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool proportional_amount = 3;
 * @return {boolean}
 */
proto.cln.DecodeOffer_recurrencePaywindow.prototype.getProportionalAmount = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.DecodeOffer_recurrencePaywindow} returns this
 */
proto.cln.DecodeOffer_recurrencePaywindow.prototype.setProportionalAmount = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeOffer_recurrencePaywindow} returns this
 */
proto.cln.DecodeOffer_recurrencePaywindow.prototype.clearProportionalAmount = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeOffer_recurrencePaywindow.prototype.hasProportionalAmount = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DecodeInvoice_pathsPath.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DecodeInvoice_pathsPath.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DecodeInvoice_pathsPath} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodeInvoice_pathsPath.toObject = function(includeInstance, msg) {
  var f, obj = {
    blindedNodeId: msg.getBlindedNodeId_asB64(),
    encryptedRecipientData: msg.getEncryptedRecipientData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DecodeInvoice_pathsPath}
 */
proto.cln.DecodeInvoice_pathsPath.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DecodeInvoice_pathsPath;
  return proto.cln.DecodeInvoice_pathsPath.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DecodeInvoice_pathsPath} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DecodeInvoice_pathsPath}
 */
proto.cln.DecodeInvoice_pathsPath.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBlindedNodeId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setEncryptedRecipientData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DecodeInvoice_pathsPath.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DecodeInvoice_pathsPath.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DecodeInvoice_pathsPath} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodeInvoice_pathsPath.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlindedNodeId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getEncryptedRecipientData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional bytes blinded_node_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeInvoice_pathsPath.prototype.getBlindedNodeId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes blinded_node_id = 1;
 * This is a type-conversion wrapper around `getBlindedNodeId()`
 * @return {string}
 */
proto.cln.DecodeInvoice_pathsPath.prototype.getBlindedNodeId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBlindedNodeId()));
};


/**
 * optional bytes blinded_node_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBlindedNodeId()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeInvoice_pathsPath.prototype.getBlindedNodeId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBlindedNodeId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeInvoice_pathsPath} returns this
 */
proto.cln.DecodeInvoice_pathsPath.prototype.setBlindedNodeId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes encrypted_recipient_data = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeInvoice_pathsPath.prototype.getEncryptedRecipientData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes encrypted_recipient_data = 2;
 * This is a type-conversion wrapper around `getEncryptedRecipientData()`
 * @return {string}
 */
proto.cln.DecodeInvoice_pathsPath.prototype.getEncryptedRecipientData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getEncryptedRecipientData()));
};


/**
 * optional bytes encrypted_recipient_data = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getEncryptedRecipientData()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeInvoice_pathsPath.prototype.getEncryptedRecipientData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getEncryptedRecipientData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeInvoice_pathsPath} returns this
 */
proto.cln.DecodeInvoice_pathsPath.prototype.setEncryptedRecipientData = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DecodeInvoice_fallbacks.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DecodeInvoice_fallbacks.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DecodeInvoice_fallbacks} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodeInvoice_fallbacks.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: jspb.Message.getFieldWithDefault(msg, 1, 0),
    hex: msg.getHex_asB64(),
    address: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DecodeInvoice_fallbacks}
 */
proto.cln.DecodeInvoice_fallbacks.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DecodeInvoice_fallbacks;
  return proto.cln.DecodeInvoice_fallbacks.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DecodeInvoice_fallbacks} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DecodeInvoice_fallbacks}
 */
proto.cln.DecodeInvoice_fallbacks.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVersion(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHex(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DecodeInvoice_fallbacks.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DecodeInvoice_fallbacks.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DecodeInvoice_fallbacks} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodeInvoice_fallbacks.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersion();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getHex_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional uint32 version = 1;
 * @return {number}
 */
proto.cln.DecodeInvoice_fallbacks.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodeInvoice_fallbacks} returns this
 */
proto.cln.DecodeInvoice_fallbacks.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bytes hex = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeInvoice_fallbacks.prototype.getHex = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes hex = 2;
 * This is a type-conversion wrapper around `getHex()`
 * @return {string}
 */
proto.cln.DecodeInvoice_fallbacks.prototype.getHex_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHex()));
};


/**
 * optional bytes hex = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHex()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeInvoice_fallbacks.prototype.getHex_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHex()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeInvoice_fallbacks} returns this
 */
proto.cln.DecodeInvoice_fallbacks.prototype.setHex = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string address = 3;
 * @return {string}
 */
proto.cln.DecodeInvoice_fallbacks.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeInvoice_fallbacks} returns this
 */
proto.cln.DecodeInvoice_fallbacks.prototype.setAddress = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeInvoice_fallbacks} returns this
 */
proto.cln.DecodeInvoice_fallbacks.prototype.clearAddress = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeInvoice_fallbacks.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DecodeFallbacks.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DecodeFallbacks.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DecodeFallbacks} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodeFallbacks.toObject = function(includeInstance, msg) {
  var f, obj = {
    warningInvoiceFallbacksVersionInvalid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    itemType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    addr: jspb.Message.getFieldWithDefault(msg, 3, ""),
    hex: msg.getHex_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DecodeFallbacks}
 */
proto.cln.DecodeFallbacks.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DecodeFallbacks;
  return proto.cln.DecodeFallbacks.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DecodeFallbacks} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DecodeFallbacks}
 */
proto.cln.DecodeFallbacks.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningInvoiceFallbacksVersionInvalid(value);
      break;
    case 2:
      var value = /** @type {!proto.cln.DecodeFallbacks.DecodeFallbacksType} */ (reader.readEnum());
      msg.setItemType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddr(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DecodeFallbacks.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DecodeFallbacks.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DecodeFallbacks} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodeFallbacks.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getItemType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getHex_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.DecodeFallbacks.DecodeFallbacksType = {
  P2PKH: 0,
  P2SH: 1,
  P2WPKH: 2,
  P2WSH: 3,
  P2TR: 4
};

/**
 * optional string warning_invoice_fallbacks_version_invalid = 1;
 * @return {string}
 */
proto.cln.DecodeFallbacks.prototype.getWarningInvoiceFallbacksVersionInvalid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeFallbacks} returns this
 */
proto.cln.DecodeFallbacks.prototype.setWarningInvoiceFallbacksVersionInvalid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeFallbacks} returns this
 */
proto.cln.DecodeFallbacks.prototype.clearWarningInvoiceFallbacksVersionInvalid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeFallbacks.prototype.hasWarningInvoiceFallbacksVersionInvalid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional DecodeFallbacksType item_type = 2;
 * @return {!proto.cln.DecodeFallbacks.DecodeFallbacksType}
 */
proto.cln.DecodeFallbacks.prototype.getItemType = function() {
  return /** @type {!proto.cln.DecodeFallbacks.DecodeFallbacksType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.cln.DecodeFallbacks.DecodeFallbacksType} value
 * @return {!proto.cln.DecodeFallbacks} returns this
 */
proto.cln.DecodeFallbacks.prototype.setItemType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string addr = 3;
 * @return {string}
 */
proto.cln.DecodeFallbacks.prototype.getAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeFallbacks} returns this
 */
proto.cln.DecodeFallbacks.prototype.setAddr = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeFallbacks} returns this
 */
proto.cln.DecodeFallbacks.prototype.clearAddr = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeFallbacks.prototype.hasAddr = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bytes hex = 4;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeFallbacks.prototype.getHex = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes hex = 4;
 * This is a type-conversion wrapper around `getHex()`
 * @return {string}
 */
proto.cln.DecodeFallbacks.prototype.getHex_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHex()));
};


/**
 * optional bytes hex = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHex()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeFallbacks.prototype.getHex_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHex()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeFallbacks} returns this
 */
proto.cln.DecodeFallbacks.prototype.setHex = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DecodeExtra.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DecodeExtra.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DecodeExtra} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodeExtra.toObject = function(includeInstance, msg) {
  var f, obj = {
    tag: jspb.Message.getFieldWithDefault(msg, 1, ""),
    data: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DecodeExtra}
 */
proto.cln.DecodeExtra.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DecodeExtra;
  return proto.cln.DecodeExtra.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DecodeExtra} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DecodeExtra}
 */
proto.cln.DecodeExtra.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTag(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DecodeExtra.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DecodeExtra.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DecodeExtra} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodeExtra.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTag();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getData();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string tag = 1;
 * @return {string}
 */
proto.cln.DecodeExtra.prototype.getTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeExtra} returns this
 */
proto.cln.DecodeExtra.prototype.setTag = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string data = 2;
 * @return {string}
 */
proto.cln.DecodeExtra.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeExtra} returns this
 */
proto.cln.DecodeExtra.prototype.setData = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.DecodeRestrictions.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DecodeRestrictions.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DecodeRestrictions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DecodeRestrictions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodeRestrictions.toObject = function(includeInstance, msg) {
  var f, obj = {
    alternativesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    summary: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DecodeRestrictions}
 */
proto.cln.DecodeRestrictions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DecodeRestrictions;
  return proto.cln.DecodeRestrictions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DecodeRestrictions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DecodeRestrictions}
 */
proto.cln.DecodeRestrictions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addAlternatives(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSummary(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DecodeRestrictions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DecodeRestrictions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DecodeRestrictions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodeRestrictions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAlternativesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getSummary();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated string alternatives = 1;
 * @return {!Array<string>}
 */
proto.cln.DecodeRestrictions.prototype.getAlternativesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.DecodeRestrictions} returns this
 */
proto.cln.DecodeRestrictions.prototype.setAlternativesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.DecodeRestrictions} returns this
 */
proto.cln.DecodeRestrictions.prototype.addAlternatives = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.DecodeRestrictions} returns this
 */
proto.cln.DecodeRestrictions.prototype.clearAlternativesList = function() {
  return this.setAlternativesList([]);
};


/**
 * optional string summary = 2;
 * @return {string}
 */
proto.cln.DecodeRestrictions.prototype.getSummary = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeRestrictions} returns this
 */
proto.cln.DecodeRestrictions.prototype.setSummary = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DelpayRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DelpayRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DelpayRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DelpayRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentHash: msg.getPaymentHash_asB64(),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    partid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    groupid: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DelpayRequest}
 */
proto.cln.DelpayRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DelpayRequest;
  return proto.cln.DelpayRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DelpayRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DelpayRequest}
 */
proto.cln.DelpayRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 2:
      var value = /** @type {!proto.cln.DelpayRequest.DelpayStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPartid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGroupid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DelpayRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DelpayRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DelpayRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DelpayRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint64(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.DelpayRequest.DelpayStatus = {
  COMPLETE: 0,
  FAILED: 1
};

/**
 * optional bytes payment_hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DelpayRequest.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes payment_hash = 1;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.DelpayRequest.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.DelpayRequest.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DelpayRequest} returns this
 */
proto.cln.DelpayRequest.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional DelpayStatus status = 2;
 * @return {!proto.cln.DelpayRequest.DelpayStatus}
 */
proto.cln.DelpayRequest.prototype.getStatus = function() {
  return /** @type {!proto.cln.DelpayRequest.DelpayStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.cln.DelpayRequest.DelpayStatus} value
 * @return {!proto.cln.DelpayRequest} returns this
 */
proto.cln.DelpayRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional uint64 partid = 3;
 * @return {number}
 */
proto.cln.DelpayRequest.prototype.getPartid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DelpayRequest} returns this
 */
proto.cln.DelpayRequest.prototype.setPartid = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DelpayRequest} returns this
 */
proto.cln.DelpayRequest.prototype.clearPartid = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelpayRequest.prototype.hasPartid = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 groupid = 4;
 * @return {number}
 */
proto.cln.DelpayRequest.prototype.getGroupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DelpayRequest} returns this
 */
proto.cln.DelpayRequest.prototype.setGroupid = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DelpayRequest} returns this
 */
proto.cln.DelpayRequest.prototype.clearGroupid = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelpayRequest.prototype.hasGroupid = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.DelpayResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DelpayResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DelpayResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DelpayResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DelpayResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentsList: jspb.Message.toObjectList(msg.getPaymentsList(),
    proto.cln.DelpayPayments.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DelpayResponse}
 */
proto.cln.DelpayResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DelpayResponse;
  return proto.cln.DelpayResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DelpayResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DelpayResponse}
 */
proto.cln.DelpayResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.DelpayPayments;
      reader.readMessage(value,proto.cln.DelpayPayments.deserializeBinaryFromReader);
      msg.addPayments(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DelpayResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DelpayResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DelpayResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DelpayResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.DelpayPayments.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DelpayPayments payments = 1;
 * @return {!Array<!proto.cln.DelpayPayments>}
 */
proto.cln.DelpayResponse.prototype.getPaymentsList = function() {
  return /** @type{!Array<!proto.cln.DelpayPayments>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.DelpayPayments, 1));
};


/**
 * @param {!Array<!proto.cln.DelpayPayments>} value
 * @return {!proto.cln.DelpayResponse} returns this
*/
proto.cln.DelpayResponse.prototype.setPaymentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.DelpayPayments=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.DelpayPayments}
 */
proto.cln.DelpayResponse.prototype.addPayments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.DelpayPayments, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.DelpayResponse} returns this
 */
proto.cln.DelpayResponse.prototype.clearPaymentsList = function() {
  return this.setPaymentsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DelpayPayments.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DelpayPayments.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DelpayPayments} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DelpayPayments.toObject = function(includeInstance, msg) {
  var f, obj = {
    createdIndex: jspb.Message.getFieldWithDefault(msg, 1, 0),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0),
    paymentHash: msg.getPaymentHash_asB64(),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0),
    amountSentMsat: (f = msg.getAmountSentMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    partid: jspb.Message.getFieldWithDefault(msg, 6, 0),
    destination: msg.getDestination_asB64(),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    createdAt: jspb.Message.getFieldWithDefault(msg, 9, 0),
    updatedIndex: jspb.Message.getFieldWithDefault(msg, 10, 0),
    completedAt: jspb.Message.getFieldWithDefault(msg, 11, 0),
    groupid: jspb.Message.getFieldWithDefault(msg, 12, 0),
    paymentPreimage: msg.getPaymentPreimage_asB64(),
    label: jspb.Message.getFieldWithDefault(msg, 14, ""),
    bolt11: jspb.Message.getFieldWithDefault(msg, 15, ""),
    bolt12: jspb.Message.getFieldWithDefault(msg, 16, ""),
    erroronion: msg.getErroronion_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DelpayPayments}
 */
proto.cln.DelpayPayments.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DelpayPayments;
  return proto.cln.DelpayPayments.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DelpayPayments} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DelpayPayments}
 */
proto.cln.DelpayPayments.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedIndex(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 4:
      var value = /** @type {!proto.cln.DelpayPayments.DelpayPaymentsStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 5:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountSentMsat(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPartid(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDestination(value);
      break;
    case 8:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedAt(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpdatedIndex(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCompletedAt(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGroupid(value);
      break;
    case 13:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentPreimage(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt12(value);
      break;
    case 17:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setErroronion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DelpayPayments.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DelpayPayments.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DelpayPayments} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DelpayPayments.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getAmountSentMsat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBytes(
      7,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBytes(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeString(
      15,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeString(
      16,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeBytes(
      17,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.DelpayPayments.DelpayPaymentsStatus = {
  PENDING: 0,
  FAILED: 1,
  COMPLETE: 2
};

/**
 * optional uint64 created_index = 1;
 * @return {number}
 */
proto.cln.DelpayPayments.prototype.getCreatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DelpayPayments} returns this
 */
proto.cln.DelpayPayments.prototype.setCreatedIndex = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DelpayPayments} returns this
 */
proto.cln.DelpayPayments.prototype.clearCreatedIndex = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelpayPayments.prototype.hasCreatedIndex = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 id = 2;
 * @return {number}
 */
proto.cln.DelpayPayments.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DelpayPayments} returns this
 */
proto.cln.DelpayPayments.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bytes payment_hash = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DelpayPayments.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes payment_hash = 3;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.DelpayPayments.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.DelpayPayments.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DelpayPayments} returns this
 */
proto.cln.DelpayPayments.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional DelpayPaymentsStatus status = 4;
 * @return {!proto.cln.DelpayPayments.DelpayPaymentsStatus}
 */
proto.cln.DelpayPayments.prototype.getStatus = function() {
  return /** @type {!proto.cln.DelpayPayments.DelpayPaymentsStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.cln.DelpayPayments.DelpayPaymentsStatus} value
 * @return {!proto.cln.DelpayPayments} returns this
 */
proto.cln.DelpayPayments.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional Amount amount_sent_msat = 5;
 * @return {?proto.cln.Amount}
 */
proto.cln.DelpayPayments.prototype.getAmountSentMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 5));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.DelpayPayments} returns this
*/
proto.cln.DelpayPayments.prototype.setAmountSentMsat = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.DelpayPayments} returns this
 */
proto.cln.DelpayPayments.prototype.clearAmountSentMsat = function() {
  return this.setAmountSentMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelpayPayments.prototype.hasAmountSentMsat = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint64 partid = 6;
 * @return {number}
 */
proto.cln.DelpayPayments.prototype.getPartid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DelpayPayments} returns this
 */
proto.cln.DelpayPayments.prototype.setPartid = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DelpayPayments} returns this
 */
proto.cln.DelpayPayments.prototype.clearPartid = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelpayPayments.prototype.hasPartid = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bytes destination = 7;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DelpayPayments.prototype.getDestination = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes destination = 7;
 * This is a type-conversion wrapper around `getDestination()`
 * @return {string}
 */
proto.cln.DelpayPayments.prototype.getDestination_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDestination()));
};


/**
 * optional bytes destination = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDestination()`
 * @return {!Uint8Array}
 */
proto.cln.DelpayPayments.prototype.getDestination_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDestination()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DelpayPayments} returns this
 */
proto.cln.DelpayPayments.prototype.setDestination = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DelpayPayments} returns this
 */
proto.cln.DelpayPayments.prototype.clearDestination = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelpayPayments.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Amount amount_msat = 8;
 * @return {?proto.cln.Amount}
 */
proto.cln.DelpayPayments.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 8));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.DelpayPayments} returns this
*/
proto.cln.DelpayPayments.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.DelpayPayments} returns this
 */
proto.cln.DelpayPayments.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelpayPayments.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint64 created_at = 9;
 * @return {number}
 */
proto.cln.DelpayPayments.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DelpayPayments} returns this
 */
proto.cln.DelpayPayments.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional uint64 updated_index = 10;
 * @return {number}
 */
proto.cln.DelpayPayments.prototype.getUpdatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DelpayPayments} returns this
 */
proto.cln.DelpayPayments.prototype.setUpdatedIndex = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DelpayPayments} returns this
 */
proto.cln.DelpayPayments.prototype.clearUpdatedIndex = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelpayPayments.prototype.hasUpdatedIndex = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint64 completed_at = 11;
 * @return {number}
 */
proto.cln.DelpayPayments.prototype.getCompletedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DelpayPayments} returns this
 */
proto.cln.DelpayPayments.prototype.setCompletedAt = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DelpayPayments} returns this
 */
proto.cln.DelpayPayments.prototype.clearCompletedAt = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelpayPayments.prototype.hasCompletedAt = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint64 groupid = 12;
 * @return {number}
 */
proto.cln.DelpayPayments.prototype.getGroupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DelpayPayments} returns this
 */
proto.cln.DelpayPayments.prototype.setGroupid = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DelpayPayments} returns this
 */
proto.cln.DelpayPayments.prototype.clearGroupid = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelpayPayments.prototype.hasGroupid = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bytes payment_preimage = 13;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DelpayPayments.prototype.getPaymentPreimage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * optional bytes payment_preimage = 13;
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {string}
 */
proto.cln.DelpayPayments.prototype.getPaymentPreimage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentPreimage()));
};


/**
 * optional bytes payment_preimage = 13;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {!Uint8Array}
 */
proto.cln.DelpayPayments.prototype.getPaymentPreimage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentPreimage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DelpayPayments} returns this
 */
proto.cln.DelpayPayments.prototype.setPaymentPreimage = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DelpayPayments} returns this
 */
proto.cln.DelpayPayments.prototype.clearPaymentPreimage = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelpayPayments.prototype.hasPaymentPreimage = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string label = 14;
 * @return {string}
 */
proto.cln.DelpayPayments.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DelpayPayments} returns this
 */
proto.cln.DelpayPayments.prototype.setLabel = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DelpayPayments} returns this
 */
proto.cln.DelpayPayments.prototype.clearLabel = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelpayPayments.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string bolt11 = 15;
 * @return {string}
 */
proto.cln.DelpayPayments.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DelpayPayments} returns this
 */
proto.cln.DelpayPayments.prototype.setBolt11 = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DelpayPayments} returns this
 */
proto.cln.DelpayPayments.prototype.clearBolt11 = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelpayPayments.prototype.hasBolt11 = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional string bolt12 = 16;
 * @return {string}
 */
proto.cln.DelpayPayments.prototype.getBolt12 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DelpayPayments} returns this
 */
proto.cln.DelpayPayments.prototype.setBolt12 = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DelpayPayments} returns this
 */
proto.cln.DelpayPayments.prototype.clearBolt12 = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelpayPayments.prototype.hasBolt12 = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional bytes erroronion = 17;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DelpayPayments.prototype.getErroronion = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * optional bytes erroronion = 17;
 * This is a type-conversion wrapper around `getErroronion()`
 * @return {string}
 */
proto.cln.DelpayPayments.prototype.getErroronion_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getErroronion()));
};


/**
 * optional bytes erroronion = 17;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getErroronion()`
 * @return {!Uint8Array}
 */
proto.cln.DelpayPayments.prototype.getErroronion_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getErroronion()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DelpayPayments} returns this
 */
proto.cln.DelpayPayments.prototype.setErroronion = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DelpayPayments} returns this
 */
proto.cln.DelpayPayments.prototype.clearErroronion = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelpayPayments.prototype.hasErroronion = function() {
  return jspb.Message.getField(this, 17) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DelforwardRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DelforwardRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DelforwardRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DelforwardRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    inChannel: jspb.Message.getFieldWithDefault(msg, 1, ""),
    inHtlcId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    status: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DelforwardRequest}
 */
proto.cln.DelforwardRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DelforwardRequest;
  return proto.cln.DelforwardRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DelforwardRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DelforwardRequest}
 */
proto.cln.DelforwardRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInChannel(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInHtlcId(value);
      break;
    case 3:
      var value = /** @type {!proto.cln.DelforwardRequest.DelforwardStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DelforwardRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DelforwardRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DelforwardRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DelforwardRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInChannel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInHtlcId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.DelforwardRequest.DelforwardStatus = {
  SETTLED: 0,
  LOCAL_FAILED: 1,
  FAILED: 2
};

/**
 * optional string in_channel = 1;
 * @return {string}
 */
proto.cln.DelforwardRequest.prototype.getInChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DelforwardRequest} returns this
 */
proto.cln.DelforwardRequest.prototype.setInChannel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 in_htlc_id = 2;
 * @return {number}
 */
proto.cln.DelforwardRequest.prototype.getInHtlcId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DelforwardRequest} returns this
 */
proto.cln.DelforwardRequest.prototype.setInHtlcId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional DelforwardStatus status = 3;
 * @return {!proto.cln.DelforwardRequest.DelforwardStatus}
 */
proto.cln.DelforwardRequest.prototype.getStatus = function() {
  return /** @type {!proto.cln.DelforwardRequest.DelforwardStatus} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.cln.DelforwardRequest.DelforwardStatus} value
 * @return {!proto.cln.DelforwardRequest} returns this
 */
proto.cln.DelforwardRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DelforwardResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DelforwardResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DelforwardResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DelforwardResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DelforwardResponse}
 */
proto.cln.DelforwardResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DelforwardResponse;
  return proto.cln.DelforwardResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DelforwardResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DelforwardResponse}
 */
proto.cln.DelforwardResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DelforwardResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DelforwardResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DelforwardResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DelforwardResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DisableofferRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DisableofferRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DisableofferRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DisableofferRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    offerId: msg.getOfferId_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DisableofferRequest}
 */
proto.cln.DisableofferRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DisableofferRequest;
  return proto.cln.DisableofferRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DisableofferRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DisableofferRequest}
 */
proto.cln.DisableofferRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOfferId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DisableofferRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DisableofferRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DisableofferRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DisableofferRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOfferId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes offer_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DisableofferRequest.prototype.getOfferId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes offer_id = 1;
 * This is a type-conversion wrapper around `getOfferId()`
 * @return {string}
 */
proto.cln.DisableofferRequest.prototype.getOfferId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOfferId()));
};


/**
 * optional bytes offer_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOfferId()`
 * @return {!Uint8Array}
 */
proto.cln.DisableofferRequest.prototype.getOfferId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOfferId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DisableofferRequest} returns this
 */
proto.cln.DisableofferRequest.prototype.setOfferId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DisableofferResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DisableofferResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DisableofferResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DisableofferResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    offerId: msg.getOfferId_asB64(),
    active: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    singleUse: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    bolt12: jspb.Message.getFieldWithDefault(msg, 4, ""),
    used: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    label: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DisableofferResponse}
 */
proto.cln.DisableofferResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DisableofferResponse;
  return proto.cln.DisableofferResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DisableofferResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DisableofferResponse}
 */
proto.cln.DisableofferResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOfferId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSingleUse(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt12(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUsed(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DisableofferResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DisableofferResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DisableofferResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DisableofferResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOfferId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getSingleUse();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getBolt12();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUsed();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional bytes offer_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DisableofferResponse.prototype.getOfferId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes offer_id = 1;
 * This is a type-conversion wrapper around `getOfferId()`
 * @return {string}
 */
proto.cln.DisableofferResponse.prototype.getOfferId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOfferId()));
};


/**
 * optional bytes offer_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOfferId()`
 * @return {!Uint8Array}
 */
proto.cln.DisableofferResponse.prototype.getOfferId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOfferId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DisableofferResponse} returns this
 */
proto.cln.DisableofferResponse.prototype.setOfferId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bool active = 2;
 * @return {boolean}
 */
proto.cln.DisableofferResponse.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.DisableofferResponse} returns this
 */
proto.cln.DisableofferResponse.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool single_use = 3;
 * @return {boolean}
 */
proto.cln.DisableofferResponse.prototype.getSingleUse = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.DisableofferResponse} returns this
 */
proto.cln.DisableofferResponse.prototype.setSingleUse = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string bolt12 = 4;
 * @return {string}
 */
proto.cln.DisableofferResponse.prototype.getBolt12 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DisableofferResponse} returns this
 */
proto.cln.DisableofferResponse.prototype.setBolt12 = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool used = 5;
 * @return {boolean}
 */
proto.cln.DisableofferResponse.prototype.getUsed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.DisableofferResponse} returns this
 */
proto.cln.DisableofferResponse.prototype.setUsed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string label = 6;
 * @return {string}
 */
proto.cln.DisableofferResponse.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DisableofferResponse} returns this
 */
proto.cln.DisableofferResponse.prototype.setLabel = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DisableofferResponse} returns this
 */
proto.cln.DisableofferResponse.prototype.clearLabel = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DisableofferResponse.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DisconnectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DisconnectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DisconnectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DisconnectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64(),
    force: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DisconnectRequest}
 */
proto.cln.DisconnectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DisconnectRequest;
  return proto.cln.DisconnectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DisconnectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DisconnectRequest}
 */
proto.cln.DisconnectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForce(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DisconnectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DisconnectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DisconnectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DisconnectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional bytes id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DisconnectRequest.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes id = 1;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.cln.DisconnectRequest.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.cln.DisconnectRequest.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DisconnectRequest} returns this
 */
proto.cln.DisconnectRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bool force = 2;
 * @return {boolean}
 */
proto.cln.DisconnectRequest.prototype.getForce = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.DisconnectRequest} returns this
 */
proto.cln.DisconnectRequest.prototype.setForce = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DisconnectRequest} returns this
 */
proto.cln.DisconnectRequest.prototype.clearForce = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DisconnectRequest.prototype.hasForce = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DisconnectResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DisconnectResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DisconnectResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DisconnectResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DisconnectResponse}
 */
proto.cln.DisconnectResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DisconnectResponse;
  return proto.cln.DisconnectResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DisconnectResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DisconnectResponse}
 */
proto.cln.DisconnectResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DisconnectResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DisconnectResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DisconnectResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DisconnectResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.FeeratesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.FeeratesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.FeeratesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FeeratesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    style: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.FeeratesRequest}
 */
proto.cln.FeeratesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.FeeratesRequest;
  return proto.cln.FeeratesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.FeeratesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.FeeratesRequest}
 */
proto.cln.FeeratesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.FeeratesRequest.FeeratesStyle} */ (reader.readEnum());
      msg.setStyle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.FeeratesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.FeeratesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.FeeratesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FeeratesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStyle();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.FeeratesRequest.FeeratesStyle = {
  PERKB: 0,
  PERKW: 1
};

/**
 * optional FeeratesStyle style = 1;
 * @return {!proto.cln.FeeratesRequest.FeeratesStyle}
 */
proto.cln.FeeratesRequest.prototype.getStyle = function() {
  return /** @type {!proto.cln.FeeratesRequest.FeeratesStyle} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.FeeratesRequest.FeeratesStyle} value
 * @return {!proto.cln.FeeratesRequest} returns this
 */
proto.cln.FeeratesRequest.prototype.setStyle = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.FeeratesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.FeeratesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.FeeratesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FeeratesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    warningMissingFeerates: jspb.Message.getFieldWithDefault(msg, 1, ""),
    perkb: (f = msg.getPerkb()) && proto.cln.FeeratesPerkb.toObject(includeInstance, f),
    perkw: (f = msg.getPerkw()) && proto.cln.FeeratesPerkw.toObject(includeInstance, f),
    onchainFeeEstimates: (f = msg.getOnchainFeeEstimates()) && proto.cln.FeeratesOnchain_fee_estimates.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.FeeratesResponse}
 */
proto.cln.FeeratesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.FeeratesResponse;
  return proto.cln.FeeratesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.FeeratesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.FeeratesResponse}
 */
proto.cln.FeeratesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningMissingFeerates(value);
      break;
    case 2:
      var value = new proto.cln.FeeratesPerkb;
      reader.readMessage(value,proto.cln.FeeratesPerkb.deserializeBinaryFromReader);
      msg.setPerkb(value);
      break;
    case 3:
      var value = new proto.cln.FeeratesPerkw;
      reader.readMessage(value,proto.cln.FeeratesPerkw.deserializeBinaryFromReader);
      msg.setPerkw(value);
      break;
    case 4:
      var value = new proto.cln.FeeratesOnchain_fee_estimates;
      reader.readMessage(value,proto.cln.FeeratesOnchain_fee_estimates.deserializeBinaryFromReader);
      msg.setOnchainFeeEstimates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.FeeratesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.FeeratesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.FeeratesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FeeratesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPerkb();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cln.FeeratesPerkb.serializeBinaryToWriter
    );
  }
  f = message.getPerkw();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cln.FeeratesPerkw.serializeBinaryToWriter
    );
  }
  f = message.getOnchainFeeEstimates();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.cln.FeeratesOnchain_fee_estimates.serializeBinaryToWriter
    );
  }
};


/**
 * optional string warning_missing_feerates = 1;
 * @return {string}
 */
proto.cln.FeeratesResponse.prototype.getWarningMissingFeerates = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.FeeratesResponse} returns this
 */
proto.cln.FeeratesResponse.prototype.setWarningMissingFeerates = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesResponse} returns this
 */
proto.cln.FeeratesResponse.prototype.clearWarningMissingFeerates = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesResponse.prototype.hasWarningMissingFeerates = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional FeeratesPerkb perkb = 2;
 * @return {?proto.cln.FeeratesPerkb}
 */
proto.cln.FeeratesResponse.prototype.getPerkb = function() {
  return /** @type{?proto.cln.FeeratesPerkb} */ (
    jspb.Message.getWrapperField(this, proto.cln.FeeratesPerkb, 2));
};


/**
 * @param {?proto.cln.FeeratesPerkb|undefined} value
 * @return {!proto.cln.FeeratesResponse} returns this
*/
proto.cln.FeeratesResponse.prototype.setPerkb = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FeeratesResponse} returns this
 */
proto.cln.FeeratesResponse.prototype.clearPerkb = function() {
  return this.setPerkb(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesResponse.prototype.hasPerkb = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional FeeratesPerkw perkw = 3;
 * @return {?proto.cln.FeeratesPerkw}
 */
proto.cln.FeeratesResponse.prototype.getPerkw = function() {
  return /** @type{?proto.cln.FeeratesPerkw} */ (
    jspb.Message.getWrapperField(this, proto.cln.FeeratesPerkw, 3));
};


/**
 * @param {?proto.cln.FeeratesPerkw|undefined} value
 * @return {!proto.cln.FeeratesResponse} returns this
*/
proto.cln.FeeratesResponse.prototype.setPerkw = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FeeratesResponse} returns this
 */
proto.cln.FeeratesResponse.prototype.clearPerkw = function() {
  return this.setPerkw(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesResponse.prototype.hasPerkw = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional FeeratesOnchain_fee_estimates onchain_fee_estimates = 4;
 * @return {?proto.cln.FeeratesOnchain_fee_estimates}
 */
proto.cln.FeeratesResponse.prototype.getOnchainFeeEstimates = function() {
  return /** @type{?proto.cln.FeeratesOnchain_fee_estimates} */ (
    jspb.Message.getWrapperField(this, proto.cln.FeeratesOnchain_fee_estimates, 4));
};


/**
 * @param {?proto.cln.FeeratesOnchain_fee_estimates|undefined} value
 * @return {!proto.cln.FeeratesResponse} returns this
*/
proto.cln.FeeratesResponse.prototype.setOnchainFeeEstimates = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FeeratesResponse} returns this
 */
proto.cln.FeeratesResponse.prototype.clearOnchainFeeEstimates = function() {
  return this.setOnchainFeeEstimates(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesResponse.prototype.hasOnchainFeeEstimates = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.FeeratesPerkb.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.FeeratesPerkb.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.FeeratesPerkb.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.FeeratesPerkb} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FeeratesPerkb.toObject = function(includeInstance, msg) {
  var f, obj = {
    minAcceptable: jspb.Message.getFieldWithDefault(msg, 1, 0),
    maxAcceptable: jspb.Message.getFieldWithDefault(msg, 2, 0),
    opening: jspb.Message.getFieldWithDefault(msg, 3, 0),
    mutualClose: jspb.Message.getFieldWithDefault(msg, 4, 0),
    unilateralClose: jspb.Message.getFieldWithDefault(msg, 5, 0),
    delayedToUs: jspb.Message.getFieldWithDefault(msg, 6, 0),
    htlcResolution: jspb.Message.getFieldWithDefault(msg, 7, 0),
    penalty: jspb.Message.getFieldWithDefault(msg, 8, 0),
    estimatesList: jspb.Message.toObjectList(msg.getEstimatesList(),
    proto.cln.FeeratesPerkbEstimates.toObject, includeInstance),
    floor: jspb.Message.getFieldWithDefault(msg, 10, 0),
    unilateralAnchorClose: jspb.Message.getFieldWithDefault(msg, 11, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.FeeratesPerkb}
 */
proto.cln.FeeratesPerkb.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.FeeratesPerkb;
  return proto.cln.FeeratesPerkb.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.FeeratesPerkb} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.FeeratesPerkb}
 */
proto.cln.FeeratesPerkb.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinAcceptable(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxAcceptable(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOpening(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMutualClose(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUnilateralClose(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDelayedToUs(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHtlcResolution(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPenalty(value);
      break;
    case 9:
      var value = new proto.cln.FeeratesPerkbEstimates;
      reader.readMessage(value,proto.cln.FeeratesPerkbEstimates.deserializeBinaryFromReader);
      msg.addEstimates(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFloor(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUnilateralAnchorClose(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.FeeratesPerkb.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.FeeratesPerkb.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.FeeratesPerkb} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FeeratesPerkb.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMinAcceptable();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getMaxAcceptable();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getEstimatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.cln.FeeratesPerkbEstimates.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint32(
      11,
      f
    );
  }
};


/**
 * optional uint32 min_acceptable = 1;
 * @return {number}
 */
proto.cln.FeeratesPerkb.prototype.getMinAcceptable = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.setMinAcceptable = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 max_acceptable = 2;
 * @return {number}
 */
proto.cln.FeeratesPerkb.prototype.getMaxAcceptable = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.setMaxAcceptable = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 opening = 3;
 * @return {number}
 */
proto.cln.FeeratesPerkb.prototype.getOpening = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.setOpening = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.clearOpening = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkb.prototype.hasOpening = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 mutual_close = 4;
 * @return {number}
 */
proto.cln.FeeratesPerkb.prototype.getMutualClose = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.setMutualClose = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.clearMutualClose = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkb.prototype.hasMutualClose = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 unilateral_close = 5;
 * @return {number}
 */
proto.cln.FeeratesPerkb.prototype.getUnilateralClose = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.setUnilateralClose = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.clearUnilateralClose = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkb.prototype.hasUnilateralClose = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 delayed_to_us = 6;
 * @return {number}
 */
proto.cln.FeeratesPerkb.prototype.getDelayedToUs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.setDelayedToUs = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.clearDelayedToUs = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkb.prototype.hasDelayedToUs = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 htlc_resolution = 7;
 * @return {number}
 */
proto.cln.FeeratesPerkb.prototype.getHtlcResolution = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.setHtlcResolution = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.clearHtlcResolution = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkb.prototype.hasHtlcResolution = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 penalty = 8;
 * @return {number}
 */
proto.cln.FeeratesPerkb.prototype.getPenalty = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.setPenalty = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.clearPenalty = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkb.prototype.hasPenalty = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * repeated FeeratesPerkbEstimates estimates = 9;
 * @return {!Array<!proto.cln.FeeratesPerkbEstimates>}
 */
proto.cln.FeeratesPerkb.prototype.getEstimatesList = function() {
  return /** @type{!Array<!proto.cln.FeeratesPerkbEstimates>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.FeeratesPerkbEstimates, 9));
};


/**
 * @param {!Array<!proto.cln.FeeratesPerkbEstimates>} value
 * @return {!proto.cln.FeeratesPerkb} returns this
*/
proto.cln.FeeratesPerkb.prototype.setEstimatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.cln.FeeratesPerkbEstimates=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.FeeratesPerkbEstimates}
 */
proto.cln.FeeratesPerkb.prototype.addEstimates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.cln.FeeratesPerkbEstimates, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.clearEstimatesList = function() {
  return this.setEstimatesList([]);
};


/**
 * optional uint32 floor = 10;
 * @return {number}
 */
proto.cln.FeeratesPerkb.prototype.getFloor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.setFloor = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.clearFloor = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkb.prototype.hasFloor = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint32 unilateral_anchor_close = 11;
 * @return {number}
 */
proto.cln.FeeratesPerkb.prototype.getUnilateralAnchorClose = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.setUnilateralAnchorClose = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.clearUnilateralAnchorClose = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkb.prototype.hasUnilateralAnchorClose = function() {
  return jspb.Message.getField(this, 11) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.FeeratesPerkbEstimates.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.FeeratesPerkbEstimates.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.FeeratesPerkbEstimates} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FeeratesPerkbEstimates.toObject = function(includeInstance, msg) {
  var f, obj = {
    blockcount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    feerate: jspb.Message.getFieldWithDefault(msg, 2, 0),
    smoothedFeerate: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.FeeratesPerkbEstimates}
 */
proto.cln.FeeratesPerkbEstimates.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.FeeratesPerkbEstimates;
  return proto.cln.FeeratesPerkbEstimates.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.FeeratesPerkbEstimates} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.FeeratesPerkbEstimates}
 */
proto.cln.FeeratesPerkbEstimates.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBlockcount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFeerate(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSmoothedFeerate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.FeeratesPerkbEstimates.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.FeeratesPerkbEstimates.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.FeeratesPerkbEstimates} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FeeratesPerkbEstimates.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlockcount();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getFeerate();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getSmoothedFeerate();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional uint32 blockcount = 1;
 * @return {number}
 */
proto.cln.FeeratesPerkbEstimates.prototype.getBlockcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkbEstimates} returns this
 */
proto.cln.FeeratesPerkbEstimates.prototype.setBlockcount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 feerate = 2;
 * @return {number}
 */
proto.cln.FeeratesPerkbEstimates.prototype.getFeerate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkbEstimates} returns this
 */
proto.cln.FeeratesPerkbEstimates.prototype.setFeerate = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 smoothed_feerate = 3;
 * @return {number}
 */
proto.cln.FeeratesPerkbEstimates.prototype.getSmoothedFeerate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkbEstimates} returns this
 */
proto.cln.FeeratesPerkbEstimates.prototype.setSmoothedFeerate = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.FeeratesPerkw.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.FeeratesPerkw.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.FeeratesPerkw.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.FeeratesPerkw} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FeeratesPerkw.toObject = function(includeInstance, msg) {
  var f, obj = {
    minAcceptable: jspb.Message.getFieldWithDefault(msg, 1, 0),
    maxAcceptable: jspb.Message.getFieldWithDefault(msg, 2, 0),
    opening: jspb.Message.getFieldWithDefault(msg, 3, 0),
    mutualClose: jspb.Message.getFieldWithDefault(msg, 4, 0),
    unilateralClose: jspb.Message.getFieldWithDefault(msg, 5, 0),
    delayedToUs: jspb.Message.getFieldWithDefault(msg, 6, 0),
    htlcResolution: jspb.Message.getFieldWithDefault(msg, 7, 0),
    penalty: jspb.Message.getFieldWithDefault(msg, 8, 0),
    estimatesList: jspb.Message.toObjectList(msg.getEstimatesList(),
    proto.cln.FeeratesPerkwEstimates.toObject, includeInstance),
    floor: jspb.Message.getFieldWithDefault(msg, 10, 0),
    unilateralAnchorClose: jspb.Message.getFieldWithDefault(msg, 11, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.FeeratesPerkw}
 */
proto.cln.FeeratesPerkw.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.FeeratesPerkw;
  return proto.cln.FeeratesPerkw.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.FeeratesPerkw} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.FeeratesPerkw}
 */
proto.cln.FeeratesPerkw.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinAcceptable(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxAcceptable(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOpening(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMutualClose(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUnilateralClose(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDelayedToUs(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHtlcResolution(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPenalty(value);
      break;
    case 9:
      var value = new proto.cln.FeeratesPerkwEstimates;
      reader.readMessage(value,proto.cln.FeeratesPerkwEstimates.deserializeBinaryFromReader);
      msg.addEstimates(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFloor(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUnilateralAnchorClose(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.FeeratesPerkw.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.FeeratesPerkw.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.FeeratesPerkw} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FeeratesPerkw.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMinAcceptable();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getMaxAcceptable();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getEstimatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.cln.FeeratesPerkwEstimates.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint32(
      11,
      f
    );
  }
};


/**
 * optional uint32 min_acceptable = 1;
 * @return {number}
 */
proto.cln.FeeratesPerkw.prototype.getMinAcceptable = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.setMinAcceptable = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 max_acceptable = 2;
 * @return {number}
 */
proto.cln.FeeratesPerkw.prototype.getMaxAcceptable = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.setMaxAcceptable = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 opening = 3;
 * @return {number}
 */
proto.cln.FeeratesPerkw.prototype.getOpening = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.setOpening = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.clearOpening = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkw.prototype.hasOpening = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 mutual_close = 4;
 * @return {number}
 */
proto.cln.FeeratesPerkw.prototype.getMutualClose = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.setMutualClose = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.clearMutualClose = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkw.prototype.hasMutualClose = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 unilateral_close = 5;
 * @return {number}
 */
proto.cln.FeeratesPerkw.prototype.getUnilateralClose = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.setUnilateralClose = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.clearUnilateralClose = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkw.prototype.hasUnilateralClose = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 delayed_to_us = 6;
 * @return {number}
 */
proto.cln.FeeratesPerkw.prototype.getDelayedToUs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.setDelayedToUs = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.clearDelayedToUs = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkw.prototype.hasDelayedToUs = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 htlc_resolution = 7;
 * @return {number}
 */
proto.cln.FeeratesPerkw.prototype.getHtlcResolution = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.setHtlcResolution = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.clearHtlcResolution = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkw.prototype.hasHtlcResolution = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 penalty = 8;
 * @return {number}
 */
proto.cln.FeeratesPerkw.prototype.getPenalty = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.setPenalty = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.clearPenalty = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkw.prototype.hasPenalty = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * repeated FeeratesPerkwEstimates estimates = 9;
 * @return {!Array<!proto.cln.FeeratesPerkwEstimates>}
 */
proto.cln.FeeratesPerkw.prototype.getEstimatesList = function() {
  return /** @type{!Array<!proto.cln.FeeratesPerkwEstimates>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.FeeratesPerkwEstimates, 9));
};


/**
 * @param {!Array<!proto.cln.FeeratesPerkwEstimates>} value
 * @return {!proto.cln.FeeratesPerkw} returns this
*/
proto.cln.FeeratesPerkw.prototype.setEstimatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.cln.FeeratesPerkwEstimates=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.FeeratesPerkwEstimates}
 */
proto.cln.FeeratesPerkw.prototype.addEstimates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.cln.FeeratesPerkwEstimates, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.clearEstimatesList = function() {
  return this.setEstimatesList([]);
};


/**
 * optional uint32 floor = 10;
 * @return {number}
 */
proto.cln.FeeratesPerkw.prototype.getFloor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.setFloor = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.clearFloor = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkw.prototype.hasFloor = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint32 unilateral_anchor_close = 11;
 * @return {number}
 */
proto.cln.FeeratesPerkw.prototype.getUnilateralAnchorClose = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.setUnilateralAnchorClose = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.clearUnilateralAnchorClose = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkw.prototype.hasUnilateralAnchorClose = function() {
  return jspb.Message.getField(this, 11) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.FeeratesPerkwEstimates.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.FeeratesPerkwEstimates.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.FeeratesPerkwEstimates} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FeeratesPerkwEstimates.toObject = function(includeInstance, msg) {
  var f, obj = {
    blockcount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    feerate: jspb.Message.getFieldWithDefault(msg, 2, 0),
    smoothedFeerate: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.FeeratesPerkwEstimates}
 */
proto.cln.FeeratesPerkwEstimates.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.FeeratesPerkwEstimates;
  return proto.cln.FeeratesPerkwEstimates.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.FeeratesPerkwEstimates} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.FeeratesPerkwEstimates}
 */
proto.cln.FeeratesPerkwEstimates.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBlockcount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFeerate(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSmoothedFeerate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.FeeratesPerkwEstimates.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.FeeratesPerkwEstimates.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.FeeratesPerkwEstimates} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FeeratesPerkwEstimates.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlockcount();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getFeerate();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getSmoothedFeerate();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional uint32 blockcount = 1;
 * @return {number}
 */
proto.cln.FeeratesPerkwEstimates.prototype.getBlockcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkwEstimates} returns this
 */
proto.cln.FeeratesPerkwEstimates.prototype.setBlockcount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 feerate = 2;
 * @return {number}
 */
proto.cln.FeeratesPerkwEstimates.prototype.getFeerate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkwEstimates} returns this
 */
proto.cln.FeeratesPerkwEstimates.prototype.setFeerate = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 smoothed_feerate = 3;
 * @return {number}
 */
proto.cln.FeeratesPerkwEstimates.prototype.getSmoothedFeerate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkwEstimates} returns this
 */
proto.cln.FeeratesPerkwEstimates.prototype.setSmoothedFeerate = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.FeeratesOnchain_fee_estimates.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.FeeratesOnchain_fee_estimates.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.FeeratesOnchain_fee_estimates} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FeeratesOnchain_fee_estimates.toObject = function(includeInstance, msg) {
  var f, obj = {
    openingChannelSatoshis: jspb.Message.getFieldWithDefault(msg, 1, 0),
    mutualCloseSatoshis: jspb.Message.getFieldWithDefault(msg, 2, 0),
    unilateralCloseSatoshis: jspb.Message.getFieldWithDefault(msg, 3, 0),
    htlcTimeoutSatoshis: jspb.Message.getFieldWithDefault(msg, 4, 0),
    htlcSuccessSatoshis: jspb.Message.getFieldWithDefault(msg, 5, 0),
    unilateralCloseNonanchorSatoshis: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.FeeratesOnchain_fee_estimates}
 */
proto.cln.FeeratesOnchain_fee_estimates.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.FeeratesOnchain_fee_estimates;
  return proto.cln.FeeratesOnchain_fee_estimates.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.FeeratesOnchain_fee_estimates} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.FeeratesOnchain_fee_estimates}
 */
proto.cln.FeeratesOnchain_fee_estimates.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOpeningChannelSatoshis(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMutualCloseSatoshis(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUnilateralCloseSatoshis(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setHtlcTimeoutSatoshis(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setHtlcSuccessSatoshis(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUnilateralCloseNonanchorSatoshis(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.FeeratesOnchain_fee_estimates.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.FeeratesOnchain_fee_estimates.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.FeeratesOnchain_fee_estimates} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FeeratesOnchain_fee_estimates.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpeningChannelSatoshis();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getMutualCloseSatoshis();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getUnilateralCloseSatoshis();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getHtlcTimeoutSatoshis();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getHtlcSuccessSatoshis();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint64(
      6,
      f
    );
  }
};


/**
 * optional uint64 opening_channel_satoshis = 1;
 * @return {number}
 */
proto.cln.FeeratesOnchain_fee_estimates.prototype.getOpeningChannelSatoshis = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesOnchain_fee_estimates} returns this
 */
proto.cln.FeeratesOnchain_fee_estimates.prototype.setOpeningChannelSatoshis = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 mutual_close_satoshis = 2;
 * @return {number}
 */
proto.cln.FeeratesOnchain_fee_estimates.prototype.getMutualCloseSatoshis = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesOnchain_fee_estimates} returns this
 */
proto.cln.FeeratesOnchain_fee_estimates.prototype.setMutualCloseSatoshis = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 unilateral_close_satoshis = 3;
 * @return {number}
 */
proto.cln.FeeratesOnchain_fee_estimates.prototype.getUnilateralCloseSatoshis = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesOnchain_fee_estimates} returns this
 */
proto.cln.FeeratesOnchain_fee_estimates.prototype.setUnilateralCloseSatoshis = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 htlc_timeout_satoshis = 4;
 * @return {number}
 */
proto.cln.FeeratesOnchain_fee_estimates.prototype.getHtlcTimeoutSatoshis = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesOnchain_fee_estimates} returns this
 */
proto.cln.FeeratesOnchain_fee_estimates.prototype.setHtlcTimeoutSatoshis = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 htlc_success_satoshis = 5;
 * @return {number}
 */
proto.cln.FeeratesOnchain_fee_estimates.prototype.getHtlcSuccessSatoshis = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesOnchain_fee_estimates} returns this
 */
proto.cln.FeeratesOnchain_fee_estimates.prototype.setHtlcSuccessSatoshis = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 unilateral_close_nonanchor_satoshis = 6;
 * @return {number}
 */
proto.cln.FeeratesOnchain_fee_estimates.prototype.getUnilateralCloseNonanchorSatoshis = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesOnchain_fee_estimates} returns this
 */
proto.cln.FeeratesOnchain_fee_estimates.prototype.setUnilateralCloseNonanchorSatoshis = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesOnchain_fee_estimates} returns this
 */
proto.cln.FeeratesOnchain_fee_estimates.prototype.clearUnilateralCloseNonanchorSatoshis = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesOnchain_fee_estimates.prototype.hasUnilateralCloseNonanchorSatoshis = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.FetchinvoiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.FetchinvoiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.FetchinvoiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FetchinvoiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    offer: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    quantity: jspb.Message.getFieldWithDefault(msg, 3, 0),
    recurrenceCounter: jspb.Message.getFieldWithDefault(msg, 4, 0),
    recurrenceStart: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    recurrenceLabel: jspb.Message.getFieldWithDefault(msg, 6, ""),
    timeout: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    payerNote: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.FetchinvoiceRequest}
 */
proto.cln.FetchinvoiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.FetchinvoiceRequest;
  return proto.cln.FetchinvoiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.FetchinvoiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.FetchinvoiceRequest}
 */
proto.cln.FetchinvoiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOffer(value);
      break;
    case 2:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setQuantity(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRecurrenceCounter(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRecurrenceStart(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecurrenceLabel(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTimeout(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayerNote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.FetchinvoiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.FetchinvoiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.FetchinvoiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FetchinvoiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOffer();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string offer = 1;
 * @return {string}
 */
proto.cln.FetchinvoiceRequest.prototype.getOffer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.FetchinvoiceRequest} returns this
 */
proto.cln.FetchinvoiceRequest.prototype.setOffer = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Amount amount_msat = 2;
 * @return {?proto.cln.Amount}
 */
proto.cln.FetchinvoiceRequest.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 2));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.FetchinvoiceRequest} returns this
*/
proto.cln.FetchinvoiceRequest.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FetchinvoiceRequest} returns this
 */
proto.cln.FetchinvoiceRequest.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FetchinvoiceRequest.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 quantity = 3;
 * @return {number}
 */
proto.cln.FetchinvoiceRequest.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FetchinvoiceRequest} returns this
 */
proto.cln.FetchinvoiceRequest.prototype.setQuantity = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FetchinvoiceRequest} returns this
 */
proto.cln.FetchinvoiceRequest.prototype.clearQuantity = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FetchinvoiceRequest.prototype.hasQuantity = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 recurrence_counter = 4;
 * @return {number}
 */
proto.cln.FetchinvoiceRequest.prototype.getRecurrenceCounter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FetchinvoiceRequest} returns this
 */
proto.cln.FetchinvoiceRequest.prototype.setRecurrenceCounter = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FetchinvoiceRequest} returns this
 */
proto.cln.FetchinvoiceRequest.prototype.clearRecurrenceCounter = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FetchinvoiceRequest.prototype.hasRecurrenceCounter = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double recurrence_start = 5;
 * @return {number}
 */
proto.cln.FetchinvoiceRequest.prototype.getRecurrenceStart = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FetchinvoiceRequest} returns this
 */
proto.cln.FetchinvoiceRequest.prototype.setRecurrenceStart = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FetchinvoiceRequest} returns this
 */
proto.cln.FetchinvoiceRequest.prototype.clearRecurrenceStart = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FetchinvoiceRequest.prototype.hasRecurrenceStart = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string recurrence_label = 6;
 * @return {string}
 */
proto.cln.FetchinvoiceRequest.prototype.getRecurrenceLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.FetchinvoiceRequest} returns this
 */
proto.cln.FetchinvoiceRequest.prototype.setRecurrenceLabel = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FetchinvoiceRequest} returns this
 */
proto.cln.FetchinvoiceRequest.prototype.clearRecurrenceLabel = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FetchinvoiceRequest.prototype.hasRecurrenceLabel = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double timeout = 7;
 * @return {number}
 */
proto.cln.FetchinvoiceRequest.prototype.getTimeout = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FetchinvoiceRequest} returns this
 */
proto.cln.FetchinvoiceRequest.prototype.setTimeout = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FetchinvoiceRequest} returns this
 */
proto.cln.FetchinvoiceRequest.prototype.clearTimeout = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FetchinvoiceRequest.prototype.hasTimeout = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string payer_note = 8;
 * @return {string}
 */
proto.cln.FetchinvoiceRequest.prototype.getPayerNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.FetchinvoiceRequest} returns this
 */
proto.cln.FetchinvoiceRequest.prototype.setPayerNote = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FetchinvoiceRequest} returns this
 */
proto.cln.FetchinvoiceRequest.prototype.clearPayerNote = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FetchinvoiceRequest.prototype.hasPayerNote = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.FetchinvoiceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.FetchinvoiceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.FetchinvoiceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FetchinvoiceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    invoice: jspb.Message.getFieldWithDefault(msg, 1, ""),
    changes: (f = msg.getChanges()) && proto.cln.FetchinvoiceChanges.toObject(includeInstance, f),
    nextPeriod: (f = msg.getNextPeriod()) && proto.cln.FetchinvoiceNext_period.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.FetchinvoiceResponse}
 */
proto.cln.FetchinvoiceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.FetchinvoiceResponse;
  return proto.cln.FetchinvoiceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.FetchinvoiceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.FetchinvoiceResponse}
 */
proto.cln.FetchinvoiceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvoice(value);
      break;
    case 2:
      var value = new proto.cln.FetchinvoiceChanges;
      reader.readMessage(value,proto.cln.FetchinvoiceChanges.deserializeBinaryFromReader);
      msg.setChanges(value);
      break;
    case 3:
      var value = new proto.cln.FetchinvoiceNext_period;
      reader.readMessage(value,proto.cln.FetchinvoiceNext_period.deserializeBinaryFromReader);
      msg.setNextPeriod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.FetchinvoiceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.FetchinvoiceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.FetchinvoiceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FetchinvoiceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvoice();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChanges();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cln.FetchinvoiceChanges.serializeBinaryToWriter
    );
  }
  f = message.getNextPeriod();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cln.FetchinvoiceNext_period.serializeBinaryToWriter
    );
  }
};


/**
 * optional string invoice = 1;
 * @return {string}
 */
proto.cln.FetchinvoiceResponse.prototype.getInvoice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.FetchinvoiceResponse} returns this
 */
proto.cln.FetchinvoiceResponse.prototype.setInvoice = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional FetchinvoiceChanges changes = 2;
 * @return {?proto.cln.FetchinvoiceChanges}
 */
proto.cln.FetchinvoiceResponse.prototype.getChanges = function() {
  return /** @type{?proto.cln.FetchinvoiceChanges} */ (
    jspb.Message.getWrapperField(this, proto.cln.FetchinvoiceChanges, 2));
};


/**
 * @param {?proto.cln.FetchinvoiceChanges|undefined} value
 * @return {!proto.cln.FetchinvoiceResponse} returns this
*/
proto.cln.FetchinvoiceResponse.prototype.setChanges = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FetchinvoiceResponse} returns this
 */
proto.cln.FetchinvoiceResponse.prototype.clearChanges = function() {
  return this.setChanges(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FetchinvoiceResponse.prototype.hasChanges = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional FetchinvoiceNext_period next_period = 3;
 * @return {?proto.cln.FetchinvoiceNext_period}
 */
proto.cln.FetchinvoiceResponse.prototype.getNextPeriod = function() {
  return /** @type{?proto.cln.FetchinvoiceNext_period} */ (
    jspb.Message.getWrapperField(this, proto.cln.FetchinvoiceNext_period, 3));
};


/**
 * @param {?proto.cln.FetchinvoiceNext_period|undefined} value
 * @return {!proto.cln.FetchinvoiceResponse} returns this
*/
proto.cln.FetchinvoiceResponse.prototype.setNextPeriod = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FetchinvoiceResponse} returns this
 */
proto.cln.FetchinvoiceResponse.prototype.clearNextPeriod = function() {
  return this.setNextPeriod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FetchinvoiceResponse.prototype.hasNextPeriod = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.FetchinvoiceChanges.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.FetchinvoiceChanges.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.FetchinvoiceChanges} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FetchinvoiceChanges.toObject = function(includeInstance, msg) {
  var f, obj = {
    descriptionAppended: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    vendorRemoved: jspb.Message.getFieldWithDefault(msg, 3, ""),
    vendor: jspb.Message.getFieldWithDefault(msg, 4, ""),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.FetchinvoiceChanges}
 */
proto.cln.FetchinvoiceChanges.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.FetchinvoiceChanges;
  return proto.cln.FetchinvoiceChanges.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.FetchinvoiceChanges} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.FetchinvoiceChanges}
 */
proto.cln.FetchinvoiceChanges.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescriptionAppended(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVendorRemoved(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setVendor(value);
      break;
    case 5:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.FetchinvoiceChanges.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.FetchinvoiceChanges.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.FetchinvoiceChanges} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FetchinvoiceChanges.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
};


/**
 * optional string description_appended = 1;
 * @return {string}
 */
proto.cln.FetchinvoiceChanges.prototype.getDescriptionAppended = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.FetchinvoiceChanges} returns this
 */
proto.cln.FetchinvoiceChanges.prototype.setDescriptionAppended = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FetchinvoiceChanges} returns this
 */
proto.cln.FetchinvoiceChanges.prototype.clearDescriptionAppended = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FetchinvoiceChanges.prototype.hasDescriptionAppended = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.cln.FetchinvoiceChanges.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.FetchinvoiceChanges} returns this
 */
proto.cln.FetchinvoiceChanges.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FetchinvoiceChanges} returns this
 */
proto.cln.FetchinvoiceChanges.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FetchinvoiceChanges.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string vendor_removed = 3;
 * @return {string}
 */
proto.cln.FetchinvoiceChanges.prototype.getVendorRemoved = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.FetchinvoiceChanges} returns this
 */
proto.cln.FetchinvoiceChanges.prototype.setVendorRemoved = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FetchinvoiceChanges} returns this
 */
proto.cln.FetchinvoiceChanges.prototype.clearVendorRemoved = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FetchinvoiceChanges.prototype.hasVendorRemoved = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string vendor = 4;
 * @return {string}
 */
proto.cln.FetchinvoiceChanges.prototype.getVendor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.FetchinvoiceChanges} returns this
 */
proto.cln.FetchinvoiceChanges.prototype.setVendor = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FetchinvoiceChanges} returns this
 */
proto.cln.FetchinvoiceChanges.prototype.clearVendor = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FetchinvoiceChanges.prototype.hasVendor = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Amount amount_msat = 5;
 * @return {?proto.cln.Amount}
 */
proto.cln.FetchinvoiceChanges.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 5));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.FetchinvoiceChanges} returns this
*/
proto.cln.FetchinvoiceChanges.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FetchinvoiceChanges} returns this
 */
proto.cln.FetchinvoiceChanges.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FetchinvoiceChanges.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.FetchinvoiceNext_period.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.FetchinvoiceNext_period.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.FetchinvoiceNext_period} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FetchinvoiceNext_period.toObject = function(includeInstance, msg) {
  var f, obj = {
    counter: jspb.Message.getFieldWithDefault(msg, 1, 0),
    starttime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    endtime: jspb.Message.getFieldWithDefault(msg, 3, 0),
    paywindowStart: jspb.Message.getFieldWithDefault(msg, 4, 0),
    paywindowEnd: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.FetchinvoiceNext_period}
 */
proto.cln.FetchinvoiceNext_period.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.FetchinvoiceNext_period;
  return proto.cln.FetchinvoiceNext_period.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.FetchinvoiceNext_period} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.FetchinvoiceNext_period}
 */
proto.cln.FetchinvoiceNext_period.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCounter(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStarttime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEndtime(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPaywindowStart(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPaywindowEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.FetchinvoiceNext_period.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.FetchinvoiceNext_period.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.FetchinvoiceNext_period} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FetchinvoiceNext_period.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCounter();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getStarttime();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getEndtime();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getPaywindowStart();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getPaywindowEnd();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
};


/**
 * optional uint64 counter = 1;
 * @return {number}
 */
proto.cln.FetchinvoiceNext_period.prototype.getCounter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FetchinvoiceNext_period} returns this
 */
proto.cln.FetchinvoiceNext_period.prototype.setCounter = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 starttime = 2;
 * @return {number}
 */
proto.cln.FetchinvoiceNext_period.prototype.getStarttime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FetchinvoiceNext_period} returns this
 */
proto.cln.FetchinvoiceNext_period.prototype.setStarttime = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 endtime = 3;
 * @return {number}
 */
proto.cln.FetchinvoiceNext_period.prototype.getEndtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FetchinvoiceNext_period} returns this
 */
proto.cln.FetchinvoiceNext_period.prototype.setEndtime = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 paywindow_start = 4;
 * @return {number}
 */
proto.cln.FetchinvoiceNext_period.prototype.getPaywindowStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FetchinvoiceNext_period} returns this
 */
proto.cln.FetchinvoiceNext_period.prototype.setPaywindowStart = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 paywindow_end = 5;
 * @return {number}
 */
proto.cln.FetchinvoiceNext_period.prototype.getPaywindowEnd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FetchinvoiceNext_period} returns this
 */
proto.cln.FetchinvoiceNext_period.prototype.setPaywindowEnd = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.Fundchannel_cancelRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.Fundchannel_cancelRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.Fundchannel_cancelRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Fundchannel_cancelRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.Fundchannel_cancelRequest}
 */
proto.cln.Fundchannel_cancelRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.Fundchannel_cancelRequest;
  return proto.cln.Fundchannel_cancelRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.Fundchannel_cancelRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.Fundchannel_cancelRequest}
 */
proto.cln.Fundchannel_cancelRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.Fundchannel_cancelRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.Fundchannel_cancelRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.Fundchannel_cancelRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Fundchannel_cancelRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.Fundchannel_cancelRequest.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes id = 1;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.cln.Fundchannel_cancelRequest.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.cln.Fundchannel_cancelRequest.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.Fundchannel_cancelRequest} returns this
 */
proto.cln.Fundchannel_cancelRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.Fundchannel_cancelResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.Fundchannel_cancelResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.Fundchannel_cancelResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Fundchannel_cancelResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    cancelled: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.Fundchannel_cancelResponse}
 */
proto.cln.Fundchannel_cancelResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.Fundchannel_cancelResponse;
  return proto.cln.Fundchannel_cancelResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.Fundchannel_cancelResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.Fundchannel_cancelResponse}
 */
proto.cln.Fundchannel_cancelResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCancelled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.Fundchannel_cancelResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.Fundchannel_cancelResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.Fundchannel_cancelResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Fundchannel_cancelResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCancelled();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string cancelled = 1;
 * @return {string}
 */
proto.cln.Fundchannel_cancelResponse.prototype.getCancelled = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.Fundchannel_cancelResponse} returns this
 */
proto.cln.Fundchannel_cancelResponse.prototype.setCancelled = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.Fundchannel_completeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.Fundchannel_completeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.Fundchannel_completeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Fundchannel_completeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64(),
    psbt: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.Fundchannel_completeRequest}
 */
proto.cln.Fundchannel_completeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.Fundchannel_completeRequest;
  return proto.cln.Fundchannel_completeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.Fundchannel_completeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.Fundchannel_completeRequest}
 */
proto.cln.Fundchannel_completeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPsbt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.Fundchannel_completeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.Fundchannel_completeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.Fundchannel_completeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Fundchannel_completeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getPsbt();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bytes id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.Fundchannel_completeRequest.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes id = 1;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.cln.Fundchannel_completeRequest.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.cln.Fundchannel_completeRequest.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.Fundchannel_completeRequest} returns this
 */
proto.cln.Fundchannel_completeRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string psbt = 2;
 * @return {string}
 */
proto.cln.Fundchannel_completeRequest.prototype.getPsbt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.Fundchannel_completeRequest} returns this
 */
proto.cln.Fundchannel_completeRequest.prototype.setPsbt = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.Fundchannel_completeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.Fundchannel_completeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.Fundchannel_completeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Fundchannel_completeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelId: msg.getChannelId_asB64(),
    commitmentsSecured: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.Fundchannel_completeResponse}
 */
proto.cln.Fundchannel_completeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.Fundchannel_completeResponse;
  return proto.cln.Fundchannel_completeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.Fundchannel_completeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.Fundchannel_completeResponse}
 */
proto.cln.Fundchannel_completeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChannelId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCommitmentsSecured(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.Fundchannel_completeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.Fundchannel_completeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.Fundchannel_completeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Fundchannel_completeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getCommitmentsSecured();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional bytes channel_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.Fundchannel_completeResponse.prototype.getChannelId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes channel_id = 1;
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {string}
 */
proto.cln.Fundchannel_completeResponse.prototype.getChannelId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChannelId()));
};


/**
 * optional bytes channel_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {!Uint8Array}
 */
proto.cln.Fundchannel_completeResponse.prototype.getChannelId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChannelId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.Fundchannel_completeResponse} returns this
 */
proto.cln.Fundchannel_completeResponse.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bool commitments_secured = 2;
 * @return {boolean}
 */
proto.cln.Fundchannel_completeResponse.prototype.getCommitmentsSecured = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.Fundchannel_completeResponse} returns this
 */
proto.cln.Fundchannel_completeResponse.prototype.setCommitmentsSecured = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.FundchannelRequest.repeatedFields_ = [11,14];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.FundchannelRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.FundchannelRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.FundchannelRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FundchannelRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    amount: (f = msg.getAmount()) && cln_primitives_pb.AmountOrAll.toObject(includeInstance, f),
    feerate: (f = msg.getFeerate()) && cln_primitives_pb.Feerate.toObject(includeInstance, f),
    announce: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    pushMsat: (f = msg.getPushMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    closeTo: jspb.Message.getFieldWithDefault(msg, 6, ""),
    requestAmt: (f = msg.getRequestAmt()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    compactLease: jspb.Message.getFieldWithDefault(msg, 8, ""),
    id: msg.getId_asB64(),
    minconf: jspb.Message.getFieldWithDefault(msg, 10, 0),
    utxosList: jspb.Message.toObjectList(msg.getUtxosList(),
    cln_primitives_pb.Outpoint.toObject, includeInstance),
    mindepth: jspb.Message.getFieldWithDefault(msg, 12, 0),
    reserve: (f = msg.getReserve()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    channelTypeList: (f = jspb.Message.getRepeatedField(msg, 14)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.FundchannelRequest}
 */
proto.cln.FundchannelRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.FundchannelRequest;
  return proto.cln.FundchannelRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.FundchannelRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.FundchannelRequest}
 */
proto.cln.FundchannelRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cln_primitives_pb.AmountOrAll;
      reader.readMessage(value,cln_primitives_pb.AmountOrAll.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    case 2:
      var value = new cln_primitives_pb.Feerate;
      reader.readMessage(value,cln_primitives_pb.Feerate.deserializeBinaryFromReader);
      msg.setFeerate(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAnnounce(value);
      break;
    case 5:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setPushMsat(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCloseTo(value);
      break;
    case 7:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setRequestAmt(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompactLease(value);
      break;
    case 9:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinconf(value);
      break;
    case 11:
      var value = new cln_primitives_pb.Outpoint;
      reader.readMessage(value,cln_primitives_pb.Outpoint.deserializeBinaryFromReader);
      msg.addUtxos(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMindepth(value);
      break;
    case 13:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setReserve(value);
      break;
    case 14:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addChannelType(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.FundchannelRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.FundchannelRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.FundchannelRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FundchannelRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cln_primitives_pb.AmountOrAll.serializeBinaryToWriter
    );
  }
  f = message.getFeerate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cln_primitives_pb.Feerate.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getPushMsat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getRequestAmt();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = message.getUtxosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      cln_primitives_pb.Outpoint.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint32(
      12,
      f
    );
  }
  f = message.getReserve();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getChannelTypeList();
  if (f.length > 0) {
    writer.writePackedUint32(
      14,
      f
    );
  }
};


/**
 * optional AmountOrAll amount = 1;
 * @return {?proto.cln.AmountOrAll}
 */
proto.cln.FundchannelRequest.prototype.getAmount = function() {
  return /** @type{?proto.cln.AmountOrAll} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.AmountOrAll, 1));
};


/**
 * @param {?proto.cln.AmountOrAll|undefined} value
 * @return {!proto.cln.FundchannelRequest} returns this
*/
proto.cln.FundchannelRequest.prototype.setAmount = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FundchannelRequest} returns this
 */
proto.cln.FundchannelRequest.prototype.clearAmount = function() {
  return this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundchannelRequest.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Feerate feerate = 2;
 * @return {?proto.cln.Feerate}
 */
proto.cln.FundchannelRequest.prototype.getFeerate = function() {
  return /** @type{?proto.cln.Feerate} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Feerate, 2));
};


/**
 * @param {?proto.cln.Feerate|undefined} value
 * @return {!proto.cln.FundchannelRequest} returns this
*/
proto.cln.FundchannelRequest.prototype.setFeerate = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FundchannelRequest} returns this
 */
proto.cln.FundchannelRequest.prototype.clearFeerate = function() {
  return this.setFeerate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundchannelRequest.prototype.hasFeerate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool announce = 3;
 * @return {boolean}
 */
proto.cln.FundchannelRequest.prototype.getAnnounce = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.FundchannelRequest} returns this
 */
proto.cln.FundchannelRequest.prototype.setAnnounce = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FundchannelRequest} returns this
 */
proto.cln.FundchannelRequest.prototype.clearAnnounce = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundchannelRequest.prototype.hasAnnounce = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Amount push_msat = 5;
 * @return {?proto.cln.Amount}
 */
proto.cln.FundchannelRequest.prototype.getPushMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 5));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.FundchannelRequest} returns this
*/
proto.cln.FundchannelRequest.prototype.setPushMsat = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FundchannelRequest} returns this
 */
proto.cln.FundchannelRequest.prototype.clearPushMsat = function() {
  return this.setPushMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundchannelRequest.prototype.hasPushMsat = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string close_to = 6;
 * @return {string}
 */
proto.cln.FundchannelRequest.prototype.getCloseTo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.FundchannelRequest} returns this
 */
proto.cln.FundchannelRequest.prototype.setCloseTo = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FundchannelRequest} returns this
 */
proto.cln.FundchannelRequest.prototype.clearCloseTo = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundchannelRequest.prototype.hasCloseTo = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Amount request_amt = 7;
 * @return {?proto.cln.Amount}
 */
proto.cln.FundchannelRequest.prototype.getRequestAmt = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 7));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.FundchannelRequest} returns this
*/
proto.cln.FundchannelRequest.prototype.setRequestAmt = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FundchannelRequest} returns this
 */
proto.cln.FundchannelRequest.prototype.clearRequestAmt = function() {
  return this.setRequestAmt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundchannelRequest.prototype.hasRequestAmt = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string compact_lease = 8;
 * @return {string}
 */
proto.cln.FundchannelRequest.prototype.getCompactLease = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.FundchannelRequest} returns this
 */
proto.cln.FundchannelRequest.prototype.setCompactLease = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FundchannelRequest} returns this
 */
proto.cln.FundchannelRequest.prototype.clearCompactLease = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundchannelRequest.prototype.hasCompactLease = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bytes id = 9;
 * @return {!(string|Uint8Array)}
 */
proto.cln.FundchannelRequest.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * optional bytes id = 9;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.cln.FundchannelRequest.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 9;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.cln.FundchannelRequest.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.FundchannelRequest} returns this
 */
proto.cln.FundchannelRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3BytesField(this, 9, value);
};


/**
 * optional uint32 minconf = 10;
 * @return {number}
 */
proto.cln.FundchannelRequest.prototype.getMinconf = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FundchannelRequest} returns this
 */
proto.cln.FundchannelRequest.prototype.setMinconf = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FundchannelRequest} returns this
 */
proto.cln.FundchannelRequest.prototype.clearMinconf = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundchannelRequest.prototype.hasMinconf = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * repeated Outpoint utxos = 11;
 * @return {!Array<!proto.cln.Outpoint>}
 */
proto.cln.FundchannelRequest.prototype.getUtxosList = function() {
  return /** @type{!Array<!proto.cln.Outpoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, cln_primitives_pb.Outpoint, 11));
};


/**
 * @param {!Array<!proto.cln.Outpoint>} value
 * @return {!proto.cln.FundchannelRequest} returns this
*/
proto.cln.FundchannelRequest.prototype.setUtxosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.cln.Outpoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.Outpoint}
 */
proto.cln.FundchannelRequest.prototype.addUtxos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.cln.Outpoint, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.FundchannelRequest} returns this
 */
proto.cln.FundchannelRequest.prototype.clearUtxosList = function() {
  return this.setUtxosList([]);
};


/**
 * optional uint32 mindepth = 12;
 * @return {number}
 */
proto.cln.FundchannelRequest.prototype.getMindepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FundchannelRequest} returns this
 */
proto.cln.FundchannelRequest.prototype.setMindepth = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FundchannelRequest} returns this
 */
proto.cln.FundchannelRequest.prototype.clearMindepth = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundchannelRequest.prototype.hasMindepth = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional Amount reserve = 13;
 * @return {?proto.cln.Amount}
 */
proto.cln.FundchannelRequest.prototype.getReserve = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 13));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.FundchannelRequest} returns this
*/
proto.cln.FundchannelRequest.prototype.setReserve = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FundchannelRequest} returns this
 */
proto.cln.FundchannelRequest.prototype.clearReserve = function() {
  return this.setReserve(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundchannelRequest.prototype.hasReserve = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * repeated uint32 channel_type = 14;
 * @return {!Array<number>}
 */
proto.cln.FundchannelRequest.prototype.getChannelTypeList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 14));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.cln.FundchannelRequest} returns this
 */
proto.cln.FundchannelRequest.prototype.setChannelTypeList = function(value) {
  return jspb.Message.setField(this, 14, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.cln.FundchannelRequest} returns this
 */
proto.cln.FundchannelRequest.prototype.addChannelType = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.FundchannelRequest} returns this
 */
proto.cln.FundchannelRequest.prototype.clearChannelTypeList = function() {
  return this.setChannelTypeList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.FundchannelResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.FundchannelResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.FundchannelResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FundchannelResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    tx: msg.getTx_asB64(),
    txid: msg.getTxid_asB64(),
    outnum: jspb.Message.getFieldWithDefault(msg, 3, 0),
    channelId: msg.getChannelId_asB64(),
    closeTo: msg.getCloseTo_asB64(),
    mindepth: jspb.Message.getFieldWithDefault(msg, 6, 0),
    channelType: (f = msg.getChannelType()) && proto.cln.FundchannelChannel_type.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.FundchannelResponse}
 */
proto.cln.FundchannelResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.FundchannelResponse;
  return proto.cln.FundchannelResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.FundchannelResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.FundchannelResponse}
 */
proto.cln.FundchannelResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTx(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOutnum(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChannelId(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setCloseTo(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMindepth(value);
      break;
    case 7:
      var value = new proto.cln.FundchannelChannel_type;
      reader.readMessage(value,proto.cln.FundchannelChannel_type.deserializeBinaryFromReader);
      msg.setChannelType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.FundchannelResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.FundchannelResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.FundchannelResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FundchannelResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTx_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getOutnum();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getChannelId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getChannelType();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.cln.FundchannelChannel_type.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes tx = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.FundchannelResponse.prototype.getTx = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes tx = 1;
 * This is a type-conversion wrapper around `getTx()`
 * @return {string}
 */
proto.cln.FundchannelResponse.prototype.getTx_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTx()));
};


/**
 * optional bytes tx = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTx()`
 * @return {!Uint8Array}
 */
proto.cln.FundchannelResponse.prototype.getTx_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTx()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.FundchannelResponse} returns this
 */
proto.cln.FundchannelResponse.prototype.setTx = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes txid = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.FundchannelResponse.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes txid = 2;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.FundchannelResponse.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.FundchannelResponse.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.FundchannelResponse} returns this
 */
proto.cln.FundchannelResponse.prototype.setTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional uint32 outnum = 3;
 * @return {number}
 */
proto.cln.FundchannelResponse.prototype.getOutnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FundchannelResponse} returns this
 */
proto.cln.FundchannelResponse.prototype.setOutnum = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bytes channel_id = 4;
 * @return {!(string|Uint8Array)}
 */
proto.cln.FundchannelResponse.prototype.getChannelId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes channel_id = 4;
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {string}
 */
proto.cln.FundchannelResponse.prototype.getChannelId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChannelId()));
};


/**
 * optional bytes channel_id = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {!Uint8Array}
 */
proto.cln.FundchannelResponse.prototype.getChannelId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChannelId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.FundchannelResponse} returns this
 */
proto.cln.FundchannelResponse.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional bytes close_to = 5;
 * @return {!(string|Uint8Array)}
 */
proto.cln.FundchannelResponse.prototype.getCloseTo = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes close_to = 5;
 * This is a type-conversion wrapper around `getCloseTo()`
 * @return {string}
 */
proto.cln.FundchannelResponse.prototype.getCloseTo_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getCloseTo()));
};


/**
 * optional bytes close_to = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCloseTo()`
 * @return {!Uint8Array}
 */
proto.cln.FundchannelResponse.prototype.getCloseTo_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getCloseTo()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.FundchannelResponse} returns this
 */
proto.cln.FundchannelResponse.prototype.setCloseTo = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FundchannelResponse} returns this
 */
proto.cln.FundchannelResponse.prototype.clearCloseTo = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundchannelResponse.prototype.hasCloseTo = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 mindepth = 6;
 * @return {number}
 */
proto.cln.FundchannelResponse.prototype.getMindepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FundchannelResponse} returns this
 */
proto.cln.FundchannelResponse.prototype.setMindepth = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FundchannelResponse} returns this
 */
proto.cln.FundchannelResponse.prototype.clearMindepth = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundchannelResponse.prototype.hasMindepth = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional FundchannelChannel_type channel_type = 7;
 * @return {?proto.cln.FundchannelChannel_type}
 */
proto.cln.FundchannelResponse.prototype.getChannelType = function() {
  return /** @type{?proto.cln.FundchannelChannel_type} */ (
    jspb.Message.getWrapperField(this, proto.cln.FundchannelChannel_type, 7));
};


/**
 * @param {?proto.cln.FundchannelChannel_type|undefined} value
 * @return {!proto.cln.FundchannelResponse} returns this
*/
proto.cln.FundchannelResponse.prototype.setChannelType = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FundchannelResponse} returns this
 */
proto.cln.FundchannelResponse.prototype.clearChannelType = function() {
  return this.setChannelType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundchannelResponse.prototype.hasChannelType = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.FundchannelChannel_type.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.FundchannelChannel_type.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.FundchannelChannel_type.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.FundchannelChannel_type} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FundchannelChannel_type.toObject = function(includeInstance, msg) {
  var f, obj = {
    bitsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    namesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.FundchannelChannel_type}
 */
proto.cln.FundchannelChannel_type.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.FundchannelChannel_type;
  return proto.cln.FundchannelChannel_type.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.FundchannelChannel_type} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.FundchannelChannel_type}
 */
proto.cln.FundchannelChannel_type.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addBits(values[i]);
      }
      break;
    case 2:
      var values = /** @type {!Array<!proto.cln.ChannelTypeName>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addNames(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.FundchannelChannel_type.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.FundchannelChannel_type.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.FundchannelChannel_type} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FundchannelChannel_type.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBitsList();
  if (f.length > 0) {
    writer.writePackedUint32(
      1,
      f
    );
  }
  f = message.getNamesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      2,
      f
    );
  }
};


/**
 * repeated uint32 bits = 1;
 * @return {!Array<number>}
 */
proto.cln.FundchannelChannel_type.prototype.getBitsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.cln.FundchannelChannel_type} returns this
 */
proto.cln.FundchannelChannel_type.prototype.setBitsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.cln.FundchannelChannel_type} returns this
 */
proto.cln.FundchannelChannel_type.prototype.addBits = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.FundchannelChannel_type} returns this
 */
proto.cln.FundchannelChannel_type.prototype.clearBitsList = function() {
  return this.setBitsList([]);
};


/**
 * repeated ChannelTypeName names = 2;
 * @return {!Array<!proto.cln.ChannelTypeName>}
 */
proto.cln.FundchannelChannel_type.prototype.getNamesList = function() {
  return /** @type {!Array<!proto.cln.ChannelTypeName>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<!proto.cln.ChannelTypeName>} value
 * @return {!proto.cln.FundchannelChannel_type} returns this
 */
proto.cln.FundchannelChannel_type.prototype.setNamesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!proto.cln.ChannelTypeName} value
 * @param {number=} opt_index
 * @return {!proto.cln.FundchannelChannel_type} returns this
 */
proto.cln.FundchannelChannel_type.prototype.addNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.FundchannelChannel_type} returns this
 */
proto.cln.FundchannelChannel_type.prototype.clearNamesList = function() {
  return this.setNamesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.Fundchannel_startRequest.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.Fundchannel_startRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.Fundchannel_startRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.Fundchannel_startRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Fundchannel_startRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64(),
    amount: (f = msg.getAmount()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    feerate: (f = msg.getFeerate()) && cln_primitives_pb.Feerate.toObject(includeInstance, f),
    announce: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    closeTo: jspb.Message.getFieldWithDefault(msg, 5, ""),
    pushMsat: (f = msg.getPushMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    mindepth: jspb.Message.getFieldWithDefault(msg, 7, 0),
    reserve: (f = msg.getReserve()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    channelTypeList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.Fundchannel_startRequest}
 */
proto.cln.Fundchannel_startRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.Fundchannel_startRequest;
  return proto.cln.Fundchannel_startRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.Fundchannel_startRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.Fundchannel_startRequest}
 */
proto.cln.Fundchannel_startRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    case 2:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    case 3:
      var value = new cln_primitives_pb.Feerate;
      reader.readMessage(value,cln_primitives_pb.Feerate.deserializeBinaryFromReader);
      msg.setFeerate(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAnnounce(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCloseTo(value);
      break;
    case 6:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setPushMsat(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMindepth(value);
      break;
    case 8:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setReserve(value);
      break;
    case 9:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addChannelType(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.Fundchannel_startRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.Fundchannel_startRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.Fundchannel_startRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Fundchannel_startRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getFeerate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cln_primitives_pb.Feerate.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPushMsat();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getReserve();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getChannelTypeList();
  if (f.length > 0) {
    writer.writePackedUint32(
      9,
      f
    );
  }
};


/**
 * optional bytes id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.Fundchannel_startRequest.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes id = 1;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.cln.Fundchannel_startRequest.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.cln.Fundchannel_startRequest.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.Fundchannel_startRequest} returns this
 */
proto.cln.Fundchannel_startRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional Amount amount = 2;
 * @return {?proto.cln.Amount}
 */
proto.cln.Fundchannel_startRequest.prototype.getAmount = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 2));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.Fundchannel_startRequest} returns this
*/
proto.cln.Fundchannel_startRequest.prototype.setAmount = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.Fundchannel_startRequest} returns this
 */
proto.cln.Fundchannel_startRequest.prototype.clearAmount = function() {
  return this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.Fundchannel_startRequest.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Feerate feerate = 3;
 * @return {?proto.cln.Feerate}
 */
proto.cln.Fundchannel_startRequest.prototype.getFeerate = function() {
  return /** @type{?proto.cln.Feerate} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Feerate, 3));
};


/**
 * @param {?proto.cln.Feerate|undefined} value
 * @return {!proto.cln.Fundchannel_startRequest} returns this
*/
proto.cln.Fundchannel_startRequest.prototype.setFeerate = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.Fundchannel_startRequest} returns this
 */
proto.cln.Fundchannel_startRequest.prototype.clearFeerate = function() {
  return this.setFeerate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.Fundchannel_startRequest.prototype.hasFeerate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool announce = 4;
 * @return {boolean}
 */
proto.cln.Fundchannel_startRequest.prototype.getAnnounce = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.Fundchannel_startRequest} returns this
 */
proto.cln.Fundchannel_startRequest.prototype.setAnnounce = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.Fundchannel_startRequest} returns this
 */
proto.cln.Fundchannel_startRequest.prototype.clearAnnounce = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.Fundchannel_startRequest.prototype.hasAnnounce = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string close_to = 5;
 * @return {string}
 */
proto.cln.Fundchannel_startRequest.prototype.getCloseTo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.Fundchannel_startRequest} returns this
 */
proto.cln.Fundchannel_startRequest.prototype.setCloseTo = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.Fundchannel_startRequest} returns this
 */
proto.cln.Fundchannel_startRequest.prototype.clearCloseTo = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.Fundchannel_startRequest.prototype.hasCloseTo = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Amount push_msat = 6;
 * @return {?proto.cln.Amount}
 */
proto.cln.Fundchannel_startRequest.prototype.getPushMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 6));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.Fundchannel_startRequest} returns this
*/
proto.cln.Fundchannel_startRequest.prototype.setPushMsat = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.Fundchannel_startRequest} returns this
 */
proto.cln.Fundchannel_startRequest.prototype.clearPushMsat = function() {
  return this.setPushMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.Fundchannel_startRequest.prototype.hasPushMsat = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 mindepth = 7;
 * @return {number}
 */
proto.cln.Fundchannel_startRequest.prototype.getMindepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.Fundchannel_startRequest} returns this
 */
proto.cln.Fundchannel_startRequest.prototype.setMindepth = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.Fundchannel_startRequest} returns this
 */
proto.cln.Fundchannel_startRequest.prototype.clearMindepth = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.Fundchannel_startRequest.prototype.hasMindepth = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Amount reserve = 8;
 * @return {?proto.cln.Amount}
 */
proto.cln.Fundchannel_startRequest.prototype.getReserve = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 8));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.Fundchannel_startRequest} returns this
*/
proto.cln.Fundchannel_startRequest.prototype.setReserve = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.Fundchannel_startRequest} returns this
 */
proto.cln.Fundchannel_startRequest.prototype.clearReserve = function() {
  return this.setReserve(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.Fundchannel_startRequest.prototype.hasReserve = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * repeated uint32 channel_type = 9;
 * @return {!Array<number>}
 */
proto.cln.Fundchannel_startRequest.prototype.getChannelTypeList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 9));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.cln.Fundchannel_startRequest} returns this
 */
proto.cln.Fundchannel_startRequest.prototype.setChannelTypeList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.cln.Fundchannel_startRequest} returns this
 */
proto.cln.Fundchannel_startRequest.prototype.addChannelType = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.Fundchannel_startRequest} returns this
 */
proto.cln.Fundchannel_startRequest.prototype.clearChannelTypeList = function() {
  return this.setChannelTypeList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.Fundchannel_startResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.Fundchannel_startResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.Fundchannel_startResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Fundchannel_startResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    fundingAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    scriptpubkey: msg.getScriptpubkey_asB64(),
    channelType: (f = msg.getChannelType()) && proto.cln.Fundchannel_startChannel_type.toObject(includeInstance, f),
    closeTo: msg.getCloseTo_asB64(),
    warningUsage: jspb.Message.getFieldWithDefault(msg, 5, ""),
    mindepth: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.Fundchannel_startResponse}
 */
proto.cln.Fundchannel_startResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.Fundchannel_startResponse;
  return proto.cln.Fundchannel_startResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.Fundchannel_startResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.Fundchannel_startResponse}
 */
proto.cln.Fundchannel_startResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFundingAddress(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setScriptpubkey(value);
      break;
    case 3:
      var value = new proto.cln.Fundchannel_startChannel_type;
      reader.readMessage(value,proto.cln.Fundchannel_startChannel_type.deserializeBinaryFromReader);
      msg.setChannelType(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setCloseTo(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningUsage(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMindepth(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.Fundchannel_startResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.Fundchannel_startResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.Fundchannel_startResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Fundchannel_startResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFundingAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getScriptpubkey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getChannelType();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cln.Fundchannel_startChannel_type.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getWarningUsage();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
};


/**
 * optional string funding_address = 1;
 * @return {string}
 */
proto.cln.Fundchannel_startResponse.prototype.getFundingAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.Fundchannel_startResponse} returns this
 */
proto.cln.Fundchannel_startResponse.prototype.setFundingAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes scriptpubkey = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.Fundchannel_startResponse.prototype.getScriptpubkey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes scriptpubkey = 2;
 * This is a type-conversion wrapper around `getScriptpubkey()`
 * @return {string}
 */
proto.cln.Fundchannel_startResponse.prototype.getScriptpubkey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getScriptpubkey()));
};


/**
 * optional bytes scriptpubkey = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getScriptpubkey()`
 * @return {!Uint8Array}
 */
proto.cln.Fundchannel_startResponse.prototype.getScriptpubkey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getScriptpubkey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.Fundchannel_startResponse} returns this
 */
proto.cln.Fundchannel_startResponse.prototype.setScriptpubkey = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional Fundchannel_startChannel_type channel_type = 3;
 * @return {?proto.cln.Fundchannel_startChannel_type}
 */
proto.cln.Fundchannel_startResponse.prototype.getChannelType = function() {
  return /** @type{?proto.cln.Fundchannel_startChannel_type} */ (
    jspb.Message.getWrapperField(this, proto.cln.Fundchannel_startChannel_type, 3));
};


/**
 * @param {?proto.cln.Fundchannel_startChannel_type|undefined} value
 * @return {!proto.cln.Fundchannel_startResponse} returns this
*/
proto.cln.Fundchannel_startResponse.prototype.setChannelType = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.Fundchannel_startResponse} returns this
 */
proto.cln.Fundchannel_startResponse.prototype.clearChannelType = function() {
  return this.setChannelType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.Fundchannel_startResponse.prototype.hasChannelType = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bytes close_to = 4;
 * @return {!(string|Uint8Array)}
 */
proto.cln.Fundchannel_startResponse.prototype.getCloseTo = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes close_to = 4;
 * This is a type-conversion wrapper around `getCloseTo()`
 * @return {string}
 */
proto.cln.Fundchannel_startResponse.prototype.getCloseTo_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getCloseTo()));
};


/**
 * optional bytes close_to = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCloseTo()`
 * @return {!Uint8Array}
 */
proto.cln.Fundchannel_startResponse.prototype.getCloseTo_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getCloseTo()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.Fundchannel_startResponse} returns this
 */
proto.cln.Fundchannel_startResponse.prototype.setCloseTo = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.Fundchannel_startResponse} returns this
 */
proto.cln.Fundchannel_startResponse.prototype.clearCloseTo = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.Fundchannel_startResponse.prototype.hasCloseTo = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string warning_usage = 5;
 * @return {string}
 */
proto.cln.Fundchannel_startResponse.prototype.getWarningUsage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.Fundchannel_startResponse} returns this
 */
proto.cln.Fundchannel_startResponse.prototype.setWarningUsage = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional uint32 mindepth = 6;
 * @return {number}
 */
proto.cln.Fundchannel_startResponse.prototype.getMindepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.Fundchannel_startResponse} returns this
 */
proto.cln.Fundchannel_startResponse.prototype.setMindepth = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.Fundchannel_startResponse} returns this
 */
proto.cln.Fundchannel_startResponse.prototype.clearMindepth = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.Fundchannel_startResponse.prototype.hasMindepth = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.Fundchannel_startChannel_type.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.Fundchannel_startChannel_type.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.Fundchannel_startChannel_type.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.Fundchannel_startChannel_type} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Fundchannel_startChannel_type.toObject = function(includeInstance, msg) {
  var f, obj = {
    bitsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    namesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.Fundchannel_startChannel_type}
 */
proto.cln.Fundchannel_startChannel_type.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.Fundchannel_startChannel_type;
  return proto.cln.Fundchannel_startChannel_type.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.Fundchannel_startChannel_type} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.Fundchannel_startChannel_type}
 */
proto.cln.Fundchannel_startChannel_type.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addBits(values[i]);
      }
      break;
    case 2:
      var values = /** @type {!Array<!proto.cln.ChannelTypeName>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addNames(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.Fundchannel_startChannel_type.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.Fundchannel_startChannel_type.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.Fundchannel_startChannel_type} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Fundchannel_startChannel_type.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBitsList();
  if (f.length > 0) {
    writer.writePackedUint32(
      1,
      f
    );
  }
  f = message.getNamesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      2,
      f
    );
  }
};


/**
 * repeated uint32 bits = 1;
 * @return {!Array<number>}
 */
proto.cln.Fundchannel_startChannel_type.prototype.getBitsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.cln.Fundchannel_startChannel_type} returns this
 */
proto.cln.Fundchannel_startChannel_type.prototype.setBitsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.cln.Fundchannel_startChannel_type} returns this
 */
proto.cln.Fundchannel_startChannel_type.prototype.addBits = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.Fundchannel_startChannel_type} returns this
 */
proto.cln.Fundchannel_startChannel_type.prototype.clearBitsList = function() {
  return this.setBitsList([]);
};


/**
 * repeated ChannelTypeName names = 2;
 * @return {!Array<!proto.cln.ChannelTypeName>}
 */
proto.cln.Fundchannel_startChannel_type.prototype.getNamesList = function() {
  return /** @type {!Array<!proto.cln.ChannelTypeName>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<!proto.cln.ChannelTypeName>} value
 * @return {!proto.cln.Fundchannel_startChannel_type} returns this
 */
proto.cln.Fundchannel_startChannel_type.prototype.setNamesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!proto.cln.ChannelTypeName} value
 * @param {number=} opt_index
 * @return {!proto.cln.Fundchannel_startChannel_type} returns this
 */
proto.cln.Fundchannel_startChannel_type.prototype.addNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.Fundchannel_startChannel_type} returns this
 */
proto.cln.Fundchannel_startChannel_type.prototype.clearNamesList = function() {
  return this.setNamesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.GetlogRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.GetlogRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.GetlogRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetlogRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    level: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.GetlogRequest}
 */
proto.cln.GetlogRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.GetlogRequest;
  return proto.cln.GetlogRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.GetlogRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.GetlogRequest}
 */
proto.cln.GetlogRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.GetlogRequest.GetlogLevel} */ (reader.readEnum());
      msg.setLevel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.GetlogRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.GetlogRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.GetlogRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetlogRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.cln.GetlogRequest.GetlogLevel} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.GetlogRequest.GetlogLevel = {
  BROKEN: 0,
  UNUSUAL: 1,
  INFO: 2,
  DEBUG: 3,
  IO: 4,
  TRACE: 5
};

/**
 * optional GetlogLevel level = 1;
 * @return {!proto.cln.GetlogRequest.GetlogLevel}
 */
proto.cln.GetlogRequest.prototype.getLevel = function() {
  return /** @type {!proto.cln.GetlogRequest.GetlogLevel} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.GetlogRequest.GetlogLevel} value
 * @return {!proto.cln.GetlogRequest} returns this
 */
proto.cln.GetlogRequest.prototype.setLevel = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.GetlogRequest} returns this
 */
proto.cln.GetlogRequest.prototype.clearLevel = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetlogRequest.prototype.hasLevel = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.GetlogResponse.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.GetlogResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.GetlogResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.GetlogResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetlogResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    createdAt: jspb.Message.getFieldWithDefault(msg, 1, ""),
    bytesUsed: jspb.Message.getFieldWithDefault(msg, 2, 0),
    bytesMax: jspb.Message.getFieldWithDefault(msg, 3, 0),
    logList: jspb.Message.toObjectList(msg.getLogList(),
    proto.cln.GetlogLog.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.GetlogResponse}
 */
proto.cln.GetlogResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.GetlogResponse;
  return proto.cln.GetlogResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.GetlogResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.GetlogResponse}
 */
proto.cln.GetlogResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBytesUsed(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBytesMax(value);
      break;
    case 4:
      var value = new proto.cln.GetlogLog;
      reader.readMessage(value,proto.cln.GetlogLog.deserializeBinaryFromReader);
      msg.addLog(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.GetlogResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.GetlogResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.GetlogResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetlogResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBytesUsed();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getBytesMax();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getLogList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.cln.GetlogLog.serializeBinaryToWriter
    );
  }
};


/**
 * optional string created_at = 1;
 * @return {string}
 */
proto.cln.GetlogResponse.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.GetlogResponse} returns this
 */
proto.cln.GetlogResponse.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 bytes_used = 2;
 * @return {number}
 */
proto.cln.GetlogResponse.prototype.getBytesUsed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.GetlogResponse} returns this
 */
proto.cln.GetlogResponse.prototype.setBytesUsed = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 bytes_max = 3;
 * @return {number}
 */
proto.cln.GetlogResponse.prototype.getBytesMax = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.GetlogResponse} returns this
 */
proto.cln.GetlogResponse.prototype.setBytesMax = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated GetlogLog log = 4;
 * @return {!Array<!proto.cln.GetlogLog>}
 */
proto.cln.GetlogResponse.prototype.getLogList = function() {
  return /** @type{!Array<!proto.cln.GetlogLog>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.GetlogLog, 4));
};


/**
 * @param {!Array<!proto.cln.GetlogLog>} value
 * @return {!proto.cln.GetlogResponse} returns this
*/
proto.cln.GetlogResponse.prototype.setLogList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.cln.GetlogLog=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.GetlogLog}
 */
proto.cln.GetlogResponse.prototype.addLog = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.cln.GetlogLog, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.GetlogResponse} returns this
 */
proto.cln.GetlogResponse.prototype.clearLogList = function() {
  return this.setLogList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.GetlogLog.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.GetlogLog.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.GetlogLog} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetlogLog.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    numSkipped: jspb.Message.getFieldWithDefault(msg, 2, 0),
    time: jspb.Message.getFieldWithDefault(msg, 3, ""),
    source: jspb.Message.getFieldWithDefault(msg, 4, ""),
    log: jspb.Message.getFieldWithDefault(msg, 5, ""),
    nodeId: msg.getNodeId_asB64(),
    data: msg.getData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.GetlogLog}
 */
proto.cln.GetlogLog.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.GetlogLog;
  return proto.cln.GetlogLog.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.GetlogLog} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.GetlogLog}
 */
proto.cln.GetlogLog.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.GetlogLog.GetlogLogType} */ (reader.readEnum());
      msg.setItemType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumSkipped(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTime(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLog(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setNodeId(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.GetlogLog.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.GetlogLog.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.GetlogLog} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetlogLog.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBytes(
      7,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.GetlogLog.GetlogLogType = {
  SKIPPED: 0,
  BROKEN: 1,
  UNUSUAL: 2,
  INFO: 3,
  DEBUG: 4,
  IO_IN: 5,
  IO_OUT: 6,
  TRACE: 7
};

/**
 * optional GetlogLogType item_type = 1;
 * @return {!proto.cln.GetlogLog.GetlogLogType}
 */
proto.cln.GetlogLog.prototype.getItemType = function() {
  return /** @type {!proto.cln.GetlogLog.GetlogLogType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.GetlogLog.GetlogLogType} value
 * @return {!proto.cln.GetlogLog} returns this
 */
proto.cln.GetlogLog.prototype.setItemType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint32 num_skipped = 2;
 * @return {number}
 */
proto.cln.GetlogLog.prototype.getNumSkipped = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.GetlogLog} returns this
 */
proto.cln.GetlogLog.prototype.setNumSkipped = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.GetlogLog} returns this
 */
proto.cln.GetlogLog.prototype.clearNumSkipped = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetlogLog.prototype.hasNumSkipped = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string time = 3;
 * @return {string}
 */
proto.cln.GetlogLog.prototype.getTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.GetlogLog} returns this
 */
proto.cln.GetlogLog.prototype.setTime = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.GetlogLog} returns this
 */
proto.cln.GetlogLog.prototype.clearTime = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetlogLog.prototype.hasTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string source = 4;
 * @return {string}
 */
proto.cln.GetlogLog.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.GetlogLog} returns this
 */
proto.cln.GetlogLog.prototype.setSource = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.GetlogLog} returns this
 */
proto.cln.GetlogLog.prototype.clearSource = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetlogLog.prototype.hasSource = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string log = 5;
 * @return {string}
 */
proto.cln.GetlogLog.prototype.getLog = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.GetlogLog} returns this
 */
proto.cln.GetlogLog.prototype.setLog = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.GetlogLog} returns this
 */
proto.cln.GetlogLog.prototype.clearLog = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetlogLog.prototype.hasLog = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bytes node_id = 6;
 * @return {!(string|Uint8Array)}
 */
proto.cln.GetlogLog.prototype.getNodeId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes node_id = 6;
 * This is a type-conversion wrapper around `getNodeId()`
 * @return {string}
 */
proto.cln.GetlogLog.prototype.getNodeId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getNodeId()));
};


/**
 * optional bytes node_id = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getNodeId()`
 * @return {!Uint8Array}
 */
proto.cln.GetlogLog.prototype.getNodeId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getNodeId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.GetlogLog} returns this
 */
proto.cln.GetlogLog.prototype.setNodeId = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.GetlogLog} returns this
 */
proto.cln.GetlogLog.prototype.clearNodeId = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetlogLog.prototype.hasNodeId = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bytes data = 7;
 * @return {!(string|Uint8Array)}
 */
proto.cln.GetlogLog.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes data = 7;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.cln.GetlogLog.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.cln.GetlogLog.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.GetlogLog} returns this
 */
proto.cln.GetlogLog.prototype.setData = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.GetlogLog} returns this
 */
proto.cln.GetlogLog.prototype.clearData = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetlogLog.prototype.hasData = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.FunderupdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.FunderupdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.FunderupdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FunderupdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    policy: jspb.Message.getFieldWithDefault(msg, 1, 0),
    policyMod: (f = msg.getPolicyMod()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    leasesOnly: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    minTheirFundingMsat: (f = msg.getMinTheirFundingMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    maxTheirFundingMsat: (f = msg.getMaxTheirFundingMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    perChannelMinMsat: (f = msg.getPerChannelMinMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    perChannelMaxMsat: (f = msg.getPerChannelMaxMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    reserveTankMsat: (f = msg.getReserveTankMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    fuzzPercent: jspb.Message.getFieldWithDefault(msg, 9, 0),
    fundProbability: jspb.Message.getFieldWithDefault(msg, 10, 0),
    leaseFeeBaseMsat: (f = msg.getLeaseFeeBaseMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    leaseFeeBasis: jspb.Message.getFieldWithDefault(msg, 12, 0),
    fundingWeight: jspb.Message.getFieldWithDefault(msg, 13, 0),
    channelFeeMaxBaseMsat: (f = msg.getChannelFeeMaxBaseMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    channelFeeMaxProportionalThousandths: jspb.Message.getFieldWithDefault(msg, 15, 0),
    compactLease: msg.getCompactLease_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.FunderupdateRequest}
 */
proto.cln.FunderupdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.FunderupdateRequest;
  return proto.cln.FunderupdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.FunderupdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.FunderupdateRequest}
 */
proto.cln.FunderupdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.FunderupdateRequest.FunderupdatePolicy} */ (reader.readEnum());
      msg.setPolicy(value);
      break;
    case 2:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setPolicyMod(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLeasesOnly(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setMinTheirFundingMsat(value);
      break;
    case 5:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setMaxTheirFundingMsat(value);
      break;
    case 6:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setPerChannelMinMsat(value);
      break;
    case 7:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setPerChannelMaxMsat(value);
      break;
    case 8:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setReserveTankMsat(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFuzzPercent(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFundProbability(value);
      break;
    case 11:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setLeaseFeeBaseMsat(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLeaseFeeBasis(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFundingWeight(value);
      break;
    case 14:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setChannelFeeMaxBaseMsat(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setChannelFeeMaxProportionalThousandths(value);
      break;
    case 16:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setCompactLease(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.FunderupdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.FunderupdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.FunderupdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FunderupdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.cln.FunderupdateRequest.FunderupdatePolicy} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getPolicyMod();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getMinTheirFundingMsat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getMaxTheirFundingMsat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getPerChannelMinMsat();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getPerChannelMaxMsat();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getReserveTankMsat();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = message.getLeaseFeeBaseMsat();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint32(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeUint32(
      13,
      f
    );
  }
  f = message.getChannelFeeMaxBaseMsat();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint32(
      15,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeBytes(
      16,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.FunderupdateRequest.FunderupdatePolicy = {
  MATCH: 0,
  AVAILABLE: 1,
  FIXED: 2
};

/**
 * optional FunderupdatePolicy policy = 1;
 * @return {!proto.cln.FunderupdateRequest.FunderupdatePolicy}
 */
proto.cln.FunderupdateRequest.prototype.getPolicy = function() {
  return /** @type {!proto.cln.FunderupdateRequest.FunderupdatePolicy} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.FunderupdateRequest.FunderupdatePolicy} value
 * @return {!proto.cln.FunderupdateRequest} returns this
 */
proto.cln.FunderupdateRequest.prototype.setPolicy = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FunderupdateRequest} returns this
 */
proto.cln.FunderupdateRequest.prototype.clearPolicy = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FunderupdateRequest.prototype.hasPolicy = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Amount policy_mod = 2;
 * @return {?proto.cln.Amount}
 */
proto.cln.FunderupdateRequest.prototype.getPolicyMod = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 2));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.FunderupdateRequest} returns this
*/
proto.cln.FunderupdateRequest.prototype.setPolicyMod = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FunderupdateRequest} returns this
 */
proto.cln.FunderupdateRequest.prototype.clearPolicyMod = function() {
  return this.setPolicyMod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FunderupdateRequest.prototype.hasPolicyMod = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool leases_only = 3;
 * @return {boolean}
 */
proto.cln.FunderupdateRequest.prototype.getLeasesOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.FunderupdateRequest} returns this
 */
proto.cln.FunderupdateRequest.prototype.setLeasesOnly = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FunderupdateRequest} returns this
 */
proto.cln.FunderupdateRequest.prototype.clearLeasesOnly = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FunderupdateRequest.prototype.hasLeasesOnly = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Amount min_their_funding_msat = 4;
 * @return {?proto.cln.Amount}
 */
proto.cln.FunderupdateRequest.prototype.getMinTheirFundingMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 4));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.FunderupdateRequest} returns this
*/
proto.cln.FunderupdateRequest.prototype.setMinTheirFundingMsat = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FunderupdateRequest} returns this
 */
proto.cln.FunderupdateRequest.prototype.clearMinTheirFundingMsat = function() {
  return this.setMinTheirFundingMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FunderupdateRequest.prototype.hasMinTheirFundingMsat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Amount max_their_funding_msat = 5;
 * @return {?proto.cln.Amount}
 */
proto.cln.FunderupdateRequest.prototype.getMaxTheirFundingMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 5));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.FunderupdateRequest} returns this
*/
proto.cln.FunderupdateRequest.prototype.setMaxTheirFundingMsat = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FunderupdateRequest} returns this
 */
proto.cln.FunderupdateRequest.prototype.clearMaxTheirFundingMsat = function() {
  return this.setMaxTheirFundingMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FunderupdateRequest.prototype.hasMaxTheirFundingMsat = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Amount per_channel_min_msat = 6;
 * @return {?proto.cln.Amount}
 */
proto.cln.FunderupdateRequest.prototype.getPerChannelMinMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 6));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.FunderupdateRequest} returns this
*/
proto.cln.FunderupdateRequest.prototype.setPerChannelMinMsat = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FunderupdateRequest} returns this
 */
proto.cln.FunderupdateRequest.prototype.clearPerChannelMinMsat = function() {
  return this.setPerChannelMinMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FunderupdateRequest.prototype.hasPerChannelMinMsat = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Amount per_channel_max_msat = 7;
 * @return {?proto.cln.Amount}
 */
proto.cln.FunderupdateRequest.prototype.getPerChannelMaxMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 7));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.FunderupdateRequest} returns this
*/
proto.cln.FunderupdateRequest.prototype.setPerChannelMaxMsat = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FunderupdateRequest} returns this
 */
proto.cln.FunderupdateRequest.prototype.clearPerChannelMaxMsat = function() {
  return this.setPerChannelMaxMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FunderupdateRequest.prototype.hasPerChannelMaxMsat = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Amount reserve_tank_msat = 8;
 * @return {?proto.cln.Amount}
 */
proto.cln.FunderupdateRequest.prototype.getReserveTankMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 8));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.FunderupdateRequest} returns this
*/
proto.cln.FunderupdateRequest.prototype.setReserveTankMsat = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FunderupdateRequest} returns this
 */
proto.cln.FunderupdateRequest.prototype.clearReserveTankMsat = function() {
  return this.setReserveTankMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FunderupdateRequest.prototype.hasReserveTankMsat = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 fuzz_percent = 9;
 * @return {number}
 */
proto.cln.FunderupdateRequest.prototype.getFuzzPercent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FunderupdateRequest} returns this
 */
proto.cln.FunderupdateRequest.prototype.setFuzzPercent = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FunderupdateRequest} returns this
 */
proto.cln.FunderupdateRequest.prototype.clearFuzzPercent = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FunderupdateRequest.prototype.hasFuzzPercent = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint32 fund_probability = 10;
 * @return {number}
 */
proto.cln.FunderupdateRequest.prototype.getFundProbability = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FunderupdateRequest} returns this
 */
proto.cln.FunderupdateRequest.prototype.setFundProbability = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FunderupdateRequest} returns this
 */
proto.cln.FunderupdateRequest.prototype.clearFundProbability = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FunderupdateRequest.prototype.hasFundProbability = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Amount lease_fee_base_msat = 11;
 * @return {?proto.cln.Amount}
 */
proto.cln.FunderupdateRequest.prototype.getLeaseFeeBaseMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 11));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.FunderupdateRequest} returns this
*/
proto.cln.FunderupdateRequest.prototype.setLeaseFeeBaseMsat = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FunderupdateRequest} returns this
 */
proto.cln.FunderupdateRequest.prototype.clearLeaseFeeBaseMsat = function() {
  return this.setLeaseFeeBaseMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FunderupdateRequest.prototype.hasLeaseFeeBaseMsat = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint32 lease_fee_basis = 12;
 * @return {number}
 */
proto.cln.FunderupdateRequest.prototype.getLeaseFeeBasis = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FunderupdateRequest} returns this
 */
proto.cln.FunderupdateRequest.prototype.setLeaseFeeBasis = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FunderupdateRequest} returns this
 */
proto.cln.FunderupdateRequest.prototype.clearLeaseFeeBasis = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FunderupdateRequest.prototype.hasLeaseFeeBasis = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional uint32 funding_weight = 13;
 * @return {number}
 */
proto.cln.FunderupdateRequest.prototype.getFundingWeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FunderupdateRequest} returns this
 */
proto.cln.FunderupdateRequest.prototype.setFundingWeight = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FunderupdateRequest} returns this
 */
proto.cln.FunderupdateRequest.prototype.clearFundingWeight = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FunderupdateRequest.prototype.hasFundingWeight = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional Amount channel_fee_max_base_msat = 14;
 * @return {?proto.cln.Amount}
 */
proto.cln.FunderupdateRequest.prototype.getChannelFeeMaxBaseMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 14));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.FunderupdateRequest} returns this
*/
proto.cln.FunderupdateRequest.prototype.setChannelFeeMaxBaseMsat = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FunderupdateRequest} returns this
 */
proto.cln.FunderupdateRequest.prototype.clearChannelFeeMaxBaseMsat = function() {
  return this.setChannelFeeMaxBaseMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FunderupdateRequest.prototype.hasChannelFeeMaxBaseMsat = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional uint32 channel_fee_max_proportional_thousandths = 15;
 * @return {number}
 */
proto.cln.FunderupdateRequest.prototype.getChannelFeeMaxProportionalThousandths = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FunderupdateRequest} returns this
 */
proto.cln.FunderupdateRequest.prototype.setChannelFeeMaxProportionalThousandths = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FunderupdateRequest} returns this
 */
proto.cln.FunderupdateRequest.prototype.clearChannelFeeMaxProportionalThousandths = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FunderupdateRequest.prototype.hasChannelFeeMaxProportionalThousandths = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional bytes compact_lease = 16;
 * @return {!(string|Uint8Array)}
 */
proto.cln.FunderupdateRequest.prototype.getCompactLease = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * optional bytes compact_lease = 16;
 * This is a type-conversion wrapper around `getCompactLease()`
 * @return {string}
 */
proto.cln.FunderupdateRequest.prototype.getCompactLease_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getCompactLease()));
};


/**
 * optional bytes compact_lease = 16;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCompactLease()`
 * @return {!Uint8Array}
 */
proto.cln.FunderupdateRequest.prototype.getCompactLease_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getCompactLease()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.FunderupdateRequest} returns this
 */
proto.cln.FunderupdateRequest.prototype.setCompactLease = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FunderupdateRequest} returns this
 */
proto.cln.FunderupdateRequest.prototype.clearCompactLease = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FunderupdateRequest.prototype.hasCompactLease = function() {
  return jspb.Message.getField(this, 16) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.FunderupdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.FunderupdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.FunderupdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FunderupdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    summary: jspb.Message.getFieldWithDefault(msg, 1, ""),
    policy: jspb.Message.getFieldWithDefault(msg, 2, 0),
    policyMod: jspb.Message.getFieldWithDefault(msg, 3, 0),
    leasesOnly: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    minTheirFundingMsat: (f = msg.getMinTheirFundingMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    maxTheirFundingMsat: (f = msg.getMaxTheirFundingMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    perChannelMinMsat: (f = msg.getPerChannelMinMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    perChannelMaxMsat: (f = msg.getPerChannelMaxMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    reserveTankMsat: (f = msg.getReserveTankMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    fuzzPercent: jspb.Message.getFieldWithDefault(msg, 10, 0),
    fundProbability: jspb.Message.getFieldWithDefault(msg, 11, 0),
    leaseFeeBaseMsat: (f = msg.getLeaseFeeBaseMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    leaseFeeBasis: jspb.Message.getFieldWithDefault(msg, 13, 0),
    fundingWeight: jspb.Message.getFieldWithDefault(msg, 14, 0),
    channelFeeMaxBaseMsat: (f = msg.getChannelFeeMaxBaseMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    channelFeeMaxProportionalThousandths: jspb.Message.getFieldWithDefault(msg, 16, 0),
    compactLease: msg.getCompactLease_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.FunderupdateResponse}
 */
proto.cln.FunderupdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.FunderupdateResponse;
  return proto.cln.FunderupdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.FunderupdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.FunderupdateResponse}
 */
proto.cln.FunderupdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSummary(value);
      break;
    case 2:
      var value = /** @type {!proto.cln.FunderupdateResponse.FunderupdatePolicy} */ (reader.readEnum());
      msg.setPolicy(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPolicyMod(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLeasesOnly(value);
      break;
    case 5:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setMinTheirFundingMsat(value);
      break;
    case 6:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setMaxTheirFundingMsat(value);
      break;
    case 7:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setPerChannelMinMsat(value);
      break;
    case 8:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setPerChannelMaxMsat(value);
      break;
    case 9:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setReserveTankMsat(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFuzzPercent(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFundProbability(value);
      break;
    case 12:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setLeaseFeeBaseMsat(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLeaseFeeBasis(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFundingWeight(value);
      break;
    case 15:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setChannelFeeMaxBaseMsat(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setChannelFeeMaxProportionalThousandths(value);
      break;
    case 17:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setCompactLease(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.FunderupdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.FunderupdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.FunderupdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FunderupdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSummary();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPolicy();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getPolicyMod();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getLeasesOnly();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getMinTheirFundingMsat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getMaxTheirFundingMsat();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getPerChannelMinMsat();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getPerChannelMaxMsat();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getReserveTankMsat();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getFuzzPercent();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = message.getFundProbability();
  if (f !== 0) {
    writer.writeUint32(
      11,
      f
    );
  }
  f = message.getLeaseFeeBaseMsat();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeUint32(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeUint32(
      14,
      f
    );
  }
  f = message.getChannelFeeMaxBaseMsat();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint32(
      16,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeBytes(
      17,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.FunderupdateResponse.FunderupdatePolicy = {
  MATCH: 0,
  AVAILABLE: 1,
  FIXED: 2
};

/**
 * optional string summary = 1;
 * @return {string}
 */
proto.cln.FunderupdateResponse.prototype.getSummary = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.FunderupdateResponse} returns this
 */
proto.cln.FunderupdateResponse.prototype.setSummary = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional FunderupdatePolicy policy = 2;
 * @return {!proto.cln.FunderupdateResponse.FunderupdatePolicy}
 */
proto.cln.FunderupdateResponse.prototype.getPolicy = function() {
  return /** @type {!proto.cln.FunderupdateResponse.FunderupdatePolicy} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.cln.FunderupdateResponse.FunderupdatePolicy} value
 * @return {!proto.cln.FunderupdateResponse} returns this
 */
proto.cln.FunderupdateResponse.prototype.setPolicy = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional uint32 policy_mod = 3;
 * @return {number}
 */
proto.cln.FunderupdateResponse.prototype.getPolicyMod = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FunderupdateResponse} returns this
 */
proto.cln.FunderupdateResponse.prototype.setPolicyMod = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool leases_only = 4;
 * @return {boolean}
 */
proto.cln.FunderupdateResponse.prototype.getLeasesOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.FunderupdateResponse} returns this
 */
proto.cln.FunderupdateResponse.prototype.setLeasesOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional Amount min_their_funding_msat = 5;
 * @return {?proto.cln.Amount}
 */
proto.cln.FunderupdateResponse.prototype.getMinTheirFundingMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 5));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.FunderupdateResponse} returns this
*/
proto.cln.FunderupdateResponse.prototype.setMinTheirFundingMsat = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FunderupdateResponse} returns this
 */
proto.cln.FunderupdateResponse.prototype.clearMinTheirFundingMsat = function() {
  return this.setMinTheirFundingMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FunderupdateResponse.prototype.hasMinTheirFundingMsat = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Amount max_their_funding_msat = 6;
 * @return {?proto.cln.Amount}
 */
proto.cln.FunderupdateResponse.prototype.getMaxTheirFundingMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 6));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.FunderupdateResponse} returns this
*/
proto.cln.FunderupdateResponse.prototype.setMaxTheirFundingMsat = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FunderupdateResponse} returns this
 */
proto.cln.FunderupdateResponse.prototype.clearMaxTheirFundingMsat = function() {
  return this.setMaxTheirFundingMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FunderupdateResponse.prototype.hasMaxTheirFundingMsat = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Amount per_channel_min_msat = 7;
 * @return {?proto.cln.Amount}
 */
proto.cln.FunderupdateResponse.prototype.getPerChannelMinMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 7));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.FunderupdateResponse} returns this
*/
proto.cln.FunderupdateResponse.prototype.setPerChannelMinMsat = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FunderupdateResponse} returns this
 */
proto.cln.FunderupdateResponse.prototype.clearPerChannelMinMsat = function() {
  return this.setPerChannelMinMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FunderupdateResponse.prototype.hasPerChannelMinMsat = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Amount per_channel_max_msat = 8;
 * @return {?proto.cln.Amount}
 */
proto.cln.FunderupdateResponse.prototype.getPerChannelMaxMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 8));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.FunderupdateResponse} returns this
*/
proto.cln.FunderupdateResponse.prototype.setPerChannelMaxMsat = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FunderupdateResponse} returns this
 */
proto.cln.FunderupdateResponse.prototype.clearPerChannelMaxMsat = function() {
  return this.setPerChannelMaxMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FunderupdateResponse.prototype.hasPerChannelMaxMsat = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Amount reserve_tank_msat = 9;
 * @return {?proto.cln.Amount}
 */
proto.cln.FunderupdateResponse.prototype.getReserveTankMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 9));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.FunderupdateResponse} returns this
*/
proto.cln.FunderupdateResponse.prototype.setReserveTankMsat = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FunderupdateResponse} returns this
 */
proto.cln.FunderupdateResponse.prototype.clearReserveTankMsat = function() {
  return this.setReserveTankMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FunderupdateResponse.prototype.hasReserveTankMsat = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint32 fuzz_percent = 10;
 * @return {number}
 */
proto.cln.FunderupdateResponse.prototype.getFuzzPercent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FunderupdateResponse} returns this
 */
proto.cln.FunderupdateResponse.prototype.setFuzzPercent = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional uint32 fund_probability = 11;
 * @return {number}
 */
proto.cln.FunderupdateResponse.prototype.getFundProbability = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FunderupdateResponse} returns this
 */
proto.cln.FunderupdateResponse.prototype.setFundProbability = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional Amount lease_fee_base_msat = 12;
 * @return {?proto.cln.Amount}
 */
proto.cln.FunderupdateResponse.prototype.getLeaseFeeBaseMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 12));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.FunderupdateResponse} returns this
*/
proto.cln.FunderupdateResponse.prototype.setLeaseFeeBaseMsat = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FunderupdateResponse} returns this
 */
proto.cln.FunderupdateResponse.prototype.clearLeaseFeeBaseMsat = function() {
  return this.setLeaseFeeBaseMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FunderupdateResponse.prototype.hasLeaseFeeBaseMsat = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional uint32 lease_fee_basis = 13;
 * @return {number}
 */
proto.cln.FunderupdateResponse.prototype.getLeaseFeeBasis = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FunderupdateResponse} returns this
 */
proto.cln.FunderupdateResponse.prototype.setLeaseFeeBasis = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FunderupdateResponse} returns this
 */
proto.cln.FunderupdateResponse.prototype.clearLeaseFeeBasis = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FunderupdateResponse.prototype.hasLeaseFeeBasis = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional uint32 funding_weight = 14;
 * @return {number}
 */
proto.cln.FunderupdateResponse.prototype.getFundingWeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FunderupdateResponse} returns this
 */
proto.cln.FunderupdateResponse.prototype.setFundingWeight = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FunderupdateResponse} returns this
 */
proto.cln.FunderupdateResponse.prototype.clearFundingWeight = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FunderupdateResponse.prototype.hasFundingWeight = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional Amount channel_fee_max_base_msat = 15;
 * @return {?proto.cln.Amount}
 */
proto.cln.FunderupdateResponse.prototype.getChannelFeeMaxBaseMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 15));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.FunderupdateResponse} returns this
*/
proto.cln.FunderupdateResponse.prototype.setChannelFeeMaxBaseMsat = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FunderupdateResponse} returns this
 */
proto.cln.FunderupdateResponse.prototype.clearChannelFeeMaxBaseMsat = function() {
  return this.setChannelFeeMaxBaseMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FunderupdateResponse.prototype.hasChannelFeeMaxBaseMsat = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional uint32 channel_fee_max_proportional_thousandths = 16;
 * @return {number}
 */
proto.cln.FunderupdateResponse.prototype.getChannelFeeMaxProportionalThousandths = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FunderupdateResponse} returns this
 */
proto.cln.FunderupdateResponse.prototype.setChannelFeeMaxProportionalThousandths = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FunderupdateResponse} returns this
 */
proto.cln.FunderupdateResponse.prototype.clearChannelFeeMaxProportionalThousandths = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FunderupdateResponse.prototype.hasChannelFeeMaxProportionalThousandths = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional bytes compact_lease = 17;
 * @return {!(string|Uint8Array)}
 */
proto.cln.FunderupdateResponse.prototype.getCompactLease = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * optional bytes compact_lease = 17;
 * This is a type-conversion wrapper around `getCompactLease()`
 * @return {string}
 */
proto.cln.FunderupdateResponse.prototype.getCompactLease_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getCompactLease()));
};


/**
 * optional bytes compact_lease = 17;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCompactLease()`
 * @return {!Uint8Array}
 */
proto.cln.FunderupdateResponse.prototype.getCompactLease_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getCompactLease()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.FunderupdateResponse} returns this
 */
proto.cln.FunderupdateResponse.prototype.setCompactLease = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FunderupdateResponse} returns this
 */
proto.cln.FunderupdateResponse.prototype.clearCompactLease = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FunderupdateResponse.prototype.hasCompactLease = function() {
  return jspb.Message.getField(this, 17) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.GetrouteRequest.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.GetrouteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.GetrouteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.GetrouteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetrouteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64(),
    riskfactor: jspb.Message.getFieldWithDefault(msg, 3, 0),
    cltv: jspb.Message.getFieldWithDefault(msg, 4, 0),
    fromid: msg.getFromid_asB64(),
    fuzzpercent: jspb.Message.getFieldWithDefault(msg, 6, 0),
    excludeList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    maxhops: jspb.Message.getFieldWithDefault(msg, 8, 0),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.GetrouteRequest}
 */
proto.cln.GetrouteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.GetrouteRequest;
  return proto.cln.GetrouteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.GetrouteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.GetrouteRequest}
 */
proto.cln.GetrouteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRiskfactor(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCltv(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFromid(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFuzzpercent(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addExclude(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxhops(value);
      break;
    case 9:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.GetrouteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.GetrouteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.GetrouteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetrouteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getRiskfactor();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getExcludeList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.GetrouteRequest.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes id = 1;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.cln.GetrouteRequest.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.cln.GetrouteRequest.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.GetrouteRequest} returns this
 */
proto.cln.GetrouteRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint64 riskfactor = 3;
 * @return {number}
 */
proto.cln.GetrouteRequest.prototype.getRiskfactor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.GetrouteRequest} returns this
 */
proto.cln.GetrouteRequest.prototype.setRiskfactor = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 cltv = 4;
 * @return {number}
 */
proto.cln.GetrouteRequest.prototype.getCltv = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.GetrouteRequest} returns this
 */
proto.cln.GetrouteRequest.prototype.setCltv = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.GetrouteRequest} returns this
 */
proto.cln.GetrouteRequest.prototype.clearCltv = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetrouteRequest.prototype.hasCltv = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bytes fromid = 5;
 * @return {!(string|Uint8Array)}
 */
proto.cln.GetrouteRequest.prototype.getFromid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes fromid = 5;
 * This is a type-conversion wrapper around `getFromid()`
 * @return {string}
 */
proto.cln.GetrouteRequest.prototype.getFromid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFromid()));
};


/**
 * optional bytes fromid = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFromid()`
 * @return {!Uint8Array}
 */
proto.cln.GetrouteRequest.prototype.getFromid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFromid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.GetrouteRequest} returns this
 */
proto.cln.GetrouteRequest.prototype.setFromid = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.GetrouteRequest} returns this
 */
proto.cln.GetrouteRequest.prototype.clearFromid = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetrouteRequest.prototype.hasFromid = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 fuzzpercent = 6;
 * @return {number}
 */
proto.cln.GetrouteRequest.prototype.getFuzzpercent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.GetrouteRequest} returns this
 */
proto.cln.GetrouteRequest.prototype.setFuzzpercent = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.GetrouteRequest} returns this
 */
proto.cln.GetrouteRequest.prototype.clearFuzzpercent = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetrouteRequest.prototype.hasFuzzpercent = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated string exclude = 7;
 * @return {!Array<string>}
 */
proto.cln.GetrouteRequest.prototype.getExcludeList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.GetrouteRequest} returns this
 */
proto.cln.GetrouteRequest.prototype.setExcludeList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.GetrouteRequest} returns this
 */
proto.cln.GetrouteRequest.prototype.addExclude = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.GetrouteRequest} returns this
 */
proto.cln.GetrouteRequest.prototype.clearExcludeList = function() {
  return this.setExcludeList([]);
};


/**
 * optional uint32 maxhops = 8;
 * @return {number}
 */
proto.cln.GetrouteRequest.prototype.getMaxhops = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.GetrouteRequest} returns this
 */
proto.cln.GetrouteRequest.prototype.setMaxhops = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.GetrouteRequest} returns this
 */
proto.cln.GetrouteRequest.prototype.clearMaxhops = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetrouteRequest.prototype.hasMaxhops = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Amount amount_msat = 9;
 * @return {?proto.cln.Amount}
 */
proto.cln.GetrouteRequest.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 9));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.GetrouteRequest} returns this
*/
proto.cln.GetrouteRequest.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.GetrouteRequest} returns this
 */
proto.cln.GetrouteRequest.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetrouteRequest.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.GetrouteResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.GetrouteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.GetrouteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.GetrouteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetrouteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    routeList: jspb.Message.toObjectList(msg.getRouteList(),
    proto.cln.GetrouteRoute.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.GetrouteResponse}
 */
proto.cln.GetrouteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.GetrouteResponse;
  return proto.cln.GetrouteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.GetrouteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.GetrouteResponse}
 */
proto.cln.GetrouteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.GetrouteRoute;
      reader.readMessage(value,proto.cln.GetrouteRoute.deserializeBinaryFromReader);
      msg.addRoute(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.GetrouteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.GetrouteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.GetrouteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetrouteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRouteList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.GetrouteRoute.serializeBinaryToWriter
    );
  }
};


/**
 * repeated GetrouteRoute route = 1;
 * @return {!Array<!proto.cln.GetrouteRoute>}
 */
proto.cln.GetrouteResponse.prototype.getRouteList = function() {
  return /** @type{!Array<!proto.cln.GetrouteRoute>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.GetrouteRoute, 1));
};


/**
 * @param {!Array<!proto.cln.GetrouteRoute>} value
 * @return {!proto.cln.GetrouteResponse} returns this
*/
proto.cln.GetrouteResponse.prototype.setRouteList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.GetrouteRoute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.GetrouteRoute}
 */
proto.cln.GetrouteResponse.prototype.addRoute = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.GetrouteRoute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.GetrouteResponse} returns this
 */
proto.cln.GetrouteResponse.prototype.clearRouteList = function() {
  return this.setRouteList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.GetrouteRoute.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.GetrouteRoute.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.GetrouteRoute} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetrouteRoute.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64(),
    channel: jspb.Message.getFieldWithDefault(msg, 2, ""),
    direction: jspb.Message.getFieldWithDefault(msg, 3, 0),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    delay: jspb.Message.getFieldWithDefault(msg, 5, 0),
    style: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.GetrouteRoute}
 */
proto.cln.GetrouteRoute.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.GetrouteRoute;
  return proto.cln.GetrouteRoute.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.GetrouteRoute} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.GetrouteRoute}
 */
proto.cln.GetrouteRoute.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannel(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDirection(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDelay(value);
      break;
    case 6:
      var value = /** @type {!proto.cln.GetrouteRoute.GetrouteRouteStyle} */ (reader.readEnum());
      msg.setStyle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.GetrouteRoute.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.GetrouteRoute.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.GetrouteRoute} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetrouteRoute.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getChannel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDirection();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getDelay();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getStyle();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.GetrouteRoute.GetrouteRouteStyle = {
  TLV: 0
};

/**
 * optional bytes id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.GetrouteRoute.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes id = 1;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.cln.GetrouteRoute.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.cln.GetrouteRoute.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.GetrouteRoute} returns this
 */
proto.cln.GetrouteRoute.prototype.setId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string channel = 2;
 * @return {string}
 */
proto.cln.GetrouteRoute.prototype.getChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.GetrouteRoute} returns this
 */
proto.cln.GetrouteRoute.prototype.setChannel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 direction = 3;
 * @return {number}
 */
proto.cln.GetrouteRoute.prototype.getDirection = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.GetrouteRoute} returns this
 */
proto.cln.GetrouteRoute.prototype.setDirection = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional Amount amount_msat = 4;
 * @return {?proto.cln.Amount}
 */
proto.cln.GetrouteRoute.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 4));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.GetrouteRoute} returns this
*/
proto.cln.GetrouteRoute.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.GetrouteRoute} returns this
 */
proto.cln.GetrouteRoute.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetrouteRoute.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 delay = 5;
 * @return {number}
 */
proto.cln.GetrouteRoute.prototype.getDelay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.GetrouteRoute} returns this
 */
proto.cln.GetrouteRoute.prototype.setDelay = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional GetrouteRouteStyle style = 6;
 * @return {!proto.cln.GetrouteRoute.GetrouteRouteStyle}
 */
proto.cln.GetrouteRoute.prototype.getStyle = function() {
  return /** @type {!proto.cln.GetrouteRoute.GetrouteRouteStyle} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.cln.GetrouteRoute.GetrouteRouteStyle} value
 * @return {!proto.cln.GetrouteRoute} returns this
 */
proto.cln.GetrouteRoute.prototype.setStyle = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListforwardsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListforwardsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListforwardsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListforwardsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    inChannel: jspb.Message.getFieldWithDefault(msg, 2, ""),
    outChannel: jspb.Message.getFieldWithDefault(msg, 3, ""),
    index: jspb.Message.getFieldWithDefault(msg, 4, 0),
    start: jspb.Message.getFieldWithDefault(msg, 5, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListforwardsRequest}
 */
proto.cln.ListforwardsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListforwardsRequest;
  return proto.cln.ListforwardsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListforwardsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListforwardsRequest}
 */
proto.cln.ListforwardsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.ListforwardsRequest.ListforwardsStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInChannel(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutChannel(value);
      break;
    case 4:
      var value = /** @type {!proto.cln.ListforwardsRequest.ListforwardsIndex} */ (reader.readEnum());
      msg.setIndex(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStart(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListforwardsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListforwardsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListforwardsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListforwardsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.cln.ListforwardsRequest.ListforwardsStatus} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {!proto.cln.ListforwardsRequest.ListforwardsIndex} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ListforwardsRequest.ListforwardsStatus = {
  OFFERED: 0,
  SETTLED: 1,
  LOCAL_FAILED: 2,
  FAILED: 3
};

/**
 * @enum {number}
 */
proto.cln.ListforwardsRequest.ListforwardsIndex = {
  CREATED: 0,
  UPDATED: 1
};

/**
 * optional ListforwardsStatus status = 1;
 * @return {!proto.cln.ListforwardsRequest.ListforwardsStatus}
 */
proto.cln.ListforwardsRequest.prototype.getStatus = function() {
  return /** @type {!proto.cln.ListforwardsRequest.ListforwardsStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.ListforwardsRequest.ListforwardsStatus} value
 * @return {!proto.cln.ListforwardsRequest} returns this
 */
proto.cln.ListforwardsRequest.prototype.setStatus = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListforwardsRequest} returns this
 */
proto.cln.ListforwardsRequest.prototype.clearStatus = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListforwardsRequest.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string in_channel = 2;
 * @return {string}
 */
proto.cln.ListforwardsRequest.prototype.getInChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListforwardsRequest} returns this
 */
proto.cln.ListforwardsRequest.prototype.setInChannel = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListforwardsRequest} returns this
 */
proto.cln.ListforwardsRequest.prototype.clearInChannel = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListforwardsRequest.prototype.hasInChannel = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string out_channel = 3;
 * @return {string}
 */
proto.cln.ListforwardsRequest.prototype.getOutChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListforwardsRequest} returns this
 */
proto.cln.ListforwardsRequest.prototype.setOutChannel = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListforwardsRequest} returns this
 */
proto.cln.ListforwardsRequest.prototype.clearOutChannel = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListforwardsRequest.prototype.hasOutChannel = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ListforwardsIndex index = 4;
 * @return {!proto.cln.ListforwardsRequest.ListforwardsIndex}
 */
proto.cln.ListforwardsRequest.prototype.getIndex = function() {
  return /** @type {!proto.cln.ListforwardsRequest.ListforwardsIndex} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.cln.ListforwardsRequest.ListforwardsIndex} value
 * @return {!proto.cln.ListforwardsRequest} returns this
 */
proto.cln.ListforwardsRequest.prototype.setIndex = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListforwardsRequest} returns this
 */
proto.cln.ListforwardsRequest.prototype.clearIndex = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListforwardsRequest.prototype.hasIndex = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint64 start = 5;
 * @return {number}
 */
proto.cln.ListforwardsRequest.prototype.getStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListforwardsRequest} returns this
 */
proto.cln.ListforwardsRequest.prototype.setStart = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListforwardsRequest} returns this
 */
proto.cln.ListforwardsRequest.prototype.clearStart = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListforwardsRequest.prototype.hasStart = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 limit = 6;
 * @return {number}
 */
proto.cln.ListforwardsRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListforwardsRequest} returns this
 */
proto.cln.ListforwardsRequest.prototype.setLimit = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListforwardsRequest} returns this
 */
proto.cln.ListforwardsRequest.prototype.clearLimit = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListforwardsRequest.prototype.hasLimit = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListforwardsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListforwardsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListforwardsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListforwardsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListforwardsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    forwardsList: jspb.Message.toObjectList(msg.getForwardsList(),
    proto.cln.ListforwardsForwards.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListforwardsResponse}
 */
proto.cln.ListforwardsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListforwardsResponse;
  return proto.cln.ListforwardsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListforwardsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListforwardsResponse}
 */
proto.cln.ListforwardsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.ListforwardsForwards;
      reader.readMessage(value,proto.cln.ListforwardsForwards.deserializeBinaryFromReader);
      msg.addForwards(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListforwardsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListforwardsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListforwardsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListforwardsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getForwardsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.ListforwardsForwards.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ListforwardsForwards forwards = 1;
 * @return {!Array<!proto.cln.ListforwardsForwards>}
 */
proto.cln.ListforwardsResponse.prototype.getForwardsList = function() {
  return /** @type{!Array<!proto.cln.ListforwardsForwards>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListforwardsForwards, 1));
};


/**
 * @param {!Array<!proto.cln.ListforwardsForwards>} value
 * @return {!proto.cln.ListforwardsResponse} returns this
*/
proto.cln.ListforwardsResponse.prototype.setForwardsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.ListforwardsForwards=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListforwardsForwards}
 */
proto.cln.ListforwardsResponse.prototype.addForwards = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.ListforwardsForwards, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListforwardsResponse} returns this
 */
proto.cln.ListforwardsResponse.prototype.clearForwardsList = function() {
  return this.setForwardsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListforwardsForwards.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListforwardsForwards.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListforwardsForwards} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListforwardsForwards.toObject = function(includeInstance, msg) {
  var f, obj = {
    inChannel: jspb.Message.getFieldWithDefault(msg, 1, ""),
    inMsat: (f = msg.getInMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 3, 0),
    receivedTime: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    outChannel: jspb.Message.getFieldWithDefault(msg, 5, ""),
    feeMsat: (f = msg.getFeeMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    outMsat: (f = msg.getOutMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    style: jspb.Message.getFieldWithDefault(msg, 9, 0),
    inHtlcId: jspb.Message.getFieldWithDefault(msg, 10, 0),
    outHtlcId: jspb.Message.getFieldWithDefault(msg, 11, 0),
    createdIndex: jspb.Message.getFieldWithDefault(msg, 12, 0),
    updatedIndex: jspb.Message.getFieldWithDefault(msg, 13, 0),
    resolvedTime: jspb.Message.getFloatingPointFieldWithDefault(msg, 14, 0.0),
    failcode: jspb.Message.getFieldWithDefault(msg, 15, 0),
    failreason: jspb.Message.getFieldWithDefault(msg, 16, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListforwardsForwards}
 */
proto.cln.ListforwardsForwards.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListforwardsForwards;
  return proto.cln.ListforwardsForwards.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListforwardsForwards} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListforwardsForwards}
 */
proto.cln.ListforwardsForwards.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInChannel(value);
      break;
    case 2:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setInMsat(value);
      break;
    case 3:
      var value = /** @type {!proto.cln.ListforwardsForwards.ListforwardsForwardsStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setReceivedTime(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutChannel(value);
      break;
    case 7:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setFeeMsat(value);
      break;
    case 8:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setOutMsat(value);
      break;
    case 9:
      var value = /** @type {!proto.cln.ListforwardsForwards.ListforwardsForwardsStyle} */ (reader.readEnum());
      msg.setStyle(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInHtlcId(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOutHtlcId(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedIndex(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpdatedIndex(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setResolvedTime(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFailcode(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailreason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListforwardsForwards.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListforwardsForwards.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListforwardsForwards} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListforwardsForwards.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInChannel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInMsat();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getReceivedTime();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFeeMsat();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getOutMsat();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.cln.ListforwardsForwards.ListforwardsForwardsStyle} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeUint64(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeDouble(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint32(
      15,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeString(
      16,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ListforwardsForwards.ListforwardsForwardsStatus = {
  OFFERED: 0,
  SETTLED: 1,
  LOCAL_FAILED: 2,
  FAILED: 3
};

/**
 * @enum {number}
 */
proto.cln.ListforwardsForwards.ListforwardsForwardsStyle = {
  LEGACY: 0,
  TLV: 1
};

/**
 * optional string in_channel = 1;
 * @return {string}
 */
proto.cln.ListforwardsForwards.prototype.getInChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.setInChannel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Amount in_msat = 2;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListforwardsForwards.prototype.getInMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 2));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListforwardsForwards} returns this
*/
proto.cln.ListforwardsForwards.prototype.setInMsat = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.clearInMsat = function() {
  return this.setInMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListforwardsForwards.prototype.hasInMsat = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ListforwardsForwardsStatus status = 3;
 * @return {!proto.cln.ListforwardsForwards.ListforwardsForwardsStatus}
 */
proto.cln.ListforwardsForwards.prototype.getStatus = function() {
  return /** @type {!proto.cln.ListforwardsForwards.ListforwardsForwardsStatus} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.cln.ListforwardsForwards.ListforwardsForwardsStatus} value
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional double received_time = 4;
 * @return {number}
 */
proto.cln.ListforwardsForwards.prototype.getReceivedTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.setReceivedTime = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional string out_channel = 5;
 * @return {string}
 */
proto.cln.ListforwardsForwards.prototype.getOutChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.setOutChannel = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.clearOutChannel = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListforwardsForwards.prototype.hasOutChannel = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Amount fee_msat = 7;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListforwardsForwards.prototype.getFeeMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 7));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListforwardsForwards} returns this
*/
proto.cln.ListforwardsForwards.prototype.setFeeMsat = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.clearFeeMsat = function() {
  return this.setFeeMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListforwardsForwards.prototype.hasFeeMsat = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Amount out_msat = 8;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListforwardsForwards.prototype.getOutMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 8));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListforwardsForwards} returns this
*/
proto.cln.ListforwardsForwards.prototype.setOutMsat = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.clearOutMsat = function() {
  return this.setOutMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListforwardsForwards.prototype.hasOutMsat = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional ListforwardsForwardsStyle style = 9;
 * @return {!proto.cln.ListforwardsForwards.ListforwardsForwardsStyle}
 */
proto.cln.ListforwardsForwards.prototype.getStyle = function() {
  return /** @type {!proto.cln.ListforwardsForwards.ListforwardsForwardsStyle} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.cln.ListforwardsForwards.ListforwardsForwardsStyle} value
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.setStyle = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.clearStyle = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListforwardsForwards.prototype.hasStyle = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint64 in_htlc_id = 10;
 * @return {number}
 */
proto.cln.ListforwardsForwards.prototype.getInHtlcId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.setInHtlcId = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.clearInHtlcId = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListforwardsForwards.prototype.hasInHtlcId = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint64 out_htlc_id = 11;
 * @return {number}
 */
proto.cln.ListforwardsForwards.prototype.getOutHtlcId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.setOutHtlcId = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.clearOutHtlcId = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListforwardsForwards.prototype.hasOutHtlcId = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint64 created_index = 12;
 * @return {number}
 */
proto.cln.ListforwardsForwards.prototype.getCreatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.setCreatedIndex = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.clearCreatedIndex = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListforwardsForwards.prototype.hasCreatedIndex = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional uint64 updated_index = 13;
 * @return {number}
 */
proto.cln.ListforwardsForwards.prototype.getUpdatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.setUpdatedIndex = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.clearUpdatedIndex = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListforwardsForwards.prototype.hasUpdatedIndex = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional double resolved_time = 14;
 * @return {number}
 */
proto.cln.ListforwardsForwards.prototype.getResolvedTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.setResolvedTime = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.clearResolvedTime = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListforwardsForwards.prototype.hasResolvedTime = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional uint32 failcode = 15;
 * @return {number}
 */
proto.cln.ListforwardsForwards.prototype.getFailcode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.setFailcode = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.clearFailcode = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListforwardsForwards.prototype.hasFailcode = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional string failreason = 16;
 * @return {string}
 */
proto.cln.ListforwardsForwards.prototype.getFailreason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.setFailreason = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.clearFailreason = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListforwardsForwards.prototype.hasFailreason = function() {
  return jspb.Message.getField(this, 16) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListoffersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListoffersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListoffersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListoffersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    offerId: msg.getOfferId_asB64(),
    activeOnly: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListoffersRequest}
 */
proto.cln.ListoffersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListoffersRequest;
  return proto.cln.ListoffersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListoffersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListoffersRequest}
 */
proto.cln.ListoffersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOfferId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActiveOnly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListoffersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListoffersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListoffersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListoffersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional bytes offer_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListoffersRequest.prototype.getOfferId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes offer_id = 1;
 * This is a type-conversion wrapper around `getOfferId()`
 * @return {string}
 */
proto.cln.ListoffersRequest.prototype.getOfferId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOfferId()));
};


/**
 * optional bytes offer_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOfferId()`
 * @return {!Uint8Array}
 */
proto.cln.ListoffersRequest.prototype.getOfferId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOfferId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListoffersRequest} returns this
 */
proto.cln.ListoffersRequest.prototype.setOfferId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListoffersRequest} returns this
 */
proto.cln.ListoffersRequest.prototype.clearOfferId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListoffersRequest.prototype.hasOfferId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool active_only = 2;
 * @return {boolean}
 */
proto.cln.ListoffersRequest.prototype.getActiveOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListoffersRequest} returns this
 */
proto.cln.ListoffersRequest.prototype.setActiveOnly = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListoffersRequest} returns this
 */
proto.cln.ListoffersRequest.prototype.clearActiveOnly = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListoffersRequest.prototype.hasActiveOnly = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListoffersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListoffersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListoffersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListoffersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListoffersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    offersList: jspb.Message.toObjectList(msg.getOffersList(),
    proto.cln.ListoffersOffers.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListoffersResponse}
 */
proto.cln.ListoffersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListoffersResponse;
  return proto.cln.ListoffersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListoffersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListoffersResponse}
 */
proto.cln.ListoffersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.ListoffersOffers;
      reader.readMessage(value,proto.cln.ListoffersOffers.deserializeBinaryFromReader);
      msg.addOffers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListoffersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListoffersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListoffersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListoffersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOffersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.ListoffersOffers.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ListoffersOffers offers = 1;
 * @return {!Array<!proto.cln.ListoffersOffers>}
 */
proto.cln.ListoffersResponse.prototype.getOffersList = function() {
  return /** @type{!Array<!proto.cln.ListoffersOffers>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListoffersOffers, 1));
};


/**
 * @param {!Array<!proto.cln.ListoffersOffers>} value
 * @return {!proto.cln.ListoffersResponse} returns this
*/
proto.cln.ListoffersResponse.prototype.setOffersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.ListoffersOffers=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListoffersOffers}
 */
proto.cln.ListoffersResponse.prototype.addOffers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.ListoffersOffers, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListoffersResponse} returns this
 */
proto.cln.ListoffersResponse.prototype.clearOffersList = function() {
  return this.setOffersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListoffersOffers.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListoffersOffers.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListoffersOffers} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListoffersOffers.toObject = function(includeInstance, msg) {
  var f, obj = {
    offerId: msg.getOfferId_asB64(),
    active: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    singleUse: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    bolt12: jspb.Message.getFieldWithDefault(msg, 4, ""),
    used: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    label: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListoffersOffers}
 */
proto.cln.ListoffersOffers.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListoffersOffers;
  return proto.cln.ListoffersOffers.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListoffersOffers} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListoffersOffers}
 */
proto.cln.ListoffersOffers.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOfferId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSingleUse(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt12(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUsed(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListoffersOffers.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListoffersOffers.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListoffersOffers} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListoffersOffers.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOfferId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getSingleUse();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getBolt12();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUsed();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional bytes offer_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListoffersOffers.prototype.getOfferId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes offer_id = 1;
 * This is a type-conversion wrapper around `getOfferId()`
 * @return {string}
 */
proto.cln.ListoffersOffers.prototype.getOfferId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOfferId()));
};


/**
 * optional bytes offer_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOfferId()`
 * @return {!Uint8Array}
 */
proto.cln.ListoffersOffers.prototype.getOfferId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOfferId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListoffersOffers} returns this
 */
proto.cln.ListoffersOffers.prototype.setOfferId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bool active = 2;
 * @return {boolean}
 */
proto.cln.ListoffersOffers.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListoffersOffers} returns this
 */
proto.cln.ListoffersOffers.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool single_use = 3;
 * @return {boolean}
 */
proto.cln.ListoffersOffers.prototype.getSingleUse = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListoffersOffers} returns this
 */
proto.cln.ListoffersOffers.prototype.setSingleUse = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string bolt12 = 4;
 * @return {string}
 */
proto.cln.ListoffersOffers.prototype.getBolt12 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListoffersOffers} returns this
 */
proto.cln.ListoffersOffers.prototype.setBolt12 = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool used = 5;
 * @return {boolean}
 */
proto.cln.ListoffersOffers.prototype.getUsed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListoffersOffers} returns this
 */
proto.cln.ListoffersOffers.prototype.setUsed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string label = 6;
 * @return {string}
 */
proto.cln.ListoffersOffers.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListoffersOffers} returns this
 */
proto.cln.ListoffersOffers.prototype.setLabel = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListoffersOffers} returns this
 */
proto.cln.ListoffersOffers.prototype.clearLabel = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListoffersOffers.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpaysRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpaysRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpaysRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpaysRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    bolt11: jspb.Message.getFieldWithDefault(msg, 1, ""),
    paymentHash: msg.getPaymentHash_asB64(),
    status: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpaysRequest}
 */
proto.cln.ListpaysRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpaysRequest;
  return proto.cln.ListpaysRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpaysRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpaysRequest}
 */
proto.cln.ListpaysRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 3:
      var value = /** @type {!proto.cln.ListpaysRequest.ListpaysStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpaysRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpaysRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpaysRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpaysRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = /** @type {!proto.cln.ListpaysRequest.ListpaysStatus} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ListpaysRequest.ListpaysStatus = {
  PENDING: 0,
  COMPLETE: 1,
  FAILED: 2
};

/**
 * optional string bolt11 = 1;
 * @return {string}
 */
proto.cln.ListpaysRequest.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpaysRequest} returns this
 */
proto.cln.ListpaysRequest.prototype.setBolt11 = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpaysRequest} returns this
 */
proto.cln.ListpaysRequest.prototype.clearBolt11 = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpaysRequest.prototype.hasBolt11 = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes payment_hash = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpaysRequest.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes payment_hash = 2;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.ListpaysRequest.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.ListpaysRequest.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpaysRequest} returns this
 */
proto.cln.ListpaysRequest.prototype.setPaymentHash = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpaysRequest} returns this
 */
proto.cln.ListpaysRequest.prototype.clearPaymentHash = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpaysRequest.prototype.hasPaymentHash = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ListpaysStatus status = 3;
 * @return {!proto.cln.ListpaysRequest.ListpaysStatus}
 */
proto.cln.ListpaysRequest.prototype.getStatus = function() {
  return /** @type {!proto.cln.ListpaysRequest.ListpaysStatus} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.cln.ListpaysRequest.ListpaysStatus} value
 * @return {!proto.cln.ListpaysRequest} returns this
 */
proto.cln.ListpaysRequest.prototype.setStatus = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpaysRequest} returns this
 */
proto.cln.ListpaysRequest.prototype.clearStatus = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpaysRequest.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListpaysResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpaysResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpaysResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpaysResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpaysResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    paysList: jspb.Message.toObjectList(msg.getPaysList(),
    proto.cln.ListpaysPays.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpaysResponse}
 */
proto.cln.ListpaysResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpaysResponse;
  return proto.cln.ListpaysResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpaysResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpaysResponse}
 */
proto.cln.ListpaysResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.ListpaysPays;
      reader.readMessage(value,proto.cln.ListpaysPays.deserializeBinaryFromReader);
      msg.addPays(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpaysResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpaysResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpaysResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpaysResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaysList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.ListpaysPays.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ListpaysPays pays = 1;
 * @return {!Array<!proto.cln.ListpaysPays>}
 */
proto.cln.ListpaysResponse.prototype.getPaysList = function() {
  return /** @type{!Array<!proto.cln.ListpaysPays>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListpaysPays, 1));
};


/**
 * @param {!Array<!proto.cln.ListpaysPays>} value
 * @return {!proto.cln.ListpaysResponse} returns this
*/
proto.cln.ListpaysResponse.prototype.setPaysList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.ListpaysPays=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListpaysPays}
 */
proto.cln.ListpaysResponse.prototype.addPays = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.ListpaysPays, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListpaysResponse} returns this
 */
proto.cln.ListpaysResponse.prototype.clearPaysList = function() {
  return this.setPaysList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpaysPays.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpaysPays.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpaysPays} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpaysPays.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentHash: msg.getPaymentHash_asB64(),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    destination: msg.getDestination_asB64(),
    createdAt: jspb.Message.getFieldWithDefault(msg, 4, 0),
    label: jspb.Message.getFieldWithDefault(msg, 5, ""),
    bolt11: jspb.Message.getFieldWithDefault(msg, 6, ""),
    bolt12: jspb.Message.getFieldWithDefault(msg, 7, ""),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    amountSentMsat: (f = msg.getAmountSentMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    erroronion: msg.getErroronion_asB64(),
    description: jspb.Message.getFieldWithDefault(msg, 11, ""),
    completedAt: jspb.Message.getFieldWithDefault(msg, 12, 0),
    preimage: msg.getPreimage_asB64(),
    numberOfParts: jspb.Message.getFieldWithDefault(msg, 14, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpaysPays}
 */
proto.cln.ListpaysPays.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpaysPays;
  return proto.cln.ListpaysPays.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpaysPays} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpaysPays}
 */
proto.cln.ListpaysPays.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 2:
      var value = /** @type {!proto.cln.ListpaysPays.ListpaysPaysStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDestination(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedAt(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt12(value);
      break;
    case 8:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 9:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountSentMsat(value);
      break;
    case 10:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setErroronion(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCompletedAt(value);
      break;
    case 13:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPreimage(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumberOfParts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpaysPays.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpaysPays.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpaysPays} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpaysPays.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getAmountSentMsat();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBytes(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBytes(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeUint64(
      14,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ListpaysPays.ListpaysPaysStatus = {
  PENDING: 0,
  FAILED: 1,
  COMPLETE: 2
};

/**
 * optional bytes payment_hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpaysPays.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes payment_hash = 1;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.ListpaysPays.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.ListpaysPays.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional ListpaysPaysStatus status = 2;
 * @return {!proto.cln.ListpaysPays.ListpaysPaysStatus}
 */
proto.cln.ListpaysPays.prototype.getStatus = function() {
  return /** @type {!proto.cln.ListpaysPays.ListpaysPaysStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.cln.ListpaysPays.ListpaysPaysStatus} value
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional bytes destination = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpaysPays.prototype.getDestination = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes destination = 3;
 * This is a type-conversion wrapper around `getDestination()`
 * @return {string}
 */
proto.cln.ListpaysPays.prototype.getDestination_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDestination()));
};


/**
 * optional bytes destination = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDestination()`
 * @return {!Uint8Array}
 */
proto.cln.ListpaysPays.prototype.getDestination_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDestination()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.setDestination = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.clearDestination = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpaysPays.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 created_at = 4;
 * @return {number}
 */
proto.cln.ListpaysPays.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string label = 5;
 * @return {string}
 */
proto.cln.ListpaysPays.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.setLabel = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.clearLabel = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpaysPays.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string bolt11 = 6;
 * @return {string}
 */
proto.cln.ListpaysPays.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.setBolt11 = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.clearBolt11 = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpaysPays.prototype.hasBolt11 = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string bolt12 = 7;
 * @return {string}
 */
proto.cln.ListpaysPays.prototype.getBolt12 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.setBolt12 = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.clearBolt12 = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpaysPays.prototype.hasBolt12 = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Amount amount_msat = 8;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpaysPays.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 8));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpaysPays} returns this
*/
proto.cln.ListpaysPays.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpaysPays.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Amount amount_sent_msat = 9;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpaysPays.prototype.getAmountSentMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 9));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpaysPays} returns this
*/
proto.cln.ListpaysPays.prototype.setAmountSentMsat = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.clearAmountSentMsat = function() {
  return this.setAmountSentMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpaysPays.prototype.hasAmountSentMsat = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bytes erroronion = 10;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpaysPays.prototype.getErroronion = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * optional bytes erroronion = 10;
 * This is a type-conversion wrapper around `getErroronion()`
 * @return {string}
 */
proto.cln.ListpaysPays.prototype.getErroronion_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getErroronion()));
};


/**
 * optional bytes erroronion = 10;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getErroronion()`
 * @return {!Uint8Array}
 */
proto.cln.ListpaysPays.prototype.getErroronion_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getErroronion()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.setErroronion = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.clearErroronion = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpaysPays.prototype.hasErroronion = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string description = 11;
 * @return {string}
 */
proto.cln.ListpaysPays.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpaysPays.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint64 completed_at = 12;
 * @return {number}
 */
proto.cln.ListpaysPays.prototype.getCompletedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.setCompletedAt = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.clearCompletedAt = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpaysPays.prototype.hasCompletedAt = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bytes preimage = 13;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpaysPays.prototype.getPreimage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * optional bytes preimage = 13;
 * This is a type-conversion wrapper around `getPreimage()`
 * @return {string}
 */
proto.cln.ListpaysPays.prototype.getPreimage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPreimage()));
};


/**
 * optional bytes preimage = 13;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPreimage()`
 * @return {!Uint8Array}
 */
proto.cln.ListpaysPays.prototype.getPreimage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPreimage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.setPreimage = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.clearPreimage = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpaysPays.prototype.hasPreimage = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional uint64 number_of_parts = 14;
 * @return {number}
 */
proto.cln.ListpaysPays.prototype.getNumberOfParts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.setNumberOfParts = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.clearNumberOfParts = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpaysPays.prototype.hasNumberOfParts = function() {
  return jspb.Message.getField(this, 14) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListhtlcsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListhtlcsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListhtlcsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListhtlcsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListhtlcsRequest}
 */
proto.cln.ListhtlcsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListhtlcsRequest;
  return proto.cln.ListhtlcsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListhtlcsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListhtlcsRequest}
 */
proto.cln.ListhtlcsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListhtlcsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListhtlcsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListhtlcsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListhtlcsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.cln.ListhtlcsRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListhtlcsRequest} returns this
 */
proto.cln.ListhtlcsRequest.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListhtlcsRequest} returns this
 */
proto.cln.ListhtlcsRequest.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListhtlcsRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListhtlcsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListhtlcsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListhtlcsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListhtlcsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListhtlcsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    htlcsList: jspb.Message.toObjectList(msg.getHtlcsList(),
    proto.cln.ListhtlcsHtlcs.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListhtlcsResponse}
 */
proto.cln.ListhtlcsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListhtlcsResponse;
  return proto.cln.ListhtlcsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListhtlcsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListhtlcsResponse}
 */
proto.cln.ListhtlcsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.ListhtlcsHtlcs;
      reader.readMessage(value,proto.cln.ListhtlcsHtlcs.deserializeBinaryFromReader);
      msg.addHtlcs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListhtlcsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListhtlcsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListhtlcsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListhtlcsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHtlcsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.ListhtlcsHtlcs.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ListhtlcsHtlcs htlcs = 1;
 * @return {!Array<!proto.cln.ListhtlcsHtlcs>}
 */
proto.cln.ListhtlcsResponse.prototype.getHtlcsList = function() {
  return /** @type{!Array<!proto.cln.ListhtlcsHtlcs>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListhtlcsHtlcs, 1));
};


/**
 * @param {!Array<!proto.cln.ListhtlcsHtlcs>} value
 * @return {!proto.cln.ListhtlcsResponse} returns this
*/
proto.cln.ListhtlcsResponse.prototype.setHtlcsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.ListhtlcsHtlcs=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListhtlcsHtlcs}
 */
proto.cln.ListhtlcsResponse.prototype.addHtlcs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.ListhtlcsHtlcs, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListhtlcsResponse} returns this
 */
proto.cln.ListhtlcsResponse.prototype.clearHtlcsList = function() {
  return this.setHtlcsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListhtlcsHtlcs.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListhtlcsHtlcs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListhtlcsHtlcs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListhtlcsHtlcs.toObject = function(includeInstance, msg) {
  var f, obj = {
    shortChannelId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0),
    expiry: jspb.Message.getFieldWithDefault(msg, 3, 0),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    direction: jspb.Message.getFieldWithDefault(msg, 5, 0),
    paymentHash: msg.getPaymentHash_asB64(),
    state: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListhtlcsHtlcs}
 */
proto.cln.ListhtlcsHtlcs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListhtlcsHtlcs;
  return proto.cln.ListhtlcsHtlcs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListhtlcsHtlcs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListhtlcsHtlcs}
 */
proto.cln.ListhtlcsHtlcs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setShortChannelId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setExpiry(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 5:
      var value = /** @type {!proto.cln.ListhtlcsHtlcs.ListhtlcsHtlcsDirection} */ (reader.readEnum());
      msg.setDirection(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 7:
      var value = /** @type {!proto.cln.HtlcState} */ (reader.readEnum());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListhtlcsHtlcs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListhtlcsHtlcs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListhtlcsHtlcs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListhtlcsHtlcs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getShortChannelId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getExpiry();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getDirection();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ListhtlcsHtlcs.ListhtlcsHtlcsDirection = {
  OUT: 0,
  IN: 1
};

/**
 * optional string short_channel_id = 1;
 * @return {string}
 */
proto.cln.ListhtlcsHtlcs.prototype.getShortChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListhtlcsHtlcs} returns this
 */
proto.cln.ListhtlcsHtlcs.prototype.setShortChannelId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 id = 2;
 * @return {number}
 */
proto.cln.ListhtlcsHtlcs.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListhtlcsHtlcs} returns this
 */
proto.cln.ListhtlcsHtlcs.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 expiry = 3;
 * @return {number}
 */
proto.cln.ListhtlcsHtlcs.prototype.getExpiry = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListhtlcsHtlcs} returns this
 */
proto.cln.ListhtlcsHtlcs.prototype.setExpiry = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional Amount amount_msat = 4;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListhtlcsHtlcs.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 4));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListhtlcsHtlcs} returns this
*/
proto.cln.ListhtlcsHtlcs.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListhtlcsHtlcs} returns this
 */
proto.cln.ListhtlcsHtlcs.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListhtlcsHtlcs.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ListhtlcsHtlcsDirection direction = 5;
 * @return {!proto.cln.ListhtlcsHtlcs.ListhtlcsHtlcsDirection}
 */
proto.cln.ListhtlcsHtlcs.prototype.getDirection = function() {
  return /** @type {!proto.cln.ListhtlcsHtlcs.ListhtlcsHtlcsDirection} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.cln.ListhtlcsHtlcs.ListhtlcsHtlcsDirection} value
 * @return {!proto.cln.ListhtlcsHtlcs} returns this
 */
proto.cln.ListhtlcsHtlcs.prototype.setDirection = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional bytes payment_hash = 6;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListhtlcsHtlcs.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes payment_hash = 6;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.ListhtlcsHtlcs.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.ListhtlcsHtlcs.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListhtlcsHtlcs} returns this
 */
proto.cln.ListhtlcsHtlcs.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional HtlcState state = 7;
 * @return {!proto.cln.HtlcState}
 */
proto.cln.ListhtlcsHtlcs.prototype.getState = function() {
  return /** @type {!proto.cln.HtlcState} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.cln.HtlcState} value
 * @return {!proto.cln.ListhtlcsHtlcs} returns this
 */
proto.cln.ListhtlcsHtlcs.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.MultifundchannelRequest.repeatedFields_ = [1,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.MultifundchannelRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.MultifundchannelRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.MultifundchannelRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.MultifundchannelRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    destinationsList: jspb.Message.toObjectList(msg.getDestinationsList(),
    proto.cln.MultifundchannelDestinations.toObject, includeInstance),
    feerate: (f = msg.getFeerate()) && cln_primitives_pb.Feerate.toObject(includeInstance, f),
    minconf: jspb.Message.getFieldWithDefault(msg, 3, 0),
    utxosList: jspb.Message.toObjectList(msg.getUtxosList(),
    cln_primitives_pb.Outpoint.toObject, includeInstance),
    minchannels: jspb.Message.getFieldWithDefault(msg, 5, 0),
    commitmentFeerate: (f = msg.getCommitmentFeerate()) && cln_primitives_pb.Feerate.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.MultifundchannelRequest}
 */
proto.cln.MultifundchannelRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.MultifundchannelRequest;
  return proto.cln.MultifundchannelRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.MultifundchannelRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.MultifundchannelRequest}
 */
proto.cln.MultifundchannelRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.MultifundchannelDestinations;
      reader.readMessage(value,proto.cln.MultifundchannelDestinations.deserializeBinaryFromReader);
      msg.addDestinations(value);
      break;
    case 2:
      var value = new cln_primitives_pb.Feerate;
      reader.readMessage(value,cln_primitives_pb.Feerate.deserializeBinaryFromReader);
      msg.setFeerate(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setMinconf(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Outpoint;
      reader.readMessage(value,cln_primitives_pb.Outpoint.deserializeBinaryFromReader);
      msg.addUtxos(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setMinchannels(value);
      break;
    case 6:
      var value = new cln_primitives_pb.Feerate;
      reader.readMessage(value,cln_primitives_pb.Feerate.deserializeBinaryFromReader);
      msg.setCommitmentFeerate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.MultifundchannelRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.MultifundchannelRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.MultifundchannelRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.MultifundchannelRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDestinationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.MultifundchannelDestinations.serializeBinaryToWriter
    );
  }
  f = message.getFeerate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cln_primitives_pb.Feerate.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeSint64(
      3,
      f
    );
  }
  f = message.getUtxosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      cln_primitives_pb.Outpoint.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeSint64(
      5,
      f
    );
  }
  f = message.getCommitmentFeerate();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      cln_primitives_pb.Feerate.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MultifundchannelDestinations destinations = 1;
 * @return {!Array<!proto.cln.MultifundchannelDestinations>}
 */
proto.cln.MultifundchannelRequest.prototype.getDestinationsList = function() {
  return /** @type{!Array<!proto.cln.MultifundchannelDestinations>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.MultifundchannelDestinations, 1));
};


/**
 * @param {!Array<!proto.cln.MultifundchannelDestinations>} value
 * @return {!proto.cln.MultifundchannelRequest} returns this
*/
proto.cln.MultifundchannelRequest.prototype.setDestinationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.MultifundchannelDestinations=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.MultifundchannelDestinations}
 */
proto.cln.MultifundchannelRequest.prototype.addDestinations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.MultifundchannelDestinations, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.MultifundchannelRequest} returns this
 */
proto.cln.MultifundchannelRequest.prototype.clearDestinationsList = function() {
  return this.setDestinationsList([]);
};


/**
 * optional Feerate feerate = 2;
 * @return {?proto.cln.Feerate}
 */
proto.cln.MultifundchannelRequest.prototype.getFeerate = function() {
  return /** @type{?proto.cln.Feerate} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Feerate, 2));
};


/**
 * @param {?proto.cln.Feerate|undefined} value
 * @return {!proto.cln.MultifundchannelRequest} returns this
*/
proto.cln.MultifundchannelRequest.prototype.setFeerate = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.MultifundchannelRequest} returns this
 */
proto.cln.MultifundchannelRequest.prototype.clearFeerate = function() {
  return this.setFeerate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.MultifundchannelRequest.prototype.hasFeerate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional sint64 minconf = 3;
 * @return {number}
 */
proto.cln.MultifundchannelRequest.prototype.getMinconf = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.MultifundchannelRequest} returns this
 */
proto.cln.MultifundchannelRequest.prototype.setMinconf = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.MultifundchannelRequest} returns this
 */
proto.cln.MultifundchannelRequest.prototype.clearMinconf = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.MultifundchannelRequest.prototype.hasMinconf = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Outpoint utxos = 4;
 * @return {!Array<!proto.cln.Outpoint>}
 */
proto.cln.MultifundchannelRequest.prototype.getUtxosList = function() {
  return /** @type{!Array<!proto.cln.Outpoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, cln_primitives_pb.Outpoint, 4));
};


/**
 * @param {!Array<!proto.cln.Outpoint>} value
 * @return {!proto.cln.MultifundchannelRequest} returns this
*/
proto.cln.MultifundchannelRequest.prototype.setUtxosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.cln.Outpoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.Outpoint}
 */
proto.cln.MultifundchannelRequest.prototype.addUtxos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.cln.Outpoint, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.MultifundchannelRequest} returns this
 */
proto.cln.MultifundchannelRequest.prototype.clearUtxosList = function() {
  return this.setUtxosList([]);
};


/**
 * optional sint64 minchannels = 5;
 * @return {number}
 */
proto.cln.MultifundchannelRequest.prototype.getMinchannels = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.MultifundchannelRequest} returns this
 */
proto.cln.MultifundchannelRequest.prototype.setMinchannels = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.MultifundchannelRequest} returns this
 */
proto.cln.MultifundchannelRequest.prototype.clearMinchannels = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.MultifundchannelRequest.prototype.hasMinchannels = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Feerate commitment_feerate = 6;
 * @return {?proto.cln.Feerate}
 */
proto.cln.MultifundchannelRequest.prototype.getCommitmentFeerate = function() {
  return /** @type{?proto.cln.Feerate} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Feerate, 6));
};


/**
 * @param {?proto.cln.Feerate|undefined} value
 * @return {!proto.cln.MultifundchannelRequest} returns this
*/
proto.cln.MultifundchannelRequest.prototype.setCommitmentFeerate = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.MultifundchannelRequest} returns this
 */
proto.cln.MultifundchannelRequest.prototype.clearCommitmentFeerate = function() {
  return this.setCommitmentFeerate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.MultifundchannelRequest.prototype.hasCommitmentFeerate = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.MultifundchannelResponse.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.MultifundchannelResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.MultifundchannelResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.MultifundchannelResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.MultifundchannelResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    tx: msg.getTx_asB64(),
    txid: msg.getTxid_asB64(),
    channelIdsList: jspb.Message.toObjectList(msg.getChannelIdsList(),
    proto.cln.MultifundchannelChannel_ids.toObject, includeInstance),
    failedList: jspb.Message.toObjectList(msg.getFailedList(),
    proto.cln.MultifundchannelFailed.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.MultifundchannelResponse}
 */
proto.cln.MultifundchannelResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.MultifundchannelResponse;
  return proto.cln.MultifundchannelResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.MultifundchannelResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.MultifundchannelResponse}
 */
proto.cln.MultifundchannelResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTx(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    case 3:
      var value = new proto.cln.MultifundchannelChannel_ids;
      reader.readMessage(value,proto.cln.MultifundchannelChannel_ids.deserializeBinaryFromReader);
      msg.addChannelIds(value);
      break;
    case 4:
      var value = new proto.cln.MultifundchannelFailed;
      reader.readMessage(value,proto.cln.MultifundchannelFailed.deserializeBinaryFromReader);
      msg.addFailed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.MultifundchannelResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.MultifundchannelResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.MultifundchannelResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.MultifundchannelResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTx_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getChannelIdsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.cln.MultifundchannelChannel_ids.serializeBinaryToWriter
    );
  }
  f = message.getFailedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.cln.MultifundchannelFailed.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes tx = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.MultifundchannelResponse.prototype.getTx = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes tx = 1;
 * This is a type-conversion wrapper around `getTx()`
 * @return {string}
 */
proto.cln.MultifundchannelResponse.prototype.getTx_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTx()));
};


/**
 * optional bytes tx = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTx()`
 * @return {!Uint8Array}
 */
proto.cln.MultifundchannelResponse.prototype.getTx_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTx()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.MultifundchannelResponse} returns this
 */
proto.cln.MultifundchannelResponse.prototype.setTx = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes txid = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.MultifundchannelResponse.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes txid = 2;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.MultifundchannelResponse.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.MultifundchannelResponse.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.MultifundchannelResponse} returns this
 */
proto.cln.MultifundchannelResponse.prototype.setTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * repeated MultifundchannelChannel_ids channel_ids = 3;
 * @return {!Array<!proto.cln.MultifundchannelChannel_ids>}
 */
proto.cln.MultifundchannelResponse.prototype.getChannelIdsList = function() {
  return /** @type{!Array<!proto.cln.MultifundchannelChannel_ids>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.MultifundchannelChannel_ids, 3));
};


/**
 * @param {!Array<!proto.cln.MultifundchannelChannel_ids>} value
 * @return {!proto.cln.MultifundchannelResponse} returns this
*/
proto.cln.MultifundchannelResponse.prototype.setChannelIdsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.cln.MultifundchannelChannel_ids=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.MultifundchannelChannel_ids}
 */
proto.cln.MultifundchannelResponse.prototype.addChannelIds = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.cln.MultifundchannelChannel_ids, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.MultifundchannelResponse} returns this
 */
proto.cln.MultifundchannelResponse.prototype.clearChannelIdsList = function() {
  return this.setChannelIdsList([]);
};


/**
 * repeated MultifundchannelFailed failed = 4;
 * @return {!Array<!proto.cln.MultifundchannelFailed>}
 */
proto.cln.MultifundchannelResponse.prototype.getFailedList = function() {
  return /** @type{!Array<!proto.cln.MultifundchannelFailed>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.MultifundchannelFailed, 4));
};


/**
 * @param {!Array<!proto.cln.MultifundchannelFailed>} value
 * @return {!proto.cln.MultifundchannelResponse} returns this
*/
proto.cln.MultifundchannelResponse.prototype.setFailedList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.cln.MultifundchannelFailed=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.MultifundchannelFailed}
 */
proto.cln.MultifundchannelResponse.prototype.addFailed = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.cln.MultifundchannelFailed, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.MultifundchannelResponse} returns this
 */
proto.cln.MultifundchannelResponse.prototype.clearFailedList = function() {
  return this.setFailedList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.MultifundchannelDestinations.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.MultifundchannelDestinations.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.MultifundchannelDestinations} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.MultifundchannelDestinations.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amount: (f = msg.getAmount()) && cln_primitives_pb.AmountOrAll.toObject(includeInstance, f),
    announce: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    pushMsat: (f = msg.getPushMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    closeTo: jspb.Message.getFieldWithDefault(msg, 5, ""),
    requestAmt: (f = msg.getRequestAmt()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    compactLease: jspb.Message.getFieldWithDefault(msg, 7, ""),
    mindepth: jspb.Message.getFieldWithDefault(msg, 8, 0),
    reserve: (f = msg.getReserve()) && cln_primitives_pb.Amount.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.MultifundchannelDestinations}
 */
proto.cln.MultifundchannelDestinations.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.MultifundchannelDestinations;
  return proto.cln.MultifundchannelDestinations.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.MultifundchannelDestinations} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.MultifundchannelDestinations}
 */
proto.cln.MultifundchannelDestinations.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new cln_primitives_pb.AmountOrAll;
      reader.readMessage(value,cln_primitives_pb.AmountOrAll.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAnnounce(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setPushMsat(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCloseTo(value);
      break;
    case 6:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setRequestAmt(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompactLease(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMindepth(value);
      break;
    case 9:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setReserve(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.MultifundchannelDestinations.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.MultifundchannelDestinations.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.MultifundchannelDestinations} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.MultifundchannelDestinations.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cln_primitives_pb.AmountOrAll.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getPushMsat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getRequestAmt();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getReserve();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.cln.MultifundchannelDestinations.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.MultifundchannelDestinations} returns this
 */
proto.cln.MultifundchannelDestinations.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional AmountOrAll amount = 2;
 * @return {?proto.cln.AmountOrAll}
 */
proto.cln.MultifundchannelDestinations.prototype.getAmount = function() {
  return /** @type{?proto.cln.AmountOrAll} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.AmountOrAll, 2));
};


/**
 * @param {?proto.cln.AmountOrAll|undefined} value
 * @return {!proto.cln.MultifundchannelDestinations} returns this
*/
proto.cln.MultifundchannelDestinations.prototype.setAmount = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.MultifundchannelDestinations} returns this
 */
proto.cln.MultifundchannelDestinations.prototype.clearAmount = function() {
  return this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.MultifundchannelDestinations.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool announce = 3;
 * @return {boolean}
 */
proto.cln.MultifundchannelDestinations.prototype.getAnnounce = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.MultifundchannelDestinations} returns this
 */
proto.cln.MultifundchannelDestinations.prototype.setAnnounce = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.MultifundchannelDestinations} returns this
 */
proto.cln.MultifundchannelDestinations.prototype.clearAnnounce = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.MultifundchannelDestinations.prototype.hasAnnounce = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Amount push_msat = 4;
 * @return {?proto.cln.Amount}
 */
proto.cln.MultifundchannelDestinations.prototype.getPushMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 4));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.MultifundchannelDestinations} returns this
*/
proto.cln.MultifundchannelDestinations.prototype.setPushMsat = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.MultifundchannelDestinations} returns this
 */
proto.cln.MultifundchannelDestinations.prototype.clearPushMsat = function() {
  return this.setPushMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.MultifundchannelDestinations.prototype.hasPushMsat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string close_to = 5;
 * @return {string}
 */
proto.cln.MultifundchannelDestinations.prototype.getCloseTo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.MultifundchannelDestinations} returns this
 */
proto.cln.MultifundchannelDestinations.prototype.setCloseTo = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.MultifundchannelDestinations} returns this
 */
proto.cln.MultifundchannelDestinations.prototype.clearCloseTo = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.MultifundchannelDestinations.prototype.hasCloseTo = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Amount request_amt = 6;
 * @return {?proto.cln.Amount}
 */
proto.cln.MultifundchannelDestinations.prototype.getRequestAmt = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 6));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.MultifundchannelDestinations} returns this
*/
proto.cln.MultifundchannelDestinations.prototype.setRequestAmt = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.MultifundchannelDestinations} returns this
 */
proto.cln.MultifundchannelDestinations.prototype.clearRequestAmt = function() {
  return this.setRequestAmt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.MultifundchannelDestinations.prototype.hasRequestAmt = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string compact_lease = 7;
 * @return {string}
 */
proto.cln.MultifundchannelDestinations.prototype.getCompactLease = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.MultifundchannelDestinations} returns this
 */
proto.cln.MultifundchannelDestinations.prototype.setCompactLease = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.MultifundchannelDestinations} returns this
 */
proto.cln.MultifundchannelDestinations.prototype.clearCompactLease = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.MultifundchannelDestinations.prototype.hasCompactLease = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 mindepth = 8;
 * @return {number}
 */
proto.cln.MultifundchannelDestinations.prototype.getMindepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.MultifundchannelDestinations} returns this
 */
proto.cln.MultifundchannelDestinations.prototype.setMindepth = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.MultifundchannelDestinations} returns this
 */
proto.cln.MultifundchannelDestinations.prototype.clearMindepth = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.MultifundchannelDestinations.prototype.hasMindepth = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Amount reserve = 9;
 * @return {?proto.cln.Amount}
 */
proto.cln.MultifundchannelDestinations.prototype.getReserve = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 9));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.MultifundchannelDestinations} returns this
*/
proto.cln.MultifundchannelDestinations.prototype.setReserve = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.MultifundchannelDestinations} returns this
 */
proto.cln.MultifundchannelDestinations.prototype.clearReserve = function() {
  return this.setReserve(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.MultifundchannelDestinations.prototype.hasReserve = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.MultifundchannelChannel_ids.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.MultifundchannelChannel_ids.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.MultifundchannelChannel_ids} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.MultifundchannelChannel_ids.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64(),
    outnum: jspb.Message.getFieldWithDefault(msg, 2, 0),
    channelId: msg.getChannelId_asB64(),
    channelType: (f = msg.getChannelType()) && proto.cln.MultifundchannelChannel_idsChannel_type.toObject(includeInstance, f),
    closeTo: msg.getCloseTo_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.MultifundchannelChannel_ids}
 */
proto.cln.MultifundchannelChannel_ids.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.MultifundchannelChannel_ids;
  return proto.cln.MultifundchannelChannel_ids.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.MultifundchannelChannel_ids} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.MultifundchannelChannel_ids}
 */
proto.cln.MultifundchannelChannel_ids.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOutnum(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChannelId(value);
      break;
    case 4:
      var value = new proto.cln.MultifundchannelChannel_idsChannel_type;
      reader.readMessage(value,proto.cln.MultifundchannelChannel_idsChannel_type.deserializeBinaryFromReader);
      msg.setChannelType(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setCloseTo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.MultifundchannelChannel_ids.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.MultifundchannelChannel_ids.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.MultifundchannelChannel_ids} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.MultifundchannelChannel_ids.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getOutnum();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getChannelId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getChannelType();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.cln.MultifundchannelChannel_idsChannel_type.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBytes(
      5,
      f
    );
  }
};


/**
 * optional bytes id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.MultifundchannelChannel_ids.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes id = 1;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.cln.MultifundchannelChannel_ids.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.cln.MultifundchannelChannel_ids.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.MultifundchannelChannel_ids} returns this
 */
proto.cln.MultifundchannelChannel_ids.prototype.setId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint32 outnum = 2;
 * @return {number}
 */
proto.cln.MultifundchannelChannel_ids.prototype.getOutnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.MultifundchannelChannel_ids} returns this
 */
proto.cln.MultifundchannelChannel_ids.prototype.setOutnum = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bytes channel_id = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.MultifundchannelChannel_ids.prototype.getChannelId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes channel_id = 3;
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {string}
 */
proto.cln.MultifundchannelChannel_ids.prototype.getChannelId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChannelId()));
};


/**
 * optional bytes channel_id = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {!Uint8Array}
 */
proto.cln.MultifundchannelChannel_ids.prototype.getChannelId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChannelId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.MultifundchannelChannel_ids} returns this
 */
proto.cln.MultifundchannelChannel_ids.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional MultifundchannelChannel_idsChannel_type channel_type = 4;
 * @return {?proto.cln.MultifundchannelChannel_idsChannel_type}
 */
proto.cln.MultifundchannelChannel_ids.prototype.getChannelType = function() {
  return /** @type{?proto.cln.MultifundchannelChannel_idsChannel_type} */ (
    jspb.Message.getWrapperField(this, proto.cln.MultifundchannelChannel_idsChannel_type, 4));
};


/**
 * @param {?proto.cln.MultifundchannelChannel_idsChannel_type|undefined} value
 * @return {!proto.cln.MultifundchannelChannel_ids} returns this
*/
proto.cln.MultifundchannelChannel_ids.prototype.setChannelType = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.MultifundchannelChannel_ids} returns this
 */
proto.cln.MultifundchannelChannel_ids.prototype.clearChannelType = function() {
  return this.setChannelType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.MultifundchannelChannel_ids.prototype.hasChannelType = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bytes close_to = 5;
 * @return {!(string|Uint8Array)}
 */
proto.cln.MultifundchannelChannel_ids.prototype.getCloseTo = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes close_to = 5;
 * This is a type-conversion wrapper around `getCloseTo()`
 * @return {string}
 */
proto.cln.MultifundchannelChannel_ids.prototype.getCloseTo_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getCloseTo()));
};


/**
 * optional bytes close_to = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCloseTo()`
 * @return {!Uint8Array}
 */
proto.cln.MultifundchannelChannel_ids.prototype.getCloseTo_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getCloseTo()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.MultifundchannelChannel_ids} returns this
 */
proto.cln.MultifundchannelChannel_ids.prototype.setCloseTo = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.MultifundchannelChannel_ids} returns this
 */
proto.cln.MultifundchannelChannel_ids.prototype.clearCloseTo = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.MultifundchannelChannel_ids.prototype.hasCloseTo = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.MultifundchannelChannel_idsChannel_type.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.MultifundchannelChannel_idsChannel_type.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.MultifundchannelChannel_idsChannel_type.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.MultifundchannelChannel_idsChannel_type} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.MultifundchannelChannel_idsChannel_type.toObject = function(includeInstance, msg) {
  var f, obj = {
    bitsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    namesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.MultifundchannelChannel_idsChannel_type}
 */
proto.cln.MultifundchannelChannel_idsChannel_type.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.MultifundchannelChannel_idsChannel_type;
  return proto.cln.MultifundchannelChannel_idsChannel_type.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.MultifundchannelChannel_idsChannel_type} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.MultifundchannelChannel_idsChannel_type}
 */
proto.cln.MultifundchannelChannel_idsChannel_type.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addBits(values[i]);
      }
      break;
    case 2:
      var values = /** @type {!Array<!proto.cln.ChannelTypeName>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addNames(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.MultifundchannelChannel_idsChannel_type.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.MultifundchannelChannel_idsChannel_type.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.MultifundchannelChannel_idsChannel_type} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.MultifundchannelChannel_idsChannel_type.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBitsList();
  if (f.length > 0) {
    writer.writePackedUint32(
      1,
      f
    );
  }
  f = message.getNamesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      2,
      f
    );
  }
};


/**
 * repeated uint32 bits = 1;
 * @return {!Array<number>}
 */
proto.cln.MultifundchannelChannel_idsChannel_type.prototype.getBitsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.cln.MultifundchannelChannel_idsChannel_type} returns this
 */
proto.cln.MultifundchannelChannel_idsChannel_type.prototype.setBitsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.cln.MultifundchannelChannel_idsChannel_type} returns this
 */
proto.cln.MultifundchannelChannel_idsChannel_type.prototype.addBits = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.MultifundchannelChannel_idsChannel_type} returns this
 */
proto.cln.MultifundchannelChannel_idsChannel_type.prototype.clearBitsList = function() {
  return this.setBitsList([]);
};


/**
 * repeated ChannelTypeName names = 2;
 * @return {!Array<!proto.cln.ChannelTypeName>}
 */
proto.cln.MultifundchannelChannel_idsChannel_type.prototype.getNamesList = function() {
  return /** @type {!Array<!proto.cln.ChannelTypeName>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<!proto.cln.ChannelTypeName>} value
 * @return {!proto.cln.MultifundchannelChannel_idsChannel_type} returns this
 */
proto.cln.MultifundchannelChannel_idsChannel_type.prototype.setNamesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!proto.cln.ChannelTypeName} value
 * @param {number=} opt_index
 * @return {!proto.cln.MultifundchannelChannel_idsChannel_type} returns this
 */
proto.cln.MultifundchannelChannel_idsChannel_type.prototype.addNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.MultifundchannelChannel_idsChannel_type} returns this
 */
proto.cln.MultifundchannelChannel_idsChannel_type.prototype.clearNamesList = function() {
  return this.setNamesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.MultifundchannelFailed.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.MultifundchannelFailed.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.MultifundchannelFailed} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.MultifundchannelFailed.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64(),
    method: jspb.Message.getFieldWithDefault(msg, 2, 0),
    error: (f = msg.getError()) && proto.cln.MultifundchannelFailedError.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.MultifundchannelFailed}
 */
proto.cln.MultifundchannelFailed.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.MultifundchannelFailed;
  return proto.cln.MultifundchannelFailed.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.MultifundchannelFailed} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.MultifundchannelFailed}
 */
proto.cln.MultifundchannelFailed.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.cln.MultifundchannelFailed.MultifundchannelFailedMethod} */ (reader.readEnum());
      msg.setMethod(value);
      break;
    case 3:
      var value = new proto.cln.MultifundchannelFailedError;
      reader.readMessage(value,proto.cln.MultifundchannelFailedError.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.MultifundchannelFailed.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.MultifundchannelFailed.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.MultifundchannelFailed} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.MultifundchannelFailed.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getMethod();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cln.MultifundchannelFailedError.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.MultifundchannelFailed.MultifundchannelFailedMethod = {
  CONNECT: 0,
  OPENCHANNEL_INIT: 1,
  FUNDCHANNEL_START: 2,
  FUNDCHANNEL_COMPLETE: 3
};

/**
 * optional bytes id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.MultifundchannelFailed.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes id = 1;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.cln.MultifundchannelFailed.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.cln.MultifundchannelFailed.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.MultifundchannelFailed} returns this
 */
proto.cln.MultifundchannelFailed.prototype.setId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional MultifundchannelFailedMethod method = 2;
 * @return {!proto.cln.MultifundchannelFailed.MultifundchannelFailedMethod}
 */
proto.cln.MultifundchannelFailed.prototype.getMethod = function() {
  return /** @type {!proto.cln.MultifundchannelFailed.MultifundchannelFailedMethod} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.cln.MultifundchannelFailed.MultifundchannelFailedMethod} value
 * @return {!proto.cln.MultifundchannelFailed} returns this
 */
proto.cln.MultifundchannelFailed.prototype.setMethod = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional MultifundchannelFailedError error = 3;
 * @return {?proto.cln.MultifundchannelFailedError}
 */
proto.cln.MultifundchannelFailed.prototype.getError = function() {
  return /** @type{?proto.cln.MultifundchannelFailedError} */ (
    jspb.Message.getWrapperField(this, proto.cln.MultifundchannelFailedError, 3));
};


/**
 * @param {?proto.cln.MultifundchannelFailedError|undefined} value
 * @return {!proto.cln.MultifundchannelFailed} returns this
*/
proto.cln.MultifundchannelFailed.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.MultifundchannelFailed} returns this
 */
proto.cln.MultifundchannelFailed.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.MultifundchannelFailed.prototype.hasError = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.MultifundchannelFailedError.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.MultifundchannelFailedError.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.MultifundchannelFailedError} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.MultifundchannelFailedError.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.MultifundchannelFailedError}
 */
proto.cln.MultifundchannelFailedError.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.MultifundchannelFailedError;
  return proto.cln.MultifundchannelFailedError.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.MultifundchannelFailedError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.MultifundchannelFailedError}
 */
proto.cln.MultifundchannelFailedError.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.MultifundchannelFailedError.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.MultifundchannelFailedError.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.MultifundchannelFailedError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.MultifundchannelFailedError.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeSint64(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional sint64 code = 1;
 * @return {number}
 */
proto.cln.MultifundchannelFailedError.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.MultifundchannelFailedError} returns this
 */
proto.cln.MultifundchannelFailedError.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.cln.MultifundchannelFailedError.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.MultifundchannelFailedError} returns this
 */
proto.cln.MultifundchannelFailedError.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.MultiwithdrawRequest.repeatedFields_ = [1,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.MultiwithdrawRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.MultiwithdrawRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.MultiwithdrawRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.MultiwithdrawRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    outputsList: jspb.Message.toObjectList(msg.getOutputsList(),
    cln_primitives_pb.OutputDesc.toObject, includeInstance),
    feerate: (f = msg.getFeerate()) && cln_primitives_pb.Feerate.toObject(includeInstance, f),
    minconf: jspb.Message.getFieldWithDefault(msg, 3, 0),
    utxosList: jspb.Message.toObjectList(msg.getUtxosList(),
    cln_primitives_pb.Outpoint.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.MultiwithdrawRequest}
 */
proto.cln.MultiwithdrawRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.MultiwithdrawRequest;
  return proto.cln.MultiwithdrawRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.MultiwithdrawRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.MultiwithdrawRequest}
 */
proto.cln.MultiwithdrawRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cln_primitives_pb.OutputDesc;
      reader.readMessage(value,cln_primitives_pb.OutputDesc.deserializeBinaryFromReader);
      msg.addOutputs(value);
      break;
    case 2:
      var value = new cln_primitives_pb.Feerate;
      reader.readMessage(value,cln_primitives_pb.Feerate.deserializeBinaryFromReader);
      msg.setFeerate(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinconf(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Outpoint;
      reader.readMessage(value,cln_primitives_pb.Outpoint.deserializeBinaryFromReader);
      msg.addUtxos(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.MultiwithdrawRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.MultiwithdrawRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.MultiwithdrawRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.MultiwithdrawRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOutputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      cln_primitives_pb.OutputDesc.serializeBinaryToWriter
    );
  }
  f = message.getFeerate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cln_primitives_pb.Feerate.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getUtxosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      cln_primitives_pb.Outpoint.serializeBinaryToWriter
    );
  }
};


/**
 * repeated OutputDesc outputs = 1;
 * @return {!Array<!proto.cln.OutputDesc>}
 */
proto.cln.MultiwithdrawRequest.prototype.getOutputsList = function() {
  return /** @type{!Array<!proto.cln.OutputDesc>} */ (
    jspb.Message.getRepeatedWrapperField(this, cln_primitives_pb.OutputDesc, 1));
};


/**
 * @param {!Array<!proto.cln.OutputDesc>} value
 * @return {!proto.cln.MultiwithdrawRequest} returns this
*/
proto.cln.MultiwithdrawRequest.prototype.setOutputsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.OutputDesc=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.OutputDesc}
 */
proto.cln.MultiwithdrawRequest.prototype.addOutputs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.OutputDesc, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.MultiwithdrawRequest} returns this
 */
proto.cln.MultiwithdrawRequest.prototype.clearOutputsList = function() {
  return this.setOutputsList([]);
};


/**
 * optional Feerate feerate = 2;
 * @return {?proto.cln.Feerate}
 */
proto.cln.MultiwithdrawRequest.prototype.getFeerate = function() {
  return /** @type{?proto.cln.Feerate} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Feerate, 2));
};


/**
 * @param {?proto.cln.Feerate|undefined} value
 * @return {!proto.cln.MultiwithdrawRequest} returns this
*/
proto.cln.MultiwithdrawRequest.prototype.setFeerate = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.MultiwithdrawRequest} returns this
 */
proto.cln.MultiwithdrawRequest.prototype.clearFeerate = function() {
  return this.setFeerate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.MultiwithdrawRequest.prototype.hasFeerate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 minconf = 3;
 * @return {number}
 */
proto.cln.MultiwithdrawRequest.prototype.getMinconf = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.MultiwithdrawRequest} returns this
 */
proto.cln.MultiwithdrawRequest.prototype.setMinconf = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.MultiwithdrawRequest} returns this
 */
proto.cln.MultiwithdrawRequest.prototype.clearMinconf = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.MultiwithdrawRequest.prototype.hasMinconf = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Outpoint utxos = 4;
 * @return {!Array<!proto.cln.Outpoint>}
 */
proto.cln.MultiwithdrawRequest.prototype.getUtxosList = function() {
  return /** @type{!Array<!proto.cln.Outpoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, cln_primitives_pb.Outpoint, 4));
};


/**
 * @param {!Array<!proto.cln.Outpoint>} value
 * @return {!proto.cln.MultiwithdrawRequest} returns this
*/
proto.cln.MultiwithdrawRequest.prototype.setUtxosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.cln.Outpoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.Outpoint}
 */
proto.cln.MultiwithdrawRequest.prototype.addUtxos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.cln.Outpoint, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.MultiwithdrawRequest} returns this
 */
proto.cln.MultiwithdrawRequest.prototype.clearUtxosList = function() {
  return this.setUtxosList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.MultiwithdrawResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.MultiwithdrawResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.MultiwithdrawResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.MultiwithdrawResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    tx: msg.getTx_asB64(),
    txid: msg.getTxid_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.MultiwithdrawResponse}
 */
proto.cln.MultiwithdrawResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.MultiwithdrawResponse;
  return proto.cln.MultiwithdrawResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.MultiwithdrawResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.MultiwithdrawResponse}
 */
proto.cln.MultiwithdrawResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTx(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.MultiwithdrawResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.MultiwithdrawResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.MultiwithdrawResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.MultiwithdrawResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTx_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional bytes tx = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.MultiwithdrawResponse.prototype.getTx = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes tx = 1;
 * This is a type-conversion wrapper around `getTx()`
 * @return {string}
 */
proto.cln.MultiwithdrawResponse.prototype.getTx_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTx()));
};


/**
 * optional bytes tx = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTx()`
 * @return {!Uint8Array}
 */
proto.cln.MultiwithdrawResponse.prototype.getTx_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTx()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.MultiwithdrawResponse} returns this
 */
proto.cln.MultiwithdrawResponse.prototype.setTx = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes txid = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.MultiwithdrawResponse.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes txid = 2;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.MultiwithdrawResponse.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.MultiwithdrawResponse.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.MultiwithdrawResponse} returns this
 */
proto.cln.MultiwithdrawResponse.prototype.setTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.OfferRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.OfferRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.OfferRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.OfferRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    amount: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    issuer: jspb.Message.getFieldWithDefault(msg, 3, ""),
    label: jspb.Message.getFieldWithDefault(msg, 4, ""),
    quantityMax: jspb.Message.getFieldWithDefault(msg, 5, 0),
    absoluteExpiry: jspb.Message.getFieldWithDefault(msg, 6, 0),
    recurrence: jspb.Message.getFieldWithDefault(msg, 7, ""),
    recurrenceBase: jspb.Message.getFieldWithDefault(msg, 8, ""),
    recurrencePaywindow: jspb.Message.getFieldWithDefault(msg, 9, ""),
    recurrenceLimit: jspb.Message.getFieldWithDefault(msg, 10, 0),
    singleUse: jspb.Message.getBooleanFieldWithDefault(msg, 11, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.OfferRequest}
 */
proto.cln.OfferRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.OfferRequest;
  return proto.cln.OfferRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.OfferRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.OfferRequest}
 */
proto.cln.OfferRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIssuer(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setQuantityMax(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAbsoluteExpiry(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecurrence(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecurrenceBase(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecurrencePaywindow(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRecurrenceLimit(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSingleUse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.OfferRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.OfferRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.OfferRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.OfferRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeBool(
      11,
      f
    );
  }
};


/**
 * optional string amount = 1;
 * @return {string}
 */
proto.cln.OfferRequest.prototype.getAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.OfferRequest} returns this
 */
proto.cln.OfferRequest.prototype.setAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.cln.OfferRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.OfferRequest} returns this
 */
proto.cln.OfferRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string issuer = 3;
 * @return {string}
 */
proto.cln.OfferRequest.prototype.getIssuer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.OfferRequest} returns this
 */
proto.cln.OfferRequest.prototype.setIssuer = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.OfferRequest} returns this
 */
proto.cln.OfferRequest.prototype.clearIssuer = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.OfferRequest.prototype.hasIssuer = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string label = 4;
 * @return {string}
 */
proto.cln.OfferRequest.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.OfferRequest} returns this
 */
proto.cln.OfferRequest.prototype.setLabel = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.OfferRequest} returns this
 */
proto.cln.OfferRequest.prototype.clearLabel = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.OfferRequest.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint64 quantity_max = 5;
 * @return {number}
 */
proto.cln.OfferRequest.prototype.getQuantityMax = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.OfferRequest} returns this
 */
proto.cln.OfferRequest.prototype.setQuantityMax = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.OfferRequest} returns this
 */
proto.cln.OfferRequest.prototype.clearQuantityMax = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.OfferRequest.prototype.hasQuantityMax = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint64 absolute_expiry = 6;
 * @return {number}
 */
proto.cln.OfferRequest.prototype.getAbsoluteExpiry = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.OfferRequest} returns this
 */
proto.cln.OfferRequest.prototype.setAbsoluteExpiry = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.OfferRequest} returns this
 */
proto.cln.OfferRequest.prototype.clearAbsoluteExpiry = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.OfferRequest.prototype.hasAbsoluteExpiry = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string recurrence = 7;
 * @return {string}
 */
proto.cln.OfferRequest.prototype.getRecurrence = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.OfferRequest} returns this
 */
proto.cln.OfferRequest.prototype.setRecurrence = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.OfferRequest} returns this
 */
proto.cln.OfferRequest.prototype.clearRecurrence = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.OfferRequest.prototype.hasRecurrence = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string recurrence_base = 8;
 * @return {string}
 */
proto.cln.OfferRequest.prototype.getRecurrenceBase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.OfferRequest} returns this
 */
proto.cln.OfferRequest.prototype.setRecurrenceBase = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.OfferRequest} returns this
 */
proto.cln.OfferRequest.prototype.clearRecurrenceBase = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.OfferRequest.prototype.hasRecurrenceBase = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string recurrence_paywindow = 9;
 * @return {string}
 */
proto.cln.OfferRequest.prototype.getRecurrencePaywindow = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.OfferRequest} returns this
 */
proto.cln.OfferRequest.prototype.setRecurrencePaywindow = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.OfferRequest} returns this
 */
proto.cln.OfferRequest.prototype.clearRecurrencePaywindow = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.OfferRequest.prototype.hasRecurrencePaywindow = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint32 recurrence_limit = 10;
 * @return {number}
 */
proto.cln.OfferRequest.prototype.getRecurrenceLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.OfferRequest} returns this
 */
proto.cln.OfferRequest.prototype.setRecurrenceLimit = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.OfferRequest} returns this
 */
proto.cln.OfferRequest.prototype.clearRecurrenceLimit = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.OfferRequest.prototype.hasRecurrenceLimit = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional bool single_use = 11;
 * @return {boolean}
 */
proto.cln.OfferRequest.prototype.getSingleUse = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.OfferRequest} returns this
 */
proto.cln.OfferRequest.prototype.setSingleUse = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.OfferRequest} returns this
 */
proto.cln.OfferRequest.prototype.clearSingleUse = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.OfferRequest.prototype.hasSingleUse = function() {
  return jspb.Message.getField(this, 11) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.OfferResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.OfferResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.OfferResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.OfferResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    offerId: msg.getOfferId_asB64(),
    active: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    singleUse: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    bolt12: jspb.Message.getFieldWithDefault(msg, 4, ""),
    used: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    created: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    label: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.OfferResponse}
 */
proto.cln.OfferResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.OfferResponse;
  return proto.cln.OfferResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.OfferResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.OfferResponse}
 */
proto.cln.OfferResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOfferId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSingleUse(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt12(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUsed(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCreated(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.OfferResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.OfferResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.OfferResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.OfferResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOfferId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getSingleUse();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getBolt12();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUsed();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getCreated();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional bytes offer_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.OfferResponse.prototype.getOfferId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes offer_id = 1;
 * This is a type-conversion wrapper around `getOfferId()`
 * @return {string}
 */
proto.cln.OfferResponse.prototype.getOfferId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOfferId()));
};


/**
 * optional bytes offer_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOfferId()`
 * @return {!Uint8Array}
 */
proto.cln.OfferResponse.prototype.getOfferId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOfferId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.OfferResponse} returns this
 */
proto.cln.OfferResponse.prototype.setOfferId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bool active = 2;
 * @return {boolean}
 */
proto.cln.OfferResponse.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.OfferResponse} returns this
 */
proto.cln.OfferResponse.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool single_use = 3;
 * @return {boolean}
 */
proto.cln.OfferResponse.prototype.getSingleUse = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.OfferResponse} returns this
 */
proto.cln.OfferResponse.prototype.setSingleUse = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string bolt12 = 4;
 * @return {string}
 */
proto.cln.OfferResponse.prototype.getBolt12 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.OfferResponse} returns this
 */
proto.cln.OfferResponse.prototype.setBolt12 = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool used = 5;
 * @return {boolean}
 */
proto.cln.OfferResponse.prototype.getUsed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.OfferResponse} returns this
 */
proto.cln.OfferResponse.prototype.setUsed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool created = 6;
 * @return {boolean}
 */
proto.cln.OfferResponse.prototype.getCreated = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.OfferResponse} returns this
 */
proto.cln.OfferResponse.prototype.setCreated = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional string label = 7;
 * @return {string}
 */
proto.cln.OfferResponse.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.OfferResponse} returns this
 */
proto.cln.OfferResponse.prototype.setLabel = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.OfferResponse} returns this
 */
proto.cln.OfferResponse.prototype.clearLabel = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.OfferResponse.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.Openchannel_abortRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.Openchannel_abortRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.Openchannel_abortRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Openchannel_abortRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelId: msg.getChannelId_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.Openchannel_abortRequest}
 */
proto.cln.Openchannel_abortRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.Openchannel_abortRequest;
  return proto.cln.Openchannel_abortRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.Openchannel_abortRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.Openchannel_abortRequest}
 */
proto.cln.Openchannel_abortRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChannelId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.Openchannel_abortRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.Openchannel_abortRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.Openchannel_abortRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Openchannel_abortRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes channel_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.Openchannel_abortRequest.prototype.getChannelId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes channel_id = 1;
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {string}
 */
proto.cln.Openchannel_abortRequest.prototype.getChannelId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChannelId()));
};


/**
 * optional bytes channel_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {!Uint8Array}
 */
proto.cln.Openchannel_abortRequest.prototype.getChannelId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChannelId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.Openchannel_abortRequest} returns this
 */
proto.cln.Openchannel_abortRequest.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.Openchannel_abortResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.Openchannel_abortResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.Openchannel_abortResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Openchannel_abortResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelId: msg.getChannelId_asB64(),
    channelCanceled: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    reason: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.Openchannel_abortResponse}
 */
proto.cln.Openchannel_abortResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.Openchannel_abortResponse;
  return proto.cln.Openchannel_abortResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.Openchannel_abortResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.Openchannel_abortResponse}
 */
proto.cln.Openchannel_abortResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChannelId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setChannelCanceled(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.Openchannel_abortResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.Openchannel_abortResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.Openchannel_abortResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Openchannel_abortResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getChannelCanceled();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional bytes channel_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.Openchannel_abortResponse.prototype.getChannelId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes channel_id = 1;
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {string}
 */
proto.cln.Openchannel_abortResponse.prototype.getChannelId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChannelId()));
};


/**
 * optional bytes channel_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {!Uint8Array}
 */
proto.cln.Openchannel_abortResponse.prototype.getChannelId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChannelId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.Openchannel_abortResponse} returns this
 */
proto.cln.Openchannel_abortResponse.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bool channel_canceled = 2;
 * @return {boolean}
 */
proto.cln.Openchannel_abortResponse.prototype.getChannelCanceled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.Openchannel_abortResponse} returns this
 */
proto.cln.Openchannel_abortResponse.prototype.setChannelCanceled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string reason = 3;
 * @return {string}
 */
proto.cln.Openchannel_abortResponse.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.Openchannel_abortResponse} returns this
 */
proto.cln.Openchannel_abortResponse.prototype.setReason = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.Openchannel_bumpRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.Openchannel_bumpRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.Openchannel_bumpRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Openchannel_bumpRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelId: msg.getChannelId_asB64(),
    initialpsbt: jspb.Message.getFieldWithDefault(msg, 2, ""),
    fundingFeerate: (f = msg.getFundingFeerate()) && cln_primitives_pb.Feerate.toObject(includeInstance, f),
    amount: (f = msg.getAmount()) && cln_primitives_pb.Amount.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.Openchannel_bumpRequest}
 */
proto.cln.Openchannel_bumpRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.Openchannel_bumpRequest;
  return proto.cln.Openchannel_bumpRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.Openchannel_bumpRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.Openchannel_bumpRequest}
 */
proto.cln.Openchannel_bumpRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChannelId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInitialpsbt(value);
      break;
    case 3:
      var value = new cln_primitives_pb.Feerate;
      reader.readMessage(value,cln_primitives_pb.Feerate.deserializeBinaryFromReader);
      msg.setFundingFeerate(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.Openchannel_bumpRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.Openchannel_bumpRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.Openchannel_bumpRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Openchannel_bumpRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getInitialpsbt();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFundingFeerate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cln_primitives_pb.Feerate.serializeBinaryToWriter
    );
  }
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes channel_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.Openchannel_bumpRequest.prototype.getChannelId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes channel_id = 1;
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {string}
 */
proto.cln.Openchannel_bumpRequest.prototype.getChannelId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChannelId()));
};


/**
 * optional bytes channel_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {!Uint8Array}
 */
proto.cln.Openchannel_bumpRequest.prototype.getChannelId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChannelId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.Openchannel_bumpRequest} returns this
 */
proto.cln.Openchannel_bumpRequest.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string initialpsbt = 2;
 * @return {string}
 */
proto.cln.Openchannel_bumpRequest.prototype.getInitialpsbt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.Openchannel_bumpRequest} returns this
 */
proto.cln.Openchannel_bumpRequest.prototype.setInitialpsbt = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Feerate funding_feerate = 3;
 * @return {?proto.cln.Feerate}
 */
proto.cln.Openchannel_bumpRequest.prototype.getFundingFeerate = function() {
  return /** @type{?proto.cln.Feerate} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Feerate, 3));
};


/**
 * @param {?proto.cln.Feerate|undefined} value
 * @return {!proto.cln.Openchannel_bumpRequest} returns this
*/
proto.cln.Openchannel_bumpRequest.prototype.setFundingFeerate = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.Openchannel_bumpRequest} returns this
 */
proto.cln.Openchannel_bumpRequest.prototype.clearFundingFeerate = function() {
  return this.setFundingFeerate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.Openchannel_bumpRequest.prototype.hasFundingFeerate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Amount amount = 4;
 * @return {?proto.cln.Amount}
 */
proto.cln.Openchannel_bumpRequest.prototype.getAmount = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 4));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.Openchannel_bumpRequest} returns this
*/
proto.cln.Openchannel_bumpRequest.prototype.setAmount = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.Openchannel_bumpRequest} returns this
 */
proto.cln.Openchannel_bumpRequest.prototype.clearAmount = function() {
  return this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.Openchannel_bumpRequest.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.Openchannel_bumpResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.Openchannel_bumpResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.Openchannel_bumpResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Openchannel_bumpResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelId: msg.getChannelId_asB64(),
    channelType: (f = msg.getChannelType()) && proto.cln.Openchannel_bumpChannel_type.toObject(includeInstance, f),
    psbt: jspb.Message.getFieldWithDefault(msg, 3, ""),
    commitmentsSecured: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    fundingSerial: jspb.Message.getFieldWithDefault(msg, 5, 0),
    requiresConfirmedInputs: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.Openchannel_bumpResponse}
 */
proto.cln.Openchannel_bumpResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.Openchannel_bumpResponse;
  return proto.cln.Openchannel_bumpResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.Openchannel_bumpResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.Openchannel_bumpResponse}
 */
proto.cln.Openchannel_bumpResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChannelId(value);
      break;
    case 2:
      var value = new proto.cln.Openchannel_bumpChannel_type;
      reader.readMessage(value,proto.cln.Openchannel_bumpChannel_type.deserializeBinaryFromReader);
      msg.setChannelType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPsbt(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCommitmentsSecured(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFundingSerial(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRequiresConfirmedInputs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.Openchannel_bumpResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.Openchannel_bumpResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.Openchannel_bumpResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Openchannel_bumpResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getChannelType();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cln.Openchannel_bumpChannel_type.serializeBinaryToWriter
    );
  }
  f = message.getPsbt();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCommitmentsSecured();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getFundingSerial();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional bytes channel_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.Openchannel_bumpResponse.prototype.getChannelId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes channel_id = 1;
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {string}
 */
proto.cln.Openchannel_bumpResponse.prototype.getChannelId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChannelId()));
};


/**
 * optional bytes channel_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {!Uint8Array}
 */
proto.cln.Openchannel_bumpResponse.prototype.getChannelId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChannelId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.Openchannel_bumpResponse} returns this
 */
proto.cln.Openchannel_bumpResponse.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional Openchannel_bumpChannel_type channel_type = 2;
 * @return {?proto.cln.Openchannel_bumpChannel_type}
 */
proto.cln.Openchannel_bumpResponse.prototype.getChannelType = function() {
  return /** @type{?proto.cln.Openchannel_bumpChannel_type} */ (
    jspb.Message.getWrapperField(this, proto.cln.Openchannel_bumpChannel_type, 2));
};


/**
 * @param {?proto.cln.Openchannel_bumpChannel_type|undefined} value
 * @return {!proto.cln.Openchannel_bumpResponse} returns this
*/
proto.cln.Openchannel_bumpResponse.prototype.setChannelType = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.Openchannel_bumpResponse} returns this
 */
proto.cln.Openchannel_bumpResponse.prototype.clearChannelType = function() {
  return this.setChannelType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.Openchannel_bumpResponse.prototype.hasChannelType = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string psbt = 3;
 * @return {string}
 */
proto.cln.Openchannel_bumpResponse.prototype.getPsbt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.Openchannel_bumpResponse} returns this
 */
proto.cln.Openchannel_bumpResponse.prototype.setPsbt = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool commitments_secured = 4;
 * @return {boolean}
 */
proto.cln.Openchannel_bumpResponse.prototype.getCommitmentsSecured = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.Openchannel_bumpResponse} returns this
 */
proto.cln.Openchannel_bumpResponse.prototype.setCommitmentsSecured = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional uint64 funding_serial = 5;
 * @return {number}
 */
proto.cln.Openchannel_bumpResponse.prototype.getFundingSerial = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.Openchannel_bumpResponse} returns this
 */
proto.cln.Openchannel_bumpResponse.prototype.setFundingSerial = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool requires_confirmed_inputs = 6;
 * @return {boolean}
 */
proto.cln.Openchannel_bumpResponse.prototype.getRequiresConfirmedInputs = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.Openchannel_bumpResponse} returns this
 */
proto.cln.Openchannel_bumpResponse.prototype.setRequiresConfirmedInputs = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.Openchannel_bumpResponse} returns this
 */
proto.cln.Openchannel_bumpResponse.prototype.clearRequiresConfirmedInputs = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.Openchannel_bumpResponse.prototype.hasRequiresConfirmedInputs = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.Openchannel_bumpChannel_type.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.Openchannel_bumpChannel_type.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.Openchannel_bumpChannel_type.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.Openchannel_bumpChannel_type} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Openchannel_bumpChannel_type.toObject = function(includeInstance, msg) {
  var f, obj = {
    bitsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    namesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.Openchannel_bumpChannel_type}
 */
proto.cln.Openchannel_bumpChannel_type.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.Openchannel_bumpChannel_type;
  return proto.cln.Openchannel_bumpChannel_type.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.Openchannel_bumpChannel_type} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.Openchannel_bumpChannel_type}
 */
proto.cln.Openchannel_bumpChannel_type.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addBits(values[i]);
      }
      break;
    case 2:
      var values = /** @type {!Array<!proto.cln.ChannelTypeName>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addNames(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.Openchannel_bumpChannel_type.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.Openchannel_bumpChannel_type.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.Openchannel_bumpChannel_type} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Openchannel_bumpChannel_type.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBitsList();
  if (f.length > 0) {
    writer.writePackedUint32(
      1,
      f
    );
  }
  f = message.getNamesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      2,
      f
    );
  }
};


/**
 * repeated uint32 bits = 1;
 * @return {!Array<number>}
 */
proto.cln.Openchannel_bumpChannel_type.prototype.getBitsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.cln.Openchannel_bumpChannel_type} returns this
 */
proto.cln.Openchannel_bumpChannel_type.prototype.setBitsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.cln.Openchannel_bumpChannel_type} returns this
 */
proto.cln.Openchannel_bumpChannel_type.prototype.addBits = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.Openchannel_bumpChannel_type} returns this
 */
proto.cln.Openchannel_bumpChannel_type.prototype.clearBitsList = function() {
  return this.setBitsList([]);
};


/**
 * repeated ChannelTypeName names = 2;
 * @return {!Array<!proto.cln.ChannelTypeName>}
 */
proto.cln.Openchannel_bumpChannel_type.prototype.getNamesList = function() {
  return /** @type {!Array<!proto.cln.ChannelTypeName>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<!proto.cln.ChannelTypeName>} value
 * @return {!proto.cln.Openchannel_bumpChannel_type} returns this
 */
proto.cln.Openchannel_bumpChannel_type.prototype.setNamesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!proto.cln.ChannelTypeName} value
 * @param {number=} opt_index
 * @return {!proto.cln.Openchannel_bumpChannel_type} returns this
 */
proto.cln.Openchannel_bumpChannel_type.prototype.addNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.Openchannel_bumpChannel_type} returns this
 */
proto.cln.Openchannel_bumpChannel_type.prototype.clearNamesList = function() {
  return this.setNamesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.Openchannel_initRequest.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.Openchannel_initRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.Openchannel_initRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.Openchannel_initRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Openchannel_initRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64(),
    initialpsbt: jspb.Message.getFieldWithDefault(msg, 2, ""),
    commitmentFeerate: (f = msg.getCommitmentFeerate()) && cln_primitives_pb.Feerate.toObject(includeInstance, f),
    fundingFeerate: (f = msg.getFundingFeerate()) && cln_primitives_pb.Feerate.toObject(includeInstance, f),
    announce: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    closeTo: jspb.Message.getFieldWithDefault(msg, 6, ""),
    requestAmt: (f = msg.getRequestAmt()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    compactLease: msg.getCompactLease_asB64(),
    channelTypeList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
    amount: (f = msg.getAmount()) && cln_primitives_pb.Amount.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.Openchannel_initRequest}
 */
proto.cln.Openchannel_initRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.Openchannel_initRequest;
  return proto.cln.Openchannel_initRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.Openchannel_initRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.Openchannel_initRequest}
 */
proto.cln.Openchannel_initRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInitialpsbt(value);
      break;
    case 3:
      var value = new cln_primitives_pb.Feerate;
      reader.readMessage(value,cln_primitives_pb.Feerate.deserializeBinaryFromReader);
      msg.setCommitmentFeerate(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Feerate;
      reader.readMessage(value,cln_primitives_pb.Feerate.deserializeBinaryFromReader);
      msg.setFundingFeerate(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAnnounce(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCloseTo(value);
      break;
    case 7:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setRequestAmt(value);
      break;
    case 8:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setCompactLease(value);
      break;
    case 9:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addChannelType(values[i]);
      }
      break;
    case 10:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.Openchannel_initRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.Openchannel_initRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.Openchannel_initRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Openchannel_initRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getInitialpsbt();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCommitmentFeerate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cln_primitives_pb.Feerate.serializeBinaryToWriter
    );
  }
  f = message.getFundingFeerate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cln_primitives_pb.Feerate.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getRequestAmt();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBytes(
      8,
      f
    );
  }
  f = message.getChannelTypeList();
  if (f.length > 0) {
    writer.writePackedUint32(
      9,
      f
    );
  }
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.Openchannel_initRequest.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes id = 1;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.cln.Openchannel_initRequest.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.cln.Openchannel_initRequest.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.Openchannel_initRequest} returns this
 */
proto.cln.Openchannel_initRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string initialpsbt = 2;
 * @return {string}
 */
proto.cln.Openchannel_initRequest.prototype.getInitialpsbt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.Openchannel_initRequest} returns this
 */
proto.cln.Openchannel_initRequest.prototype.setInitialpsbt = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Feerate commitment_feerate = 3;
 * @return {?proto.cln.Feerate}
 */
proto.cln.Openchannel_initRequest.prototype.getCommitmentFeerate = function() {
  return /** @type{?proto.cln.Feerate} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Feerate, 3));
};


/**
 * @param {?proto.cln.Feerate|undefined} value
 * @return {!proto.cln.Openchannel_initRequest} returns this
*/
proto.cln.Openchannel_initRequest.prototype.setCommitmentFeerate = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.Openchannel_initRequest} returns this
 */
proto.cln.Openchannel_initRequest.prototype.clearCommitmentFeerate = function() {
  return this.setCommitmentFeerate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.Openchannel_initRequest.prototype.hasCommitmentFeerate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Feerate funding_feerate = 4;
 * @return {?proto.cln.Feerate}
 */
proto.cln.Openchannel_initRequest.prototype.getFundingFeerate = function() {
  return /** @type{?proto.cln.Feerate} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Feerate, 4));
};


/**
 * @param {?proto.cln.Feerate|undefined} value
 * @return {!proto.cln.Openchannel_initRequest} returns this
*/
proto.cln.Openchannel_initRequest.prototype.setFundingFeerate = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.Openchannel_initRequest} returns this
 */
proto.cln.Openchannel_initRequest.prototype.clearFundingFeerate = function() {
  return this.setFundingFeerate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.Openchannel_initRequest.prototype.hasFundingFeerate = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool announce = 5;
 * @return {boolean}
 */
proto.cln.Openchannel_initRequest.prototype.getAnnounce = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.Openchannel_initRequest} returns this
 */
proto.cln.Openchannel_initRequest.prototype.setAnnounce = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.Openchannel_initRequest} returns this
 */
proto.cln.Openchannel_initRequest.prototype.clearAnnounce = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.Openchannel_initRequest.prototype.hasAnnounce = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string close_to = 6;
 * @return {string}
 */
proto.cln.Openchannel_initRequest.prototype.getCloseTo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.Openchannel_initRequest} returns this
 */
proto.cln.Openchannel_initRequest.prototype.setCloseTo = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.Openchannel_initRequest} returns this
 */
proto.cln.Openchannel_initRequest.prototype.clearCloseTo = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.Openchannel_initRequest.prototype.hasCloseTo = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Amount request_amt = 7;
 * @return {?proto.cln.Amount}
 */
proto.cln.Openchannel_initRequest.prototype.getRequestAmt = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 7));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.Openchannel_initRequest} returns this
*/
proto.cln.Openchannel_initRequest.prototype.setRequestAmt = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.Openchannel_initRequest} returns this
 */
proto.cln.Openchannel_initRequest.prototype.clearRequestAmt = function() {
  return this.setRequestAmt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.Openchannel_initRequest.prototype.hasRequestAmt = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bytes compact_lease = 8;
 * @return {!(string|Uint8Array)}
 */
proto.cln.Openchannel_initRequest.prototype.getCompactLease = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * optional bytes compact_lease = 8;
 * This is a type-conversion wrapper around `getCompactLease()`
 * @return {string}
 */
proto.cln.Openchannel_initRequest.prototype.getCompactLease_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getCompactLease()));
};


/**
 * optional bytes compact_lease = 8;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCompactLease()`
 * @return {!Uint8Array}
 */
proto.cln.Openchannel_initRequest.prototype.getCompactLease_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getCompactLease()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.Openchannel_initRequest} returns this
 */
proto.cln.Openchannel_initRequest.prototype.setCompactLease = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.Openchannel_initRequest} returns this
 */
proto.cln.Openchannel_initRequest.prototype.clearCompactLease = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.Openchannel_initRequest.prototype.hasCompactLease = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * repeated uint32 channel_type = 9;
 * @return {!Array<number>}
 */
proto.cln.Openchannel_initRequest.prototype.getChannelTypeList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 9));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.cln.Openchannel_initRequest} returns this
 */
proto.cln.Openchannel_initRequest.prototype.setChannelTypeList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.cln.Openchannel_initRequest} returns this
 */
proto.cln.Openchannel_initRequest.prototype.addChannelType = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.Openchannel_initRequest} returns this
 */
proto.cln.Openchannel_initRequest.prototype.clearChannelTypeList = function() {
  return this.setChannelTypeList([]);
};


/**
 * optional Amount amount = 10;
 * @return {?proto.cln.Amount}
 */
proto.cln.Openchannel_initRequest.prototype.getAmount = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 10));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.Openchannel_initRequest} returns this
*/
proto.cln.Openchannel_initRequest.prototype.setAmount = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.Openchannel_initRequest} returns this
 */
proto.cln.Openchannel_initRequest.prototype.clearAmount = function() {
  return this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.Openchannel_initRequest.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.Openchannel_initResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.Openchannel_initResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.Openchannel_initResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Openchannel_initResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelId: msg.getChannelId_asB64(),
    psbt: jspb.Message.getFieldWithDefault(msg, 2, ""),
    channelType: (f = msg.getChannelType()) && proto.cln.Openchannel_initChannel_type.toObject(includeInstance, f),
    commitmentsSecured: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    fundingSerial: jspb.Message.getFieldWithDefault(msg, 5, 0),
    requiresConfirmedInputs: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.Openchannel_initResponse}
 */
proto.cln.Openchannel_initResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.Openchannel_initResponse;
  return proto.cln.Openchannel_initResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.Openchannel_initResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.Openchannel_initResponse}
 */
proto.cln.Openchannel_initResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChannelId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPsbt(value);
      break;
    case 3:
      var value = new proto.cln.Openchannel_initChannel_type;
      reader.readMessage(value,proto.cln.Openchannel_initChannel_type.deserializeBinaryFromReader);
      msg.setChannelType(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCommitmentsSecured(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFundingSerial(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRequiresConfirmedInputs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.Openchannel_initResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.Openchannel_initResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.Openchannel_initResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Openchannel_initResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getPsbt();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getChannelType();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cln.Openchannel_initChannel_type.serializeBinaryToWriter
    );
  }
  f = message.getCommitmentsSecured();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getFundingSerial();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional bytes channel_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.Openchannel_initResponse.prototype.getChannelId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes channel_id = 1;
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {string}
 */
proto.cln.Openchannel_initResponse.prototype.getChannelId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChannelId()));
};


/**
 * optional bytes channel_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {!Uint8Array}
 */
proto.cln.Openchannel_initResponse.prototype.getChannelId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChannelId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.Openchannel_initResponse} returns this
 */
proto.cln.Openchannel_initResponse.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string psbt = 2;
 * @return {string}
 */
proto.cln.Openchannel_initResponse.prototype.getPsbt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.Openchannel_initResponse} returns this
 */
proto.cln.Openchannel_initResponse.prototype.setPsbt = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Openchannel_initChannel_type channel_type = 3;
 * @return {?proto.cln.Openchannel_initChannel_type}
 */
proto.cln.Openchannel_initResponse.prototype.getChannelType = function() {
  return /** @type{?proto.cln.Openchannel_initChannel_type} */ (
    jspb.Message.getWrapperField(this, proto.cln.Openchannel_initChannel_type, 3));
};


/**
 * @param {?proto.cln.Openchannel_initChannel_type|undefined} value
 * @return {!proto.cln.Openchannel_initResponse} returns this
*/
proto.cln.Openchannel_initResponse.prototype.setChannelType = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.Openchannel_initResponse} returns this
 */
proto.cln.Openchannel_initResponse.prototype.clearChannelType = function() {
  return this.setChannelType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.Openchannel_initResponse.prototype.hasChannelType = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool commitments_secured = 4;
 * @return {boolean}
 */
proto.cln.Openchannel_initResponse.prototype.getCommitmentsSecured = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.Openchannel_initResponse} returns this
 */
proto.cln.Openchannel_initResponse.prototype.setCommitmentsSecured = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional uint64 funding_serial = 5;
 * @return {number}
 */
proto.cln.Openchannel_initResponse.prototype.getFundingSerial = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.Openchannel_initResponse} returns this
 */
proto.cln.Openchannel_initResponse.prototype.setFundingSerial = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool requires_confirmed_inputs = 6;
 * @return {boolean}
 */
proto.cln.Openchannel_initResponse.prototype.getRequiresConfirmedInputs = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.Openchannel_initResponse} returns this
 */
proto.cln.Openchannel_initResponse.prototype.setRequiresConfirmedInputs = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.Openchannel_initResponse} returns this
 */
proto.cln.Openchannel_initResponse.prototype.clearRequiresConfirmedInputs = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.Openchannel_initResponse.prototype.hasRequiresConfirmedInputs = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.Openchannel_initChannel_type.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.Openchannel_initChannel_type.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.Openchannel_initChannel_type.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.Openchannel_initChannel_type} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Openchannel_initChannel_type.toObject = function(includeInstance, msg) {
  var f, obj = {
    bitsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    namesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.Openchannel_initChannel_type}
 */
proto.cln.Openchannel_initChannel_type.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.Openchannel_initChannel_type;
  return proto.cln.Openchannel_initChannel_type.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.Openchannel_initChannel_type} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.Openchannel_initChannel_type}
 */
proto.cln.Openchannel_initChannel_type.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addBits(values[i]);
      }
      break;
    case 2:
      var values = /** @type {!Array<!proto.cln.ChannelTypeName>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addNames(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.Openchannel_initChannel_type.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.Openchannel_initChannel_type.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.Openchannel_initChannel_type} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Openchannel_initChannel_type.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBitsList();
  if (f.length > 0) {
    writer.writePackedUint32(
      1,
      f
    );
  }
  f = message.getNamesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      2,
      f
    );
  }
};


/**
 * repeated uint32 bits = 1;
 * @return {!Array<number>}
 */
proto.cln.Openchannel_initChannel_type.prototype.getBitsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.cln.Openchannel_initChannel_type} returns this
 */
proto.cln.Openchannel_initChannel_type.prototype.setBitsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.cln.Openchannel_initChannel_type} returns this
 */
proto.cln.Openchannel_initChannel_type.prototype.addBits = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.Openchannel_initChannel_type} returns this
 */
proto.cln.Openchannel_initChannel_type.prototype.clearBitsList = function() {
  return this.setBitsList([]);
};


/**
 * repeated ChannelTypeName names = 2;
 * @return {!Array<!proto.cln.ChannelTypeName>}
 */
proto.cln.Openchannel_initChannel_type.prototype.getNamesList = function() {
  return /** @type {!Array<!proto.cln.ChannelTypeName>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<!proto.cln.ChannelTypeName>} value
 * @return {!proto.cln.Openchannel_initChannel_type} returns this
 */
proto.cln.Openchannel_initChannel_type.prototype.setNamesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!proto.cln.ChannelTypeName} value
 * @param {number=} opt_index
 * @return {!proto.cln.Openchannel_initChannel_type} returns this
 */
proto.cln.Openchannel_initChannel_type.prototype.addNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.Openchannel_initChannel_type} returns this
 */
proto.cln.Openchannel_initChannel_type.prototype.clearNamesList = function() {
  return this.setNamesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.Openchannel_signedRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.Openchannel_signedRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.Openchannel_signedRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Openchannel_signedRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelId: msg.getChannelId_asB64(),
    signedPsbt: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.Openchannel_signedRequest}
 */
proto.cln.Openchannel_signedRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.Openchannel_signedRequest;
  return proto.cln.Openchannel_signedRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.Openchannel_signedRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.Openchannel_signedRequest}
 */
proto.cln.Openchannel_signedRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChannelId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignedPsbt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.Openchannel_signedRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.Openchannel_signedRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.Openchannel_signedRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Openchannel_signedRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getSignedPsbt();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bytes channel_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.Openchannel_signedRequest.prototype.getChannelId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes channel_id = 1;
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {string}
 */
proto.cln.Openchannel_signedRequest.prototype.getChannelId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChannelId()));
};


/**
 * optional bytes channel_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {!Uint8Array}
 */
proto.cln.Openchannel_signedRequest.prototype.getChannelId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChannelId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.Openchannel_signedRequest} returns this
 */
proto.cln.Openchannel_signedRequest.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string signed_psbt = 2;
 * @return {string}
 */
proto.cln.Openchannel_signedRequest.prototype.getSignedPsbt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.Openchannel_signedRequest} returns this
 */
proto.cln.Openchannel_signedRequest.prototype.setSignedPsbt = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.Openchannel_signedResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.Openchannel_signedResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.Openchannel_signedResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Openchannel_signedResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelId: msg.getChannelId_asB64(),
    tx: msg.getTx_asB64(),
    txid: msg.getTxid_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.Openchannel_signedResponse}
 */
proto.cln.Openchannel_signedResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.Openchannel_signedResponse;
  return proto.cln.Openchannel_signedResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.Openchannel_signedResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.Openchannel_signedResponse}
 */
proto.cln.Openchannel_signedResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChannelId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTx(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.Openchannel_signedResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.Openchannel_signedResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.Openchannel_signedResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Openchannel_signedResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getTx_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional bytes channel_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.Openchannel_signedResponse.prototype.getChannelId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes channel_id = 1;
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {string}
 */
proto.cln.Openchannel_signedResponse.prototype.getChannelId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChannelId()));
};


/**
 * optional bytes channel_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {!Uint8Array}
 */
proto.cln.Openchannel_signedResponse.prototype.getChannelId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChannelId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.Openchannel_signedResponse} returns this
 */
proto.cln.Openchannel_signedResponse.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes tx = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.Openchannel_signedResponse.prototype.getTx = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes tx = 2;
 * This is a type-conversion wrapper around `getTx()`
 * @return {string}
 */
proto.cln.Openchannel_signedResponse.prototype.getTx_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTx()));
};


/**
 * optional bytes tx = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTx()`
 * @return {!Uint8Array}
 */
proto.cln.Openchannel_signedResponse.prototype.getTx_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTx()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.Openchannel_signedResponse} returns this
 */
proto.cln.Openchannel_signedResponse.prototype.setTx = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes txid = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.Openchannel_signedResponse.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes txid = 3;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.Openchannel_signedResponse.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.Openchannel_signedResponse.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.Openchannel_signedResponse} returns this
 */
proto.cln.Openchannel_signedResponse.prototype.setTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.Openchannel_updateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.Openchannel_updateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.Openchannel_updateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Openchannel_updateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelId: msg.getChannelId_asB64(),
    psbt: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.Openchannel_updateRequest}
 */
proto.cln.Openchannel_updateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.Openchannel_updateRequest;
  return proto.cln.Openchannel_updateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.Openchannel_updateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.Openchannel_updateRequest}
 */
proto.cln.Openchannel_updateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChannelId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPsbt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.Openchannel_updateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.Openchannel_updateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.Openchannel_updateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Openchannel_updateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getPsbt();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bytes channel_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.Openchannel_updateRequest.prototype.getChannelId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes channel_id = 1;
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {string}
 */
proto.cln.Openchannel_updateRequest.prototype.getChannelId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChannelId()));
};


/**
 * optional bytes channel_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {!Uint8Array}
 */
proto.cln.Openchannel_updateRequest.prototype.getChannelId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChannelId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.Openchannel_updateRequest} returns this
 */
proto.cln.Openchannel_updateRequest.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string psbt = 2;
 * @return {string}
 */
proto.cln.Openchannel_updateRequest.prototype.getPsbt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.Openchannel_updateRequest} returns this
 */
proto.cln.Openchannel_updateRequest.prototype.setPsbt = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.Openchannel_updateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.Openchannel_updateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.Openchannel_updateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Openchannel_updateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelId: msg.getChannelId_asB64(),
    channelType: (f = msg.getChannelType()) && proto.cln.Openchannel_updateChannel_type.toObject(includeInstance, f),
    psbt: jspb.Message.getFieldWithDefault(msg, 3, ""),
    commitmentsSecured: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    fundingOutnum: jspb.Message.getFieldWithDefault(msg, 5, 0),
    closeTo: msg.getCloseTo_asB64(),
    requiresConfirmedInputs: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.Openchannel_updateResponse}
 */
proto.cln.Openchannel_updateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.Openchannel_updateResponse;
  return proto.cln.Openchannel_updateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.Openchannel_updateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.Openchannel_updateResponse}
 */
proto.cln.Openchannel_updateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChannelId(value);
      break;
    case 2:
      var value = new proto.cln.Openchannel_updateChannel_type;
      reader.readMessage(value,proto.cln.Openchannel_updateChannel_type.deserializeBinaryFromReader);
      msg.setChannelType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPsbt(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCommitmentsSecured(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFundingOutnum(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setCloseTo(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRequiresConfirmedInputs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.Openchannel_updateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.Openchannel_updateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.Openchannel_updateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Openchannel_updateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getChannelType();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cln.Openchannel_updateChannel_type.serializeBinaryToWriter
    );
  }
  f = message.getPsbt();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCommitmentsSecured();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getFundingOutnum();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional bytes channel_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.Openchannel_updateResponse.prototype.getChannelId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes channel_id = 1;
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {string}
 */
proto.cln.Openchannel_updateResponse.prototype.getChannelId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChannelId()));
};


/**
 * optional bytes channel_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {!Uint8Array}
 */
proto.cln.Openchannel_updateResponse.prototype.getChannelId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChannelId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.Openchannel_updateResponse} returns this
 */
proto.cln.Openchannel_updateResponse.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional Openchannel_updateChannel_type channel_type = 2;
 * @return {?proto.cln.Openchannel_updateChannel_type}
 */
proto.cln.Openchannel_updateResponse.prototype.getChannelType = function() {
  return /** @type{?proto.cln.Openchannel_updateChannel_type} */ (
    jspb.Message.getWrapperField(this, proto.cln.Openchannel_updateChannel_type, 2));
};


/**
 * @param {?proto.cln.Openchannel_updateChannel_type|undefined} value
 * @return {!proto.cln.Openchannel_updateResponse} returns this
*/
proto.cln.Openchannel_updateResponse.prototype.setChannelType = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.Openchannel_updateResponse} returns this
 */
proto.cln.Openchannel_updateResponse.prototype.clearChannelType = function() {
  return this.setChannelType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.Openchannel_updateResponse.prototype.hasChannelType = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string psbt = 3;
 * @return {string}
 */
proto.cln.Openchannel_updateResponse.prototype.getPsbt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.Openchannel_updateResponse} returns this
 */
proto.cln.Openchannel_updateResponse.prototype.setPsbt = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool commitments_secured = 4;
 * @return {boolean}
 */
proto.cln.Openchannel_updateResponse.prototype.getCommitmentsSecured = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.Openchannel_updateResponse} returns this
 */
proto.cln.Openchannel_updateResponse.prototype.setCommitmentsSecured = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional uint32 funding_outnum = 5;
 * @return {number}
 */
proto.cln.Openchannel_updateResponse.prototype.getFundingOutnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.Openchannel_updateResponse} returns this
 */
proto.cln.Openchannel_updateResponse.prototype.setFundingOutnum = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bytes close_to = 6;
 * @return {!(string|Uint8Array)}
 */
proto.cln.Openchannel_updateResponse.prototype.getCloseTo = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes close_to = 6;
 * This is a type-conversion wrapper around `getCloseTo()`
 * @return {string}
 */
proto.cln.Openchannel_updateResponse.prototype.getCloseTo_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getCloseTo()));
};


/**
 * optional bytes close_to = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCloseTo()`
 * @return {!Uint8Array}
 */
proto.cln.Openchannel_updateResponse.prototype.getCloseTo_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getCloseTo()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.Openchannel_updateResponse} returns this
 */
proto.cln.Openchannel_updateResponse.prototype.setCloseTo = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.Openchannel_updateResponse} returns this
 */
proto.cln.Openchannel_updateResponse.prototype.clearCloseTo = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.Openchannel_updateResponse.prototype.hasCloseTo = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool requires_confirmed_inputs = 7;
 * @return {boolean}
 */
proto.cln.Openchannel_updateResponse.prototype.getRequiresConfirmedInputs = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.Openchannel_updateResponse} returns this
 */
proto.cln.Openchannel_updateResponse.prototype.setRequiresConfirmedInputs = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.Openchannel_updateResponse} returns this
 */
proto.cln.Openchannel_updateResponse.prototype.clearRequiresConfirmedInputs = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.Openchannel_updateResponse.prototype.hasRequiresConfirmedInputs = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.Openchannel_updateChannel_type.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.Openchannel_updateChannel_type.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.Openchannel_updateChannel_type.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.Openchannel_updateChannel_type} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Openchannel_updateChannel_type.toObject = function(includeInstance, msg) {
  var f, obj = {
    bitsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    namesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.Openchannel_updateChannel_type}
 */
proto.cln.Openchannel_updateChannel_type.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.Openchannel_updateChannel_type;
  return proto.cln.Openchannel_updateChannel_type.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.Openchannel_updateChannel_type} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.Openchannel_updateChannel_type}
 */
proto.cln.Openchannel_updateChannel_type.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addBits(values[i]);
      }
      break;
    case 2:
      var values = /** @type {!Array<!proto.cln.ChannelTypeName>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addNames(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.Openchannel_updateChannel_type.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.Openchannel_updateChannel_type.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.Openchannel_updateChannel_type} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Openchannel_updateChannel_type.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBitsList();
  if (f.length > 0) {
    writer.writePackedUint32(
      1,
      f
    );
  }
  f = message.getNamesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      2,
      f
    );
  }
};


/**
 * repeated uint32 bits = 1;
 * @return {!Array<number>}
 */
proto.cln.Openchannel_updateChannel_type.prototype.getBitsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.cln.Openchannel_updateChannel_type} returns this
 */
proto.cln.Openchannel_updateChannel_type.prototype.setBitsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.cln.Openchannel_updateChannel_type} returns this
 */
proto.cln.Openchannel_updateChannel_type.prototype.addBits = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.Openchannel_updateChannel_type} returns this
 */
proto.cln.Openchannel_updateChannel_type.prototype.clearBitsList = function() {
  return this.setBitsList([]);
};


/**
 * repeated ChannelTypeName names = 2;
 * @return {!Array<!proto.cln.ChannelTypeName>}
 */
proto.cln.Openchannel_updateChannel_type.prototype.getNamesList = function() {
  return /** @type {!Array<!proto.cln.ChannelTypeName>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<!proto.cln.ChannelTypeName>} value
 * @return {!proto.cln.Openchannel_updateChannel_type} returns this
 */
proto.cln.Openchannel_updateChannel_type.prototype.setNamesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!proto.cln.ChannelTypeName} value
 * @param {number=} opt_index
 * @return {!proto.cln.Openchannel_updateChannel_type} returns this
 */
proto.cln.Openchannel_updateChannel_type.prototype.addNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.Openchannel_updateChannel_type} returns this
 */
proto.cln.Openchannel_updateChannel_type.prototype.clearNamesList = function() {
  return this.setNamesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.PingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.PingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.PingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64(),
    len: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pongbytes: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.PingRequest}
 */
proto.cln.PingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.PingRequest;
  return proto.cln.PingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.PingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.PingRequest}
 */
proto.cln.PingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLen(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPongbytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.PingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.PingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.PingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional bytes id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.PingRequest.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes id = 1;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.cln.PingRequest.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.cln.PingRequest.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.PingRequest} returns this
 */
proto.cln.PingRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint32 len = 2;
 * @return {number}
 */
proto.cln.PingRequest.prototype.getLen = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.PingRequest} returns this
 */
proto.cln.PingRequest.prototype.setLen = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.PingRequest} returns this
 */
proto.cln.PingRequest.prototype.clearLen = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PingRequest.prototype.hasLen = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 pongbytes = 3;
 * @return {number}
 */
proto.cln.PingRequest.prototype.getPongbytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.PingRequest} returns this
 */
proto.cln.PingRequest.prototype.setPongbytes = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.PingRequest} returns this
 */
proto.cln.PingRequest.prototype.clearPongbytes = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PingRequest.prototype.hasPongbytes = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.PingResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.PingResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.PingResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PingResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    totlen: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.PingResponse}
 */
proto.cln.PingResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.PingResponse;
  return proto.cln.PingResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.PingResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.PingResponse}
 */
proto.cln.PingResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotlen(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.PingResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.PingResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.PingResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PingResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotlen();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 totlen = 1;
 * @return {number}
 */
proto.cln.PingResponse.prototype.getTotlen = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.PingResponse} returns this
 */
proto.cln.PingResponse.prototype.setTotlen = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.PluginRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.PluginRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.PluginRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.PluginRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PluginRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    subcommand: jspb.Message.getFieldWithDefault(msg, 1, 0),
    plugin: jspb.Message.getFieldWithDefault(msg, 2, ""),
    directory: jspb.Message.getFieldWithDefault(msg, 3, ""),
    optionsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.PluginRequest}
 */
proto.cln.PluginRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.PluginRequest;
  return proto.cln.PluginRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.PluginRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.PluginRequest}
 */
proto.cln.PluginRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.PluginSubcommand} */ (reader.readEnum());
      msg.setSubcommand(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlugin(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDirectory(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.PluginRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.PluginRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.PluginRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PluginRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubcommand();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOptionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * optional PluginSubcommand subcommand = 1;
 * @return {!proto.cln.PluginSubcommand}
 */
proto.cln.PluginRequest.prototype.getSubcommand = function() {
  return /** @type {!proto.cln.PluginSubcommand} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.PluginSubcommand} value
 * @return {!proto.cln.PluginRequest} returns this
 */
proto.cln.PluginRequest.prototype.setSubcommand = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string plugin = 2;
 * @return {string}
 */
proto.cln.PluginRequest.prototype.getPlugin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.PluginRequest} returns this
 */
proto.cln.PluginRequest.prototype.setPlugin = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.PluginRequest} returns this
 */
proto.cln.PluginRequest.prototype.clearPlugin = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PluginRequest.prototype.hasPlugin = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string directory = 3;
 * @return {string}
 */
proto.cln.PluginRequest.prototype.getDirectory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.PluginRequest} returns this
 */
proto.cln.PluginRequest.prototype.setDirectory = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.PluginRequest} returns this
 */
proto.cln.PluginRequest.prototype.clearDirectory = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PluginRequest.prototype.hasDirectory = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated string options = 4;
 * @return {!Array<string>}
 */
proto.cln.PluginRequest.prototype.getOptionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.PluginRequest} returns this
 */
proto.cln.PluginRequest.prototype.setOptionsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.PluginRequest} returns this
 */
proto.cln.PluginRequest.prototype.addOptions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.PluginRequest} returns this
 */
proto.cln.PluginRequest.prototype.clearOptionsList = function() {
  return this.setOptionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.PluginResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.PluginResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.PluginResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.PluginResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PluginResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    command: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pluginsList: jspb.Message.toObjectList(msg.getPluginsList(),
    proto.cln.PluginPlugins.toObject, includeInstance),
    result: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.PluginResponse}
 */
proto.cln.PluginResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.PluginResponse;
  return proto.cln.PluginResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.PluginResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.PluginResponse}
 */
proto.cln.PluginResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.PluginSubcommand} */ (reader.readEnum());
      msg.setCommand(value);
      break;
    case 2:
      var value = new proto.cln.PluginPlugins;
      reader.readMessage(value,proto.cln.PluginPlugins.deserializeBinaryFromReader);
      msg.addPlugins(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.PluginResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.PluginResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.PluginResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PluginResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommand();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getPluginsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.cln.PluginPlugins.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional PluginSubcommand command = 1;
 * @return {!proto.cln.PluginSubcommand}
 */
proto.cln.PluginResponse.prototype.getCommand = function() {
  return /** @type {!proto.cln.PluginSubcommand} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.PluginSubcommand} value
 * @return {!proto.cln.PluginResponse} returns this
 */
proto.cln.PluginResponse.prototype.setCommand = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * repeated PluginPlugins plugins = 2;
 * @return {!Array<!proto.cln.PluginPlugins>}
 */
proto.cln.PluginResponse.prototype.getPluginsList = function() {
  return /** @type{!Array<!proto.cln.PluginPlugins>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.PluginPlugins, 2));
};


/**
 * @param {!Array<!proto.cln.PluginPlugins>} value
 * @return {!proto.cln.PluginResponse} returns this
*/
proto.cln.PluginResponse.prototype.setPluginsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.cln.PluginPlugins=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.PluginPlugins}
 */
proto.cln.PluginResponse.prototype.addPlugins = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.cln.PluginPlugins, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.PluginResponse} returns this
 */
proto.cln.PluginResponse.prototype.clearPluginsList = function() {
  return this.setPluginsList([]);
};


/**
 * optional string result = 3;
 * @return {string}
 */
proto.cln.PluginResponse.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.PluginResponse} returns this
 */
proto.cln.PluginResponse.prototype.setResult = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.PluginResponse} returns this
 */
proto.cln.PluginResponse.prototype.clearResult = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PluginResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.PluginPlugins.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.PluginPlugins.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.PluginPlugins} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PluginPlugins.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    active: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    dynamic: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.PluginPlugins}
 */
proto.cln.PluginPlugins.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.PluginPlugins;
  return proto.cln.PluginPlugins.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.PluginPlugins} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.PluginPlugins}
 */
proto.cln.PluginPlugins.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDynamic(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.PluginPlugins.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.PluginPlugins.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.PluginPlugins} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PluginPlugins.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getDynamic();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.cln.PluginPlugins.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.PluginPlugins} returns this
 */
proto.cln.PluginPlugins.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool active = 2;
 * @return {boolean}
 */
proto.cln.PluginPlugins.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.PluginPlugins} returns this
 */
proto.cln.PluginPlugins.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool dynamic = 3;
 * @return {boolean}
 */
proto.cln.PluginPlugins.prototype.getDynamic = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.PluginPlugins} returns this
 */
proto.cln.PluginPlugins.prototype.setDynamic = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.RenepaystatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.RenepaystatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.RenepaystatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.RenepaystatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    invstring: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.RenepaystatusRequest}
 */
proto.cln.RenepaystatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.RenepaystatusRequest;
  return proto.cln.RenepaystatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.RenepaystatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.RenepaystatusRequest}
 */
proto.cln.RenepaystatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvstring(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.RenepaystatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.RenepaystatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.RenepaystatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.RenepaystatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string invstring = 1;
 * @return {string}
 */
proto.cln.RenepaystatusRequest.prototype.getInvstring = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.RenepaystatusRequest} returns this
 */
proto.cln.RenepaystatusRequest.prototype.setInvstring = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.RenepaystatusRequest} returns this
 */
proto.cln.RenepaystatusRequest.prototype.clearInvstring = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.RenepaystatusRequest.prototype.hasInvstring = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.RenepaystatusResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.RenepaystatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.RenepaystatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.RenepaystatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.RenepaystatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    paystatusList: jspb.Message.toObjectList(msg.getPaystatusList(),
    proto.cln.RenepaystatusPaystatus.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.RenepaystatusResponse}
 */
proto.cln.RenepaystatusResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.RenepaystatusResponse;
  return proto.cln.RenepaystatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.RenepaystatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.RenepaystatusResponse}
 */
proto.cln.RenepaystatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.RenepaystatusPaystatus;
      reader.readMessage(value,proto.cln.RenepaystatusPaystatus.deserializeBinaryFromReader);
      msg.addPaystatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.RenepaystatusResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.RenepaystatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.RenepaystatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.RenepaystatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaystatusList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.RenepaystatusPaystatus.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RenepaystatusPaystatus paystatus = 1;
 * @return {!Array<!proto.cln.RenepaystatusPaystatus>}
 */
proto.cln.RenepaystatusResponse.prototype.getPaystatusList = function() {
  return /** @type{!Array<!proto.cln.RenepaystatusPaystatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.RenepaystatusPaystatus, 1));
};


/**
 * @param {!Array<!proto.cln.RenepaystatusPaystatus>} value
 * @return {!proto.cln.RenepaystatusResponse} returns this
*/
proto.cln.RenepaystatusResponse.prototype.setPaystatusList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.RenepaystatusPaystatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.RenepaystatusPaystatus}
 */
proto.cln.RenepaystatusResponse.prototype.addPaystatus = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.RenepaystatusPaystatus, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.RenepaystatusResponse} returns this
 */
proto.cln.RenepaystatusResponse.prototype.clearPaystatusList = function() {
  return this.setPaystatusList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.RenepaystatusPaystatus.repeatedFields_ = [11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.RenepaystatusPaystatus.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.RenepaystatusPaystatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.RenepaystatusPaystatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.RenepaystatusPaystatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    bolt11: jspb.Message.getFieldWithDefault(msg, 1, ""),
    paymentPreimage: msg.getPaymentPreimage_asB64(),
    paymentHash: msg.getPaymentHash_asB64(),
    createdAt: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    groupid: jspb.Message.getFieldWithDefault(msg, 5, 0),
    parts: jspb.Message.getFieldWithDefault(msg, 6, 0),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    amountSentMsat: (f = msg.getAmountSentMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 9, 0),
    destination: msg.getDestination_asB64(),
    notesList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.RenepaystatusPaystatus}
 */
proto.cln.RenepaystatusPaystatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.RenepaystatusPaystatus;
  return proto.cln.RenepaystatusPaystatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.RenepaystatusPaystatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.RenepaystatusPaystatus}
 */
proto.cln.RenepaystatusPaystatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentPreimage(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCreatedAt(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setGroupid(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setParts(value);
      break;
    case 7:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 8:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountSentMsat(value);
      break;
    case 9:
      var value = /** @type {!proto.cln.RenepaystatusPaystatus.RenepaystatusPaystatusStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 10:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDestination(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addNotes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.RenepaystatusPaystatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.RenepaystatusPaystatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.RenepaystatusPaystatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.RenepaystatusPaystatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBolt11();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getGroupid();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getAmountSentMsat();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBytes(
      10,
      f
    );
  }
  f = message.getNotesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.RenepaystatusPaystatus.RenepaystatusPaystatusStatus = {
  COMPLETE: 0,
  PENDING: 1,
  FAILED: 2
};

/**
 * optional string bolt11 = 1;
 * @return {string}
 */
proto.cln.RenepaystatusPaystatus.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.RenepaystatusPaystatus} returns this
 */
proto.cln.RenepaystatusPaystatus.prototype.setBolt11 = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes payment_preimage = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.RenepaystatusPaystatus.prototype.getPaymentPreimage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes payment_preimage = 2;
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {string}
 */
proto.cln.RenepaystatusPaystatus.prototype.getPaymentPreimage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentPreimage()));
};


/**
 * optional bytes payment_preimage = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {!Uint8Array}
 */
proto.cln.RenepaystatusPaystatus.prototype.getPaymentPreimage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentPreimage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.RenepaystatusPaystatus} returns this
 */
proto.cln.RenepaystatusPaystatus.prototype.setPaymentPreimage = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.RenepaystatusPaystatus} returns this
 */
proto.cln.RenepaystatusPaystatus.prototype.clearPaymentPreimage = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.RenepaystatusPaystatus.prototype.hasPaymentPreimage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes payment_hash = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.RenepaystatusPaystatus.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes payment_hash = 3;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.RenepaystatusPaystatus.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.RenepaystatusPaystatus.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.RenepaystatusPaystatus} returns this
 */
proto.cln.RenepaystatusPaystatus.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional double created_at = 4;
 * @return {number}
 */
proto.cln.RenepaystatusPaystatus.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.cln.RenepaystatusPaystatus} returns this
 */
proto.cln.RenepaystatusPaystatus.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional uint32 groupid = 5;
 * @return {number}
 */
proto.cln.RenepaystatusPaystatus.prototype.getGroupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.RenepaystatusPaystatus} returns this
 */
proto.cln.RenepaystatusPaystatus.prototype.setGroupid = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 parts = 6;
 * @return {number}
 */
proto.cln.RenepaystatusPaystatus.prototype.getParts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.RenepaystatusPaystatus} returns this
 */
proto.cln.RenepaystatusPaystatus.prototype.setParts = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.RenepaystatusPaystatus} returns this
 */
proto.cln.RenepaystatusPaystatus.prototype.clearParts = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.RenepaystatusPaystatus.prototype.hasParts = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Amount amount_msat = 7;
 * @return {?proto.cln.Amount}
 */
proto.cln.RenepaystatusPaystatus.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 7));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.RenepaystatusPaystatus} returns this
*/
proto.cln.RenepaystatusPaystatus.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.RenepaystatusPaystatus} returns this
 */
proto.cln.RenepaystatusPaystatus.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.RenepaystatusPaystatus.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Amount amount_sent_msat = 8;
 * @return {?proto.cln.Amount}
 */
proto.cln.RenepaystatusPaystatus.prototype.getAmountSentMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 8));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.RenepaystatusPaystatus} returns this
*/
proto.cln.RenepaystatusPaystatus.prototype.setAmountSentMsat = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.RenepaystatusPaystatus} returns this
 */
proto.cln.RenepaystatusPaystatus.prototype.clearAmountSentMsat = function() {
  return this.setAmountSentMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.RenepaystatusPaystatus.prototype.hasAmountSentMsat = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional RenepaystatusPaystatusStatus status = 9;
 * @return {!proto.cln.RenepaystatusPaystatus.RenepaystatusPaystatusStatus}
 */
proto.cln.RenepaystatusPaystatus.prototype.getStatus = function() {
  return /** @type {!proto.cln.RenepaystatusPaystatus.RenepaystatusPaystatusStatus} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.cln.RenepaystatusPaystatus.RenepaystatusPaystatusStatus} value
 * @return {!proto.cln.RenepaystatusPaystatus} returns this
 */
proto.cln.RenepaystatusPaystatus.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};


/**
 * optional bytes destination = 10;
 * @return {!(string|Uint8Array)}
 */
proto.cln.RenepaystatusPaystatus.prototype.getDestination = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * optional bytes destination = 10;
 * This is a type-conversion wrapper around `getDestination()`
 * @return {string}
 */
proto.cln.RenepaystatusPaystatus.prototype.getDestination_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDestination()));
};


/**
 * optional bytes destination = 10;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDestination()`
 * @return {!Uint8Array}
 */
proto.cln.RenepaystatusPaystatus.prototype.getDestination_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDestination()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.RenepaystatusPaystatus} returns this
 */
proto.cln.RenepaystatusPaystatus.prototype.setDestination = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.RenepaystatusPaystatus} returns this
 */
proto.cln.RenepaystatusPaystatus.prototype.clearDestination = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.RenepaystatusPaystatus.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * repeated string notes = 11;
 * @return {!Array<string>}
 */
proto.cln.RenepaystatusPaystatus.prototype.getNotesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.RenepaystatusPaystatus} returns this
 */
proto.cln.RenepaystatusPaystatus.prototype.setNotesList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.RenepaystatusPaystatus} returns this
 */
proto.cln.RenepaystatusPaystatus.prototype.addNotes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.RenepaystatusPaystatus} returns this
 */
proto.cln.RenepaystatusPaystatus.prototype.clearNotesList = function() {
  return this.setNotesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.RenepayRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.RenepayRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.RenepayRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.RenepayRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    invstring: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    maxfee: (f = msg.getMaxfee()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    maxdelay: jspb.Message.getFieldWithDefault(msg, 4, 0),
    retryFor: jspb.Message.getFieldWithDefault(msg, 5, 0),
    description: jspb.Message.getFieldWithDefault(msg, 6, ""),
    label: jspb.Message.getFieldWithDefault(msg, 7, ""),
    devUseShadow: jspb.Message.getBooleanFieldWithDefault(msg, 8, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.RenepayRequest}
 */
proto.cln.RenepayRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.RenepayRequest;
  return proto.cln.RenepayRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.RenepayRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.RenepayRequest}
 */
proto.cln.RenepayRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvstring(value);
      break;
    case 2:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 3:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setMaxfee(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxdelay(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRetryFor(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDevUseShadow(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.RenepayRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.RenepayRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.RenepayRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.RenepayRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvstring();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getMaxfee();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * optional string invstring = 1;
 * @return {string}
 */
proto.cln.RenepayRequest.prototype.getInvstring = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.RenepayRequest} returns this
 */
proto.cln.RenepayRequest.prototype.setInvstring = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Amount amount_msat = 2;
 * @return {?proto.cln.Amount}
 */
proto.cln.RenepayRequest.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 2));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.RenepayRequest} returns this
*/
proto.cln.RenepayRequest.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.RenepayRequest} returns this
 */
proto.cln.RenepayRequest.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.RenepayRequest.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Amount maxfee = 3;
 * @return {?proto.cln.Amount}
 */
proto.cln.RenepayRequest.prototype.getMaxfee = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 3));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.RenepayRequest} returns this
*/
proto.cln.RenepayRequest.prototype.setMaxfee = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.RenepayRequest} returns this
 */
proto.cln.RenepayRequest.prototype.clearMaxfee = function() {
  return this.setMaxfee(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.RenepayRequest.prototype.hasMaxfee = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 maxdelay = 4;
 * @return {number}
 */
proto.cln.RenepayRequest.prototype.getMaxdelay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.RenepayRequest} returns this
 */
proto.cln.RenepayRequest.prototype.setMaxdelay = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.RenepayRequest} returns this
 */
proto.cln.RenepayRequest.prototype.clearMaxdelay = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.RenepayRequest.prototype.hasMaxdelay = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 retry_for = 5;
 * @return {number}
 */
proto.cln.RenepayRequest.prototype.getRetryFor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.RenepayRequest} returns this
 */
proto.cln.RenepayRequest.prototype.setRetryFor = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.RenepayRequest} returns this
 */
proto.cln.RenepayRequest.prototype.clearRetryFor = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.RenepayRequest.prototype.hasRetryFor = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string description = 6;
 * @return {string}
 */
proto.cln.RenepayRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.RenepayRequest} returns this
 */
proto.cln.RenepayRequest.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.RenepayRequest} returns this
 */
proto.cln.RenepayRequest.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.RenepayRequest.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string label = 7;
 * @return {string}
 */
proto.cln.RenepayRequest.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.RenepayRequest} returns this
 */
proto.cln.RenepayRequest.prototype.setLabel = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.RenepayRequest} returns this
 */
proto.cln.RenepayRequest.prototype.clearLabel = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.RenepayRequest.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool dev_use_shadow = 8;
 * @return {boolean}
 */
proto.cln.RenepayRequest.prototype.getDevUseShadow = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.RenepayRequest} returns this
 */
proto.cln.RenepayRequest.prototype.setDevUseShadow = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.RenepayRequest} returns this
 */
proto.cln.RenepayRequest.prototype.clearDevUseShadow = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.RenepayRequest.prototype.hasDevUseShadow = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.RenepayResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.RenepayResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.RenepayResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.RenepayResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentPreimage: msg.getPaymentPreimage_asB64(),
    paymentHash: msg.getPaymentHash_asB64(),
    createdAt: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    parts: jspb.Message.getFieldWithDefault(msg, 4, 0),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    amountSentMsat: (f = msg.getAmountSentMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 7, 0),
    destination: msg.getDestination_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.RenepayResponse}
 */
proto.cln.RenepayResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.RenepayResponse;
  return proto.cln.RenepayResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.RenepayResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.RenepayResponse}
 */
proto.cln.RenepayResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentPreimage(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCreatedAt(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setParts(value);
      break;
    case 5:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 6:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountSentMsat(value);
      break;
    case 7:
      var value = /** @type {!proto.cln.RenepayResponse.RenepayStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 8:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDestination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.RenepayResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.RenepayResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.RenepayResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.RenepayResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentPreimage_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getParts();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getAmountSentMsat();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBytes(
      8,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.RenepayResponse.RenepayStatus = {
  COMPLETE: 0,
  PENDING: 1,
  FAILED: 2
};

/**
 * optional bytes payment_preimage = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.RenepayResponse.prototype.getPaymentPreimage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes payment_preimage = 1;
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {string}
 */
proto.cln.RenepayResponse.prototype.getPaymentPreimage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentPreimage()));
};


/**
 * optional bytes payment_preimage = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {!Uint8Array}
 */
proto.cln.RenepayResponse.prototype.getPaymentPreimage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentPreimage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.RenepayResponse} returns this
 */
proto.cln.RenepayResponse.prototype.setPaymentPreimage = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes payment_hash = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.RenepayResponse.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes payment_hash = 2;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.RenepayResponse.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.RenepayResponse.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.RenepayResponse} returns this
 */
proto.cln.RenepayResponse.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional double created_at = 3;
 * @return {number}
 */
proto.cln.RenepayResponse.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.cln.RenepayResponse} returns this
 */
proto.cln.RenepayResponse.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional uint32 parts = 4;
 * @return {number}
 */
proto.cln.RenepayResponse.prototype.getParts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.RenepayResponse} returns this
 */
proto.cln.RenepayResponse.prototype.setParts = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional Amount amount_msat = 5;
 * @return {?proto.cln.Amount}
 */
proto.cln.RenepayResponse.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 5));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.RenepayResponse} returns this
*/
proto.cln.RenepayResponse.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.RenepayResponse} returns this
 */
proto.cln.RenepayResponse.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.RenepayResponse.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Amount amount_sent_msat = 6;
 * @return {?proto.cln.Amount}
 */
proto.cln.RenepayResponse.prototype.getAmountSentMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 6));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.RenepayResponse} returns this
*/
proto.cln.RenepayResponse.prototype.setAmountSentMsat = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.RenepayResponse} returns this
 */
proto.cln.RenepayResponse.prototype.clearAmountSentMsat = function() {
  return this.setAmountSentMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.RenepayResponse.prototype.hasAmountSentMsat = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional RenepayStatus status = 7;
 * @return {!proto.cln.RenepayResponse.RenepayStatus}
 */
proto.cln.RenepayResponse.prototype.getStatus = function() {
  return /** @type {!proto.cln.RenepayResponse.RenepayStatus} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.cln.RenepayResponse.RenepayStatus} value
 * @return {!proto.cln.RenepayResponse} returns this
 */
proto.cln.RenepayResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional bytes destination = 8;
 * @return {!(string|Uint8Array)}
 */
proto.cln.RenepayResponse.prototype.getDestination = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * optional bytes destination = 8;
 * This is a type-conversion wrapper around `getDestination()`
 * @return {string}
 */
proto.cln.RenepayResponse.prototype.getDestination_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDestination()));
};


/**
 * optional bytes destination = 8;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDestination()`
 * @return {!Uint8Array}
 */
proto.cln.RenepayResponse.prototype.getDestination_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDestination()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.RenepayResponse} returns this
 */
proto.cln.RenepayResponse.prototype.setDestination = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.RenepayResponse} returns this
 */
proto.cln.RenepayResponse.prototype.clearDestination = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.RenepayResponse.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ReserveinputsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ReserveinputsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ReserveinputsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ReserveinputsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    psbt: jspb.Message.getFieldWithDefault(msg, 1, ""),
    exclusive: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    reserve: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ReserveinputsRequest}
 */
proto.cln.ReserveinputsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ReserveinputsRequest;
  return proto.cln.ReserveinputsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ReserveinputsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ReserveinputsRequest}
 */
proto.cln.ReserveinputsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPsbt(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExclusive(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setReserve(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ReserveinputsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ReserveinputsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ReserveinputsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ReserveinputsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPsbt();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional string psbt = 1;
 * @return {string}
 */
proto.cln.ReserveinputsRequest.prototype.getPsbt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ReserveinputsRequest} returns this
 */
proto.cln.ReserveinputsRequest.prototype.setPsbt = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool exclusive = 2;
 * @return {boolean}
 */
proto.cln.ReserveinputsRequest.prototype.getExclusive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ReserveinputsRequest} returns this
 */
proto.cln.ReserveinputsRequest.prototype.setExclusive = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ReserveinputsRequest} returns this
 */
proto.cln.ReserveinputsRequest.prototype.clearExclusive = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ReserveinputsRequest.prototype.hasExclusive = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 reserve = 3;
 * @return {number}
 */
proto.cln.ReserveinputsRequest.prototype.getReserve = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ReserveinputsRequest} returns this
 */
proto.cln.ReserveinputsRequest.prototype.setReserve = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ReserveinputsRequest} returns this
 */
proto.cln.ReserveinputsRequest.prototype.clearReserve = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ReserveinputsRequest.prototype.hasReserve = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ReserveinputsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ReserveinputsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ReserveinputsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ReserveinputsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ReserveinputsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    reservationsList: jspb.Message.toObjectList(msg.getReservationsList(),
    proto.cln.ReserveinputsReservations.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ReserveinputsResponse}
 */
proto.cln.ReserveinputsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ReserveinputsResponse;
  return proto.cln.ReserveinputsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ReserveinputsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ReserveinputsResponse}
 */
proto.cln.ReserveinputsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.ReserveinputsReservations;
      reader.readMessage(value,proto.cln.ReserveinputsReservations.deserializeBinaryFromReader);
      msg.addReservations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ReserveinputsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ReserveinputsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ReserveinputsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ReserveinputsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReservationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.ReserveinputsReservations.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ReserveinputsReservations reservations = 1;
 * @return {!Array<!proto.cln.ReserveinputsReservations>}
 */
proto.cln.ReserveinputsResponse.prototype.getReservationsList = function() {
  return /** @type{!Array<!proto.cln.ReserveinputsReservations>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ReserveinputsReservations, 1));
};


/**
 * @param {!Array<!proto.cln.ReserveinputsReservations>} value
 * @return {!proto.cln.ReserveinputsResponse} returns this
*/
proto.cln.ReserveinputsResponse.prototype.setReservationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.ReserveinputsReservations=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ReserveinputsReservations}
 */
proto.cln.ReserveinputsResponse.prototype.addReservations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.ReserveinputsReservations, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ReserveinputsResponse} returns this
 */
proto.cln.ReserveinputsResponse.prototype.clearReservationsList = function() {
  return this.setReservationsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ReserveinputsReservations.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ReserveinputsReservations.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ReserveinputsReservations} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ReserveinputsReservations.toObject = function(includeInstance, msg) {
  var f, obj = {
    txid: msg.getTxid_asB64(),
    vout: jspb.Message.getFieldWithDefault(msg, 2, 0),
    wasReserved: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    reserved: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    reservedToBlock: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ReserveinputsReservations}
 */
proto.cln.ReserveinputsReservations.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ReserveinputsReservations;
  return proto.cln.ReserveinputsReservations.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ReserveinputsReservations} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ReserveinputsReservations}
 */
proto.cln.ReserveinputsReservations.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVout(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWasReserved(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReserved(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setReservedToBlock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ReserveinputsReservations.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ReserveinputsReservations.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ReserveinputsReservations} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ReserveinputsReservations.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getVout();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getWasReserved();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getReserved();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getReservedToBlock();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * optional bytes txid = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ReserveinputsReservations.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes txid = 1;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.ReserveinputsReservations.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.ReserveinputsReservations.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ReserveinputsReservations} returns this
 */
proto.cln.ReserveinputsReservations.prototype.setTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint32 vout = 2;
 * @return {number}
 */
proto.cln.ReserveinputsReservations.prototype.getVout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ReserveinputsReservations} returns this
 */
proto.cln.ReserveinputsReservations.prototype.setVout = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool was_reserved = 3;
 * @return {boolean}
 */
proto.cln.ReserveinputsReservations.prototype.getWasReserved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ReserveinputsReservations} returns this
 */
proto.cln.ReserveinputsReservations.prototype.setWasReserved = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool reserved = 4;
 * @return {boolean}
 */
proto.cln.ReserveinputsReservations.prototype.getReserved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ReserveinputsReservations} returns this
 */
proto.cln.ReserveinputsReservations.prototype.setReserved = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional uint32 reserved_to_block = 5;
 * @return {number}
 */
proto.cln.ReserveinputsReservations.prototype.getReservedToBlock = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ReserveinputsReservations} returns this
 */
proto.cln.ReserveinputsReservations.prototype.setReservedToBlock = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SendcustommsgRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SendcustommsgRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SendcustommsgRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendcustommsgRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeId: msg.getNodeId_asB64(),
    msg: msg.getMsg_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SendcustommsgRequest}
 */
proto.cln.SendcustommsgRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SendcustommsgRequest;
  return proto.cln.SendcustommsgRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SendcustommsgRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SendcustommsgRequest}
 */
proto.cln.SendcustommsgRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setNodeId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMsg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SendcustommsgRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SendcustommsgRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SendcustommsgRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendcustommsgRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getMsg_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional bytes node_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendcustommsgRequest.prototype.getNodeId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes node_id = 1;
 * This is a type-conversion wrapper around `getNodeId()`
 * @return {string}
 */
proto.cln.SendcustommsgRequest.prototype.getNodeId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getNodeId()));
};


/**
 * optional bytes node_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getNodeId()`
 * @return {!Uint8Array}
 */
proto.cln.SendcustommsgRequest.prototype.getNodeId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getNodeId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendcustommsgRequest} returns this
 */
proto.cln.SendcustommsgRequest.prototype.setNodeId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes msg = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendcustommsgRequest.prototype.getMsg = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes msg = 2;
 * This is a type-conversion wrapper around `getMsg()`
 * @return {string}
 */
proto.cln.SendcustommsgRequest.prototype.getMsg_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMsg()));
};


/**
 * optional bytes msg = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMsg()`
 * @return {!Uint8Array}
 */
proto.cln.SendcustommsgRequest.prototype.getMsg_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMsg()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendcustommsgRequest} returns this
 */
proto.cln.SendcustommsgRequest.prototype.setMsg = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SendcustommsgResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SendcustommsgResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SendcustommsgResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendcustommsgResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SendcustommsgResponse}
 */
proto.cln.SendcustommsgResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SendcustommsgResponse;
  return proto.cln.SendcustommsgResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SendcustommsgResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SendcustommsgResponse}
 */
proto.cln.SendcustommsgResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SendcustommsgResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SendcustommsgResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SendcustommsgResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendcustommsgResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.cln.SendcustommsgResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SendcustommsgResponse} returns this
 */
proto.cln.SendcustommsgResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SendinvoiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SendinvoiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SendinvoiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendinvoiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    invreq: jspb.Message.getFieldWithDefault(msg, 1, ""),
    label: jspb.Message.getFieldWithDefault(msg, 2, ""),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    timeout: jspb.Message.getFieldWithDefault(msg, 4, 0),
    quantity: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SendinvoiceRequest}
 */
proto.cln.SendinvoiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SendinvoiceRequest;
  return proto.cln.SendinvoiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SendinvoiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SendinvoiceRequest}
 */
proto.cln.SendinvoiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvreq(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 3:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTimeout(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setQuantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SendinvoiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SendinvoiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SendinvoiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendinvoiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvreq();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint64(
      5,
      f
    );
  }
};


/**
 * optional string invreq = 1;
 * @return {string}
 */
proto.cln.SendinvoiceRequest.prototype.getInvreq = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SendinvoiceRequest} returns this
 */
proto.cln.SendinvoiceRequest.prototype.setInvreq = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string label = 2;
 * @return {string}
 */
proto.cln.SendinvoiceRequest.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SendinvoiceRequest} returns this
 */
proto.cln.SendinvoiceRequest.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Amount amount_msat = 3;
 * @return {?proto.cln.Amount}
 */
proto.cln.SendinvoiceRequest.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 3));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.SendinvoiceRequest} returns this
*/
proto.cln.SendinvoiceRequest.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.SendinvoiceRequest} returns this
 */
proto.cln.SendinvoiceRequest.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendinvoiceRequest.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 timeout = 4;
 * @return {number}
 */
proto.cln.SendinvoiceRequest.prototype.getTimeout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendinvoiceRequest} returns this
 */
proto.cln.SendinvoiceRequest.prototype.setTimeout = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendinvoiceRequest} returns this
 */
proto.cln.SendinvoiceRequest.prototype.clearTimeout = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendinvoiceRequest.prototype.hasTimeout = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint64 quantity = 5;
 * @return {number}
 */
proto.cln.SendinvoiceRequest.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendinvoiceRequest} returns this
 */
proto.cln.SendinvoiceRequest.prototype.setQuantity = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendinvoiceRequest} returns this
 */
proto.cln.SendinvoiceRequest.prototype.clearQuantity = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendinvoiceRequest.prototype.hasQuantity = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SendinvoiceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SendinvoiceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SendinvoiceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendinvoiceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    paymentHash: msg.getPaymentHash_asB64(),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0),
    expiresAt: jspb.Message.getFieldWithDefault(msg, 5, 0),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    bolt12: jspb.Message.getFieldWithDefault(msg, 7, ""),
    createdIndex: jspb.Message.getFieldWithDefault(msg, 8, 0),
    updatedIndex: jspb.Message.getFieldWithDefault(msg, 9, 0),
    payIndex: jspb.Message.getFieldWithDefault(msg, 10, 0),
    amountReceivedMsat: (f = msg.getAmountReceivedMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    paidAt: jspb.Message.getFieldWithDefault(msg, 12, 0),
    paymentPreimage: msg.getPaymentPreimage_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SendinvoiceResponse}
 */
proto.cln.SendinvoiceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SendinvoiceResponse;
  return proto.cln.SendinvoiceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SendinvoiceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SendinvoiceResponse}
 */
proto.cln.SendinvoiceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 4:
      var value = /** @type {!proto.cln.SendinvoiceResponse.SendinvoiceStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExpiresAt(value);
      break;
    case 6:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt12(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedIndex(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpdatedIndex(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPayIndex(value);
      break;
    case 11:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountReceivedMsat(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPaidAt(value);
      break;
    case 13:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentPreimage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SendinvoiceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SendinvoiceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SendinvoiceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendinvoiceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getExpiresAt();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getAmountReceivedMsat();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBytes(
      13,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.SendinvoiceResponse.SendinvoiceStatus = {
  UNPAID: 0,
  PAID: 1,
  EXPIRED: 2
};

/**
 * optional string label = 1;
 * @return {string}
 */
proto.cln.SendinvoiceResponse.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SendinvoiceResponse} returns this
 */
proto.cln.SendinvoiceResponse.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.cln.SendinvoiceResponse.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SendinvoiceResponse} returns this
 */
proto.cln.SendinvoiceResponse.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes payment_hash = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendinvoiceResponse.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes payment_hash = 3;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.SendinvoiceResponse.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.SendinvoiceResponse.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendinvoiceResponse} returns this
 */
proto.cln.SendinvoiceResponse.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional SendinvoiceStatus status = 4;
 * @return {!proto.cln.SendinvoiceResponse.SendinvoiceStatus}
 */
proto.cln.SendinvoiceResponse.prototype.getStatus = function() {
  return /** @type {!proto.cln.SendinvoiceResponse.SendinvoiceStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.cln.SendinvoiceResponse.SendinvoiceStatus} value
 * @return {!proto.cln.SendinvoiceResponse} returns this
 */
proto.cln.SendinvoiceResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional uint64 expires_at = 5;
 * @return {number}
 */
proto.cln.SendinvoiceResponse.prototype.getExpiresAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendinvoiceResponse} returns this
 */
proto.cln.SendinvoiceResponse.prototype.setExpiresAt = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional Amount amount_msat = 6;
 * @return {?proto.cln.Amount}
 */
proto.cln.SendinvoiceResponse.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 6));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.SendinvoiceResponse} returns this
*/
proto.cln.SendinvoiceResponse.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.SendinvoiceResponse} returns this
 */
proto.cln.SendinvoiceResponse.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendinvoiceResponse.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string bolt12 = 7;
 * @return {string}
 */
proto.cln.SendinvoiceResponse.prototype.getBolt12 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SendinvoiceResponse} returns this
 */
proto.cln.SendinvoiceResponse.prototype.setBolt12 = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendinvoiceResponse} returns this
 */
proto.cln.SendinvoiceResponse.prototype.clearBolt12 = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendinvoiceResponse.prototype.hasBolt12 = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint64 created_index = 8;
 * @return {number}
 */
proto.cln.SendinvoiceResponse.prototype.getCreatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendinvoiceResponse} returns this
 */
proto.cln.SendinvoiceResponse.prototype.setCreatedIndex = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendinvoiceResponse} returns this
 */
proto.cln.SendinvoiceResponse.prototype.clearCreatedIndex = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendinvoiceResponse.prototype.hasCreatedIndex = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint64 updated_index = 9;
 * @return {number}
 */
proto.cln.SendinvoiceResponse.prototype.getUpdatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendinvoiceResponse} returns this
 */
proto.cln.SendinvoiceResponse.prototype.setUpdatedIndex = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendinvoiceResponse} returns this
 */
proto.cln.SendinvoiceResponse.prototype.clearUpdatedIndex = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendinvoiceResponse.prototype.hasUpdatedIndex = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint64 pay_index = 10;
 * @return {number}
 */
proto.cln.SendinvoiceResponse.prototype.getPayIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendinvoiceResponse} returns this
 */
proto.cln.SendinvoiceResponse.prototype.setPayIndex = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendinvoiceResponse} returns this
 */
proto.cln.SendinvoiceResponse.prototype.clearPayIndex = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendinvoiceResponse.prototype.hasPayIndex = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Amount amount_received_msat = 11;
 * @return {?proto.cln.Amount}
 */
proto.cln.SendinvoiceResponse.prototype.getAmountReceivedMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 11));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.SendinvoiceResponse} returns this
*/
proto.cln.SendinvoiceResponse.prototype.setAmountReceivedMsat = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.SendinvoiceResponse} returns this
 */
proto.cln.SendinvoiceResponse.prototype.clearAmountReceivedMsat = function() {
  return this.setAmountReceivedMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendinvoiceResponse.prototype.hasAmountReceivedMsat = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint64 paid_at = 12;
 * @return {number}
 */
proto.cln.SendinvoiceResponse.prototype.getPaidAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendinvoiceResponse} returns this
 */
proto.cln.SendinvoiceResponse.prototype.setPaidAt = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendinvoiceResponse} returns this
 */
proto.cln.SendinvoiceResponse.prototype.clearPaidAt = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendinvoiceResponse.prototype.hasPaidAt = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bytes payment_preimage = 13;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendinvoiceResponse.prototype.getPaymentPreimage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * optional bytes payment_preimage = 13;
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {string}
 */
proto.cln.SendinvoiceResponse.prototype.getPaymentPreimage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentPreimage()));
};


/**
 * optional bytes payment_preimage = 13;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {!Uint8Array}
 */
proto.cln.SendinvoiceResponse.prototype.getPaymentPreimage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentPreimage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendinvoiceResponse} returns this
 */
proto.cln.SendinvoiceResponse.prototype.setPaymentPreimage = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendinvoiceResponse} returns this
 */
proto.cln.SendinvoiceResponse.prototype.clearPaymentPreimage = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendinvoiceResponse.prototype.hasPaymentPreimage = function() {
  return jspb.Message.getField(this, 13) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.SendonionmessageRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SendonionmessageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SendonionmessageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SendonionmessageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendonionmessageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    firstId: msg.getFirstId_asB64(),
    blinding: msg.getBlinding_asB64(),
    hopsList: jspb.Message.toObjectList(msg.getHopsList(),
    proto.cln.SendonionmessageHops.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SendonionmessageRequest}
 */
proto.cln.SendonionmessageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SendonionmessageRequest;
  return proto.cln.SendonionmessageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SendonionmessageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SendonionmessageRequest}
 */
proto.cln.SendonionmessageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFirstId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBlinding(value);
      break;
    case 3:
      var value = new proto.cln.SendonionmessageHops;
      reader.readMessage(value,proto.cln.SendonionmessageHops.deserializeBinaryFromReader);
      msg.addHops(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SendonionmessageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SendonionmessageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SendonionmessageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendonionmessageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFirstId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getBlinding_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getHopsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.cln.SendonionmessageHops.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes first_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendonionmessageRequest.prototype.getFirstId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes first_id = 1;
 * This is a type-conversion wrapper around `getFirstId()`
 * @return {string}
 */
proto.cln.SendonionmessageRequest.prototype.getFirstId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFirstId()));
};


/**
 * optional bytes first_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFirstId()`
 * @return {!Uint8Array}
 */
proto.cln.SendonionmessageRequest.prototype.getFirstId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFirstId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendonionmessageRequest} returns this
 */
proto.cln.SendonionmessageRequest.prototype.setFirstId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes blinding = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendonionmessageRequest.prototype.getBlinding = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes blinding = 2;
 * This is a type-conversion wrapper around `getBlinding()`
 * @return {string}
 */
proto.cln.SendonionmessageRequest.prototype.getBlinding_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBlinding()));
};


/**
 * optional bytes blinding = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBlinding()`
 * @return {!Uint8Array}
 */
proto.cln.SendonionmessageRequest.prototype.getBlinding_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBlinding()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendonionmessageRequest} returns this
 */
proto.cln.SendonionmessageRequest.prototype.setBlinding = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * repeated SendonionmessageHops hops = 3;
 * @return {!Array<!proto.cln.SendonionmessageHops>}
 */
proto.cln.SendonionmessageRequest.prototype.getHopsList = function() {
  return /** @type{!Array<!proto.cln.SendonionmessageHops>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.SendonionmessageHops, 3));
};


/**
 * @param {!Array<!proto.cln.SendonionmessageHops>} value
 * @return {!proto.cln.SendonionmessageRequest} returns this
*/
proto.cln.SendonionmessageRequest.prototype.setHopsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.cln.SendonionmessageHops=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.SendonionmessageHops}
 */
proto.cln.SendonionmessageRequest.prototype.addHops = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.cln.SendonionmessageHops, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.SendonionmessageRequest} returns this
 */
proto.cln.SendonionmessageRequest.prototype.clearHopsList = function() {
  return this.setHopsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SendonionmessageResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SendonionmessageResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SendonionmessageResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendonionmessageResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SendonionmessageResponse}
 */
proto.cln.SendonionmessageResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SendonionmessageResponse;
  return proto.cln.SendonionmessageResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SendonionmessageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SendonionmessageResponse}
 */
proto.cln.SendonionmessageResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SendonionmessageResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SendonionmessageResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SendonionmessageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendonionmessageResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SendonionmessageHops.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SendonionmessageHops.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SendonionmessageHops} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendonionmessageHops.toObject = function(includeInstance, msg) {
  var f, obj = {
    node: msg.getNode_asB64(),
    tlv: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SendonionmessageHops}
 */
proto.cln.SendonionmessageHops.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SendonionmessageHops;
  return proto.cln.SendonionmessageHops.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SendonionmessageHops} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SendonionmessageHops}
 */
proto.cln.SendonionmessageHops.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setNode(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTlv(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SendonionmessageHops.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SendonionmessageHops.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SendonionmessageHops} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendonionmessageHops.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNode_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getTlv();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional bytes node = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendonionmessageHops.prototype.getNode = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes node = 1;
 * This is a type-conversion wrapper around `getNode()`
 * @return {string}
 */
proto.cln.SendonionmessageHops.prototype.getNode_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getNode()));
};


/**
 * optional bytes node = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getNode()`
 * @return {!Uint8Array}
 */
proto.cln.SendonionmessageHops.prototype.getNode_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getNode()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendonionmessageHops} returns this
 */
proto.cln.SendonionmessageHops.prototype.setNode = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint32 tlv = 2;
 * @return {number}
 */
proto.cln.SendonionmessageHops.prototype.getTlv = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendonionmessageHops} returns this
 */
proto.cln.SendonionmessageHops.prototype.setTlv = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SetchannelRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SetchannelRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SetchannelRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SetchannelRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    feebase: (f = msg.getFeebase()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    feeppm: jspb.Message.getFieldWithDefault(msg, 3, 0),
    htlcmin: (f = msg.getHtlcmin()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    htlcmax: (f = msg.getHtlcmax()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    enforcedelay: jspb.Message.getFieldWithDefault(msg, 6, 0),
    ignorefeelimits: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SetchannelRequest}
 */
proto.cln.SetchannelRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SetchannelRequest;
  return proto.cln.SetchannelRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SetchannelRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SetchannelRequest}
 */
proto.cln.SetchannelRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setFeebase(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFeeppm(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setHtlcmin(value);
      break;
    case 5:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setHtlcmax(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setEnforcedelay(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIgnorefeelimits(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SetchannelRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SetchannelRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SetchannelRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SetchannelRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFeebase();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getHtlcmin();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getHtlcmax();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.cln.SetchannelRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SetchannelRequest} returns this
 */
proto.cln.SetchannelRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Amount feebase = 2;
 * @return {?proto.cln.Amount}
 */
proto.cln.SetchannelRequest.prototype.getFeebase = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 2));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.SetchannelRequest} returns this
*/
proto.cln.SetchannelRequest.prototype.setFeebase = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.SetchannelRequest} returns this
 */
proto.cln.SetchannelRequest.prototype.clearFeebase = function() {
  return this.setFeebase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SetchannelRequest.prototype.hasFeebase = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 feeppm = 3;
 * @return {number}
 */
proto.cln.SetchannelRequest.prototype.getFeeppm = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SetchannelRequest} returns this
 */
proto.cln.SetchannelRequest.prototype.setFeeppm = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SetchannelRequest} returns this
 */
proto.cln.SetchannelRequest.prototype.clearFeeppm = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SetchannelRequest.prototype.hasFeeppm = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Amount htlcmin = 4;
 * @return {?proto.cln.Amount}
 */
proto.cln.SetchannelRequest.prototype.getHtlcmin = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 4));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.SetchannelRequest} returns this
*/
proto.cln.SetchannelRequest.prototype.setHtlcmin = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.SetchannelRequest} returns this
 */
proto.cln.SetchannelRequest.prototype.clearHtlcmin = function() {
  return this.setHtlcmin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SetchannelRequest.prototype.hasHtlcmin = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Amount htlcmax = 5;
 * @return {?proto.cln.Amount}
 */
proto.cln.SetchannelRequest.prototype.getHtlcmax = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 5));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.SetchannelRequest} returns this
*/
proto.cln.SetchannelRequest.prototype.setHtlcmax = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.SetchannelRequest} returns this
 */
proto.cln.SetchannelRequest.prototype.clearHtlcmax = function() {
  return this.setHtlcmax(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SetchannelRequest.prototype.hasHtlcmax = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 enforcedelay = 6;
 * @return {number}
 */
proto.cln.SetchannelRequest.prototype.getEnforcedelay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SetchannelRequest} returns this
 */
proto.cln.SetchannelRequest.prototype.setEnforcedelay = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SetchannelRequest} returns this
 */
proto.cln.SetchannelRequest.prototype.clearEnforcedelay = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SetchannelRequest.prototype.hasEnforcedelay = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool ignorefeelimits = 7;
 * @return {boolean}
 */
proto.cln.SetchannelRequest.prototype.getIgnorefeelimits = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.SetchannelRequest} returns this
 */
proto.cln.SetchannelRequest.prototype.setIgnorefeelimits = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SetchannelRequest} returns this
 */
proto.cln.SetchannelRequest.prototype.clearIgnorefeelimits = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SetchannelRequest.prototype.hasIgnorefeelimits = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.SetchannelResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SetchannelResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SetchannelResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SetchannelResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SetchannelResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelsList: jspb.Message.toObjectList(msg.getChannelsList(),
    proto.cln.SetchannelChannels.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SetchannelResponse}
 */
proto.cln.SetchannelResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SetchannelResponse;
  return proto.cln.SetchannelResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SetchannelResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SetchannelResponse}
 */
proto.cln.SetchannelResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.SetchannelChannels;
      reader.readMessage(value,proto.cln.SetchannelChannels.deserializeBinaryFromReader);
      msg.addChannels(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SetchannelResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SetchannelResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SetchannelResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SetchannelResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.SetchannelChannels.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SetchannelChannels channels = 1;
 * @return {!Array<!proto.cln.SetchannelChannels>}
 */
proto.cln.SetchannelResponse.prototype.getChannelsList = function() {
  return /** @type{!Array<!proto.cln.SetchannelChannels>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.SetchannelChannels, 1));
};


/**
 * @param {!Array<!proto.cln.SetchannelChannels>} value
 * @return {!proto.cln.SetchannelResponse} returns this
*/
proto.cln.SetchannelResponse.prototype.setChannelsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.SetchannelChannels=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.SetchannelChannels}
 */
proto.cln.SetchannelResponse.prototype.addChannels = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.SetchannelChannels, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.SetchannelResponse} returns this
 */
proto.cln.SetchannelResponse.prototype.clearChannelsList = function() {
  return this.setChannelsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SetchannelChannels.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SetchannelChannels.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SetchannelChannels} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SetchannelChannels.toObject = function(includeInstance, msg) {
  var f, obj = {
    peerId: msg.getPeerId_asB64(),
    channelId: msg.getChannelId_asB64(),
    shortChannelId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    feeBaseMsat: (f = msg.getFeeBaseMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    feeProportionalMillionths: jspb.Message.getFieldWithDefault(msg, 5, 0),
    minimumHtlcOutMsat: (f = msg.getMinimumHtlcOutMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    warningHtlcminTooLow: jspb.Message.getFieldWithDefault(msg, 7, ""),
    maximumHtlcOutMsat: (f = msg.getMaximumHtlcOutMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    warningHtlcmaxTooHigh: jspb.Message.getFieldWithDefault(msg, 9, ""),
    ignoreFeeLimits: jspb.Message.getBooleanFieldWithDefault(msg, 10, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SetchannelChannels}
 */
proto.cln.SetchannelChannels.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SetchannelChannels;
  return proto.cln.SetchannelChannels.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SetchannelChannels} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SetchannelChannels}
 */
proto.cln.SetchannelChannels.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPeerId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChannelId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setShortChannelId(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setFeeBaseMsat(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFeeProportionalMillionths(value);
      break;
    case 6:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setMinimumHtlcOutMsat(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningHtlcminTooLow(value);
      break;
    case 8:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setMaximumHtlcOutMsat(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningHtlcmaxTooHigh(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIgnoreFeeLimits(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SetchannelChannels.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SetchannelChannels.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SetchannelChannels} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SetchannelChannels.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeerId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getChannelId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFeeBaseMsat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getFeeProportionalMillionths();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getMinimumHtlcOutMsat();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getMaximumHtlcOutMsat();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
};


/**
 * optional bytes peer_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SetchannelChannels.prototype.getPeerId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes peer_id = 1;
 * This is a type-conversion wrapper around `getPeerId()`
 * @return {string}
 */
proto.cln.SetchannelChannels.prototype.getPeerId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPeerId()));
};


/**
 * optional bytes peer_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPeerId()`
 * @return {!Uint8Array}
 */
proto.cln.SetchannelChannels.prototype.getPeerId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPeerId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SetchannelChannels} returns this
 */
proto.cln.SetchannelChannels.prototype.setPeerId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes channel_id = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SetchannelChannels.prototype.getChannelId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes channel_id = 2;
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {string}
 */
proto.cln.SetchannelChannels.prototype.getChannelId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChannelId()));
};


/**
 * optional bytes channel_id = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {!Uint8Array}
 */
proto.cln.SetchannelChannels.prototype.getChannelId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChannelId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SetchannelChannels} returns this
 */
proto.cln.SetchannelChannels.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string short_channel_id = 3;
 * @return {string}
 */
proto.cln.SetchannelChannels.prototype.getShortChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SetchannelChannels} returns this
 */
proto.cln.SetchannelChannels.prototype.setShortChannelId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SetchannelChannels} returns this
 */
proto.cln.SetchannelChannels.prototype.clearShortChannelId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SetchannelChannels.prototype.hasShortChannelId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Amount fee_base_msat = 4;
 * @return {?proto.cln.Amount}
 */
proto.cln.SetchannelChannels.prototype.getFeeBaseMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 4));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.SetchannelChannels} returns this
*/
proto.cln.SetchannelChannels.prototype.setFeeBaseMsat = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.SetchannelChannels} returns this
 */
proto.cln.SetchannelChannels.prototype.clearFeeBaseMsat = function() {
  return this.setFeeBaseMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SetchannelChannels.prototype.hasFeeBaseMsat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 fee_proportional_millionths = 5;
 * @return {number}
 */
proto.cln.SetchannelChannels.prototype.getFeeProportionalMillionths = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SetchannelChannels} returns this
 */
proto.cln.SetchannelChannels.prototype.setFeeProportionalMillionths = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional Amount minimum_htlc_out_msat = 6;
 * @return {?proto.cln.Amount}
 */
proto.cln.SetchannelChannels.prototype.getMinimumHtlcOutMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 6));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.SetchannelChannels} returns this
*/
proto.cln.SetchannelChannels.prototype.setMinimumHtlcOutMsat = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.SetchannelChannels} returns this
 */
proto.cln.SetchannelChannels.prototype.clearMinimumHtlcOutMsat = function() {
  return this.setMinimumHtlcOutMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SetchannelChannels.prototype.hasMinimumHtlcOutMsat = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string warning_htlcmin_too_low = 7;
 * @return {string}
 */
proto.cln.SetchannelChannels.prototype.getWarningHtlcminTooLow = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SetchannelChannels} returns this
 */
proto.cln.SetchannelChannels.prototype.setWarningHtlcminTooLow = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SetchannelChannels} returns this
 */
proto.cln.SetchannelChannels.prototype.clearWarningHtlcminTooLow = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SetchannelChannels.prototype.hasWarningHtlcminTooLow = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Amount maximum_htlc_out_msat = 8;
 * @return {?proto.cln.Amount}
 */
proto.cln.SetchannelChannels.prototype.getMaximumHtlcOutMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 8));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.SetchannelChannels} returns this
*/
proto.cln.SetchannelChannels.prototype.setMaximumHtlcOutMsat = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.SetchannelChannels} returns this
 */
proto.cln.SetchannelChannels.prototype.clearMaximumHtlcOutMsat = function() {
  return this.setMaximumHtlcOutMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SetchannelChannels.prototype.hasMaximumHtlcOutMsat = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string warning_htlcmax_too_high = 9;
 * @return {string}
 */
proto.cln.SetchannelChannels.prototype.getWarningHtlcmaxTooHigh = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SetchannelChannels} returns this
 */
proto.cln.SetchannelChannels.prototype.setWarningHtlcmaxTooHigh = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SetchannelChannels} returns this
 */
proto.cln.SetchannelChannels.prototype.clearWarningHtlcmaxTooHigh = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SetchannelChannels.prototype.hasWarningHtlcmaxTooHigh = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool ignore_fee_limits = 10;
 * @return {boolean}
 */
proto.cln.SetchannelChannels.prototype.getIgnoreFeeLimits = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.SetchannelChannels} returns this
 */
proto.cln.SetchannelChannels.prototype.setIgnoreFeeLimits = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SetchannelChannels} returns this
 */
proto.cln.SetchannelChannels.prototype.clearIgnoreFeeLimits = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SetchannelChannels.prototype.hasIgnoreFeeLimits = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SetconfigRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SetconfigRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SetconfigRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SetconfigRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    config: jspb.Message.getFieldWithDefault(msg, 1, ""),
    val: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SetconfigRequest}
 */
proto.cln.SetconfigRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SetconfigRequest;
  return proto.cln.SetconfigRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SetconfigRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SetconfigRequest}
 */
proto.cln.SetconfigRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConfig(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SetconfigRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SetconfigRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SetconfigRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SetconfigRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfig();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string config = 1;
 * @return {string}
 */
proto.cln.SetconfigRequest.prototype.getConfig = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SetconfigRequest} returns this
 */
proto.cln.SetconfigRequest.prototype.setConfig = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string val = 2;
 * @return {string}
 */
proto.cln.SetconfigRequest.prototype.getVal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SetconfigRequest} returns this
 */
proto.cln.SetconfigRequest.prototype.setVal = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SetconfigRequest} returns this
 */
proto.cln.SetconfigRequest.prototype.clearVal = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SetconfigRequest.prototype.hasVal = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SetconfigResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SetconfigResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SetconfigResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SetconfigResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    config: (f = msg.getConfig()) && proto.cln.SetconfigConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SetconfigResponse}
 */
proto.cln.SetconfigResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SetconfigResponse;
  return proto.cln.SetconfigResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SetconfigResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SetconfigResponse}
 */
proto.cln.SetconfigResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.SetconfigConfig;
      reader.readMessage(value,proto.cln.SetconfigConfig.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SetconfigResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SetconfigResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SetconfigResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SetconfigResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cln.SetconfigConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional SetconfigConfig config = 1;
 * @return {?proto.cln.SetconfigConfig}
 */
proto.cln.SetconfigResponse.prototype.getConfig = function() {
  return /** @type{?proto.cln.SetconfigConfig} */ (
    jspb.Message.getWrapperField(this, proto.cln.SetconfigConfig, 1));
};


/**
 * @param {?proto.cln.SetconfigConfig|undefined} value
 * @return {!proto.cln.SetconfigResponse} returns this
*/
proto.cln.SetconfigResponse.prototype.setConfig = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.SetconfigResponse} returns this
 */
proto.cln.SetconfigResponse.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SetconfigResponse.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SetconfigConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SetconfigConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SetconfigConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SetconfigConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    config: jspb.Message.getFieldWithDefault(msg, 1, ""),
    source: jspb.Message.getFieldWithDefault(msg, 2, ""),
    plugin: jspb.Message.getFieldWithDefault(msg, 3, ""),
    dynamic: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    set: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    valueStr: jspb.Message.getFieldWithDefault(msg, 6, ""),
    valueMsat: (f = msg.getValueMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    valueInt: jspb.Message.getFieldWithDefault(msg, 8, 0),
    valueBool: jspb.Message.getBooleanFieldWithDefault(msg, 9, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SetconfigConfig}
 */
proto.cln.SetconfigConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SetconfigConfig;
  return proto.cln.SetconfigConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SetconfigConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SetconfigConfig}
 */
proto.cln.SetconfigConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConfig(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlugin(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDynamic(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSet(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setValueStr(value);
      break;
    case 7:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setValueMsat(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setValueInt(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setValueBool(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SetconfigConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SetconfigConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SetconfigConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SetconfigConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfig();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDynamic();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getValueMsat();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeSint64(
      8,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
};


/**
 * optional string config = 1;
 * @return {string}
 */
proto.cln.SetconfigConfig.prototype.getConfig = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SetconfigConfig} returns this
 */
proto.cln.SetconfigConfig.prototype.setConfig = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.SetconfigConfig.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SetconfigConfig} returns this
 */
proto.cln.SetconfigConfig.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string plugin = 3;
 * @return {string}
 */
proto.cln.SetconfigConfig.prototype.getPlugin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SetconfigConfig} returns this
 */
proto.cln.SetconfigConfig.prototype.setPlugin = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SetconfigConfig} returns this
 */
proto.cln.SetconfigConfig.prototype.clearPlugin = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SetconfigConfig.prototype.hasPlugin = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool dynamic = 4;
 * @return {boolean}
 */
proto.cln.SetconfigConfig.prototype.getDynamic = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.SetconfigConfig} returns this
 */
proto.cln.SetconfigConfig.prototype.setDynamic = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool set = 5;
 * @return {boolean}
 */
proto.cln.SetconfigConfig.prototype.getSet = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.SetconfigConfig} returns this
 */
proto.cln.SetconfigConfig.prototype.setSet = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SetconfigConfig} returns this
 */
proto.cln.SetconfigConfig.prototype.clearSet = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SetconfigConfig.prototype.hasSet = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string value_str = 6;
 * @return {string}
 */
proto.cln.SetconfigConfig.prototype.getValueStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SetconfigConfig} returns this
 */
proto.cln.SetconfigConfig.prototype.setValueStr = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SetconfigConfig} returns this
 */
proto.cln.SetconfigConfig.prototype.clearValueStr = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SetconfigConfig.prototype.hasValueStr = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Amount value_msat = 7;
 * @return {?proto.cln.Amount}
 */
proto.cln.SetconfigConfig.prototype.getValueMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 7));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.SetconfigConfig} returns this
*/
proto.cln.SetconfigConfig.prototype.setValueMsat = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.SetconfigConfig} returns this
 */
proto.cln.SetconfigConfig.prototype.clearValueMsat = function() {
  return this.setValueMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SetconfigConfig.prototype.hasValueMsat = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional sint64 value_int = 8;
 * @return {number}
 */
proto.cln.SetconfigConfig.prototype.getValueInt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SetconfigConfig} returns this
 */
proto.cln.SetconfigConfig.prototype.setValueInt = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SetconfigConfig} returns this
 */
proto.cln.SetconfigConfig.prototype.clearValueInt = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SetconfigConfig.prototype.hasValueInt = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool value_bool = 9;
 * @return {boolean}
 */
proto.cln.SetconfigConfig.prototype.getValueBool = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.SetconfigConfig} returns this
 */
proto.cln.SetconfigConfig.prototype.setValueBool = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SetconfigConfig} returns this
 */
proto.cln.SetconfigConfig.prototype.clearValueBool = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SetconfigConfig.prototype.hasValueBool = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SetpsbtversionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SetpsbtversionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SetpsbtversionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SetpsbtversionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    psbt: jspb.Message.getFieldWithDefault(msg, 1, ""),
    version: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SetpsbtversionRequest}
 */
proto.cln.SetpsbtversionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SetpsbtversionRequest;
  return proto.cln.SetpsbtversionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SetpsbtversionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SetpsbtversionRequest}
 */
proto.cln.SetpsbtversionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPsbt(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SetpsbtversionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SetpsbtversionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SetpsbtversionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SetpsbtversionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPsbt();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional string psbt = 1;
 * @return {string}
 */
proto.cln.SetpsbtversionRequest.prototype.getPsbt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SetpsbtversionRequest} returns this
 */
proto.cln.SetpsbtversionRequest.prototype.setPsbt = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 version = 2;
 * @return {number}
 */
proto.cln.SetpsbtversionRequest.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SetpsbtversionRequest} returns this
 */
proto.cln.SetpsbtversionRequest.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SetpsbtversionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SetpsbtversionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SetpsbtversionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SetpsbtversionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    psbt: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SetpsbtversionResponse}
 */
proto.cln.SetpsbtversionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SetpsbtversionResponse;
  return proto.cln.SetpsbtversionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SetpsbtversionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SetpsbtversionResponse}
 */
proto.cln.SetpsbtversionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPsbt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SetpsbtversionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SetpsbtversionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SetpsbtversionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SetpsbtversionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPsbt();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string psbt = 1;
 * @return {string}
 */
proto.cln.SetpsbtversionResponse.prototype.getPsbt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SetpsbtversionResponse} returns this
 */
proto.cln.SetpsbtversionResponse.prototype.setPsbt = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SigninvoiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SigninvoiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SigninvoiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SigninvoiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    invstring: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SigninvoiceRequest}
 */
proto.cln.SigninvoiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SigninvoiceRequest;
  return proto.cln.SigninvoiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SigninvoiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SigninvoiceRequest}
 */
proto.cln.SigninvoiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvstring(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SigninvoiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SigninvoiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SigninvoiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SigninvoiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvstring();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string invstring = 1;
 * @return {string}
 */
proto.cln.SigninvoiceRequest.prototype.getInvstring = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SigninvoiceRequest} returns this
 */
proto.cln.SigninvoiceRequest.prototype.setInvstring = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SigninvoiceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SigninvoiceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SigninvoiceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SigninvoiceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    bolt11: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SigninvoiceResponse}
 */
proto.cln.SigninvoiceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SigninvoiceResponse;
  return proto.cln.SigninvoiceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SigninvoiceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SigninvoiceResponse}
 */
proto.cln.SigninvoiceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SigninvoiceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SigninvoiceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SigninvoiceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SigninvoiceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBolt11();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string bolt11 = 1;
 * @return {string}
 */
proto.cln.SigninvoiceResponse.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SigninvoiceResponse} returns this
 */
proto.cln.SigninvoiceResponse.prototype.setBolt11 = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SignmessageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SignmessageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SignmessageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SignmessageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SignmessageRequest}
 */
proto.cln.SignmessageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SignmessageRequest;
  return proto.cln.SignmessageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SignmessageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SignmessageRequest}
 */
proto.cln.SignmessageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SignmessageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SignmessageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SignmessageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SignmessageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.cln.SignmessageRequest.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SignmessageRequest} returns this
 */
proto.cln.SignmessageRequest.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SignmessageResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SignmessageResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SignmessageResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SignmessageResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    signature: msg.getSignature_asB64(),
    recid: msg.getRecid_asB64(),
    zbase: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SignmessageResponse}
 */
proto.cln.SignmessageResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SignmessageResponse;
  return proto.cln.SignmessageResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SignmessageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SignmessageResponse}
 */
proto.cln.SignmessageResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSignature(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRecid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setZbase(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SignmessageResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SignmessageResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SignmessageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SignmessageResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getRecid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getZbase();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional bytes signature = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SignmessageResponse.prototype.getSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes signature = 1;
 * This is a type-conversion wrapper around `getSignature()`
 * @return {string}
 */
proto.cln.SignmessageResponse.prototype.getSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSignature()));
};


/**
 * optional bytes signature = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignature()`
 * @return {!Uint8Array}
 */
proto.cln.SignmessageResponse.prototype.getSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SignmessageResponse} returns this
 */
proto.cln.SignmessageResponse.prototype.setSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes recid = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SignmessageResponse.prototype.getRecid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes recid = 2;
 * This is a type-conversion wrapper around `getRecid()`
 * @return {string}
 */
proto.cln.SignmessageResponse.prototype.getRecid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getRecid()));
};


/**
 * optional bytes recid = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRecid()`
 * @return {!Uint8Array}
 */
proto.cln.SignmessageResponse.prototype.getRecid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getRecid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SignmessageResponse} returns this
 */
proto.cln.SignmessageResponse.prototype.setRecid = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string zbase = 3;
 * @return {string}
 */
proto.cln.SignmessageResponse.prototype.getZbase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SignmessageResponse} returns this
 */
proto.cln.SignmessageResponse.prototype.setZbase = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.Splice_initRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.Splice_initRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.Splice_initRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Splice_initRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelId: msg.getChannelId_asB64(),
    relativeAmount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    initialpsbt: jspb.Message.getFieldWithDefault(msg, 3, ""),
    feeratePerKw: jspb.Message.getFieldWithDefault(msg, 4, 0),
    forceFeerate: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.Splice_initRequest}
 */
proto.cln.Splice_initRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.Splice_initRequest;
  return proto.cln.Splice_initRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.Splice_initRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.Splice_initRequest}
 */
proto.cln.Splice_initRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChannelId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setRelativeAmount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setInitialpsbt(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFeeratePerKw(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForceFeerate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.Splice_initRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.Splice_initRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.Splice_initRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Splice_initRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getRelativeAmount();
  if (f !== 0) {
    writer.writeSint64(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional bytes channel_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.Splice_initRequest.prototype.getChannelId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes channel_id = 1;
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {string}
 */
proto.cln.Splice_initRequest.prototype.getChannelId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChannelId()));
};


/**
 * optional bytes channel_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {!Uint8Array}
 */
proto.cln.Splice_initRequest.prototype.getChannelId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChannelId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.Splice_initRequest} returns this
 */
proto.cln.Splice_initRequest.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional sint64 relative_amount = 2;
 * @return {number}
 */
proto.cln.Splice_initRequest.prototype.getRelativeAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.Splice_initRequest} returns this
 */
proto.cln.Splice_initRequest.prototype.setRelativeAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string initialpsbt = 3;
 * @return {string}
 */
proto.cln.Splice_initRequest.prototype.getInitialpsbt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.Splice_initRequest} returns this
 */
proto.cln.Splice_initRequest.prototype.setInitialpsbt = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.Splice_initRequest} returns this
 */
proto.cln.Splice_initRequest.prototype.clearInitialpsbt = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.Splice_initRequest.prototype.hasInitialpsbt = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 feerate_per_kw = 4;
 * @return {number}
 */
proto.cln.Splice_initRequest.prototype.getFeeratePerKw = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.Splice_initRequest} returns this
 */
proto.cln.Splice_initRequest.prototype.setFeeratePerKw = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.Splice_initRequest} returns this
 */
proto.cln.Splice_initRequest.prototype.clearFeeratePerKw = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.Splice_initRequest.prototype.hasFeeratePerKw = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool force_feerate = 5;
 * @return {boolean}
 */
proto.cln.Splice_initRequest.prototype.getForceFeerate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.Splice_initRequest} returns this
 */
proto.cln.Splice_initRequest.prototype.setForceFeerate = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.Splice_initRequest} returns this
 */
proto.cln.Splice_initRequest.prototype.clearForceFeerate = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.Splice_initRequest.prototype.hasForceFeerate = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.Splice_initResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.Splice_initResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.Splice_initResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Splice_initResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    psbt: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.Splice_initResponse}
 */
proto.cln.Splice_initResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.Splice_initResponse;
  return proto.cln.Splice_initResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.Splice_initResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.Splice_initResponse}
 */
proto.cln.Splice_initResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPsbt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.Splice_initResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.Splice_initResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.Splice_initResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Splice_initResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPsbt();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string psbt = 1;
 * @return {string}
 */
proto.cln.Splice_initResponse.prototype.getPsbt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.Splice_initResponse} returns this
 */
proto.cln.Splice_initResponse.prototype.setPsbt = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.Splice_signedRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.Splice_signedRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.Splice_signedRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Splice_signedRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelId: msg.getChannelId_asB64(),
    psbt: jspb.Message.getFieldWithDefault(msg, 2, ""),
    signFirst: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.Splice_signedRequest}
 */
proto.cln.Splice_signedRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.Splice_signedRequest;
  return proto.cln.Splice_signedRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.Splice_signedRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.Splice_signedRequest}
 */
proto.cln.Splice_signedRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChannelId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPsbt(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSignFirst(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.Splice_signedRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.Splice_signedRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.Splice_signedRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Splice_signedRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getPsbt();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional bytes channel_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.Splice_signedRequest.prototype.getChannelId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes channel_id = 1;
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {string}
 */
proto.cln.Splice_signedRequest.prototype.getChannelId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChannelId()));
};


/**
 * optional bytes channel_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {!Uint8Array}
 */
proto.cln.Splice_signedRequest.prototype.getChannelId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChannelId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.Splice_signedRequest} returns this
 */
proto.cln.Splice_signedRequest.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string psbt = 2;
 * @return {string}
 */
proto.cln.Splice_signedRequest.prototype.getPsbt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.Splice_signedRequest} returns this
 */
proto.cln.Splice_signedRequest.prototype.setPsbt = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool sign_first = 3;
 * @return {boolean}
 */
proto.cln.Splice_signedRequest.prototype.getSignFirst = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.Splice_signedRequest} returns this
 */
proto.cln.Splice_signedRequest.prototype.setSignFirst = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.Splice_signedRequest} returns this
 */
proto.cln.Splice_signedRequest.prototype.clearSignFirst = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.Splice_signedRequest.prototype.hasSignFirst = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.Splice_signedResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.Splice_signedResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.Splice_signedResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Splice_signedResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    tx: msg.getTx_asB64(),
    txid: msg.getTxid_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.Splice_signedResponse}
 */
proto.cln.Splice_signedResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.Splice_signedResponse;
  return proto.cln.Splice_signedResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.Splice_signedResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.Splice_signedResponse}
 */
proto.cln.Splice_signedResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTx(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.Splice_signedResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.Splice_signedResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.Splice_signedResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Splice_signedResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTx_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional bytes tx = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.Splice_signedResponse.prototype.getTx = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes tx = 1;
 * This is a type-conversion wrapper around `getTx()`
 * @return {string}
 */
proto.cln.Splice_signedResponse.prototype.getTx_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTx()));
};


/**
 * optional bytes tx = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTx()`
 * @return {!Uint8Array}
 */
proto.cln.Splice_signedResponse.prototype.getTx_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTx()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.Splice_signedResponse} returns this
 */
proto.cln.Splice_signedResponse.prototype.setTx = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes txid = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.Splice_signedResponse.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes txid = 2;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.Splice_signedResponse.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.Splice_signedResponse.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.Splice_signedResponse} returns this
 */
proto.cln.Splice_signedResponse.prototype.setTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.Splice_updateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.Splice_updateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.Splice_updateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Splice_updateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelId: msg.getChannelId_asB64(),
    psbt: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.Splice_updateRequest}
 */
proto.cln.Splice_updateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.Splice_updateRequest;
  return proto.cln.Splice_updateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.Splice_updateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.Splice_updateRequest}
 */
proto.cln.Splice_updateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChannelId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPsbt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.Splice_updateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.Splice_updateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.Splice_updateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Splice_updateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getPsbt();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bytes channel_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.Splice_updateRequest.prototype.getChannelId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes channel_id = 1;
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {string}
 */
proto.cln.Splice_updateRequest.prototype.getChannelId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChannelId()));
};


/**
 * optional bytes channel_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {!Uint8Array}
 */
proto.cln.Splice_updateRequest.prototype.getChannelId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChannelId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.Splice_updateRequest} returns this
 */
proto.cln.Splice_updateRequest.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string psbt = 2;
 * @return {string}
 */
proto.cln.Splice_updateRequest.prototype.getPsbt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.Splice_updateRequest} returns this
 */
proto.cln.Splice_updateRequest.prototype.setPsbt = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.Splice_updateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.Splice_updateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.Splice_updateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Splice_updateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    psbt: jspb.Message.getFieldWithDefault(msg, 1, ""),
    commitmentsSecured: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.Splice_updateResponse}
 */
proto.cln.Splice_updateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.Splice_updateResponse;
  return proto.cln.Splice_updateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.Splice_updateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.Splice_updateResponse}
 */
proto.cln.Splice_updateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPsbt(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCommitmentsSecured(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.Splice_updateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.Splice_updateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.Splice_updateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.Splice_updateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPsbt();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCommitmentsSecured();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string psbt = 1;
 * @return {string}
 */
proto.cln.Splice_updateResponse.prototype.getPsbt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.Splice_updateResponse} returns this
 */
proto.cln.Splice_updateResponse.prototype.setPsbt = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool commitments_secured = 2;
 * @return {boolean}
 */
proto.cln.Splice_updateResponse.prototype.getCommitmentsSecured = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.Splice_updateResponse} returns this
 */
proto.cln.Splice_updateResponse.prototype.setCommitmentsSecured = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.UnreserveinputsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.UnreserveinputsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.UnreserveinputsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.UnreserveinputsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    psbt: jspb.Message.getFieldWithDefault(msg, 1, ""),
    reserve: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.UnreserveinputsRequest}
 */
proto.cln.UnreserveinputsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.UnreserveinputsRequest;
  return proto.cln.UnreserveinputsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.UnreserveinputsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.UnreserveinputsRequest}
 */
proto.cln.UnreserveinputsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPsbt(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setReserve(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.UnreserveinputsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.UnreserveinputsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.UnreserveinputsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.UnreserveinputsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPsbt();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional string psbt = 1;
 * @return {string}
 */
proto.cln.UnreserveinputsRequest.prototype.getPsbt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.UnreserveinputsRequest} returns this
 */
proto.cln.UnreserveinputsRequest.prototype.setPsbt = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 reserve = 2;
 * @return {number}
 */
proto.cln.UnreserveinputsRequest.prototype.getReserve = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.UnreserveinputsRequest} returns this
 */
proto.cln.UnreserveinputsRequest.prototype.setReserve = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.UnreserveinputsRequest} returns this
 */
proto.cln.UnreserveinputsRequest.prototype.clearReserve = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.UnreserveinputsRequest.prototype.hasReserve = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.UnreserveinputsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.UnreserveinputsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.UnreserveinputsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.UnreserveinputsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.UnreserveinputsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    reservationsList: jspb.Message.toObjectList(msg.getReservationsList(),
    proto.cln.UnreserveinputsReservations.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.UnreserveinputsResponse}
 */
proto.cln.UnreserveinputsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.UnreserveinputsResponse;
  return proto.cln.UnreserveinputsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.UnreserveinputsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.UnreserveinputsResponse}
 */
proto.cln.UnreserveinputsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.UnreserveinputsReservations;
      reader.readMessage(value,proto.cln.UnreserveinputsReservations.deserializeBinaryFromReader);
      msg.addReservations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.UnreserveinputsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.UnreserveinputsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.UnreserveinputsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.UnreserveinputsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReservationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.UnreserveinputsReservations.serializeBinaryToWriter
    );
  }
};


/**
 * repeated UnreserveinputsReservations reservations = 1;
 * @return {!Array<!proto.cln.UnreserveinputsReservations>}
 */
proto.cln.UnreserveinputsResponse.prototype.getReservationsList = function() {
  return /** @type{!Array<!proto.cln.UnreserveinputsReservations>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.UnreserveinputsReservations, 1));
};


/**
 * @param {!Array<!proto.cln.UnreserveinputsReservations>} value
 * @return {!proto.cln.UnreserveinputsResponse} returns this
*/
proto.cln.UnreserveinputsResponse.prototype.setReservationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.UnreserveinputsReservations=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.UnreserveinputsReservations}
 */
proto.cln.UnreserveinputsResponse.prototype.addReservations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.UnreserveinputsReservations, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.UnreserveinputsResponse} returns this
 */
proto.cln.UnreserveinputsResponse.prototype.clearReservationsList = function() {
  return this.setReservationsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.UnreserveinputsReservations.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.UnreserveinputsReservations.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.UnreserveinputsReservations} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.UnreserveinputsReservations.toObject = function(includeInstance, msg) {
  var f, obj = {
    txid: msg.getTxid_asB64(),
    vout: jspb.Message.getFieldWithDefault(msg, 2, 0),
    wasReserved: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    reserved: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    reservedToBlock: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.UnreserveinputsReservations}
 */
proto.cln.UnreserveinputsReservations.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.UnreserveinputsReservations;
  return proto.cln.UnreserveinputsReservations.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.UnreserveinputsReservations} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.UnreserveinputsReservations}
 */
proto.cln.UnreserveinputsReservations.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVout(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWasReserved(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReserved(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setReservedToBlock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.UnreserveinputsReservations.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.UnreserveinputsReservations.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.UnreserveinputsReservations} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.UnreserveinputsReservations.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getVout();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getWasReserved();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getReserved();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * optional bytes txid = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.UnreserveinputsReservations.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes txid = 1;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.UnreserveinputsReservations.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.UnreserveinputsReservations.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.UnreserveinputsReservations} returns this
 */
proto.cln.UnreserveinputsReservations.prototype.setTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint32 vout = 2;
 * @return {number}
 */
proto.cln.UnreserveinputsReservations.prototype.getVout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.UnreserveinputsReservations} returns this
 */
proto.cln.UnreserveinputsReservations.prototype.setVout = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool was_reserved = 3;
 * @return {boolean}
 */
proto.cln.UnreserveinputsReservations.prototype.getWasReserved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.UnreserveinputsReservations} returns this
 */
proto.cln.UnreserveinputsReservations.prototype.setWasReserved = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool reserved = 4;
 * @return {boolean}
 */
proto.cln.UnreserveinputsReservations.prototype.getReserved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.UnreserveinputsReservations} returns this
 */
proto.cln.UnreserveinputsReservations.prototype.setReserved = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional uint32 reserved_to_block = 5;
 * @return {number}
 */
proto.cln.UnreserveinputsReservations.prototype.getReservedToBlock = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.UnreserveinputsReservations} returns this
 */
proto.cln.UnreserveinputsReservations.prototype.setReservedToBlock = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.UnreserveinputsReservations} returns this
 */
proto.cln.UnreserveinputsReservations.prototype.clearReservedToBlock = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.UnreserveinputsReservations.prototype.hasReservedToBlock = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.UpgradewalletRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.UpgradewalletRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.UpgradewalletRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.UpgradewalletRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    feerate: (f = msg.getFeerate()) && cln_primitives_pb.Feerate.toObject(includeInstance, f),
    reservedok: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.UpgradewalletRequest}
 */
proto.cln.UpgradewalletRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.UpgradewalletRequest;
  return proto.cln.UpgradewalletRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.UpgradewalletRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.UpgradewalletRequest}
 */
proto.cln.UpgradewalletRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cln_primitives_pb.Feerate;
      reader.readMessage(value,cln_primitives_pb.Feerate.deserializeBinaryFromReader);
      msg.setFeerate(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReservedok(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.UpgradewalletRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.UpgradewalletRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.UpgradewalletRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.UpgradewalletRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeerate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cln_primitives_pb.Feerate.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional Feerate feerate = 1;
 * @return {?proto.cln.Feerate}
 */
proto.cln.UpgradewalletRequest.prototype.getFeerate = function() {
  return /** @type{?proto.cln.Feerate} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Feerate, 1));
};


/**
 * @param {?proto.cln.Feerate|undefined} value
 * @return {!proto.cln.UpgradewalletRequest} returns this
*/
proto.cln.UpgradewalletRequest.prototype.setFeerate = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.UpgradewalletRequest} returns this
 */
proto.cln.UpgradewalletRequest.prototype.clearFeerate = function() {
  return this.setFeerate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.UpgradewalletRequest.prototype.hasFeerate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool reservedok = 2;
 * @return {boolean}
 */
proto.cln.UpgradewalletRequest.prototype.getReservedok = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.UpgradewalletRequest} returns this
 */
proto.cln.UpgradewalletRequest.prototype.setReservedok = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.UpgradewalletRequest} returns this
 */
proto.cln.UpgradewalletRequest.prototype.clearReservedok = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.UpgradewalletRequest.prototype.hasReservedok = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.UpgradewalletResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.UpgradewalletResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.UpgradewalletResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.UpgradewalletResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    upgradedOuts: jspb.Message.getFieldWithDefault(msg, 1, 0),
    psbt: jspb.Message.getFieldWithDefault(msg, 2, ""),
    tx: msg.getTx_asB64(),
    txid: msg.getTxid_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.UpgradewalletResponse}
 */
proto.cln.UpgradewalletResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.UpgradewalletResponse;
  return proto.cln.UpgradewalletResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.UpgradewalletResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.UpgradewalletResponse}
 */
proto.cln.UpgradewalletResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpgradedOuts(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPsbt(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTx(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.UpgradewalletResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.UpgradewalletResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.UpgradewalletResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.UpgradewalletResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * optional uint64 upgraded_outs = 1;
 * @return {number}
 */
proto.cln.UpgradewalletResponse.prototype.getUpgradedOuts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.UpgradewalletResponse} returns this
 */
proto.cln.UpgradewalletResponse.prototype.setUpgradedOuts = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.UpgradewalletResponse} returns this
 */
proto.cln.UpgradewalletResponse.prototype.clearUpgradedOuts = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.UpgradewalletResponse.prototype.hasUpgradedOuts = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string psbt = 2;
 * @return {string}
 */
proto.cln.UpgradewalletResponse.prototype.getPsbt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.UpgradewalletResponse} returns this
 */
proto.cln.UpgradewalletResponse.prototype.setPsbt = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.UpgradewalletResponse} returns this
 */
proto.cln.UpgradewalletResponse.prototype.clearPsbt = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.UpgradewalletResponse.prototype.hasPsbt = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes tx = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.UpgradewalletResponse.prototype.getTx = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes tx = 3;
 * This is a type-conversion wrapper around `getTx()`
 * @return {string}
 */
proto.cln.UpgradewalletResponse.prototype.getTx_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTx()));
};


/**
 * optional bytes tx = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTx()`
 * @return {!Uint8Array}
 */
proto.cln.UpgradewalletResponse.prototype.getTx_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTx()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.UpgradewalletResponse} returns this
 */
proto.cln.UpgradewalletResponse.prototype.setTx = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.UpgradewalletResponse} returns this
 */
proto.cln.UpgradewalletResponse.prototype.clearTx = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.UpgradewalletResponse.prototype.hasTx = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bytes txid = 4;
 * @return {!(string|Uint8Array)}
 */
proto.cln.UpgradewalletResponse.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes txid = 4;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.UpgradewalletResponse.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.UpgradewalletResponse.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.UpgradewalletResponse} returns this
 */
proto.cln.UpgradewalletResponse.prototype.setTxid = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.UpgradewalletResponse} returns this
 */
proto.cln.UpgradewalletResponse.prototype.clearTxid = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.UpgradewalletResponse.prototype.hasTxid = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.WaitblockheightRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.WaitblockheightRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.WaitblockheightRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitblockheightRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    blockheight: jspb.Message.getFieldWithDefault(msg, 1, 0),
    timeout: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.WaitblockheightRequest}
 */
proto.cln.WaitblockheightRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.WaitblockheightRequest;
  return proto.cln.WaitblockheightRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.WaitblockheightRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.WaitblockheightRequest}
 */
proto.cln.WaitblockheightRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBlockheight(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTimeout(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.WaitblockheightRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.WaitblockheightRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.WaitblockheightRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitblockheightRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlockheight();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 blockheight = 1;
 * @return {number}
 */
proto.cln.WaitblockheightRequest.prototype.getBlockheight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitblockheightRequest} returns this
 */
proto.cln.WaitblockheightRequest.prototype.setBlockheight = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 timeout = 2;
 * @return {number}
 */
proto.cln.WaitblockheightRequest.prototype.getTimeout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitblockheightRequest} returns this
 */
proto.cln.WaitblockheightRequest.prototype.setTimeout = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitblockheightRequest} returns this
 */
proto.cln.WaitblockheightRequest.prototype.clearTimeout = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitblockheightRequest.prototype.hasTimeout = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.WaitblockheightResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.WaitblockheightResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.WaitblockheightResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitblockheightResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    blockheight: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.WaitblockheightResponse}
 */
proto.cln.WaitblockheightResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.WaitblockheightResponse;
  return proto.cln.WaitblockheightResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.WaitblockheightResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.WaitblockheightResponse}
 */
proto.cln.WaitblockheightResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBlockheight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.WaitblockheightResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.WaitblockheightResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.WaitblockheightResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitblockheightResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlockheight();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 blockheight = 1;
 * @return {number}
 */
proto.cln.WaitblockheightResponse.prototype.getBlockheight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitblockheightResponse} returns this
 */
proto.cln.WaitblockheightResponse.prototype.setBlockheight = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.WaitRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.WaitRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.WaitRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    subsystem: jspb.Message.getFieldWithDefault(msg, 1, 0),
    indexname: jspb.Message.getFieldWithDefault(msg, 2, 0),
    nextvalue: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.WaitRequest}
 */
proto.cln.WaitRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.WaitRequest;
  return proto.cln.WaitRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.WaitRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.WaitRequest}
 */
proto.cln.WaitRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.WaitRequest.WaitSubsystem} */ (reader.readEnum());
      msg.setSubsystem(value);
      break;
    case 2:
      var value = /** @type {!proto.cln.WaitRequest.WaitIndexname} */ (reader.readEnum());
      msg.setIndexname(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNextvalue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.WaitRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.WaitRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.WaitRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubsystem();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getIndexname();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getNextvalue();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.WaitRequest.WaitSubsystem = {
  INVOICES: 0,
  FORWARDS: 1,
  SENDPAYS: 2
};

/**
 * @enum {number}
 */
proto.cln.WaitRequest.WaitIndexname = {
  CREATED: 0,
  UPDATED: 1,
  DELETED: 2
};

/**
 * optional WaitSubsystem subsystem = 1;
 * @return {!proto.cln.WaitRequest.WaitSubsystem}
 */
proto.cln.WaitRequest.prototype.getSubsystem = function() {
  return /** @type {!proto.cln.WaitRequest.WaitSubsystem} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.WaitRequest.WaitSubsystem} value
 * @return {!proto.cln.WaitRequest} returns this
 */
proto.cln.WaitRequest.prototype.setSubsystem = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional WaitIndexname indexname = 2;
 * @return {!proto.cln.WaitRequest.WaitIndexname}
 */
proto.cln.WaitRequest.prototype.getIndexname = function() {
  return /** @type {!proto.cln.WaitRequest.WaitIndexname} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.cln.WaitRequest.WaitIndexname} value
 * @return {!proto.cln.WaitRequest} returns this
 */
proto.cln.WaitRequest.prototype.setIndexname = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional uint64 nextvalue = 3;
 * @return {number}
 */
proto.cln.WaitRequest.prototype.getNextvalue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitRequest} returns this
 */
proto.cln.WaitRequest.prototype.setNextvalue = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.WaitResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.WaitResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.WaitResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    subsystem: jspb.Message.getFieldWithDefault(msg, 1, 0),
    created: jspb.Message.getFieldWithDefault(msg, 2, 0),
    updated: jspb.Message.getFieldWithDefault(msg, 3, 0),
    deleted: jspb.Message.getFieldWithDefault(msg, 4, 0),
    details: (f = msg.getDetails()) && proto.cln.WaitDetails.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.WaitResponse}
 */
proto.cln.WaitResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.WaitResponse;
  return proto.cln.WaitResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.WaitResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.WaitResponse}
 */
proto.cln.WaitResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.WaitResponse.WaitSubsystem} */ (reader.readEnum());
      msg.setSubsystem(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreated(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpdated(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDeleted(value);
      break;
    case 5:
      var value = new proto.cln.WaitDetails;
      reader.readMessage(value,proto.cln.WaitDetails.deserializeBinaryFromReader);
      msg.setDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.WaitResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.WaitResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.WaitResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubsystem();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getDetails();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.cln.WaitDetails.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.WaitResponse.WaitSubsystem = {
  INVOICES: 0,
  FORWARDS: 1,
  SENDPAYS: 2
};

/**
 * optional WaitSubsystem subsystem = 1;
 * @return {!proto.cln.WaitResponse.WaitSubsystem}
 */
proto.cln.WaitResponse.prototype.getSubsystem = function() {
  return /** @type {!proto.cln.WaitResponse.WaitSubsystem} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.WaitResponse.WaitSubsystem} value
 * @return {!proto.cln.WaitResponse} returns this
 */
proto.cln.WaitResponse.prototype.setSubsystem = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint64 created = 2;
 * @return {number}
 */
proto.cln.WaitResponse.prototype.getCreated = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitResponse} returns this
 */
proto.cln.WaitResponse.prototype.setCreated = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitResponse} returns this
 */
proto.cln.WaitResponse.prototype.clearCreated = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitResponse.prototype.hasCreated = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 updated = 3;
 * @return {number}
 */
proto.cln.WaitResponse.prototype.getUpdated = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitResponse} returns this
 */
proto.cln.WaitResponse.prototype.setUpdated = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitResponse} returns this
 */
proto.cln.WaitResponse.prototype.clearUpdated = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitResponse.prototype.hasUpdated = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 deleted = 4;
 * @return {number}
 */
proto.cln.WaitResponse.prototype.getDeleted = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitResponse} returns this
 */
proto.cln.WaitResponse.prototype.setDeleted = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitResponse} returns this
 */
proto.cln.WaitResponse.prototype.clearDeleted = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitResponse.prototype.hasDeleted = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional WaitDetails details = 5;
 * @return {?proto.cln.WaitDetails}
 */
proto.cln.WaitResponse.prototype.getDetails = function() {
  return /** @type{?proto.cln.WaitDetails} */ (
    jspb.Message.getWrapperField(this, proto.cln.WaitDetails, 5));
};


/**
 * @param {?proto.cln.WaitDetails|undefined} value
 * @return {!proto.cln.WaitResponse} returns this
*/
proto.cln.WaitResponse.prototype.setDetails = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.WaitResponse} returns this
 */
proto.cln.WaitResponse.prototype.clearDetails = function() {
  return this.setDetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitResponse.prototype.hasDetails = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.WaitDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.WaitDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.WaitDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    label: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    bolt11: jspb.Message.getFieldWithDefault(msg, 4, ""),
    bolt12: jspb.Message.getFieldWithDefault(msg, 5, ""),
    partid: jspb.Message.getFieldWithDefault(msg, 6, 0),
    groupid: jspb.Message.getFieldWithDefault(msg, 7, 0),
    paymentHash: msg.getPaymentHash_asB64(),
    inChannel: jspb.Message.getFieldWithDefault(msg, 9, ""),
    inHtlcId: jspb.Message.getFieldWithDefault(msg, 10, 0),
    inMsat: (f = msg.getInMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    outChannel: jspb.Message.getFieldWithDefault(msg, 12, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.WaitDetails}
 */
proto.cln.WaitDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.WaitDetails;
  return proto.cln.WaitDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.WaitDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.WaitDetails}
 */
proto.cln.WaitDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.WaitDetails.WaitDetailsStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt12(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPartid(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGroupid(value);
      break;
    case 8:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setInChannel(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInHtlcId(value);
      break;
    case 11:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setInMsat(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutChannel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.WaitDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.WaitDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.WaitDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.cln.WaitDetails.WaitDetailsStatus} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBytes(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getInMsat();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.WaitDetails.WaitDetailsStatus = {
  UNPAID: 0,
  PAID: 1,
  EXPIRED: 2,
  PENDING: 3,
  FAILED: 4,
  COMPLETE: 5,
  OFFERED: 6,
  SETTLED: 7,
  LOCAL_FAILED: 8
};

/**
 * optional WaitDetailsStatus status = 1;
 * @return {!proto.cln.WaitDetails.WaitDetailsStatus}
 */
proto.cln.WaitDetails.prototype.getStatus = function() {
  return /** @type {!proto.cln.WaitDetails.WaitDetailsStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.WaitDetails.WaitDetailsStatus} value
 * @return {!proto.cln.WaitDetails} returns this
 */
proto.cln.WaitDetails.prototype.setStatus = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitDetails} returns this
 */
proto.cln.WaitDetails.prototype.clearStatus = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitDetails.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string label = 2;
 * @return {string}
 */
proto.cln.WaitDetails.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.WaitDetails} returns this
 */
proto.cln.WaitDetails.prototype.setLabel = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitDetails} returns this
 */
proto.cln.WaitDetails.prototype.clearLabel = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitDetails.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.cln.WaitDetails.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.WaitDetails} returns this
 */
proto.cln.WaitDetails.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitDetails} returns this
 */
proto.cln.WaitDetails.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitDetails.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string bolt11 = 4;
 * @return {string}
 */
proto.cln.WaitDetails.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.WaitDetails} returns this
 */
proto.cln.WaitDetails.prototype.setBolt11 = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitDetails} returns this
 */
proto.cln.WaitDetails.prototype.clearBolt11 = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitDetails.prototype.hasBolt11 = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string bolt12 = 5;
 * @return {string}
 */
proto.cln.WaitDetails.prototype.getBolt12 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.WaitDetails} returns this
 */
proto.cln.WaitDetails.prototype.setBolt12 = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitDetails} returns this
 */
proto.cln.WaitDetails.prototype.clearBolt12 = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitDetails.prototype.hasBolt12 = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint64 partid = 6;
 * @return {number}
 */
proto.cln.WaitDetails.prototype.getPartid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitDetails} returns this
 */
proto.cln.WaitDetails.prototype.setPartid = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitDetails} returns this
 */
proto.cln.WaitDetails.prototype.clearPartid = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitDetails.prototype.hasPartid = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 groupid = 7;
 * @return {number}
 */
proto.cln.WaitDetails.prototype.getGroupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitDetails} returns this
 */
proto.cln.WaitDetails.prototype.setGroupid = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitDetails} returns this
 */
proto.cln.WaitDetails.prototype.clearGroupid = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitDetails.prototype.hasGroupid = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bytes payment_hash = 8;
 * @return {!(string|Uint8Array)}
 */
proto.cln.WaitDetails.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * optional bytes payment_hash = 8;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.WaitDetails.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 8;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.WaitDetails.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.WaitDetails} returns this
 */
proto.cln.WaitDetails.prototype.setPaymentHash = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitDetails} returns this
 */
proto.cln.WaitDetails.prototype.clearPaymentHash = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitDetails.prototype.hasPaymentHash = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string in_channel = 9;
 * @return {string}
 */
proto.cln.WaitDetails.prototype.getInChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.WaitDetails} returns this
 */
proto.cln.WaitDetails.prototype.setInChannel = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitDetails} returns this
 */
proto.cln.WaitDetails.prototype.clearInChannel = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitDetails.prototype.hasInChannel = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint64 in_htlc_id = 10;
 * @return {number}
 */
proto.cln.WaitDetails.prototype.getInHtlcId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitDetails} returns this
 */
proto.cln.WaitDetails.prototype.setInHtlcId = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitDetails} returns this
 */
proto.cln.WaitDetails.prototype.clearInHtlcId = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitDetails.prototype.hasInHtlcId = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Amount in_msat = 11;
 * @return {?proto.cln.Amount}
 */
proto.cln.WaitDetails.prototype.getInMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 11));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.WaitDetails} returns this
*/
proto.cln.WaitDetails.prototype.setInMsat = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.WaitDetails} returns this
 */
proto.cln.WaitDetails.prototype.clearInMsat = function() {
  return this.setInMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitDetails.prototype.hasInMsat = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string out_channel = 12;
 * @return {string}
 */
proto.cln.WaitDetails.prototype.getOutChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.WaitDetails} returns this
 */
proto.cln.WaitDetails.prototype.setOutChannel = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitDetails} returns this
 */
proto.cln.WaitDetails.prototype.clearOutChannel = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitDetails.prototype.hasOutChannel = function() {
  return jspb.Message.getField(this, 12) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    config: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsRequest}
 */
proto.cln.ListconfigsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsRequest;
  return proto.cln.ListconfigsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsRequest}
 */
proto.cln.ListconfigsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string config = 1;
 * @return {string}
 */
proto.cln.ListconfigsRequest.prototype.getConfig = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsRequest} returns this
 */
proto.cln.ListconfigsRequest.prototype.setConfig = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsRequest} returns this
 */
proto.cln.ListconfigsRequest.prototype.clearConfig = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsRequest.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListconfigsResponse.repeatedFields_ = [3,4,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    configs: (f = msg.getConfigs()) && proto.cln.ListconfigsConfigs.toObject(includeInstance, f),
    pluginsList: jspb.Message.toObjectList(msg.getPluginsList(),
    proto.cln.ListconfigsPlugins.toObject, includeInstance),
    importantPluginsList: jspb.Message.toObjectList(msg.getImportantPluginsList(),
    proto.cln.ListconfigsImportantplugins.toObject, includeInstance),
    conf: jspb.Message.getFieldWithDefault(msg, 5, ""),
    lightningDir: jspb.Message.getFieldWithDefault(msg, 6, ""),
    network: jspb.Message.getFieldWithDefault(msg, 7, ""),
    allowDeprecatedApis: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    rpcFile: jspb.Message.getFieldWithDefault(msg, 9, ""),
    disablePluginList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    bookkeeperDir: jspb.Message.getFieldWithDefault(msg, 11, ""),
    bookkeeperDb: jspb.Message.getFieldWithDefault(msg, 12, ""),
    alwaysUseProxy: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    daemon: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    wallet: jspb.Message.getFieldWithDefault(msg, 15, ""),
    largeChannels: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
    experimentalDualFund: jspb.Message.getBooleanFieldWithDefault(msg, 17, false),
    experimentalSplicing: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
    experimentalOnionMessages: jspb.Message.getBooleanFieldWithDefault(msg, 19, false),
    experimentalOffers: jspb.Message.getBooleanFieldWithDefault(msg, 20, false),
    experimentalShutdownWrongFunding: jspb.Message.getBooleanFieldWithDefault(msg, 21, false),
    experimentalPeerStorage: jspb.Message.getBooleanFieldWithDefault(msg, 22, false),
    experimentalQuiesce: jspb.Message.getBooleanFieldWithDefault(msg, 23, false),
    experimentalUpgradeProtocol: jspb.Message.getBooleanFieldWithDefault(msg, 24, false),
    invoicesOnchainFallback: jspb.Message.getBooleanFieldWithDefault(msg, 25, false),
    databaseUpgrade: jspb.Message.getBooleanFieldWithDefault(msg, 26, false),
    rgb: msg.getRgb_asB64(),
    alias: jspb.Message.getFieldWithDefault(msg, 28, ""),
    pidFile: jspb.Message.getFieldWithDefault(msg, 29, ""),
    ignoreFeeLimits: jspb.Message.getBooleanFieldWithDefault(msg, 30, false),
    watchtimeBlocks: jspb.Message.getFieldWithDefault(msg, 31, 0),
    maxLocktimeBlocks: jspb.Message.getFieldWithDefault(msg, 32, 0),
    fundingConfirms: jspb.Message.getFieldWithDefault(msg, 33, 0),
    cltvDelta: jspb.Message.getFieldWithDefault(msg, 34, 0),
    cltvFinal: jspb.Message.getFieldWithDefault(msg, 35, 0),
    commitTime: jspb.Message.getFieldWithDefault(msg, 36, 0),
    feeBase: jspb.Message.getFieldWithDefault(msg, 37, 0),
    rescan: jspb.Message.getFieldWithDefault(msg, 38, 0),
    feePerSatoshi: jspb.Message.getFieldWithDefault(msg, 39, 0),
    maxConcurrentHtlcs: jspb.Message.getFieldWithDefault(msg, 40, 0),
    htlcMinimumMsat: (f = msg.getHtlcMinimumMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    htlcMaximumMsat: (f = msg.getHtlcMaximumMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    maxDustHtlcExposureMsat: (f = msg.getMaxDustHtlcExposureMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    minCapacitySat: jspb.Message.getFieldWithDefault(msg, 44, 0),
    addr: jspb.Message.getFieldWithDefault(msg, 45, ""),
    announceAddr: jspb.Message.getFieldWithDefault(msg, 46, ""),
    bindAddr: jspb.Message.getFieldWithDefault(msg, 47, ""),
    offline: jspb.Message.getBooleanFieldWithDefault(msg, 48, false),
    autolisten: jspb.Message.getBooleanFieldWithDefault(msg, 49, false),
    proxy: jspb.Message.getFieldWithDefault(msg, 50, ""),
    disableDns: jspb.Message.getBooleanFieldWithDefault(msg, 51, false),
    announceAddrDiscovered: jspb.Message.getFieldWithDefault(msg, 52, ""),
    announceAddrDiscoveredPort: jspb.Message.getFieldWithDefault(msg, 53, 0),
    encryptedHsm: jspb.Message.getBooleanFieldWithDefault(msg, 54, false),
    rpcFileMode: jspb.Message.getFieldWithDefault(msg, 55, ""),
    logLevel: jspb.Message.getFieldWithDefault(msg, 56, ""),
    logPrefix: jspb.Message.getFieldWithDefault(msg, 57, ""),
    logFile: jspb.Message.getFieldWithDefault(msg, 58, ""),
    logTimestamps: jspb.Message.getBooleanFieldWithDefault(msg, 59, false),
    forceFeerates: jspb.Message.getFieldWithDefault(msg, 60, ""),
    subdaemon: jspb.Message.getFieldWithDefault(msg, 61, ""),
    fetchinvoiceNoconnect: jspb.Message.getBooleanFieldWithDefault(msg, 62, false),
    acceptHtlcTlvTypes: jspb.Message.getFieldWithDefault(msg, 63, ""),
    torServicePassword: jspb.Message.getFieldWithDefault(msg, 64, ""),
    devAllowdustreserve: jspb.Message.getBooleanFieldWithDefault(msg, 65, false),
    announceAddrDns: jspb.Message.getBooleanFieldWithDefault(msg, 66, false),
    requireConfirmedInputs: jspb.Message.getBooleanFieldWithDefault(msg, 67, false),
    developer: jspb.Message.getBooleanFieldWithDefault(msg, 68, false),
    commitFee: jspb.Message.getFieldWithDefault(msg, 69, 0),
    minEmergencyMsat: (f = msg.getMinEmergencyMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    commitFeerateOffset: jspb.Message.getFieldWithDefault(msg, 71, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsResponse}
 */
proto.cln.ListconfigsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsResponse;
  return proto.cln.ListconfigsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsResponse}
 */
proto.cln.ListconfigsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.ListconfigsConfigs;
      reader.readMessage(value,proto.cln.ListconfigsConfigs.deserializeBinaryFromReader);
      msg.setConfigs(value);
      break;
    case 3:
      var value = new proto.cln.ListconfigsPlugins;
      reader.readMessage(value,proto.cln.ListconfigsPlugins.deserializeBinaryFromReader);
      msg.addPlugins(value);
      break;
    case 4:
      var value = new proto.cln.ListconfigsImportantplugins;
      reader.readMessage(value,proto.cln.ListconfigsImportantplugins.deserializeBinaryFromReader);
      msg.addImportantPlugins(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setConf(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLightningDir(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setNetwork(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowDeprecatedApis(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setRpcFile(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addDisablePlugin(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookkeeperDir(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookkeeperDb(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAlwaysUseProxy(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDaemon(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setWallet(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLargeChannels(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExperimentalDualFund(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExperimentalSplicing(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExperimentalOnionMessages(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExperimentalOffers(value);
      break;
    case 21:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExperimentalShutdownWrongFunding(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExperimentalPeerStorage(value);
      break;
    case 23:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExperimentalQuiesce(value);
      break;
    case 24:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExperimentalUpgradeProtocol(value);
      break;
    case 25:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInvoicesOnchainFallback(value);
      break;
    case 26:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDatabaseUpgrade(value);
      break;
    case 27:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRgb(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlias(value);
      break;
    case 29:
      var value = /** @type {string} */ (reader.readString());
      msg.setPidFile(value);
      break;
    case 30:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIgnoreFeeLimits(value);
      break;
    case 31:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWatchtimeBlocks(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxLocktimeBlocks(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFundingConfirms(value);
      break;
    case 34:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCltvDelta(value);
      break;
    case 35:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCltvFinal(value);
      break;
    case 36:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCommitTime(value);
      break;
    case 37:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFeeBase(value);
      break;
    case 38:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setRescan(value);
      break;
    case 39:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFeePerSatoshi(value);
      break;
    case 40:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxConcurrentHtlcs(value);
      break;
    case 41:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setHtlcMinimumMsat(value);
      break;
    case 42:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setHtlcMaximumMsat(value);
      break;
    case 43:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setMaxDustHtlcExposureMsat(value);
      break;
    case 44:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMinCapacitySat(value);
      break;
    case 45:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddr(value);
      break;
    case 46:
      var value = /** @type {string} */ (reader.readString());
      msg.setAnnounceAddr(value);
      break;
    case 47:
      var value = /** @type {string} */ (reader.readString());
      msg.setBindAddr(value);
      break;
    case 48:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOffline(value);
      break;
    case 49:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutolisten(value);
      break;
    case 50:
      var value = /** @type {string} */ (reader.readString());
      msg.setProxy(value);
      break;
    case 51:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisableDns(value);
      break;
    case 52:
      var value = /** @type {string} */ (reader.readString());
      msg.setAnnounceAddrDiscovered(value);
      break;
    case 53:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setAnnounceAddrDiscoveredPort(value);
      break;
    case 54:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEncryptedHsm(value);
      break;
    case 55:
      var value = /** @type {string} */ (reader.readString());
      msg.setRpcFileMode(value);
      break;
    case 56:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogLevel(value);
      break;
    case 57:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogPrefix(value);
      break;
    case 58:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogFile(value);
      break;
    case 59:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLogTimestamps(value);
      break;
    case 60:
      var value = /** @type {string} */ (reader.readString());
      msg.setForceFeerates(value);
      break;
    case 61:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubdaemon(value);
      break;
    case 62:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFetchinvoiceNoconnect(value);
      break;
    case 63:
      var value = /** @type {string} */ (reader.readString());
      msg.setAcceptHtlcTlvTypes(value);
      break;
    case 64:
      var value = /** @type {string} */ (reader.readString());
      msg.setTorServicePassword(value);
      break;
    case 65:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDevAllowdustreserve(value);
      break;
    case 66:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAnnounceAddrDns(value);
      break;
    case 67:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRequireConfirmedInputs(value);
      break;
    case 68:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeveloper(value);
      break;
    case 69:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCommitFee(value);
      break;
    case 70:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setMinEmergencyMsat(value);
      break;
    case 71:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCommitFeerateOffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfigs();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cln.ListconfigsConfigs.serializeBinaryToWriter
    );
  }
  f = message.getPluginsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.cln.ListconfigsPlugins.serializeBinaryToWriter
    );
  }
  f = message.getImportantPluginsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.cln.ListconfigsImportantplugins.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getDisablePluginList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBool(
      13,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeBool(
      14,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeString(
      15,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeBool(
      16,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeBool(
      17,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeBool(
      18,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeBool(
      19,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeBool(
      20,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeBool(
      21,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeBool(
      22,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeBool(
      23,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeBool(
      24,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeBool(
      25,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeBool(
      26,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 27));
  if (f != null) {
    writer.writeBytes(
      27,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 28));
  if (f != null) {
    writer.writeString(
      28,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 29));
  if (f != null) {
    writer.writeString(
      29,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 30));
  if (f != null) {
    writer.writeBool(
      30,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 31));
  if (f != null) {
    writer.writeUint32(
      31,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 32));
  if (f != null) {
    writer.writeUint32(
      32,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 33));
  if (f != null) {
    writer.writeUint32(
      33,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 34));
  if (f != null) {
    writer.writeUint32(
      34,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 35));
  if (f != null) {
    writer.writeUint32(
      35,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 36));
  if (f != null) {
    writer.writeUint32(
      36,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 37));
  if (f != null) {
    writer.writeUint32(
      37,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 38));
  if (f != null) {
    writer.writeSint64(
      38,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 39));
  if (f != null) {
    writer.writeUint32(
      39,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 40));
  if (f != null) {
    writer.writeUint32(
      40,
      f
    );
  }
  f = message.getHtlcMinimumMsat();
  if (f != null) {
    writer.writeMessage(
      41,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getHtlcMaximumMsat();
  if (f != null) {
    writer.writeMessage(
      42,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getMaxDustHtlcExposureMsat();
  if (f != null) {
    writer.writeMessage(
      43,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 44));
  if (f != null) {
    writer.writeUint64(
      44,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 45));
  if (f != null) {
    writer.writeString(
      45,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 46));
  if (f != null) {
    writer.writeString(
      46,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 47));
  if (f != null) {
    writer.writeString(
      47,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 48));
  if (f != null) {
    writer.writeBool(
      48,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 49));
  if (f != null) {
    writer.writeBool(
      49,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 50));
  if (f != null) {
    writer.writeString(
      50,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 51));
  if (f != null) {
    writer.writeBool(
      51,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 52));
  if (f != null) {
    writer.writeString(
      52,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 53));
  if (f != null) {
    writer.writeSint64(
      53,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 54));
  if (f != null) {
    writer.writeBool(
      54,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 55));
  if (f != null) {
    writer.writeString(
      55,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 56));
  if (f != null) {
    writer.writeString(
      56,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 57));
  if (f != null) {
    writer.writeString(
      57,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 58));
  if (f != null) {
    writer.writeString(
      58,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 59));
  if (f != null) {
    writer.writeBool(
      59,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 60));
  if (f != null) {
    writer.writeString(
      60,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 61));
  if (f != null) {
    writer.writeString(
      61,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 62));
  if (f != null) {
    writer.writeBool(
      62,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 63));
  if (f != null) {
    writer.writeString(
      63,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 64));
  if (f != null) {
    writer.writeString(
      64,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 65));
  if (f != null) {
    writer.writeBool(
      65,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 66));
  if (f != null) {
    writer.writeBool(
      66,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 67));
  if (f != null) {
    writer.writeBool(
      67,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 68));
  if (f != null) {
    writer.writeBool(
      68,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 69));
  if (f != null) {
    writer.writeUint64(
      69,
      f
    );
  }
  f = message.getMinEmergencyMsat();
  if (f != null) {
    writer.writeMessage(
      70,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 71));
  if (f != null) {
    writer.writeUint32(
      71,
      f
    );
  }
};


/**
 * optional ListconfigsConfigs configs = 1;
 * @return {?proto.cln.ListconfigsConfigs}
 */
proto.cln.ListconfigsResponse.prototype.getConfigs = function() {
  return /** @type{?proto.cln.ListconfigsConfigs} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigs, 1));
};


/**
 * @param {?proto.cln.ListconfigsConfigs|undefined} value
 * @return {!proto.cln.ListconfigsResponse} returns this
*/
proto.cln.ListconfigsResponse.prototype.setConfigs = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearConfigs = function() {
  return this.setConfigs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasConfigs = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ListconfigsPlugins plugins = 3;
 * @return {!Array<!proto.cln.ListconfigsPlugins>}
 */
proto.cln.ListconfigsResponse.prototype.getPluginsList = function() {
  return /** @type{!Array<!proto.cln.ListconfigsPlugins>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListconfigsPlugins, 3));
};


/**
 * @param {!Array<!proto.cln.ListconfigsPlugins>} value
 * @return {!proto.cln.ListconfigsResponse} returns this
*/
proto.cln.ListconfigsResponse.prototype.setPluginsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.cln.ListconfigsPlugins=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListconfigsPlugins}
 */
proto.cln.ListconfigsResponse.prototype.addPlugins = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.cln.ListconfigsPlugins, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearPluginsList = function() {
  return this.setPluginsList([]);
};


/**
 * repeated ListconfigsImportantplugins important_plugins = 4;
 * @return {!Array<!proto.cln.ListconfigsImportantplugins>}
 */
proto.cln.ListconfigsResponse.prototype.getImportantPluginsList = function() {
  return /** @type{!Array<!proto.cln.ListconfigsImportantplugins>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListconfigsImportantplugins, 4));
};


/**
 * @param {!Array<!proto.cln.ListconfigsImportantplugins>} value
 * @return {!proto.cln.ListconfigsResponse} returns this
*/
proto.cln.ListconfigsResponse.prototype.setImportantPluginsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.cln.ListconfigsImportantplugins=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListconfigsImportantplugins}
 */
proto.cln.ListconfigsResponse.prototype.addImportantPlugins = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.cln.ListconfigsImportantplugins, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearImportantPluginsList = function() {
  return this.setImportantPluginsList([]);
};


/**
 * optional string conf = 5;
 * @return {string}
 */
proto.cln.ListconfigsResponse.prototype.getConf = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setConf = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearConf = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasConf = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string lightning_dir = 6;
 * @return {string}
 */
proto.cln.ListconfigsResponse.prototype.getLightningDir = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setLightningDir = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearLightningDir = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasLightningDir = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string network = 7;
 * @return {string}
 */
proto.cln.ListconfigsResponse.prototype.getNetwork = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setNetwork = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearNetwork = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasNetwork = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool allow_deprecated_apis = 8;
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.getAllowDeprecatedApis = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setAllowDeprecatedApis = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearAllowDeprecatedApis = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasAllowDeprecatedApis = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string rpc_file = 9;
 * @return {string}
 */
proto.cln.ListconfigsResponse.prototype.getRpcFile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setRpcFile = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearRpcFile = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasRpcFile = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * repeated string disable_plugin = 10;
 * @return {!Array<string>}
 */
proto.cln.ListconfigsResponse.prototype.getDisablePluginList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setDisablePluginList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.addDisablePlugin = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearDisablePluginList = function() {
  return this.setDisablePluginList([]);
};


/**
 * optional string bookkeeper_dir = 11;
 * @return {string}
 */
proto.cln.ListconfigsResponse.prototype.getBookkeeperDir = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setBookkeeperDir = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearBookkeeperDir = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasBookkeeperDir = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string bookkeeper_db = 12;
 * @return {string}
 */
proto.cln.ListconfigsResponse.prototype.getBookkeeperDb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setBookkeeperDb = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearBookkeeperDb = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasBookkeeperDb = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool always_use_proxy = 13;
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.getAlwaysUseProxy = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setAlwaysUseProxy = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearAlwaysUseProxy = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasAlwaysUseProxy = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional bool daemon = 14;
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.getDaemon = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setDaemon = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearDaemon = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasDaemon = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string wallet = 15;
 * @return {string}
 */
proto.cln.ListconfigsResponse.prototype.getWallet = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setWallet = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearWallet = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasWallet = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional bool large_channels = 16;
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.getLargeChannels = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setLargeChannels = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearLargeChannels = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasLargeChannels = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional bool experimental_dual_fund = 17;
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.getExperimentalDualFund = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setExperimentalDualFund = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearExperimentalDualFund = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasExperimentalDualFund = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional bool experimental_splicing = 18;
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.getExperimentalSplicing = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setExperimentalSplicing = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearExperimentalSplicing = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasExperimentalSplicing = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional bool experimental_onion_messages = 19;
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.getExperimentalOnionMessages = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setExperimentalOnionMessages = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearExperimentalOnionMessages = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasExperimentalOnionMessages = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional bool experimental_offers = 20;
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.getExperimentalOffers = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setExperimentalOffers = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearExperimentalOffers = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasExperimentalOffers = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional bool experimental_shutdown_wrong_funding = 21;
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.getExperimentalShutdownWrongFunding = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 21, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setExperimentalShutdownWrongFunding = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearExperimentalShutdownWrongFunding = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasExperimentalShutdownWrongFunding = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional bool experimental_peer_storage = 22;
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.getExperimentalPeerStorage = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 22, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setExperimentalPeerStorage = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearExperimentalPeerStorage = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasExperimentalPeerStorage = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional bool experimental_quiesce = 23;
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.getExperimentalQuiesce = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 23, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setExperimentalQuiesce = function(value) {
  return jspb.Message.setField(this, 23, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearExperimentalQuiesce = function() {
  return jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasExperimentalQuiesce = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional bool experimental_upgrade_protocol = 24;
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.getExperimentalUpgradeProtocol = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 24, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setExperimentalUpgradeProtocol = function(value) {
  return jspb.Message.setField(this, 24, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearExperimentalUpgradeProtocol = function() {
  return jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasExperimentalUpgradeProtocol = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional bool invoices_onchain_fallback = 25;
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.getInvoicesOnchainFallback = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 25, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setInvoicesOnchainFallback = function(value) {
  return jspb.Message.setField(this, 25, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearInvoicesOnchainFallback = function() {
  return jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasInvoicesOnchainFallback = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional bool database_upgrade = 26;
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.getDatabaseUpgrade = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 26, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setDatabaseUpgrade = function(value) {
  return jspb.Message.setField(this, 26, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearDatabaseUpgrade = function() {
  return jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasDatabaseUpgrade = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional bytes rgb = 27;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListconfigsResponse.prototype.getRgb = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * optional bytes rgb = 27;
 * This is a type-conversion wrapper around `getRgb()`
 * @return {string}
 */
proto.cln.ListconfigsResponse.prototype.getRgb_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getRgb()));
};


/**
 * optional bytes rgb = 27;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRgb()`
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsResponse.prototype.getRgb_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getRgb()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setRgb = function(value) {
  return jspb.Message.setField(this, 27, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearRgb = function() {
  return jspb.Message.setField(this, 27, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasRgb = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional string alias = 28;
 * @return {string}
 */
proto.cln.ListconfigsResponse.prototype.getAlias = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setAlias = function(value) {
  return jspb.Message.setField(this, 28, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearAlias = function() {
  return jspb.Message.setField(this, 28, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasAlias = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional string pid_file = 29;
 * @return {string}
 */
proto.cln.ListconfigsResponse.prototype.getPidFile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 29, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setPidFile = function(value) {
  return jspb.Message.setField(this, 29, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearPidFile = function() {
  return jspb.Message.setField(this, 29, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasPidFile = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional bool ignore_fee_limits = 30;
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.getIgnoreFeeLimits = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 30, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setIgnoreFeeLimits = function(value) {
  return jspb.Message.setField(this, 30, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearIgnoreFeeLimits = function() {
  return jspb.Message.setField(this, 30, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasIgnoreFeeLimits = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional uint32 watchtime_blocks = 31;
 * @return {number}
 */
proto.cln.ListconfigsResponse.prototype.getWatchtimeBlocks = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 31, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setWatchtimeBlocks = function(value) {
  return jspb.Message.setField(this, 31, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearWatchtimeBlocks = function() {
  return jspb.Message.setField(this, 31, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasWatchtimeBlocks = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional uint32 max_locktime_blocks = 32;
 * @return {number}
 */
proto.cln.ListconfigsResponse.prototype.getMaxLocktimeBlocks = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 32, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setMaxLocktimeBlocks = function(value) {
  return jspb.Message.setField(this, 32, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearMaxLocktimeBlocks = function() {
  return jspb.Message.setField(this, 32, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasMaxLocktimeBlocks = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional uint32 funding_confirms = 33;
 * @return {number}
 */
proto.cln.ListconfigsResponse.prototype.getFundingConfirms = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 33, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setFundingConfirms = function(value) {
  return jspb.Message.setField(this, 33, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearFundingConfirms = function() {
  return jspb.Message.setField(this, 33, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasFundingConfirms = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * optional uint32 cltv_delta = 34;
 * @return {number}
 */
proto.cln.ListconfigsResponse.prototype.getCltvDelta = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 34, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setCltvDelta = function(value) {
  return jspb.Message.setField(this, 34, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearCltvDelta = function() {
  return jspb.Message.setField(this, 34, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasCltvDelta = function() {
  return jspb.Message.getField(this, 34) != null;
};


/**
 * optional uint32 cltv_final = 35;
 * @return {number}
 */
proto.cln.ListconfigsResponse.prototype.getCltvFinal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 35, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setCltvFinal = function(value) {
  return jspb.Message.setField(this, 35, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearCltvFinal = function() {
  return jspb.Message.setField(this, 35, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasCltvFinal = function() {
  return jspb.Message.getField(this, 35) != null;
};


/**
 * optional uint32 commit_time = 36;
 * @return {number}
 */
proto.cln.ListconfigsResponse.prototype.getCommitTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 36, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setCommitTime = function(value) {
  return jspb.Message.setField(this, 36, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearCommitTime = function() {
  return jspb.Message.setField(this, 36, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasCommitTime = function() {
  return jspb.Message.getField(this, 36) != null;
};


/**
 * optional uint32 fee_base = 37;
 * @return {number}
 */
proto.cln.ListconfigsResponse.prototype.getFeeBase = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 37, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setFeeBase = function(value) {
  return jspb.Message.setField(this, 37, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearFeeBase = function() {
  return jspb.Message.setField(this, 37, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasFeeBase = function() {
  return jspb.Message.getField(this, 37) != null;
};


/**
 * optional sint64 rescan = 38;
 * @return {number}
 */
proto.cln.ListconfigsResponse.prototype.getRescan = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 38, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setRescan = function(value) {
  return jspb.Message.setField(this, 38, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearRescan = function() {
  return jspb.Message.setField(this, 38, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasRescan = function() {
  return jspb.Message.getField(this, 38) != null;
};


/**
 * optional uint32 fee_per_satoshi = 39;
 * @return {number}
 */
proto.cln.ListconfigsResponse.prototype.getFeePerSatoshi = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 39, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setFeePerSatoshi = function(value) {
  return jspb.Message.setField(this, 39, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearFeePerSatoshi = function() {
  return jspb.Message.setField(this, 39, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasFeePerSatoshi = function() {
  return jspb.Message.getField(this, 39) != null;
};


/**
 * optional uint32 max_concurrent_htlcs = 40;
 * @return {number}
 */
proto.cln.ListconfigsResponse.prototype.getMaxConcurrentHtlcs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 40, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setMaxConcurrentHtlcs = function(value) {
  return jspb.Message.setField(this, 40, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearMaxConcurrentHtlcs = function() {
  return jspb.Message.setField(this, 40, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasMaxConcurrentHtlcs = function() {
  return jspb.Message.getField(this, 40) != null;
};


/**
 * optional Amount htlc_minimum_msat = 41;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListconfigsResponse.prototype.getHtlcMinimumMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 41));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListconfigsResponse} returns this
*/
proto.cln.ListconfigsResponse.prototype.setHtlcMinimumMsat = function(value) {
  return jspb.Message.setWrapperField(this, 41, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearHtlcMinimumMsat = function() {
  return this.setHtlcMinimumMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasHtlcMinimumMsat = function() {
  return jspb.Message.getField(this, 41) != null;
};


/**
 * optional Amount htlc_maximum_msat = 42;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListconfigsResponse.prototype.getHtlcMaximumMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 42));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListconfigsResponse} returns this
*/
proto.cln.ListconfigsResponse.prototype.setHtlcMaximumMsat = function(value) {
  return jspb.Message.setWrapperField(this, 42, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearHtlcMaximumMsat = function() {
  return this.setHtlcMaximumMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasHtlcMaximumMsat = function() {
  return jspb.Message.getField(this, 42) != null;
};


/**
 * optional Amount max_dust_htlc_exposure_msat = 43;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListconfigsResponse.prototype.getMaxDustHtlcExposureMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 43));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListconfigsResponse} returns this
*/
proto.cln.ListconfigsResponse.prototype.setMaxDustHtlcExposureMsat = function(value) {
  return jspb.Message.setWrapperField(this, 43, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearMaxDustHtlcExposureMsat = function() {
  return this.setMaxDustHtlcExposureMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasMaxDustHtlcExposureMsat = function() {
  return jspb.Message.getField(this, 43) != null;
};


/**
 * optional uint64 min_capacity_sat = 44;
 * @return {number}
 */
proto.cln.ListconfigsResponse.prototype.getMinCapacitySat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 44, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setMinCapacitySat = function(value) {
  return jspb.Message.setField(this, 44, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearMinCapacitySat = function() {
  return jspb.Message.setField(this, 44, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasMinCapacitySat = function() {
  return jspb.Message.getField(this, 44) != null;
};


/**
 * optional string addr = 45;
 * @return {string}
 */
proto.cln.ListconfigsResponse.prototype.getAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 45, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setAddr = function(value) {
  return jspb.Message.setField(this, 45, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearAddr = function() {
  return jspb.Message.setField(this, 45, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasAddr = function() {
  return jspb.Message.getField(this, 45) != null;
};


/**
 * optional string announce_addr = 46;
 * @return {string}
 */
proto.cln.ListconfigsResponse.prototype.getAnnounceAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 46, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setAnnounceAddr = function(value) {
  return jspb.Message.setField(this, 46, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearAnnounceAddr = function() {
  return jspb.Message.setField(this, 46, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasAnnounceAddr = function() {
  return jspb.Message.getField(this, 46) != null;
};


/**
 * optional string bind_addr = 47;
 * @return {string}
 */
proto.cln.ListconfigsResponse.prototype.getBindAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 47, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setBindAddr = function(value) {
  return jspb.Message.setField(this, 47, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearBindAddr = function() {
  return jspb.Message.setField(this, 47, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasBindAddr = function() {
  return jspb.Message.getField(this, 47) != null;
};


/**
 * optional bool offline = 48;
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.getOffline = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 48, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setOffline = function(value) {
  return jspb.Message.setField(this, 48, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearOffline = function() {
  return jspb.Message.setField(this, 48, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasOffline = function() {
  return jspb.Message.getField(this, 48) != null;
};


/**
 * optional bool autolisten = 49;
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.getAutolisten = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 49, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setAutolisten = function(value) {
  return jspb.Message.setField(this, 49, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearAutolisten = function() {
  return jspb.Message.setField(this, 49, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasAutolisten = function() {
  return jspb.Message.getField(this, 49) != null;
};


/**
 * optional string proxy = 50;
 * @return {string}
 */
proto.cln.ListconfigsResponse.prototype.getProxy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 50, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setProxy = function(value) {
  return jspb.Message.setField(this, 50, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearProxy = function() {
  return jspb.Message.setField(this, 50, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasProxy = function() {
  return jspb.Message.getField(this, 50) != null;
};


/**
 * optional bool disable_dns = 51;
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.getDisableDns = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 51, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setDisableDns = function(value) {
  return jspb.Message.setField(this, 51, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearDisableDns = function() {
  return jspb.Message.setField(this, 51, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasDisableDns = function() {
  return jspb.Message.getField(this, 51) != null;
};


/**
 * optional string announce_addr_discovered = 52;
 * @return {string}
 */
proto.cln.ListconfigsResponse.prototype.getAnnounceAddrDiscovered = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 52, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setAnnounceAddrDiscovered = function(value) {
  return jspb.Message.setField(this, 52, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearAnnounceAddrDiscovered = function() {
  return jspb.Message.setField(this, 52, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasAnnounceAddrDiscovered = function() {
  return jspb.Message.getField(this, 52) != null;
};


/**
 * optional sint64 announce_addr_discovered_port = 53;
 * @return {number}
 */
proto.cln.ListconfigsResponse.prototype.getAnnounceAddrDiscoveredPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 53, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setAnnounceAddrDiscoveredPort = function(value) {
  return jspb.Message.setField(this, 53, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearAnnounceAddrDiscoveredPort = function() {
  return jspb.Message.setField(this, 53, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasAnnounceAddrDiscoveredPort = function() {
  return jspb.Message.getField(this, 53) != null;
};


/**
 * optional bool encrypted_hsm = 54;
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.getEncryptedHsm = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 54, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setEncryptedHsm = function(value) {
  return jspb.Message.setField(this, 54, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearEncryptedHsm = function() {
  return jspb.Message.setField(this, 54, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasEncryptedHsm = function() {
  return jspb.Message.getField(this, 54) != null;
};


/**
 * optional string rpc_file_mode = 55;
 * @return {string}
 */
proto.cln.ListconfigsResponse.prototype.getRpcFileMode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 55, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setRpcFileMode = function(value) {
  return jspb.Message.setField(this, 55, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearRpcFileMode = function() {
  return jspb.Message.setField(this, 55, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasRpcFileMode = function() {
  return jspb.Message.getField(this, 55) != null;
};


/**
 * optional string log_level = 56;
 * @return {string}
 */
proto.cln.ListconfigsResponse.prototype.getLogLevel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 56, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setLogLevel = function(value) {
  return jspb.Message.setField(this, 56, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearLogLevel = function() {
  return jspb.Message.setField(this, 56, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasLogLevel = function() {
  return jspb.Message.getField(this, 56) != null;
};


/**
 * optional string log_prefix = 57;
 * @return {string}
 */
proto.cln.ListconfigsResponse.prototype.getLogPrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 57, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setLogPrefix = function(value) {
  return jspb.Message.setField(this, 57, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearLogPrefix = function() {
  return jspb.Message.setField(this, 57, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasLogPrefix = function() {
  return jspb.Message.getField(this, 57) != null;
};


/**
 * optional string log_file = 58;
 * @return {string}
 */
proto.cln.ListconfigsResponse.prototype.getLogFile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 58, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setLogFile = function(value) {
  return jspb.Message.setField(this, 58, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearLogFile = function() {
  return jspb.Message.setField(this, 58, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasLogFile = function() {
  return jspb.Message.getField(this, 58) != null;
};


/**
 * optional bool log_timestamps = 59;
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.getLogTimestamps = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 59, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setLogTimestamps = function(value) {
  return jspb.Message.setField(this, 59, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearLogTimestamps = function() {
  return jspb.Message.setField(this, 59, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasLogTimestamps = function() {
  return jspb.Message.getField(this, 59) != null;
};


/**
 * optional string force_feerates = 60;
 * @return {string}
 */
proto.cln.ListconfigsResponse.prototype.getForceFeerates = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 60, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setForceFeerates = function(value) {
  return jspb.Message.setField(this, 60, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearForceFeerates = function() {
  return jspb.Message.setField(this, 60, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasForceFeerates = function() {
  return jspb.Message.getField(this, 60) != null;
};


/**
 * optional string subdaemon = 61;
 * @return {string}
 */
proto.cln.ListconfigsResponse.prototype.getSubdaemon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 61, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setSubdaemon = function(value) {
  return jspb.Message.setField(this, 61, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearSubdaemon = function() {
  return jspb.Message.setField(this, 61, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasSubdaemon = function() {
  return jspb.Message.getField(this, 61) != null;
};


/**
 * optional bool fetchinvoice_noconnect = 62;
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.getFetchinvoiceNoconnect = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 62, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setFetchinvoiceNoconnect = function(value) {
  return jspb.Message.setField(this, 62, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearFetchinvoiceNoconnect = function() {
  return jspb.Message.setField(this, 62, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasFetchinvoiceNoconnect = function() {
  return jspb.Message.getField(this, 62) != null;
};


/**
 * optional string accept_htlc_tlv_types = 63;
 * @return {string}
 */
proto.cln.ListconfigsResponse.prototype.getAcceptHtlcTlvTypes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 63, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setAcceptHtlcTlvTypes = function(value) {
  return jspb.Message.setField(this, 63, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearAcceptHtlcTlvTypes = function() {
  return jspb.Message.setField(this, 63, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasAcceptHtlcTlvTypes = function() {
  return jspb.Message.getField(this, 63) != null;
};


/**
 * optional string tor_service_password = 64;
 * @return {string}
 */
proto.cln.ListconfigsResponse.prototype.getTorServicePassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 64, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setTorServicePassword = function(value) {
  return jspb.Message.setField(this, 64, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearTorServicePassword = function() {
  return jspb.Message.setField(this, 64, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasTorServicePassword = function() {
  return jspb.Message.getField(this, 64) != null;
};


/**
 * optional bool dev_allowdustreserve = 65;
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.getDevAllowdustreserve = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 65, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setDevAllowdustreserve = function(value) {
  return jspb.Message.setField(this, 65, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearDevAllowdustreserve = function() {
  return jspb.Message.setField(this, 65, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasDevAllowdustreserve = function() {
  return jspb.Message.getField(this, 65) != null;
};


/**
 * optional bool announce_addr_dns = 66;
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.getAnnounceAddrDns = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 66, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setAnnounceAddrDns = function(value) {
  return jspb.Message.setField(this, 66, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearAnnounceAddrDns = function() {
  return jspb.Message.setField(this, 66, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasAnnounceAddrDns = function() {
  return jspb.Message.getField(this, 66) != null;
};


/**
 * optional bool require_confirmed_inputs = 67;
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.getRequireConfirmedInputs = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 67, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setRequireConfirmedInputs = function(value) {
  return jspb.Message.setField(this, 67, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearRequireConfirmedInputs = function() {
  return jspb.Message.setField(this, 67, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasRequireConfirmedInputs = function() {
  return jspb.Message.getField(this, 67) != null;
};


/**
 * optional bool developer = 68;
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.getDeveloper = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 68, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setDeveloper = function(value) {
  return jspb.Message.setField(this, 68, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearDeveloper = function() {
  return jspb.Message.setField(this, 68, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasDeveloper = function() {
  return jspb.Message.getField(this, 68) != null;
};


/**
 * optional uint64 commit_fee = 69;
 * @return {number}
 */
proto.cln.ListconfigsResponse.prototype.getCommitFee = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 69, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setCommitFee = function(value) {
  return jspb.Message.setField(this, 69, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearCommitFee = function() {
  return jspb.Message.setField(this, 69, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasCommitFee = function() {
  return jspb.Message.getField(this, 69) != null;
};


/**
 * optional Amount min_emergency_msat = 70;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListconfigsResponse.prototype.getMinEmergencyMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 70));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListconfigsResponse} returns this
*/
proto.cln.ListconfigsResponse.prototype.setMinEmergencyMsat = function(value) {
  return jspb.Message.setWrapperField(this, 70, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearMinEmergencyMsat = function() {
  return this.setMinEmergencyMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasMinEmergencyMsat = function() {
  return jspb.Message.getField(this, 70) != null;
};


/**
 * optional uint32 commit_feerate_offset = 71;
 * @return {number}
 */
proto.cln.ListconfigsResponse.prototype.getCommitFeerateOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 71, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.setCommitFeerateOffset = function(value) {
  return jspb.Message.setField(this, 71, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsResponse} returns this
 */
proto.cln.ListconfigsResponse.prototype.clearCommitFeerateOffset = function() {
  return jspb.Message.setField(this, 71, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsResponse.prototype.hasCommitFeerateOffset = function() {
  return jspb.Message.getField(this, 71) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigs.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigs.toObject = function(includeInstance, msg) {
  var f, obj = {
    conf: (f = msg.getConf()) && proto.cln.ListconfigsConfigsConf.toObject(includeInstance, f),
    developer: (f = msg.getDeveloper()) && proto.cln.ListconfigsConfigsDeveloper.toObject(includeInstance, f),
    clearPlugins: (f = msg.getClearPlugins()) && proto.cln.ListconfigsConfigsClearplugins.toObject(includeInstance, f),
    disableMpp: (f = msg.getDisableMpp()) && proto.cln.ListconfigsConfigsDisablempp.toObject(includeInstance, f),
    mainnet: (f = msg.getMainnet()) && proto.cln.ListconfigsConfigsMainnet.toObject(includeInstance, f),
    regtest: (f = msg.getRegtest()) && proto.cln.ListconfigsConfigsRegtest.toObject(includeInstance, f),
    signet: (f = msg.getSignet()) && proto.cln.ListconfigsConfigsSignet.toObject(includeInstance, f),
    testnet: (f = msg.getTestnet()) && proto.cln.ListconfigsConfigsTestnet.toObject(includeInstance, f),
    importantPlugin: (f = msg.getImportantPlugin()) && proto.cln.ListconfigsConfigsImportantplugin.toObject(includeInstance, f),
    plugin: (f = msg.getPlugin()) && proto.cln.ListconfigsConfigsPlugin.toObject(includeInstance, f),
    pluginDir: (f = msg.getPluginDir()) && proto.cln.ListconfigsConfigsPlugindir.toObject(includeInstance, f),
    lightningDir: (f = msg.getLightningDir()) && proto.cln.ListconfigsConfigsLightningdir.toObject(includeInstance, f),
    network: (f = msg.getNetwork()) && proto.cln.ListconfigsConfigsNetwork.toObject(includeInstance, f),
    allowDeprecatedApis: (f = msg.getAllowDeprecatedApis()) && proto.cln.ListconfigsConfigsAllowdeprecatedapis.toObject(includeInstance, f),
    rpcFile: (f = msg.getRpcFile()) && proto.cln.ListconfigsConfigsRpcfile.toObject(includeInstance, f),
    disablePlugin: (f = msg.getDisablePlugin()) && proto.cln.ListconfigsConfigsDisableplugin.toObject(includeInstance, f),
    alwaysUseProxy: (f = msg.getAlwaysUseProxy()) && proto.cln.ListconfigsConfigsAlwaysuseproxy.toObject(includeInstance, f),
    daemon: (f = msg.getDaemon()) && proto.cln.ListconfigsConfigsDaemon.toObject(includeInstance, f),
    wallet: (f = msg.getWallet()) && proto.cln.ListconfigsConfigsWallet.toObject(includeInstance, f),
    largeChannels: (f = msg.getLargeChannels()) && proto.cln.ListconfigsConfigsLargechannels.toObject(includeInstance, f),
    experimentalDualFund: (f = msg.getExperimentalDualFund()) && proto.cln.ListconfigsConfigsExperimentaldualfund.toObject(includeInstance, f),
    experimentalSplicing: (f = msg.getExperimentalSplicing()) && proto.cln.ListconfigsConfigsExperimentalsplicing.toObject(includeInstance, f),
    experimentalOnionMessages: (f = msg.getExperimentalOnionMessages()) && proto.cln.ListconfigsConfigsExperimentalonionmessages.toObject(includeInstance, f),
    experimentalOffers: (f = msg.getExperimentalOffers()) && proto.cln.ListconfigsConfigsExperimentaloffers.toObject(includeInstance, f),
    experimentalShutdownWrongFunding: (f = msg.getExperimentalShutdownWrongFunding()) && proto.cln.ListconfigsConfigsExperimentalshutdownwrongfunding.toObject(includeInstance, f),
    experimentalPeerStorage: (f = msg.getExperimentalPeerStorage()) && proto.cln.ListconfigsConfigsExperimentalpeerstorage.toObject(includeInstance, f),
    experimentalAnchors: (f = msg.getExperimentalAnchors()) && proto.cln.ListconfigsConfigsExperimentalanchors.toObject(includeInstance, f),
    databaseUpgrade: (f = msg.getDatabaseUpgrade()) && proto.cln.ListconfigsConfigsDatabaseupgrade.toObject(includeInstance, f),
    rgb: (f = msg.getRgb()) && proto.cln.ListconfigsConfigsRgb.toObject(includeInstance, f),
    alias: (f = msg.getAlias()) && proto.cln.ListconfigsConfigsAlias.toObject(includeInstance, f),
    pidFile: (f = msg.getPidFile()) && proto.cln.ListconfigsConfigsPidfile.toObject(includeInstance, f),
    ignoreFeeLimits: (f = msg.getIgnoreFeeLimits()) && proto.cln.ListconfigsConfigsIgnorefeelimits.toObject(includeInstance, f),
    watchtimeBlocks: (f = msg.getWatchtimeBlocks()) && proto.cln.ListconfigsConfigsWatchtimeblocks.toObject(includeInstance, f),
    maxLocktimeBlocks: (f = msg.getMaxLocktimeBlocks()) && proto.cln.ListconfigsConfigsMaxlocktimeblocks.toObject(includeInstance, f),
    fundingConfirms: (f = msg.getFundingConfirms()) && proto.cln.ListconfigsConfigsFundingconfirms.toObject(includeInstance, f),
    cltvDelta: (f = msg.getCltvDelta()) && proto.cln.ListconfigsConfigsCltvdelta.toObject(includeInstance, f),
    cltvFinal: (f = msg.getCltvFinal()) && proto.cln.ListconfigsConfigsCltvfinal.toObject(includeInstance, f),
    commitTime: (f = msg.getCommitTime()) && proto.cln.ListconfigsConfigsCommittime.toObject(includeInstance, f),
    feeBase: (f = msg.getFeeBase()) && proto.cln.ListconfigsConfigsFeebase.toObject(includeInstance, f),
    rescan: (f = msg.getRescan()) && proto.cln.ListconfigsConfigsRescan.toObject(includeInstance, f),
    feePerSatoshi: (f = msg.getFeePerSatoshi()) && proto.cln.ListconfigsConfigsFeepersatoshi.toObject(includeInstance, f),
    maxConcurrentHtlcs: (f = msg.getMaxConcurrentHtlcs()) && proto.cln.ListconfigsConfigsMaxconcurrenthtlcs.toObject(includeInstance, f),
    htlcMinimumMsat: (f = msg.getHtlcMinimumMsat()) && proto.cln.ListconfigsConfigsHtlcminimummsat.toObject(includeInstance, f),
    htlcMaximumMsat: (f = msg.getHtlcMaximumMsat()) && proto.cln.ListconfigsConfigsHtlcmaximummsat.toObject(includeInstance, f),
    maxDustHtlcExposureMsat: (f = msg.getMaxDustHtlcExposureMsat()) && proto.cln.ListconfigsConfigsMaxdusthtlcexposuremsat.toObject(includeInstance, f),
    minCapacitySat: (f = msg.getMinCapacitySat()) && proto.cln.ListconfigsConfigsMincapacitysat.toObject(includeInstance, f),
    addr: (f = msg.getAddr()) && proto.cln.ListconfigsConfigsAddr.toObject(includeInstance, f),
    announceAddr: (f = msg.getAnnounceAddr()) && proto.cln.ListconfigsConfigsAnnounceaddr.toObject(includeInstance, f),
    bindAddr: (f = msg.getBindAddr()) && proto.cln.ListconfigsConfigsBindaddr.toObject(includeInstance, f),
    offline: (f = msg.getOffline()) && proto.cln.ListconfigsConfigsOffline.toObject(includeInstance, f),
    autolisten: (f = msg.getAutolisten()) && proto.cln.ListconfigsConfigsAutolisten.toObject(includeInstance, f),
    proxy: (f = msg.getProxy()) && proto.cln.ListconfigsConfigsProxy.toObject(includeInstance, f),
    disableDns: (f = msg.getDisableDns()) && proto.cln.ListconfigsConfigsDisabledns.toObject(includeInstance, f),
    announceAddrDiscovered: (f = msg.getAnnounceAddrDiscovered()) && proto.cln.ListconfigsConfigsAnnounceaddrdiscovered.toObject(includeInstance, f),
    announceAddrDiscoveredPort: (f = msg.getAnnounceAddrDiscoveredPort()) && proto.cln.ListconfigsConfigsAnnounceaddrdiscoveredport.toObject(includeInstance, f),
    encryptedHsm: (f = msg.getEncryptedHsm()) && proto.cln.ListconfigsConfigsEncryptedhsm.toObject(includeInstance, f),
    rpcFileMode: (f = msg.getRpcFileMode()) && proto.cln.ListconfigsConfigsRpcfilemode.toObject(includeInstance, f),
    logLevel: (f = msg.getLogLevel()) && proto.cln.ListconfigsConfigsLoglevel.toObject(includeInstance, f),
    logPrefix: (f = msg.getLogPrefix()) && proto.cln.ListconfigsConfigsLogprefix.toObject(includeInstance, f),
    logFile: (f = msg.getLogFile()) && proto.cln.ListconfigsConfigsLogfile.toObject(includeInstance, f),
    logTimestamps: (f = msg.getLogTimestamps()) && proto.cln.ListconfigsConfigsLogtimestamps.toObject(includeInstance, f),
    forceFeerates: (f = msg.getForceFeerates()) && proto.cln.ListconfigsConfigsForcefeerates.toObject(includeInstance, f),
    subdaemon: (f = msg.getSubdaemon()) && proto.cln.ListconfigsConfigsSubdaemon.toObject(includeInstance, f),
    fetchinvoiceNoconnect: (f = msg.getFetchinvoiceNoconnect()) && proto.cln.ListconfigsConfigsFetchinvoicenoconnect.toObject(includeInstance, f),
    acceptHtlcTlvTypes: (f = msg.getAcceptHtlcTlvTypes()) && proto.cln.ListconfigsConfigsAccepthtlctlvtypes.toObject(includeInstance, f),
    torServicePassword: (f = msg.getTorServicePassword()) && proto.cln.ListconfigsConfigsTorservicepassword.toObject(includeInstance, f),
    announceAddrDns: (f = msg.getAnnounceAddrDns()) && proto.cln.ListconfigsConfigsAnnounceaddrdns.toObject(includeInstance, f),
    requireConfirmedInputs: (f = msg.getRequireConfirmedInputs()) && proto.cln.ListconfigsConfigsRequireconfirmedinputs.toObject(includeInstance, f),
    commitFee: (f = msg.getCommitFee()) && proto.cln.ListconfigsConfigsCommitfee.toObject(includeInstance, f),
    commitFeerateOffset: (f = msg.getCommitFeerateOffset()) && proto.cln.ListconfigsConfigsCommitfeerateoffset.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigs}
 */
proto.cln.ListconfigsConfigs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigs;
  return proto.cln.ListconfigsConfigs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigs}
 */
proto.cln.ListconfigsConfigs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.ListconfigsConfigsConf;
      reader.readMessage(value,proto.cln.ListconfigsConfigsConf.deserializeBinaryFromReader);
      msg.setConf(value);
      break;
    case 2:
      var value = new proto.cln.ListconfigsConfigsDeveloper;
      reader.readMessage(value,proto.cln.ListconfigsConfigsDeveloper.deserializeBinaryFromReader);
      msg.setDeveloper(value);
      break;
    case 3:
      var value = new proto.cln.ListconfigsConfigsClearplugins;
      reader.readMessage(value,proto.cln.ListconfigsConfigsClearplugins.deserializeBinaryFromReader);
      msg.setClearPlugins(value);
      break;
    case 4:
      var value = new proto.cln.ListconfigsConfigsDisablempp;
      reader.readMessage(value,proto.cln.ListconfigsConfigsDisablempp.deserializeBinaryFromReader);
      msg.setDisableMpp(value);
      break;
    case 5:
      var value = new proto.cln.ListconfigsConfigsMainnet;
      reader.readMessage(value,proto.cln.ListconfigsConfigsMainnet.deserializeBinaryFromReader);
      msg.setMainnet(value);
      break;
    case 6:
      var value = new proto.cln.ListconfigsConfigsRegtest;
      reader.readMessage(value,proto.cln.ListconfigsConfigsRegtest.deserializeBinaryFromReader);
      msg.setRegtest(value);
      break;
    case 7:
      var value = new proto.cln.ListconfigsConfigsSignet;
      reader.readMessage(value,proto.cln.ListconfigsConfigsSignet.deserializeBinaryFromReader);
      msg.setSignet(value);
      break;
    case 8:
      var value = new proto.cln.ListconfigsConfigsTestnet;
      reader.readMessage(value,proto.cln.ListconfigsConfigsTestnet.deserializeBinaryFromReader);
      msg.setTestnet(value);
      break;
    case 9:
      var value = new proto.cln.ListconfigsConfigsImportantplugin;
      reader.readMessage(value,proto.cln.ListconfigsConfigsImportantplugin.deserializeBinaryFromReader);
      msg.setImportantPlugin(value);
      break;
    case 10:
      var value = new proto.cln.ListconfigsConfigsPlugin;
      reader.readMessage(value,proto.cln.ListconfigsConfigsPlugin.deserializeBinaryFromReader);
      msg.setPlugin(value);
      break;
    case 11:
      var value = new proto.cln.ListconfigsConfigsPlugindir;
      reader.readMessage(value,proto.cln.ListconfigsConfigsPlugindir.deserializeBinaryFromReader);
      msg.setPluginDir(value);
      break;
    case 12:
      var value = new proto.cln.ListconfigsConfigsLightningdir;
      reader.readMessage(value,proto.cln.ListconfigsConfigsLightningdir.deserializeBinaryFromReader);
      msg.setLightningDir(value);
      break;
    case 13:
      var value = new proto.cln.ListconfigsConfigsNetwork;
      reader.readMessage(value,proto.cln.ListconfigsConfigsNetwork.deserializeBinaryFromReader);
      msg.setNetwork(value);
      break;
    case 14:
      var value = new proto.cln.ListconfigsConfigsAllowdeprecatedapis;
      reader.readMessage(value,proto.cln.ListconfigsConfigsAllowdeprecatedapis.deserializeBinaryFromReader);
      msg.setAllowDeprecatedApis(value);
      break;
    case 15:
      var value = new proto.cln.ListconfigsConfigsRpcfile;
      reader.readMessage(value,proto.cln.ListconfigsConfigsRpcfile.deserializeBinaryFromReader);
      msg.setRpcFile(value);
      break;
    case 16:
      var value = new proto.cln.ListconfigsConfigsDisableplugin;
      reader.readMessage(value,proto.cln.ListconfigsConfigsDisableplugin.deserializeBinaryFromReader);
      msg.setDisablePlugin(value);
      break;
    case 17:
      var value = new proto.cln.ListconfigsConfigsAlwaysuseproxy;
      reader.readMessage(value,proto.cln.ListconfigsConfigsAlwaysuseproxy.deserializeBinaryFromReader);
      msg.setAlwaysUseProxy(value);
      break;
    case 18:
      var value = new proto.cln.ListconfigsConfigsDaemon;
      reader.readMessage(value,proto.cln.ListconfigsConfigsDaemon.deserializeBinaryFromReader);
      msg.setDaemon(value);
      break;
    case 19:
      var value = new proto.cln.ListconfigsConfigsWallet;
      reader.readMessage(value,proto.cln.ListconfigsConfigsWallet.deserializeBinaryFromReader);
      msg.setWallet(value);
      break;
    case 20:
      var value = new proto.cln.ListconfigsConfigsLargechannels;
      reader.readMessage(value,proto.cln.ListconfigsConfigsLargechannels.deserializeBinaryFromReader);
      msg.setLargeChannels(value);
      break;
    case 21:
      var value = new proto.cln.ListconfigsConfigsExperimentaldualfund;
      reader.readMessage(value,proto.cln.ListconfigsConfigsExperimentaldualfund.deserializeBinaryFromReader);
      msg.setExperimentalDualFund(value);
      break;
    case 22:
      var value = new proto.cln.ListconfigsConfigsExperimentalsplicing;
      reader.readMessage(value,proto.cln.ListconfigsConfigsExperimentalsplicing.deserializeBinaryFromReader);
      msg.setExperimentalSplicing(value);
      break;
    case 23:
      var value = new proto.cln.ListconfigsConfigsExperimentalonionmessages;
      reader.readMessage(value,proto.cln.ListconfigsConfigsExperimentalonionmessages.deserializeBinaryFromReader);
      msg.setExperimentalOnionMessages(value);
      break;
    case 24:
      var value = new proto.cln.ListconfigsConfigsExperimentaloffers;
      reader.readMessage(value,proto.cln.ListconfigsConfigsExperimentaloffers.deserializeBinaryFromReader);
      msg.setExperimentalOffers(value);
      break;
    case 25:
      var value = new proto.cln.ListconfigsConfigsExperimentalshutdownwrongfunding;
      reader.readMessage(value,proto.cln.ListconfigsConfigsExperimentalshutdownwrongfunding.deserializeBinaryFromReader);
      msg.setExperimentalShutdownWrongFunding(value);
      break;
    case 26:
      var value = new proto.cln.ListconfigsConfigsExperimentalpeerstorage;
      reader.readMessage(value,proto.cln.ListconfigsConfigsExperimentalpeerstorage.deserializeBinaryFromReader);
      msg.setExperimentalPeerStorage(value);
      break;
    case 27:
      var value = new proto.cln.ListconfigsConfigsExperimentalanchors;
      reader.readMessage(value,proto.cln.ListconfigsConfigsExperimentalanchors.deserializeBinaryFromReader);
      msg.setExperimentalAnchors(value);
      break;
    case 28:
      var value = new proto.cln.ListconfigsConfigsDatabaseupgrade;
      reader.readMessage(value,proto.cln.ListconfigsConfigsDatabaseupgrade.deserializeBinaryFromReader);
      msg.setDatabaseUpgrade(value);
      break;
    case 29:
      var value = new proto.cln.ListconfigsConfigsRgb;
      reader.readMessage(value,proto.cln.ListconfigsConfigsRgb.deserializeBinaryFromReader);
      msg.setRgb(value);
      break;
    case 30:
      var value = new proto.cln.ListconfigsConfigsAlias;
      reader.readMessage(value,proto.cln.ListconfigsConfigsAlias.deserializeBinaryFromReader);
      msg.setAlias(value);
      break;
    case 31:
      var value = new proto.cln.ListconfigsConfigsPidfile;
      reader.readMessage(value,proto.cln.ListconfigsConfigsPidfile.deserializeBinaryFromReader);
      msg.setPidFile(value);
      break;
    case 32:
      var value = new proto.cln.ListconfigsConfigsIgnorefeelimits;
      reader.readMessage(value,proto.cln.ListconfigsConfigsIgnorefeelimits.deserializeBinaryFromReader);
      msg.setIgnoreFeeLimits(value);
      break;
    case 33:
      var value = new proto.cln.ListconfigsConfigsWatchtimeblocks;
      reader.readMessage(value,proto.cln.ListconfigsConfigsWatchtimeblocks.deserializeBinaryFromReader);
      msg.setWatchtimeBlocks(value);
      break;
    case 34:
      var value = new proto.cln.ListconfigsConfigsMaxlocktimeblocks;
      reader.readMessage(value,proto.cln.ListconfigsConfigsMaxlocktimeblocks.deserializeBinaryFromReader);
      msg.setMaxLocktimeBlocks(value);
      break;
    case 35:
      var value = new proto.cln.ListconfigsConfigsFundingconfirms;
      reader.readMessage(value,proto.cln.ListconfigsConfigsFundingconfirms.deserializeBinaryFromReader);
      msg.setFundingConfirms(value);
      break;
    case 36:
      var value = new proto.cln.ListconfigsConfigsCltvdelta;
      reader.readMessage(value,proto.cln.ListconfigsConfigsCltvdelta.deserializeBinaryFromReader);
      msg.setCltvDelta(value);
      break;
    case 37:
      var value = new proto.cln.ListconfigsConfigsCltvfinal;
      reader.readMessage(value,proto.cln.ListconfigsConfigsCltvfinal.deserializeBinaryFromReader);
      msg.setCltvFinal(value);
      break;
    case 38:
      var value = new proto.cln.ListconfigsConfigsCommittime;
      reader.readMessage(value,proto.cln.ListconfigsConfigsCommittime.deserializeBinaryFromReader);
      msg.setCommitTime(value);
      break;
    case 39:
      var value = new proto.cln.ListconfigsConfigsFeebase;
      reader.readMessage(value,proto.cln.ListconfigsConfigsFeebase.deserializeBinaryFromReader);
      msg.setFeeBase(value);
      break;
    case 40:
      var value = new proto.cln.ListconfigsConfigsRescan;
      reader.readMessage(value,proto.cln.ListconfigsConfigsRescan.deserializeBinaryFromReader);
      msg.setRescan(value);
      break;
    case 41:
      var value = new proto.cln.ListconfigsConfigsFeepersatoshi;
      reader.readMessage(value,proto.cln.ListconfigsConfigsFeepersatoshi.deserializeBinaryFromReader);
      msg.setFeePerSatoshi(value);
      break;
    case 42:
      var value = new proto.cln.ListconfigsConfigsMaxconcurrenthtlcs;
      reader.readMessage(value,proto.cln.ListconfigsConfigsMaxconcurrenthtlcs.deserializeBinaryFromReader);
      msg.setMaxConcurrentHtlcs(value);
      break;
    case 43:
      var value = new proto.cln.ListconfigsConfigsHtlcminimummsat;
      reader.readMessage(value,proto.cln.ListconfigsConfigsHtlcminimummsat.deserializeBinaryFromReader);
      msg.setHtlcMinimumMsat(value);
      break;
    case 44:
      var value = new proto.cln.ListconfigsConfigsHtlcmaximummsat;
      reader.readMessage(value,proto.cln.ListconfigsConfigsHtlcmaximummsat.deserializeBinaryFromReader);
      msg.setHtlcMaximumMsat(value);
      break;
    case 45:
      var value = new proto.cln.ListconfigsConfigsMaxdusthtlcexposuremsat;
      reader.readMessage(value,proto.cln.ListconfigsConfigsMaxdusthtlcexposuremsat.deserializeBinaryFromReader);
      msg.setMaxDustHtlcExposureMsat(value);
      break;
    case 46:
      var value = new proto.cln.ListconfigsConfigsMincapacitysat;
      reader.readMessage(value,proto.cln.ListconfigsConfigsMincapacitysat.deserializeBinaryFromReader);
      msg.setMinCapacitySat(value);
      break;
    case 47:
      var value = new proto.cln.ListconfigsConfigsAddr;
      reader.readMessage(value,proto.cln.ListconfigsConfigsAddr.deserializeBinaryFromReader);
      msg.setAddr(value);
      break;
    case 48:
      var value = new proto.cln.ListconfigsConfigsAnnounceaddr;
      reader.readMessage(value,proto.cln.ListconfigsConfigsAnnounceaddr.deserializeBinaryFromReader);
      msg.setAnnounceAddr(value);
      break;
    case 49:
      var value = new proto.cln.ListconfigsConfigsBindaddr;
      reader.readMessage(value,proto.cln.ListconfigsConfigsBindaddr.deserializeBinaryFromReader);
      msg.setBindAddr(value);
      break;
    case 50:
      var value = new proto.cln.ListconfigsConfigsOffline;
      reader.readMessage(value,proto.cln.ListconfigsConfigsOffline.deserializeBinaryFromReader);
      msg.setOffline(value);
      break;
    case 51:
      var value = new proto.cln.ListconfigsConfigsAutolisten;
      reader.readMessage(value,proto.cln.ListconfigsConfigsAutolisten.deserializeBinaryFromReader);
      msg.setAutolisten(value);
      break;
    case 52:
      var value = new proto.cln.ListconfigsConfigsProxy;
      reader.readMessage(value,proto.cln.ListconfigsConfigsProxy.deserializeBinaryFromReader);
      msg.setProxy(value);
      break;
    case 53:
      var value = new proto.cln.ListconfigsConfigsDisabledns;
      reader.readMessage(value,proto.cln.ListconfigsConfigsDisabledns.deserializeBinaryFromReader);
      msg.setDisableDns(value);
      break;
    case 54:
      var value = new proto.cln.ListconfigsConfigsAnnounceaddrdiscovered;
      reader.readMessage(value,proto.cln.ListconfigsConfigsAnnounceaddrdiscovered.deserializeBinaryFromReader);
      msg.setAnnounceAddrDiscovered(value);
      break;
    case 55:
      var value = new proto.cln.ListconfigsConfigsAnnounceaddrdiscoveredport;
      reader.readMessage(value,proto.cln.ListconfigsConfigsAnnounceaddrdiscoveredport.deserializeBinaryFromReader);
      msg.setAnnounceAddrDiscoveredPort(value);
      break;
    case 56:
      var value = new proto.cln.ListconfigsConfigsEncryptedhsm;
      reader.readMessage(value,proto.cln.ListconfigsConfigsEncryptedhsm.deserializeBinaryFromReader);
      msg.setEncryptedHsm(value);
      break;
    case 57:
      var value = new proto.cln.ListconfigsConfigsRpcfilemode;
      reader.readMessage(value,proto.cln.ListconfigsConfigsRpcfilemode.deserializeBinaryFromReader);
      msg.setRpcFileMode(value);
      break;
    case 58:
      var value = new proto.cln.ListconfigsConfigsLoglevel;
      reader.readMessage(value,proto.cln.ListconfigsConfigsLoglevel.deserializeBinaryFromReader);
      msg.setLogLevel(value);
      break;
    case 59:
      var value = new proto.cln.ListconfigsConfigsLogprefix;
      reader.readMessage(value,proto.cln.ListconfigsConfigsLogprefix.deserializeBinaryFromReader);
      msg.setLogPrefix(value);
      break;
    case 60:
      var value = new proto.cln.ListconfigsConfigsLogfile;
      reader.readMessage(value,proto.cln.ListconfigsConfigsLogfile.deserializeBinaryFromReader);
      msg.setLogFile(value);
      break;
    case 61:
      var value = new proto.cln.ListconfigsConfigsLogtimestamps;
      reader.readMessage(value,proto.cln.ListconfigsConfigsLogtimestamps.deserializeBinaryFromReader);
      msg.setLogTimestamps(value);
      break;
    case 62:
      var value = new proto.cln.ListconfigsConfigsForcefeerates;
      reader.readMessage(value,proto.cln.ListconfigsConfigsForcefeerates.deserializeBinaryFromReader);
      msg.setForceFeerates(value);
      break;
    case 63:
      var value = new proto.cln.ListconfigsConfigsSubdaemon;
      reader.readMessage(value,proto.cln.ListconfigsConfigsSubdaemon.deserializeBinaryFromReader);
      msg.setSubdaemon(value);
      break;
    case 64:
      var value = new proto.cln.ListconfigsConfigsFetchinvoicenoconnect;
      reader.readMessage(value,proto.cln.ListconfigsConfigsFetchinvoicenoconnect.deserializeBinaryFromReader);
      msg.setFetchinvoiceNoconnect(value);
      break;
    case 65:
      var value = new proto.cln.ListconfigsConfigsAccepthtlctlvtypes;
      reader.readMessage(value,proto.cln.ListconfigsConfigsAccepthtlctlvtypes.deserializeBinaryFromReader);
      msg.setAcceptHtlcTlvTypes(value);
      break;
    case 66:
      var value = new proto.cln.ListconfigsConfigsTorservicepassword;
      reader.readMessage(value,proto.cln.ListconfigsConfigsTorservicepassword.deserializeBinaryFromReader);
      msg.setTorServicePassword(value);
      break;
    case 67:
      var value = new proto.cln.ListconfigsConfigsAnnounceaddrdns;
      reader.readMessage(value,proto.cln.ListconfigsConfigsAnnounceaddrdns.deserializeBinaryFromReader);
      msg.setAnnounceAddrDns(value);
      break;
    case 68:
      var value = new proto.cln.ListconfigsConfigsRequireconfirmedinputs;
      reader.readMessage(value,proto.cln.ListconfigsConfigsRequireconfirmedinputs.deserializeBinaryFromReader);
      msg.setRequireConfirmedInputs(value);
      break;
    case 69:
      var value = new proto.cln.ListconfigsConfigsCommitfee;
      reader.readMessage(value,proto.cln.ListconfigsConfigsCommitfee.deserializeBinaryFromReader);
      msg.setCommitFee(value);
      break;
    case 70:
      var value = new proto.cln.ListconfigsConfigsCommitfeerateoffset;
      reader.readMessage(value,proto.cln.ListconfigsConfigsCommitfeerateoffset.deserializeBinaryFromReader);
      msg.setCommitFeerateOffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConf();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cln.ListconfigsConfigsConf.serializeBinaryToWriter
    );
  }
  f = message.getDeveloper();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cln.ListconfigsConfigsDeveloper.serializeBinaryToWriter
    );
  }
  f = message.getClearPlugins();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cln.ListconfigsConfigsClearplugins.serializeBinaryToWriter
    );
  }
  f = message.getDisableMpp();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.cln.ListconfigsConfigsDisablempp.serializeBinaryToWriter
    );
  }
  f = message.getMainnet();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.cln.ListconfigsConfigsMainnet.serializeBinaryToWriter
    );
  }
  f = message.getRegtest();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.cln.ListconfigsConfigsRegtest.serializeBinaryToWriter
    );
  }
  f = message.getSignet();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.cln.ListconfigsConfigsSignet.serializeBinaryToWriter
    );
  }
  f = message.getTestnet();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.cln.ListconfigsConfigsTestnet.serializeBinaryToWriter
    );
  }
  f = message.getImportantPlugin();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.cln.ListconfigsConfigsImportantplugin.serializeBinaryToWriter
    );
  }
  f = message.getPlugin();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.cln.ListconfigsConfigsPlugin.serializeBinaryToWriter
    );
  }
  f = message.getPluginDir();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.cln.ListconfigsConfigsPlugindir.serializeBinaryToWriter
    );
  }
  f = message.getLightningDir();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.cln.ListconfigsConfigsLightningdir.serializeBinaryToWriter
    );
  }
  f = message.getNetwork();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.cln.ListconfigsConfigsNetwork.serializeBinaryToWriter
    );
  }
  f = message.getAllowDeprecatedApis();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.cln.ListconfigsConfigsAllowdeprecatedapis.serializeBinaryToWriter
    );
  }
  f = message.getRpcFile();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.cln.ListconfigsConfigsRpcfile.serializeBinaryToWriter
    );
  }
  f = message.getDisablePlugin();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.cln.ListconfigsConfigsDisableplugin.serializeBinaryToWriter
    );
  }
  f = message.getAlwaysUseProxy();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.cln.ListconfigsConfigsAlwaysuseproxy.serializeBinaryToWriter
    );
  }
  f = message.getDaemon();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.cln.ListconfigsConfigsDaemon.serializeBinaryToWriter
    );
  }
  f = message.getWallet();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.cln.ListconfigsConfigsWallet.serializeBinaryToWriter
    );
  }
  f = message.getLargeChannels();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.cln.ListconfigsConfigsLargechannels.serializeBinaryToWriter
    );
  }
  f = message.getExperimentalDualFund();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.cln.ListconfigsConfigsExperimentaldualfund.serializeBinaryToWriter
    );
  }
  f = message.getExperimentalSplicing();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.cln.ListconfigsConfigsExperimentalsplicing.serializeBinaryToWriter
    );
  }
  f = message.getExperimentalOnionMessages();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      proto.cln.ListconfigsConfigsExperimentalonionmessages.serializeBinaryToWriter
    );
  }
  f = message.getExperimentalOffers();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      proto.cln.ListconfigsConfigsExperimentaloffers.serializeBinaryToWriter
    );
  }
  f = message.getExperimentalShutdownWrongFunding();
  if (f != null) {
    writer.writeMessage(
      25,
      f,
      proto.cln.ListconfigsConfigsExperimentalshutdownwrongfunding.serializeBinaryToWriter
    );
  }
  f = message.getExperimentalPeerStorage();
  if (f != null) {
    writer.writeMessage(
      26,
      f,
      proto.cln.ListconfigsConfigsExperimentalpeerstorage.serializeBinaryToWriter
    );
  }
  f = message.getExperimentalAnchors();
  if (f != null) {
    writer.writeMessage(
      27,
      f,
      proto.cln.ListconfigsConfigsExperimentalanchors.serializeBinaryToWriter
    );
  }
  f = message.getDatabaseUpgrade();
  if (f != null) {
    writer.writeMessage(
      28,
      f,
      proto.cln.ListconfigsConfigsDatabaseupgrade.serializeBinaryToWriter
    );
  }
  f = message.getRgb();
  if (f != null) {
    writer.writeMessage(
      29,
      f,
      proto.cln.ListconfigsConfigsRgb.serializeBinaryToWriter
    );
  }
  f = message.getAlias();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      proto.cln.ListconfigsConfigsAlias.serializeBinaryToWriter
    );
  }
  f = message.getPidFile();
  if (f != null) {
    writer.writeMessage(
      31,
      f,
      proto.cln.ListconfigsConfigsPidfile.serializeBinaryToWriter
    );
  }
  f = message.getIgnoreFeeLimits();
  if (f != null) {
    writer.writeMessage(
      32,
      f,
      proto.cln.ListconfigsConfigsIgnorefeelimits.serializeBinaryToWriter
    );
  }
  f = message.getWatchtimeBlocks();
  if (f != null) {
    writer.writeMessage(
      33,
      f,
      proto.cln.ListconfigsConfigsWatchtimeblocks.serializeBinaryToWriter
    );
  }
  f = message.getMaxLocktimeBlocks();
  if (f != null) {
    writer.writeMessage(
      34,
      f,
      proto.cln.ListconfigsConfigsMaxlocktimeblocks.serializeBinaryToWriter
    );
  }
  f = message.getFundingConfirms();
  if (f != null) {
    writer.writeMessage(
      35,
      f,
      proto.cln.ListconfigsConfigsFundingconfirms.serializeBinaryToWriter
    );
  }
  f = message.getCltvDelta();
  if (f != null) {
    writer.writeMessage(
      36,
      f,
      proto.cln.ListconfigsConfigsCltvdelta.serializeBinaryToWriter
    );
  }
  f = message.getCltvFinal();
  if (f != null) {
    writer.writeMessage(
      37,
      f,
      proto.cln.ListconfigsConfigsCltvfinal.serializeBinaryToWriter
    );
  }
  f = message.getCommitTime();
  if (f != null) {
    writer.writeMessage(
      38,
      f,
      proto.cln.ListconfigsConfigsCommittime.serializeBinaryToWriter
    );
  }
  f = message.getFeeBase();
  if (f != null) {
    writer.writeMessage(
      39,
      f,
      proto.cln.ListconfigsConfigsFeebase.serializeBinaryToWriter
    );
  }
  f = message.getRescan();
  if (f != null) {
    writer.writeMessage(
      40,
      f,
      proto.cln.ListconfigsConfigsRescan.serializeBinaryToWriter
    );
  }
  f = message.getFeePerSatoshi();
  if (f != null) {
    writer.writeMessage(
      41,
      f,
      proto.cln.ListconfigsConfigsFeepersatoshi.serializeBinaryToWriter
    );
  }
  f = message.getMaxConcurrentHtlcs();
  if (f != null) {
    writer.writeMessage(
      42,
      f,
      proto.cln.ListconfigsConfigsMaxconcurrenthtlcs.serializeBinaryToWriter
    );
  }
  f = message.getHtlcMinimumMsat();
  if (f != null) {
    writer.writeMessage(
      43,
      f,
      proto.cln.ListconfigsConfigsHtlcminimummsat.serializeBinaryToWriter
    );
  }
  f = message.getHtlcMaximumMsat();
  if (f != null) {
    writer.writeMessage(
      44,
      f,
      proto.cln.ListconfigsConfigsHtlcmaximummsat.serializeBinaryToWriter
    );
  }
  f = message.getMaxDustHtlcExposureMsat();
  if (f != null) {
    writer.writeMessage(
      45,
      f,
      proto.cln.ListconfigsConfigsMaxdusthtlcexposuremsat.serializeBinaryToWriter
    );
  }
  f = message.getMinCapacitySat();
  if (f != null) {
    writer.writeMessage(
      46,
      f,
      proto.cln.ListconfigsConfigsMincapacitysat.serializeBinaryToWriter
    );
  }
  f = message.getAddr();
  if (f != null) {
    writer.writeMessage(
      47,
      f,
      proto.cln.ListconfigsConfigsAddr.serializeBinaryToWriter
    );
  }
  f = message.getAnnounceAddr();
  if (f != null) {
    writer.writeMessage(
      48,
      f,
      proto.cln.ListconfigsConfigsAnnounceaddr.serializeBinaryToWriter
    );
  }
  f = message.getBindAddr();
  if (f != null) {
    writer.writeMessage(
      49,
      f,
      proto.cln.ListconfigsConfigsBindaddr.serializeBinaryToWriter
    );
  }
  f = message.getOffline();
  if (f != null) {
    writer.writeMessage(
      50,
      f,
      proto.cln.ListconfigsConfigsOffline.serializeBinaryToWriter
    );
  }
  f = message.getAutolisten();
  if (f != null) {
    writer.writeMessage(
      51,
      f,
      proto.cln.ListconfigsConfigsAutolisten.serializeBinaryToWriter
    );
  }
  f = message.getProxy();
  if (f != null) {
    writer.writeMessage(
      52,
      f,
      proto.cln.ListconfigsConfigsProxy.serializeBinaryToWriter
    );
  }
  f = message.getDisableDns();
  if (f != null) {
    writer.writeMessage(
      53,
      f,
      proto.cln.ListconfigsConfigsDisabledns.serializeBinaryToWriter
    );
  }
  f = message.getAnnounceAddrDiscovered();
  if (f != null) {
    writer.writeMessage(
      54,
      f,
      proto.cln.ListconfigsConfigsAnnounceaddrdiscovered.serializeBinaryToWriter
    );
  }
  f = message.getAnnounceAddrDiscoveredPort();
  if (f != null) {
    writer.writeMessage(
      55,
      f,
      proto.cln.ListconfigsConfigsAnnounceaddrdiscoveredport.serializeBinaryToWriter
    );
  }
  f = message.getEncryptedHsm();
  if (f != null) {
    writer.writeMessage(
      56,
      f,
      proto.cln.ListconfigsConfigsEncryptedhsm.serializeBinaryToWriter
    );
  }
  f = message.getRpcFileMode();
  if (f != null) {
    writer.writeMessage(
      57,
      f,
      proto.cln.ListconfigsConfigsRpcfilemode.serializeBinaryToWriter
    );
  }
  f = message.getLogLevel();
  if (f != null) {
    writer.writeMessage(
      58,
      f,
      proto.cln.ListconfigsConfigsLoglevel.serializeBinaryToWriter
    );
  }
  f = message.getLogPrefix();
  if (f != null) {
    writer.writeMessage(
      59,
      f,
      proto.cln.ListconfigsConfigsLogprefix.serializeBinaryToWriter
    );
  }
  f = message.getLogFile();
  if (f != null) {
    writer.writeMessage(
      60,
      f,
      proto.cln.ListconfigsConfigsLogfile.serializeBinaryToWriter
    );
  }
  f = message.getLogTimestamps();
  if (f != null) {
    writer.writeMessage(
      61,
      f,
      proto.cln.ListconfigsConfigsLogtimestamps.serializeBinaryToWriter
    );
  }
  f = message.getForceFeerates();
  if (f != null) {
    writer.writeMessage(
      62,
      f,
      proto.cln.ListconfigsConfigsForcefeerates.serializeBinaryToWriter
    );
  }
  f = message.getSubdaemon();
  if (f != null) {
    writer.writeMessage(
      63,
      f,
      proto.cln.ListconfigsConfigsSubdaemon.serializeBinaryToWriter
    );
  }
  f = message.getFetchinvoiceNoconnect();
  if (f != null) {
    writer.writeMessage(
      64,
      f,
      proto.cln.ListconfigsConfigsFetchinvoicenoconnect.serializeBinaryToWriter
    );
  }
  f = message.getAcceptHtlcTlvTypes();
  if (f != null) {
    writer.writeMessage(
      65,
      f,
      proto.cln.ListconfigsConfigsAccepthtlctlvtypes.serializeBinaryToWriter
    );
  }
  f = message.getTorServicePassword();
  if (f != null) {
    writer.writeMessage(
      66,
      f,
      proto.cln.ListconfigsConfigsTorservicepassword.serializeBinaryToWriter
    );
  }
  f = message.getAnnounceAddrDns();
  if (f != null) {
    writer.writeMessage(
      67,
      f,
      proto.cln.ListconfigsConfigsAnnounceaddrdns.serializeBinaryToWriter
    );
  }
  f = message.getRequireConfirmedInputs();
  if (f != null) {
    writer.writeMessage(
      68,
      f,
      proto.cln.ListconfigsConfigsRequireconfirmedinputs.serializeBinaryToWriter
    );
  }
  f = message.getCommitFee();
  if (f != null) {
    writer.writeMessage(
      69,
      f,
      proto.cln.ListconfigsConfigsCommitfee.serializeBinaryToWriter
    );
  }
  f = message.getCommitFeerateOffset();
  if (f != null) {
    writer.writeMessage(
      70,
      f,
      proto.cln.ListconfigsConfigsCommitfeerateoffset.serializeBinaryToWriter
    );
  }
};


/**
 * optional ListconfigsConfigsConf conf = 1;
 * @return {?proto.cln.ListconfigsConfigsConf}
 */
proto.cln.ListconfigsConfigs.prototype.getConf = function() {
  return /** @type{?proto.cln.ListconfigsConfigsConf} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsConf, 1));
};


/**
 * @param {?proto.cln.ListconfigsConfigsConf|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setConf = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearConf = function() {
  return this.setConf(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasConf = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ListconfigsConfigsDeveloper developer = 2;
 * @return {?proto.cln.ListconfigsConfigsDeveloper}
 */
proto.cln.ListconfigsConfigs.prototype.getDeveloper = function() {
  return /** @type{?proto.cln.ListconfigsConfigsDeveloper} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsDeveloper, 2));
};


/**
 * @param {?proto.cln.ListconfigsConfigsDeveloper|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setDeveloper = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearDeveloper = function() {
  return this.setDeveloper(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasDeveloper = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ListconfigsConfigsClearplugins clear_plugins = 3;
 * @return {?proto.cln.ListconfigsConfigsClearplugins}
 */
proto.cln.ListconfigsConfigs.prototype.getClearPlugins = function() {
  return /** @type{?proto.cln.ListconfigsConfigsClearplugins} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsClearplugins, 3));
};


/**
 * @param {?proto.cln.ListconfigsConfigsClearplugins|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setClearPlugins = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearClearPlugins = function() {
  return this.setClearPlugins(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasClearPlugins = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ListconfigsConfigsDisablempp disable_mpp = 4;
 * @return {?proto.cln.ListconfigsConfigsDisablempp}
 */
proto.cln.ListconfigsConfigs.prototype.getDisableMpp = function() {
  return /** @type{?proto.cln.ListconfigsConfigsDisablempp} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsDisablempp, 4));
};


/**
 * @param {?proto.cln.ListconfigsConfigsDisablempp|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setDisableMpp = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearDisableMpp = function() {
  return this.setDisableMpp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasDisableMpp = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ListconfigsConfigsMainnet mainnet = 5;
 * @return {?proto.cln.ListconfigsConfigsMainnet}
 */
proto.cln.ListconfigsConfigs.prototype.getMainnet = function() {
  return /** @type{?proto.cln.ListconfigsConfigsMainnet} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsMainnet, 5));
};


/**
 * @param {?proto.cln.ListconfigsConfigsMainnet|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setMainnet = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearMainnet = function() {
  return this.setMainnet(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasMainnet = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ListconfigsConfigsRegtest regtest = 6;
 * @return {?proto.cln.ListconfigsConfigsRegtest}
 */
proto.cln.ListconfigsConfigs.prototype.getRegtest = function() {
  return /** @type{?proto.cln.ListconfigsConfigsRegtest} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsRegtest, 6));
};


/**
 * @param {?proto.cln.ListconfigsConfigsRegtest|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setRegtest = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearRegtest = function() {
  return this.setRegtest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasRegtest = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ListconfigsConfigsSignet signet = 7;
 * @return {?proto.cln.ListconfigsConfigsSignet}
 */
proto.cln.ListconfigsConfigs.prototype.getSignet = function() {
  return /** @type{?proto.cln.ListconfigsConfigsSignet} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsSignet, 7));
};


/**
 * @param {?proto.cln.ListconfigsConfigsSignet|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setSignet = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearSignet = function() {
  return this.setSignet(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasSignet = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ListconfigsConfigsTestnet testnet = 8;
 * @return {?proto.cln.ListconfigsConfigsTestnet}
 */
proto.cln.ListconfigsConfigs.prototype.getTestnet = function() {
  return /** @type{?proto.cln.ListconfigsConfigsTestnet} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsTestnet, 8));
};


/**
 * @param {?proto.cln.ListconfigsConfigsTestnet|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setTestnet = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearTestnet = function() {
  return this.setTestnet(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasTestnet = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional ListconfigsConfigsImportantplugin important_plugin = 9;
 * @return {?proto.cln.ListconfigsConfigsImportantplugin}
 */
proto.cln.ListconfigsConfigs.prototype.getImportantPlugin = function() {
  return /** @type{?proto.cln.ListconfigsConfigsImportantplugin} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsImportantplugin, 9));
};


/**
 * @param {?proto.cln.ListconfigsConfigsImportantplugin|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setImportantPlugin = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearImportantPlugin = function() {
  return this.setImportantPlugin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasImportantPlugin = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional ListconfigsConfigsPlugin plugin = 10;
 * @return {?proto.cln.ListconfigsConfigsPlugin}
 */
proto.cln.ListconfigsConfigs.prototype.getPlugin = function() {
  return /** @type{?proto.cln.ListconfigsConfigsPlugin} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsPlugin, 10));
};


/**
 * @param {?proto.cln.ListconfigsConfigsPlugin|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setPlugin = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearPlugin = function() {
  return this.setPlugin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasPlugin = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional ListconfigsConfigsPlugindir plugin_dir = 11;
 * @return {?proto.cln.ListconfigsConfigsPlugindir}
 */
proto.cln.ListconfigsConfigs.prototype.getPluginDir = function() {
  return /** @type{?proto.cln.ListconfigsConfigsPlugindir} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsPlugindir, 11));
};


/**
 * @param {?proto.cln.ListconfigsConfigsPlugindir|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setPluginDir = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearPluginDir = function() {
  return this.setPluginDir(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasPluginDir = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional ListconfigsConfigsLightningdir lightning_dir = 12;
 * @return {?proto.cln.ListconfigsConfigsLightningdir}
 */
proto.cln.ListconfigsConfigs.prototype.getLightningDir = function() {
  return /** @type{?proto.cln.ListconfigsConfigsLightningdir} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsLightningdir, 12));
};


/**
 * @param {?proto.cln.ListconfigsConfigsLightningdir|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setLightningDir = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearLightningDir = function() {
  return this.setLightningDir(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasLightningDir = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional ListconfigsConfigsNetwork network = 13;
 * @return {?proto.cln.ListconfigsConfigsNetwork}
 */
proto.cln.ListconfigsConfigs.prototype.getNetwork = function() {
  return /** @type{?proto.cln.ListconfigsConfigsNetwork} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsNetwork, 13));
};


/**
 * @param {?proto.cln.ListconfigsConfigsNetwork|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setNetwork = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearNetwork = function() {
  return this.setNetwork(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasNetwork = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional ListconfigsConfigsAllowdeprecatedapis allow_deprecated_apis = 14;
 * @return {?proto.cln.ListconfigsConfigsAllowdeprecatedapis}
 */
proto.cln.ListconfigsConfigs.prototype.getAllowDeprecatedApis = function() {
  return /** @type{?proto.cln.ListconfigsConfigsAllowdeprecatedapis} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsAllowdeprecatedapis, 14));
};


/**
 * @param {?proto.cln.ListconfigsConfigsAllowdeprecatedapis|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setAllowDeprecatedApis = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearAllowDeprecatedApis = function() {
  return this.setAllowDeprecatedApis(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasAllowDeprecatedApis = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional ListconfigsConfigsRpcfile rpc_file = 15;
 * @return {?proto.cln.ListconfigsConfigsRpcfile}
 */
proto.cln.ListconfigsConfigs.prototype.getRpcFile = function() {
  return /** @type{?proto.cln.ListconfigsConfigsRpcfile} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsRpcfile, 15));
};


/**
 * @param {?proto.cln.ListconfigsConfigsRpcfile|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setRpcFile = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearRpcFile = function() {
  return this.setRpcFile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasRpcFile = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional ListconfigsConfigsDisableplugin disable_plugin = 16;
 * @return {?proto.cln.ListconfigsConfigsDisableplugin}
 */
proto.cln.ListconfigsConfigs.prototype.getDisablePlugin = function() {
  return /** @type{?proto.cln.ListconfigsConfigsDisableplugin} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsDisableplugin, 16));
};


/**
 * @param {?proto.cln.ListconfigsConfigsDisableplugin|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setDisablePlugin = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearDisablePlugin = function() {
  return this.setDisablePlugin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasDisablePlugin = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional ListconfigsConfigsAlwaysuseproxy always_use_proxy = 17;
 * @return {?proto.cln.ListconfigsConfigsAlwaysuseproxy}
 */
proto.cln.ListconfigsConfigs.prototype.getAlwaysUseProxy = function() {
  return /** @type{?proto.cln.ListconfigsConfigsAlwaysuseproxy} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsAlwaysuseproxy, 17));
};


/**
 * @param {?proto.cln.ListconfigsConfigsAlwaysuseproxy|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setAlwaysUseProxy = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearAlwaysUseProxy = function() {
  return this.setAlwaysUseProxy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasAlwaysUseProxy = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional ListconfigsConfigsDaemon daemon = 18;
 * @return {?proto.cln.ListconfigsConfigsDaemon}
 */
proto.cln.ListconfigsConfigs.prototype.getDaemon = function() {
  return /** @type{?proto.cln.ListconfigsConfigsDaemon} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsDaemon, 18));
};


/**
 * @param {?proto.cln.ListconfigsConfigsDaemon|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setDaemon = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearDaemon = function() {
  return this.setDaemon(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasDaemon = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional ListconfigsConfigsWallet wallet = 19;
 * @return {?proto.cln.ListconfigsConfigsWallet}
 */
proto.cln.ListconfigsConfigs.prototype.getWallet = function() {
  return /** @type{?proto.cln.ListconfigsConfigsWallet} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsWallet, 19));
};


/**
 * @param {?proto.cln.ListconfigsConfigsWallet|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setWallet = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearWallet = function() {
  return this.setWallet(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasWallet = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional ListconfigsConfigsLargechannels large_channels = 20;
 * @return {?proto.cln.ListconfigsConfigsLargechannels}
 */
proto.cln.ListconfigsConfigs.prototype.getLargeChannels = function() {
  return /** @type{?proto.cln.ListconfigsConfigsLargechannels} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsLargechannels, 20));
};


/**
 * @param {?proto.cln.ListconfigsConfigsLargechannels|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setLargeChannels = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearLargeChannels = function() {
  return this.setLargeChannels(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasLargeChannels = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional ListconfigsConfigsExperimentaldualfund experimental_dual_fund = 21;
 * @return {?proto.cln.ListconfigsConfigsExperimentaldualfund}
 */
proto.cln.ListconfigsConfigs.prototype.getExperimentalDualFund = function() {
  return /** @type{?proto.cln.ListconfigsConfigsExperimentaldualfund} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsExperimentaldualfund, 21));
};


/**
 * @param {?proto.cln.ListconfigsConfigsExperimentaldualfund|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setExperimentalDualFund = function(value) {
  return jspb.Message.setWrapperField(this, 21, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearExperimentalDualFund = function() {
  return this.setExperimentalDualFund(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasExperimentalDualFund = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional ListconfigsConfigsExperimentalsplicing experimental_splicing = 22;
 * @return {?proto.cln.ListconfigsConfigsExperimentalsplicing}
 */
proto.cln.ListconfigsConfigs.prototype.getExperimentalSplicing = function() {
  return /** @type{?proto.cln.ListconfigsConfigsExperimentalsplicing} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsExperimentalsplicing, 22));
};


/**
 * @param {?proto.cln.ListconfigsConfigsExperimentalsplicing|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setExperimentalSplicing = function(value) {
  return jspb.Message.setWrapperField(this, 22, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearExperimentalSplicing = function() {
  return this.setExperimentalSplicing(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasExperimentalSplicing = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional ListconfigsConfigsExperimentalonionmessages experimental_onion_messages = 23;
 * @return {?proto.cln.ListconfigsConfigsExperimentalonionmessages}
 */
proto.cln.ListconfigsConfigs.prototype.getExperimentalOnionMessages = function() {
  return /** @type{?proto.cln.ListconfigsConfigsExperimentalonionmessages} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsExperimentalonionmessages, 23));
};


/**
 * @param {?proto.cln.ListconfigsConfigsExperimentalonionmessages|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setExperimentalOnionMessages = function(value) {
  return jspb.Message.setWrapperField(this, 23, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearExperimentalOnionMessages = function() {
  return this.setExperimentalOnionMessages(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasExperimentalOnionMessages = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional ListconfigsConfigsExperimentaloffers experimental_offers = 24;
 * @return {?proto.cln.ListconfigsConfigsExperimentaloffers}
 */
proto.cln.ListconfigsConfigs.prototype.getExperimentalOffers = function() {
  return /** @type{?proto.cln.ListconfigsConfigsExperimentaloffers} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsExperimentaloffers, 24));
};


/**
 * @param {?proto.cln.ListconfigsConfigsExperimentaloffers|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setExperimentalOffers = function(value) {
  return jspb.Message.setWrapperField(this, 24, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearExperimentalOffers = function() {
  return this.setExperimentalOffers(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasExperimentalOffers = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional ListconfigsConfigsExperimentalshutdownwrongfunding experimental_shutdown_wrong_funding = 25;
 * @return {?proto.cln.ListconfigsConfigsExperimentalshutdownwrongfunding}
 */
proto.cln.ListconfigsConfigs.prototype.getExperimentalShutdownWrongFunding = function() {
  return /** @type{?proto.cln.ListconfigsConfigsExperimentalshutdownwrongfunding} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsExperimentalshutdownwrongfunding, 25));
};


/**
 * @param {?proto.cln.ListconfigsConfigsExperimentalshutdownwrongfunding|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setExperimentalShutdownWrongFunding = function(value) {
  return jspb.Message.setWrapperField(this, 25, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearExperimentalShutdownWrongFunding = function() {
  return this.setExperimentalShutdownWrongFunding(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasExperimentalShutdownWrongFunding = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional ListconfigsConfigsExperimentalpeerstorage experimental_peer_storage = 26;
 * @return {?proto.cln.ListconfigsConfigsExperimentalpeerstorage}
 */
proto.cln.ListconfigsConfigs.prototype.getExperimentalPeerStorage = function() {
  return /** @type{?proto.cln.ListconfigsConfigsExperimentalpeerstorage} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsExperimentalpeerstorage, 26));
};


/**
 * @param {?proto.cln.ListconfigsConfigsExperimentalpeerstorage|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setExperimentalPeerStorage = function(value) {
  return jspb.Message.setWrapperField(this, 26, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearExperimentalPeerStorage = function() {
  return this.setExperimentalPeerStorage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasExperimentalPeerStorage = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional ListconfigsConfigsExperimentalanchors experimental_anchors = 27;
 * @return {?proto.cln.ListconfigsConfigsExperimentalanchors}
 */
proto.cln.ListconfigsConfigs.prototype.getExperimentalAnchors = function() {
  return /** @type{?proto.cln.ListconfigsConfigsExperimentalanchors} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsExperimentalanchors, 27));
};


/**
 * @param {?proto.cln.ListconfigsConfigsExperimentalanchors|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setExperimentalAnchors = function(value) {
  return jspb.Message.setWrapperField(this, 27, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearExperimentalAnchors = function() {
  return this.setExperimentalAnchors(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasExperimentalAnchors = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional ListconfigsConfigsDatabaseupgrade database_upgrade = 28;
 * @return {?proto.cln.ListconfigsConfigsDatabaseupgrade}
 */
proto.cln.ListconfigsConfigs.prototype.getDatabaseUpgrade = function() {
  return /** @type{?proto.cln.ListconfigsConfigsDatabaseupgrade} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsDatabaseupgrade, 28));
};


/**
 * @param {?proto.cln.ListconfigsConfigsDatabaseupgrade|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setDatabaseUpgrade = function(value) {
  return jspb.Message.setWrapperField(this, 28, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearDatabaseUpgrade = function() {
  return this.setDatabaseUpgrade(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasDatabaseUpgrade = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional ListconfigsConfigsRgb rgb = 29;
 * @return {?proto.cln.ListconfigsConfigsRgb}
 */
proto.cln.ListconfigsConfigs.prototype.getRgb = function() {
  return /** @type{?proto.cln.ListconfigsConfigsRgb} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsRgb, 29));
};


/**
 * @param {?proto.cln.ListconfigsConfigsRgb|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setRgb = function(value) {
  return jspb.Message.setWrapperField(this, 29, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearRgb = function() {
  return this.setRgb(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasRgb = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional ListconfigsConfigsAlias alias = 30;
 * @return {?proto.cln.ListconfigsConfigsAlias}
 */
proto.cln.ListconfigsConfigs.prototype.getAlias = function() {
  return /** @type{?proto.cln.ListconfigsConfigsAlias} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsAlias, 30));
};


/**
 * @param {?proto.cln.ListconfigsConfigsAlias|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setAlias = function(value) {
  return jspb.Message.setWrapperField(this, 30, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearAlias = function() {
  return this.setAlias(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasAlias = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional ListconfigsConfigsPidfile pid_file = 31;
 * @return {?proto.cln.ListconfigsConfigsPidfile}
 */
proto.cln.ListconfigsConfigs.prototype.getPidFile = function() {
  return /** @type{?proto.cln.ListconfigsConfigsPidfile} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsPidfile, 31));
};


/**
 * @param {?proto.cln.ListconfigsConfigsPidfile|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setPidFile = function(value) {
  return jspb.Message.setWrapperField(this, 31, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearPidFile = function() {
  return this.setPidFile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasPidFile = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional ListconfigsConfigsIgnorefeelimits ignore_fee_limits = 32;
 * @return {?proto.cln.ListconfigsConfigsIgnorefeelimits}
 */
proto.cln.ListconfigsConfigs.prototype.getIgnoreFeeLimits = function() {
  return /** @type{?proto.cln.ListconfigsConfigsIgnorefeelimits} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsIgnorefeelimits, 32));
};


/**
 * @param {?proto.cln.ListconfigsConfigsIgnorefeelimits|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setIgnoreFeeLimits = function(value) {
  return jspb.Message.setWrapperField(this, 32, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearIgnoreFeeLimits = function() {
  return this.setIgnoreFeeLimits(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasIgnoreFeeLimits = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional ListconfigsConfigsWatchtimeblocks watchtime_blocks = 33;
 * @return {?proto.cln.ListconfigsConfigsWatchtimeblocks}
 */
proto.cln.ListconfigsConfigs.prototype.getWatchtimeBlocks = function() {
  return /** @type{?proto.cln.ListconfigsConfigsWatchtimeblocks} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsWatchtimeblocks, 33));
};


/**
 * @param {?proto.cln.ListconfigsConfigsWatchtimeblocks|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setWatchtimeBlocks = function(value) {
  return jspb.Message.setWrapperField(this, 33, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearWatchtimeBlocks = function() {
  return this.setWatchtimeBlocks(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasWatchtimeBlocks = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * optional ListconfigsConfigsMaxlocktimeblocks max_locktime_blocks = 34;
 * @return {?proto.cln.ListconfigsConfigsMaxlocktimeblocks}
 */
proto.cln.ListconfigsConfigs.prototype.getMaxLocktimeBlocks = function() {
  return /** @type{?proto.cln.ListconfigsConfigsMaxlocktimeblocks} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsMaxlocktimeblocks, 34));
};


/**
 * @param {?proto.cln.ListconfigsConfigsMaxlocktimeblocks|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setMaxLocktimeBlocks = function(value) {
  return jspb.Message.setWrapperField(this, 34, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearMaxLocktimeBlocks = function() {
  return this.setMaxLocktimeBlocks(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasMaxLocktimeBlocks = function() {
  return jspb.Message.getField(this, 34) != null;
};


/**
 * optional ListconfigsConfigsFundingconfirms funding_confirms = 35;
 * @return {?proto.cln.ListconfigsConfigsFundingconfirms}
 */
proto.cln.ListconfigsConfigs.prototype.getFundingConfirms = function() {
  return /** @type{?proto.cln.ListconfigsConfigsFundingconfirms} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsFundingconfirms, 35));
};


/**
 * @param {?proto.cln.ListconfigsConfigsFundingconfirms|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setFundingConfirms = function(value) {
  return jspb.Message.setWrapperField(this, 35, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearFundingConfirms = function() {
  return this.setFundingConfirms(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasFundingConfirms = function() {
  return jspb.Message.getField(this, 35) != null;
};


/**
 * optional ListconfigsConfigsCltvdelta cltv_delta = 36;
 * @return {?proto.cln.ListconfigsConfigsCltvdelta}
 */
proto.cln.ListconfigsConfigs.prototype.getCltvDelta = function() {
  return /** @type{?proto.cln.ListconfigsConfigsCltvdelta} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsCltvdelta, 36));
};


/**
 * @param {?proto.cln.ListconfigsConfigsCltvdelta|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setCltvDelta = function(value) {
  return jspb.Message.setWrapperField(this, 36, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearCltvDelta = function() {
  return this.setCltvDelta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasCltvDelta = function() {
  return jspb.Message.getField(this, 36) != null;
};


/**
 * optional ListconfigsConfigsCltvfinal cltv_final = 37;
 * @return {?proto.cln.ListconfigsConfigsCltvfinal}
 */
proto.cln.ListconfigsConfigs.prototype.getCltvFinal = function() {
  return /** @type{?proto.cln.ListconfigsConfigsCltvfinal} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsCltvfinal, 37));
};


/**
 * @param {?proto.cln.ListconfigsConfigsCltvfinal|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setCltvFinal = function(value) {
  return jspb.Message.setWrapperField(this, 37, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearCltvFinal = function() {
  return this.setCltvFinal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasCltvFinal = function() {
  return jspb.Message.getField(this, 37) != null;
};


/**
 * optional ListconfigsConfigsCommittime commit_time = 38;
 * @return {?proto.cln.ListconfigsConfigsCommittime}
 */
proto.cln.ListconfigsConfigs.prototype.getCommitTime = function() {
  return /** @type{?proto.cln.ListconfigsConfigsCommittime} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsCommittime, 38));
};


/**
 * @param {?proto.cln.ListconfigsConfigsCommittime|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setCommitTime = function(value) {
  return jspb.Message.setWrapperField(this, 38, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearCommitTime = function() {
  return this.setCommitTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasCommitTime = function() {
  return jspb.Message.getField(this, 38) != null;
};


/**
 * optional ListconfigsConfigsFeebase fee_base = 39;
 * @return {?proto.cln.ListconfigsConfigsFeebase}
 */
proto.cln.ListconfigsConfigs.prototype.getFeeBase = function() {
  return /** @type{?proto.cln.ListconfigsConfigsFeebase} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsFeebase, 39));
};


/**
 * @param {?proto.cln.ListconfigsConfigsFeebase|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setFeeBase = function(value) {
  return jspb.Message.setWrapperField(this, 39, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearFeeBase = function() {
  return this.setFeeBase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasFeeBase = function() {
  return jspb.Message.getField(this, 39) != null;
};


/**
 * optional ListconfigsConfigsRescan rescan = 40;
 * @return {?proto.cln.ListconfigsConfigsRescan}
 */
proto.cln.ListconfigsConfigs.prototype.getRescan = function() {
  return /** @type{?proto.cln.ListconfigsConfigsRescan} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsRescan, 40));
};


/**
 * @param {?proto.cln.ListconfigsConfigsRescan|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setRescan = function(value) {
  return jspb.Message.setWrapperField(this, 40, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearRescan = function() {
  return this.setRescan(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasRescan = function() {
  return jspb.Message.getField(this, 40) != null;
};


/**
 * optional ListconfigsConfigsFeepersatoshi fee_per_satoshi = 41;
 * @return {?proto.cln.ListconfigsConfigsFeepersatoshi}
 */
proto.cln.ListconfigsConfigs.prototype.getFeePerSatoshi = function() {
  return /** @type{?proto.cln.ListconfigsConfigsFeepersatoshi} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsFeepersatoshi, 41));
};


/**
 * @param {?proto.cln.ListconfigsConfigsFeepersatoshi|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setFeePerSatoshi = function(value) {
  return jspb.Message.setWrapperField(this, 41, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearFeePerSatoshi = function() {
  return this.setFeePerSatoshi(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasFeePerSatoshi = function() {
  return jspb.Message.getField(this, 41) != null;
};


/**
 * optional ListconfigsConfigsMaxconcurrenthtlcs max_concurrent_htlcs = 42;
 * @return {?proto.cln.ListconfigsConfigsMaxconcurrenthtlcs}
 */
proto.cln.ListconfigsConfigs.prototype.getMaxConcurrentHtlcs = function() {
  return /** @type{?proto.cln.ListconfigsConfigsMaxconcurrenthtlcs} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsMaxconcurrenthtlcs, 42));
};


/**
 * @param {?proto.cln.ListconfigsConfigsMaxconcurrenthtlcs|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setMaxConcurrentHtlcs = function(value) {
  return jspb.Message.setWrapperField(this, 42, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearMaxConcurrentHtlcs = function() {
  return this.setMaxConcurrentHtlcs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasMaxConcurrentHtlcs = function() {
  return jspb.Message.getField(this, 42) != null;
};


/**
 * optional ListconfigsConfigsHtlcminimummsat htlc_minimum_msat = 43;
 * @return {?proto.cln.ListconfigsConfigsHtlcminimummsat}
 */
proto.cln.ListconfigsConfigs.prototype.getHtlcMinimumMsat = function() {
  return /** @type{?proto.cln.ListconfigsConfigsHtlcminimummsat} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsHtlcminimummsat, 43));
};


/**
 * @param {?proto.cln.ListconfigsConfigsHtlcminimummsat|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setHtlcMinimumMsat = function(value) {
  return jspb.Message.setWrapperField(this, 43, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearHtlcMinimumMsat = function() {
  return this.setHtlcMinimumMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasHtlcMinimumMsat = function() {
  return jspb.Message.getField(this, 43) != null;
};


/**
 * optional ListconfigsConfigsHtlcmaximummsat htlc_maximum_msat = 44;
 * @return {?proto.cln.ListconfigsConfigsHtlcmaximummsat}
 */
proto.cln.ListconfigsConfigs.prototype.getHtlcMaximumMsat = function() {
  return /** @type{?proto.cln.ListconfigsConfigsHtlcmaximummsat} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsHtlcmaximummsat, 44));
};


/**
 * @param {?proto.cln.ListconfigsConfigsHtlcmaximummsat|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setHtlcMaximumMsat = function(value) {
  return jspb.Message.setWrapperField(this, 44, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearHtlcMaximumMsat = function() {
  return this.setHtlcMaximumMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasHtlcMaximumMsat = function() {
  return jspb.Message.getField(this, 44) != null;
};


/**
 * optional ListconfigsConfigsMaxdusthtlcexposuremsat max_dust_htlc_exposure_msat = 45;
 * @return {?proto.cln.ListconfigsConfigsMaxdusthtlcexposuremsat}
 */
proto.cln.ListconfigsConfigs.prototype.getMaxDustHtlcExposureMsat = function() {
  return /** @type{?proto.cln.ListconfigsConfigsMaxdusthtlcexposuremsat} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsMaxdusthtlcexposuremsat, 45));
};


/**
 * @param {?proto.cln.ListconfigsConfigsMaxdusthtlcexposuremsat|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setMaxDustHtlcExposureMsat = function(value) {
  return jspb.Message.setWrapperField(this, 45, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearMaxDustHtlcExposureMsat = function() {
  return this.setMaxDustHtlcExposureMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasMaxDustHtlcExposureMsat = function() {
  return jspb.Message.getField(this, 45) != null;
};


/**
 * optional ListconfigsConfigsMincapacitysat min_capacity_sat = 46;
 * @return {?proto.cln.ListconfigsConfigsMincapacitysat}
 */
proto.cln.ListconfigsConfigs.prototype.getMinCapacitySat = function() {
  return /** @type{?proto.cln.ListconfigsConfigsMincapacitysat} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsMincapacitysat, 46));
};


/**
 * @param {?proto.cln.ListconfigsConfigsMincapacitysat|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setMinCapacitySat = function(value) {
  return jspb.Message.setWrapperField(this, 46, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearMinCapacitySat = function() {
  return this.setMinCapacitySat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasMinCapacitySat = function() {
  return jspb.Message.getField(this, 46) != null;
};


/**
 * optional ListconfigsConfigsAddr addr = 47;
 * @return {?proto.cln.ListconfigsConfigsAddr}
 */
proto.cln.ListconfigsConfigs.prototype.getAddr = function() {
  return /** @type{?proto.cln.ListconfigsConfigsAddr} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsAddr, 47));
};


/**
 * @param {?proto.cln.ListconfigsConfigsAddr|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setAddr = function(value) {
  return jspb.Message.setWrapperField(this, 47, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearAddr = function() {
  return this.setAddr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasAddr = function() {
  return jspb.Message.getField(this, 47) != null;
};


/**
 * optional ListconfigsConfigsAnnounceaddr announce_addr = 48;
 * @return {?proto.cln.ListconfigsConfigsAnnounceaddr}
 */
proto.cln.ListconfigsConfigs.prototype.getAnnounceAddr = function() {
  return /** @type{?proto.cln.ListconfigsConfigsAnnounceaddr} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsAnnounceaddr, 48));
};


/**
 * @param {?proto.cln.ListconfigsConfigsAnnounceaddr|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setAnnounceAddr = function(value) {
  return jspb.Message.setWrapperField(this, 48, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearAnnounceAddr = function() {
  return this.setAnnounceAddr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasAnnounceAddr = function() {
  return jspb.Message.getField(this, 48) != null;
};


/**
 * optional ListconfigsConfigsBindaddr bind_addr = 49;
 * @return {?proto.cln.ListconfigsConfigsBindaddr}
 */
proto.cln.ListconfigsConfigs.prototype.getBindAddr = function() {
  return /** @type{?proto.cln.ListconfigsConfigsBindaddr} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsBindaddr, 49));
};


/**
 * @param {?proto.cln.ListconfigsConfigsBindaddr|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setBindAddr = function(value) {
  return jspb.Message.setWrapperField(this, 49, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearBindAddr = function() {
  return this.setBindAddr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasBindAddr = function() {
  return jspb.Message.getField(this, 49) != null;
};


/**
 * optional ListconfigsConfigsOffline offline = 50;
 * @return {?proto.cln.ListconfigsConfigsOffline}
 */
proto.cln.ListconfigsConfigs.prototype.getOffline = function() {
  return /** @type{?proto.cln.ListconfigsConfigsOffline} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsOffline, 50));
};


/**
 * @param {?proto.cln.ListconfigsConfigsOffline|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setOffline = function(value) {
  return jspb.Message.setWrapperField(this, 50, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearOffline = function() {
  return this.setOffline(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasOffline = function() {
  return jspb.Message.getField(this, 50) != null;
};


/**
 * optional ListconfigsConfigsAutolisten autolisten = 51;
 * @return {?proto.cln.ListconfigsConfigsAutolisten}
 */
proto.cln.ListconfigsConfigs.prototype.getAutolisten = function() {
  return /** @type{?proto.cln.ListconfigsConfigsAutolisten} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsAutolisten, 51));
};


/**
 * @param {?proto.cln.ListconfigsConfigsAutolisten|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setAutolisten = function(value) {
  return jspb.Message.setWrapperField(this, 51, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearAutolisten = function() {
  return this.setAutolisten(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasAutolisten = function() {
  return jspb.Message.getField(this, 51) != null;
};


/**
 * optional ListconfigsConfigsProxy proxy = 52;
 * @return {?proto.cln.ListconfigsConfigsProxy}
 */
proto.cln.ListconfigsConfigs.prototype.getProxy = function() {
  return /** @type{?proto.cln.ListconfigsConfigsProxy} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsProxy, 52));
};


/**
 * @param {?proto.cln.ListconfigsConfigsProxy|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setProxy = function(value) {
  return jspb.Message.setWrapperField(this, 52, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearProxy = function() {
  return this.setProxy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasProxy = function() {
  return jspb.Message.getField(this, 52) != null;
};


/**
 * optional ListconfigsConfigsDisabledns disable_dns = 53;
 * @return {?proto.cln.ListconfigsConfigsDisabledns}
 */
proto.cln.ListconfigsConfigs.prototype.getDisableDns = function() {
  return /** @type{?proto.cln.ListconfigsConfigsDisabledns} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsDisabledns, 53));
};


/**
 * @param {?proto.cln.ListconfigsConfigsDisabledns|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setDisableDns = function(value) {
  return jspb.Message.setWrapperField(this, 53, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearDisableDns = function() {
  return this.setDisableDns(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasDisableDns = function() {
  return jspb.Message.getField(this, 53) != null;
};


/**
 * optional ListconfigsConfigsAnnounceaddrdiscovered announce_addr_discovered = 54;
 * @return {?proto.cln.ListconfigsConfigsAnnounceaddrdiscovered}
 */
proto.cln.ListconfigsConfigs.prototype.getAnnounceAddrDiscovered = function() {
  return /** @type{?proto.cln.ListconfigsConfigsAnnounceaddrdiscovered} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsAnnounceaddrdiscovered, 54));
};


/**
 * @param {?proto.cln.ListconfigsConfigsAnnounceaddrdiscovered|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setAnnounceAddrDiscovered = function(value) {
  return jspb.Message.setWrapperField(this, 54, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearAnnounceAddrDiscovered = function() {
  return this.setAnnounceAddrDiscovered(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasAnnounceAddrDiscovered = function() {
  return jspb.Message.getField(this, 54) != null;
};


/**
 * optional ListconfigsConfigsAnnounceaddrdiscoveredport announce_addr_discovered_port = 55;
 * @return {?proto.cln.ListconfigsConfigsAnnounceaddrdiscoveredport}
 */
proto.cln.ListconfigsConfigs.prototype.getAnnounceAddrDiscoveredPort = function() {
  return /** @type{?proto.cln.ListconfigsConfigsAnnounceaddrdiscoveredport} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsAnnounceaddrdiscoveredport, 55));
};


/**
 * @param {?proto.cln.ListconfigsConfigsAnnounceaddrdiscoveredport|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setAnnounceAddrDiscoveredPort = function(value) {
  return jspb.Message.setWrapperField(this, 55, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearAnnounceAddrDiscoveredPort = function() {
  return this.setAnnounceAddrDiscoveredPort(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasAnnounceAddrDiscoveredPort = function() {
  return jspb.Message.getField(this, 55) != null;
};


/**
 * optional ListconfigsConfigsEncryptedhsm encrypted_hsm = 56;
 * @return {?proto.cln.ListconfigsConfigsEncryptedhsm}
 */
proto.cln.ListconfigsConfigs.prototype.getEncryptedHsm = function() {
  return /** @type{?proto.cln.ListconfigsConfigsEncryptedhsm} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsEncryptedhsm, 56));
};


/**
 * @param {?proto.cln.ListconfigsConfigsEncryptedhsm|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setEncryptedHsm = function(value) {
  return jspb.Message.setWrapperField(this, 56, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearEncryptedHsm = function() {
  return this.setEncryptedHsm(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasEncryptedHsm = function() {
  return jspb.Message.getField(this, 56) != null;
};


/**
 * optional ListconfigsConfigsRpcfilemode rpc_file_mode = 57;
 * @return {?proto.cln.ListconfigsConfigsRpcfilemode}
 */
proto.cln.ListconfigsConfigs.prototype.getRpcFileMode = function() {
  return /** @type{?proto.cln.ListconfigsConfigsRpcfilemode} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsRpcfilemode, 57));
};


/**
 * @param {?proto.cln.ListconfigsConfigsRpcfilemode|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setRpcFileMode = function(value) {
  return jspb.Message.setWrapperField(this, 57, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearRpcFileMode = function() {
  return this.setRpcFileMode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasRpcFileMode = function() {
  return jspb.Message.getField(this, 57) != null;
};


/**
 * optional ListconfigsConfigsLoglevel log_level = 58;
 * @return {?proto.cln.ListconfigsConfigsLoglevel}
 */
proto.cln.ListconfigsConfigs.prototype.getLogLevel = function() {
  return /** @type{?proto.cln.ListconfigsConfigsLoglevel} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsLoglevel, 58));
};


/**
 * @param {?proto.cln.ListconfigsConfigsLoglevel|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setLogLevel = function(value) {
  return jspb.Message.setWrapperField(this, 58, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearLogLevel = function() {
  return this.setLogLevel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasLogLevel = function() {
  return jspb.Message.getField(this, 58) != null;
};


/**
 * optional ListconfigsConfigsLogprefix log_prefix = 59;
 * @return {?proto.cln.ListconfigsConfigsLogprefix}
 */
proto.cln.ListconfigsConfigs.prototype.getLogPrefix = function() {
  return /** @type{?proto.cln.ListconfigsConfigsLogprefix} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsLogprefix, 59));
};


/**
 * @param {?proto.cln.ListconfigsConfigsLogprefix|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setLogPrefix = function(value) {
  return jspb.Message.setWrapperField(this, 59, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearLogPrefix = function() {
  return this.setLogPrefix(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasLogPrefix = function() {
  return jspb.Message.getField(this, 59) != null;
};


/**
 * optional ListconfigsConfigsLogfile log_file = 60;
 * @return {?proto.cln.ListconfigsConfigsLogfile}
 */
proto.cln.ListconfigsConfigs.prototype.getLogFile = function() {
  return /** @type{?proto.cln.ListconfigsConfigsLogfile} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsLogfile, 60));
};


/**
 * @param {?proto.cln.ListconfigsConfigsLogfile|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setLogFile = function(value) {
  return jspb.Message.setWrapperField(this, 60, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearLogFile = function() {
  return this.setLogFile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasLogFile = function() {
  return jspb.Message.getField(this, 60) != null;
};


/**
 * optional ListconfigsConfigsLogtimestamps log_timestamps = 61;
 * @return {?proto.cln.ListconfigsConfigsLogtimestamps}
 */
proto.cln.ListconfigsConfigs.prototype.getLogTimestamps = function() {
  return /** @type{?proto.cln.ListconfigsConfigsLogtimestamps} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsLogtimestamps, 61));
};


/**
 * @param {?proto.cln.ListconfigsConfigsLogtimestamps|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setLogTimestamps = function(value) {
  return jspb.Message.setWrapperField(this, 61, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearLogTimestamps = function() {
  return this.setLogTimestamps(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasLogTimestamps = function() {
  return jspb.Message.getField(this, 61) != null;
};


/**
 * optional ListconfigsConfigsForcefeerates force_feerates = 62;
 * @return {?proto.cln.ListconfigsConfigsForcefeerates}
 */
proto.cln.ListconfigsConfigs.prototype.getForceFeerates = function() {
  return /** @type{?proto.cln.ListconfigsConfigsForcefeerates} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsForcefeerates, 62));
};


/**
 * @param {?proto.cln.ListconfigsConfigsForcefeerates|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setForceFeerates = function(value) {
  return jspb.Message.setWrapperField(this, 62, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearForceFeerates = function() {
  return this.setForceFeerates(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasForceFeerates = function() {
  return jspb.Message.getField(this, 62) != null;
};


/**
 * optional ListconfigsConfigsSubdaemon subdaemon = 63;
 * @return {?proto.cln.ListconfigsConfigsSubdaemon}
 */
proto.cln.ListconfigsConfigs.prototype.getSubdaemon = function() {
  return /** @type{?proto.cln.ListconfigsConfigsSubdaemon} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsSubdaemon, 63));
};


/**
 * @param {?proto.cln.ListconfigsConfigsSubdaemon|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setSubdaemon = function(value) {
  return jspb.Message.setWrapperField(this, 63, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearSubdaemon = function() {
  return this.setSubdaemon(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasSubdaemon = function() {
  return jspb.Message.getField(this, 63) != null;
};


/**
 * optional ListconfigsConfigsFetchinvoicenoconnect fetchinvoice_noconnect = 64;
 * @return {?proto.cln.ListconfigsConfigsFetchinvoicenoconnect}
 */
proto.cln.ListconfigsConfigs.prototype.getFetchinvoiceNoconnect = function() {
  return /** @type{?proto.cln.ListconfigsConfigsFetchinvoicenoconnect} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsFetchinvoicenoconnect, 64));
};


/**
 * @param {?proto.cln.ListconfigsConfigsFetchinvoicenoconnect|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setFetchinvoiceNoconnect = function(value) {
  return jspb.Message.setWrapperField(this, 64, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearFetchinvoiceNoconnect = function() {
  return this.setFetchinvoiceNoconnect(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasFetchinvoiceNoconnect = function() {
  return jspb.Message.getField(this, 64) != null;
};


/**
 * optional ListconfigsConfigsAccepthtlctlvtypes accept_htlc_tlv_types = 65;
 * @return {?proto.cln.ListconfigsConfigsAccepthtlctlvtypes}
 */
proto.cln.ListconfigsConfigs.prototype.getAcceptHtlcTlvTypes = function() {
  return /** @type{?proto.cln.ListconfigsConfigsAccepthtlctlvtypes} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsAccepthtlctlvtypes, 65));
};


/**
 * @param {?proto.cln.ListconfigsConfigsAccepthtlctlvtypes|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setAcceptHtlcTlvTypes = function(value) {
  return jspb.Message.setWrapperField(this, 65, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearAcceptHtlcTlvTypes = function() {
  return this.setAcceptHtlcTlvTypes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasAcceptHtlcTlvTypes = function() {
  return jspb.Message.getField(this, 65) != null;
};


/**
 * optional ListconfigsConfigsTorservicepassword tor_service_password = 66;
 * @return {?proto.cln.ListconfigsConfigsTorservicepassword}
 */
proto.cln.ListconfigsConfigs.prototype.getTorServicePassword = function() {
  return /** @type{?proto.cln.ListconfigsConfigsTorservicepassword} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsTorservicepassword, 66));
};


/**
 * @param {?proto.cln.ListconfigsConfigsTorservicepassword|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setTorServicePassword = function(value) {
  return jspb.Message.setWrapperField(this, 66, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearTorServicePassword = function() {
  return this.setTorServicePassword(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasTorServicePassword = function() {
  return jspb.Message.getField(this, 66) != null;
};


/**
 * optional ListconfigsConfigsAnnounceaddrdns announce_addr_dns = 67;
 * @return {?proto.cln.ListconfigsConfigsAnnounceaddrdns}
 */
proto.cln.ListconfigsConfigs.prototype.getAnnounceAddrDns = function() {
  return /** @type{?proto.cln.ListconfigsConfigsAnnounceaddrdns} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsAnnounceaddrdns, 67));
};


/**
 * @param {?proto.cln.ListconfigsConfigsAnnounceaddrdns|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setAnnounceAddrDns = function(value) {
  return jspb.Message.setWrapperField(this, 67, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearAnnounceAddrDns = function() {
  return this.setAnnounceAddrDns(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasAnnounceAddrDns = function() {
  return jspb.Message.getField(this, 67) != null;
};


/**
 * optional ListconfigsConfigsRequireconfirmedinputs require_confirmed_inputs = 68;
 * @return {?proto.cln.ListconfigsConfigsRequireconfirmedinputs}
 */
proto.cln.ListconfigsConfigs.prototype.getRequireConfirmedInputs = function() {
  return /** @type{?proto.cln.ListconfigsConfigsRequireconfirmedinputs} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsRequireconfirmedinputs, 68));
};


/**
 * @param {?proto.cln.ListconfigsConfigsRequireconfirmedinputs|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setRequireConfirmedInputs = function(value) {
  return jspb.Message.setWrapperField(this, 68, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearRequireConfirmedInputs = function() {
  return this.setRequireConfirmedInputs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasRequireConfirmedInputs = function() {
  return jspb.Message.getField(this, 68) != null;
};


/**
 * optional ListconfigsConfigsCommitfee commit_fee = 69;
 * @return {?proto.cln.ListconfigsConfigsCommitfee}
 */
proto.cln.ListconfigsConfigs.prototype.getCommitFee = function() {
  return /** @type{?proto.cln.ListconfigsConfigsCommitfee} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsCommitfee, 69));
};


/**
 * @param {?proto.cln.ListconfigsConfigsCommitfee|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setCommitFee = function(value) {
  return jspb.Message.setWrapperField(this, 69, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearCommitFee = function() {
  return this.setCommitFee(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasCommitFee = function() {
  return jspb.Message.getField(this, 69) != null;
};


/**
 * optional ListconfigsConfigsCommitfeerateoffset commit_feerate_offset = 70;
 * @return {?proto.cln.ListconfigsConfigsCommitfeerateoffset}
 */
proto.cln.ListconfigsConfigs.prototype.getCommitFeerateOffset = function() {
  return /** @type{?proto.cln.ListconfigsConfigsCommitfeerateoffset} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsConfigsCommitfeerateoffset, 70));
};


/**
 * @param {?proto.cln.ListconfigsConfigsCommitfeerateoffset|undefined} value
 * @return {!proto.cln.ListconfigsConfigs} returns this
*/
proto.cln.ListconfigsConfigs.prototype.setCommitFeerateOffset = function(value) {
  return jspb.Message.setWrapperField(this, 70, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigs} returns this
 */
proto.cln.ListconfigsConfigs.prototype.clearCommitFeerateOffset = function() {
  return this.setCommitFeerateOffset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigs.prototype.hasCommitFeerateOffset = function() {
  return jspb.Message.getField(this, 70) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsConf.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsConf.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsConf} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsConf.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueStr: jspb.Message.getFieldWithDefault(msg, 1, ""),
    source: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsConf}
 */
proto.cln.ListconfigsConfigsConf.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsConf;
  return proto.cln.ListconfigsConfigsConf.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsConf} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsConf}
 */
proto.cln.ListconfigsConfigsConf.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValueStr(value);
      break;
    case 2:
      var value = /** @type {!proto.cln.ListconfigsConfigsConf.ListconfigsConfigsConfSource} */ (reader.readEnum());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsConf.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsConf.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsConf} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsConf.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueStr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSource();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ListconfigsConfigsConf.ListconfigsConfigsConfSource = {
  CMDLINE: 0
};

/**
 * optional string value_str = 1;
 * @return {string}
 */
proto.cln.ListconfigsConfigsConf.prototype.getValueStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsConf} returns this
 */
proto.cln.ListconfigsConfigsConf.prototype.setValueStr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ListconfigsConfigsConfSource source = 2;
 * @return {!proto.cln.ListconfigsConfigsConf.ListconfigsConfigsConfSource}
 */
proto.cln.ListconfigsConfigsConf.prototype.getSource = function() {
  return /** @type {!proto.cln.ListconfigsConfigsConf.ListconfigsConfigsConfSource} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.cln.ListconfigsConfigsConf.ListconfigsConfigsConfSource} value
 * @return {!proto.cln.ListconfigsConfigsConf} returns this
 */
proto.cln.ListconfigsConfigsConf.prototype.setSource = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsDeveloper.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsDeveloper.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsDeveloper} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsDeveloper.toObject = function(includeInstance, msg) {
  var f, obj = {
    set: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsDeveloper}
 */
proto.cln.ListconfigsConfigsDeveloper.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsDeveloper;
  return proto.cln.ListconfigsConfigsDeveloper.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsDeveloper} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsDeveloper}
 */
proto.cln.ListconfigsConfigsDeveloper.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSet(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsDeveloper.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsDeveloper.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsDeveloper} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsDeveloper.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSet();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool set = 1;
 * @return {boolean}
 */
proto.cln.ListconfigsConfigsDeveloper.prototype.getSet = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsConfigsDeveloper} returns this
 */
proto.cln.ListconfigsConfigsDeveloper.prototype.setSet = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsDeveloper.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsDeveloper} returns this
 */
proto.cln.ListconfigsConfigsDeveloper.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsClearplugins.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsClearplugins.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsClearplugins} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsClearplugins.toObject = function(includeInstance, msg) {
  var f, obj = {
    set: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsClearplugins}
 */
proto.cln.ListconfigsConfigsClearplugins.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsClearplugins;
  return proto.cln.ListconfigsConfigsClearplugins.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsClearplugins} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsClearplugins}
 */
proto.cln.ListconfigsConfigsClearplugins.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSet(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsClearplugins.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsClearplugins.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsClearplugins} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsClearplugins.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSet();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool set = 1;
 * @return {boolean}
 */
proto.cln.ListconfigsConfigsClearplugins.prototype.getSet = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsConfigsClearplugins} returns this
 */
proto.cln.ListconfigsConfigsClearplugins.prototype.setSet = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsClearplugins.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsClearplugins} returns this
 */
proto.cln.ListconfigsConfigsClearplugins.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsDisablempp.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsDisablempp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsDisablempp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsDisablempp.toObject = function(includeInstance, msg) {
  var f, obj = {
    set: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    source: jspb.Message.getFieldWithDefault(msg, 2, ""),
    plugin: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsDisablempp}
 */
proto.cln.ListconfigsConfigsDisablempp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsDisablempp;
  return proto.cln.ListconfigsConfigsDisablempp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsDisablempp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsDisablempp}
 */
proto.cln.ListconfigsConfigsDisablempp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSet(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlugin(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsDisablempp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsDisablempp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsDisablempp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsDisablempp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSet();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional bool set = 1;
 * @return {boolean}
 */
proto.cln.ListconfigsConfigsDisablempp.prototype.getSet = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsConfigsDisablempp} returns this
 */
proto.cln.ListconfigsConfigsDisablempp.prototype.setSet = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsDisablempp.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsDisablempp} returns this
 */
proto.cln.ListconfigsConfigsDisablempp.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string plugin = 3;
 * @return {string}
 */
proto.cln.ListconfigsConfigsDisablempp.prototype.getPlugin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsDisablempp} returns this
 */
proto.cln.ListconfigsConfigsDisablempp.prototype.setPlugin = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsConfigsDisablempp} returns this
 */
proto.cln.ListconfigsConfigsDisablempp.prototype.clearPlugin = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigsDisablempp.prototype.hasPlugin = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsMainnet.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsMainnet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsMainnet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsMainnet.toObject = function(includeInstance, msg) {
  var f, obj = {
    set: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsMainnet}
 */
proto.cln.ListconfigsConfigsMainnet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsMainnet;
  return proto.cln.ListconfigsConfigsMainnet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsMainnet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsMainnet}
 */
proto.cln.ListconfigsConfigsMainnet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSet(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsMainnet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsMainnet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsMainnet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsMainnet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSet();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool set = 1;
 * @return {boolean}
 */
proto.cln.ListconfigsConfigsMainnet.prototype.getSet = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsConfigsMainnet} returns this
 */
proto.cln.ListconfigsConfigsMainnet.prototype.setSet = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsMainnet.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsMainnet} returns this
 */
proto.cln.ListconfigsConfigsMainnet.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsRegtest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsRegtest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsRegtest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsRegtest.toObject = function(includeInstance, msg) {
  var f, obj = {
    set: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsRegtest}
 */
proto.cln.ListconfigsConfigsRegtest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsRegtest;
  return proto.cln.ListconfigsConfigsRegtest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsRegtest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsRegtest}
 */
proto.cln.ListconfigsConfigsRegtest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSet(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsRegtest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsRegtest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsRegtest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsRegtest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSet();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool set = 1;
 * @return {boolean}
 */
proto.cln.ListconfigsConfigsRegtest.prototype.getSet = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsConfigsRegtest} returns this
 */
proto.cln.ListconfigsConfigsRegtest.prototype.setSet = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsRegtest.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsRegtest} returns this
 */
proto.cln.ListconfigsConfigsRegtest.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsSignet.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsSignet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsSignet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsSignet.toObject = function(includeInstance, msg) {
  var f, obj = {
    set: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsSignet}
 */
proto.cln.ListconfigsConfigsSignet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsSignet;
  return proto.cln.ListconfigsConfigsSignet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsSignet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsSignet}
 */
proto.cln.ListconfigsConfigsSignet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSet(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsSignet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsSignet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsSignet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsSignet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSet();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool set = 1;
 * @return {boolean}
 */
proto.cln.ListconfigsConfigsSignet.prototype.getSet = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsConfigsSignet} returns this
 */
proto.cln.ListconfigsConfigsSignet.prototype.setSet = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsSignet.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsSignet} returns this
 */
proto.cln.ListconfigsConfigsSignet.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsTestnet.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsTestnet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsTestnet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsTestnet.toObject = function(includeInstance, msg) {
  var f, obj = {
    set: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsTestnet}
 */
proto.cln.ListconfigsConfigsTestnet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsTestnet;
  return proto.cln.ListconfigsConfigsTestnet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsTestnet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsTestnet}
 */
proto.cln.ListconfigsConfigsTestnet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSet(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsTestnet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsTestnet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsTestnet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsTestnet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSet();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool set = 1;
 * @return {boolean}
 */
proto.cln.ListconfigsConfigsTestnet.prototype.getSet = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsConfigsTestnet} returns this
 */
proto.cln.ListconfigsConfigsTestnet.prototype.setSet = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsTestnet.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsTestnet} returns this
 */
proto.cln.ListconfigsConfigsTestnet.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListconfigsConfigsImportantplugin.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsImportantplugin.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsImportantplugin.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsImportantplugin} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsImportantplugin.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesStrList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    sourcesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsImportantplugin}
 */
proto.cln.ListconfigsConfigsImportantplugin.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsImportantplugin;
  return proto.cln.ListconfigsConfigsImportantplugin.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsImportantplugin} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsImportantplugin}
 */
proto.cln.ListconfigsConfigsImportantplugin.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addValuesStr(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addSources(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsImportantplugin.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsImportantplugin.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsImportantplugin} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsImportantplugin.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesStrList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getSourcesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * repeated string values_str = 1;
 * @return {!Array<string>}
 */
proto.cln.ListconfigsConfigsImportantplugin.prototype.getValuesStrList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.ListconfigsConfigsImportantplugin} returns this
 */
proto.cln.ListconfigsConfigsImportantplugin.prototype.setValuesStrList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.ListconfigsConfigsImportantplugin} returns this
 */
proto.cln.ListconfigsConfigsImportantplugin.prototype.addValuesStr = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListconfigsConfigsImportantplugin} returns this
 */
proto.cln.ListconfigsConfigsImportantplugin.prototype.clearValuesStrList = function() {
  return this.setValuesStrList([]);
};


/**
 * repeated string sources = 2;
 * @return {!Array<string>}
 */
proto.cln.ListconfigsConfigsImportantplugin.prototype.getSourcesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.ListconfigsConfigsImportantplugin} returns this
 */
proto.cln.ListconfigsConfigsImportantplugin.prototype.setSourcesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.ListconfigsConfigsImportantplugin} returns this
 */
proto.cln.ListconfigsConfigsImportantplugin.prototype.addSources = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListconfigsConfigsImportantplugin} returns this
 */
proto.cln.ListconfigsConfigsImportantplugin.prototype.clearSourcesList = function() {
  return this.setSourcesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListconfigsConfigsPlugin.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsPlugin.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsPlugin.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsPlugin} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsPlugin.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesStrList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    sourcesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsPlugin}
 */
proto.cln.ListconfigsConfigsPlugin.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsPlugin;
  return proto.cln.ListconfigsConfigsPlugin.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsPlugin} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsPlugin}
 */
proto.cln.ListconfigsConfigsPlugin.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addValuesStr(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addSources(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsPlugin.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsPlugin.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsPlugin} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsPlugin.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesStrList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getSourcesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * repeated string values_str = 1;
 * @return {!Array<string>}
 */
proto.cln.ListconfigsConfigsPlugin.prototype.getValuesStrList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.ListconfigsConfigsPlugin} returns this
 */
proto.cln.ListconfigsConfigsPlugin.prototype.setValuesStrList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.ListconfigsConfigsPlugin} returns this
 */
proto.cln.ListconfigsConfigsPlugin.prototype.addValuesStr = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListconfigsConfigsPlugin} returns this
 */
proto.cln.ListconfigsConfigsPlugin.prototype.clearValuesStrList = function() {
  return this.setValuesStrList([]);
};


/**
 * repeated string sources = 2;
 * @return {!Array<string>}
 */
proto.cln.ListconfigsConfigsPlugin.prototype.getSourcesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.ListconfigsConfigsPlugin} returns this
 */
proto.cln.ListconfigsConfigsPlugin.prototype.setSourcesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.ListconfigsConfigsPlugin} returns this
 */
proto.cln.ListconfigsConfigsPlugin.prototype.addSources = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListconfigsConfigsPlugin} returns this
 */
proto.cln.ListconfigsConfigsPlugin.prototype.clearSourcesList = function() {
  return this.setSourcesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListconfigsConfigsPlugindir.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsPlugindir.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsPlugindir.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsPlugindir} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsPlugindir.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesStrList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    sourcesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsPlugindir}
 */
proto.cln.ListconfigsConfigsPlugindir.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsPlugindir;
  return proto.cln.ListconfigsConfigsPlugindir.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsPlugindir} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsPlugindir}
 */
proto.cln.ListconfigsConfigsPlugindir.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addValuesStr(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addSources(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsPlugindir.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsPlugindir.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsPlugindir} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsPlugindir.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesStrList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getSourcesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * repeated string values_str = 1;
 * @return {!Array<string>}
 */
proto.cln.ListconfigsConfigsPlugindir.prototype.getValuesStrList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.ListconfigsConfigsPlugindir} returns this
 */
proto.cln.ListconfigsConfigsPlugindir.prototype.setValuesStrList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.ListconfigsConfigsPlugindir} returns this
 */
proto.cln.ListconfigsConfigsPlugindir.prototype.addValuesStr = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListconfigsConfigsPlugindir} returns this
 */
proto.cln.ListconfigsConfigsPlugindir.prototype.clearValuesStrList = function() {
  return this.setValuesStrList([]);
};


/**
 * repeated string sources = 2;
 * @return {!Array<string>}
 */
proto.cln.ListconfigsConfigsPlugindir.prototype.getSourcesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.ListconfigsConfigsPlugindir} returns this
 */
proto.cln.ListconfigsConfigsPlugindir.prototype.setSourcesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.ListconfigsConfigsPlugindir} returns this
 */
proto.cln.ListconfigsConfigsPlugindir.prototype.addSources = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListconfigsConfigsPlugindir} returns this
 */
proto.cln.ListconfigsConfigsPlugindir.prototype.clearSourcesList = function() {
  return this.setSourcesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsLightningdir.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsLightningdir.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsLightningdir} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsLightningdir.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueStr: jspb.Message.getFieldWithDefault(msg, 1, ""),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsLightningdir}
 */
proto.cln.ListconfigsConfigsLightningdir.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsLightningdir;
  return proto.cln.ListconfigsConfigsLightningdir.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsLightningdir} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsLightningdir}
 */
proto.cln.ListconfigsConfigsLightningdir.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValueStr(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsLightningdir.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsLightningdir.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsLightningdir} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsLightningdir.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueStr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string value_str = 1;
 * @return {string}
 */
proto.cln.ListconfigsConfigsLightningdir.prototype.getValueStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsLightningdir} returns this
 */
proto.cln.ListconfigsConfigsLightningdir.prototype.setValueStr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsLightningdir.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsLightningdir} returns this
 */
proto.cln.ListconfigsConfigsLightningdir.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsNetwork.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsNetwork.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsNetwork} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsNetwork.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueStr: jspb.Message.getFieldWithDefault(msg, 1, ""),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsNetwork}
 */
proto.cln.ListconfigsConfigsNetwork.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsNetwork;
  return proto.cln.ListconfigsConfigsNetwork.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsNetwork} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsNetwork}
 */
proto.cln.ListconfigsConfigsNetwork.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValueStr(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsNetwork.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsNetwork.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsNetwork} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsNetwork.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueStr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string value_str = 1;
 * @return {string}
 */
proto.cln.ListconfigsConfigsNetwork.prototype.getValueStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsNetwork} returns this
 */
proto.cln.ListconfigsConfigsNetwork.prototype.setValueStr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsNetwork.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsNetwork} returns this
 */
proto.cln.ListconfigsConfigsNetwork.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsAllowdeprecatedapis.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsAllowdeprecatedapis.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsAllowdeprecatedapis} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsAllowdeprecatedapis.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueBool: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsAllowdeprecatedapis}
 */
proto.cln.ListconfigsConfigsAllowdeprecatedapis.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsAllowdeprecatedapis;
  return proto.cln.ListconfigsConfigsAllowdeprecatedapis.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsAllowdeprecatedapis} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsAllowdeprecatedapis}
 */
proto.cln.ListconfigsConfigsAllowdeprecatedapis.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setValueBool(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsAllowdeprecatedapis.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsAllowdeprecatedapis.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsAllowdeprecatedapis} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsAllowdeprecatedapis.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueBool();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool value_bool = 1;
 * @return {boolean}
 */
proto.cln.ListconfigsConfigsAllowdeprecatedapis.prototype.getValueBool = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsConfigsAllowdeprecatedapis} returns this
 */
proto.cln.ListconfigsConfigsAllowdeprecatedapis.prototype.setValueBool = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsAllowdeprecatedapis.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsAllowdeprecatedapis} returns this
 */
proto.cln.ListconfigsConfigsAllowdeprecatedapis.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsRpcfile.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsRpcfile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsRpcfile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsRpcfile.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueStr: jspb.Message.getFieldWithDefault(msg, 1, ""),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsRpcfile}
 */
proto.cln.ListconfigsConfigsRpcfile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsRpcfile;
  return proto.cln.ListconfigsConfigsRpcfile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsRpcfile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsRpcfile}
 */
proto.cln.ListconfigsConfigsRpcfile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValueStr(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsRpcfile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsRpcfile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsRpcfile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsRpcfile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueStr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string value_str = 1;
 * @return {string}
 */
proto.cln.ListconfigsConfigsRpcfile.prototype.getValueStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsRpcfile} returns this
 */
proto.cln.ListconfigsConfigsRpcfile.prototype.setValueStr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsRpcfile.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsRpcfile} returns this
 */
proto.cln.ListconfigsConfigsRpcfile.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListconfigsConfigsDisableplugin.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsDisableplugin.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsDisableplugin.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsDisableplugin} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsDisableplugin.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesStrList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    sourcesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsDisableplugin}
 */
proto.cln.ListconfigsConfigsDisableplugin.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsDisableplugin;
  return proto.cln.ListconfigsConfigsDisableplugin.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsDisableplugin} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsDisableplugin}
 */
proto.cln.ListconfigsConfigsDisableplugin.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addValuesStr(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addSources(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsDisableplugin.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsDisableplugin.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsDisableplugin} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsDisableplugin.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesStrList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getSourcesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * repeated string values_str = 1;
 * @return {!Array<string>}
 */
proto.cln.ListconfigsConfigsDisableplugin.prototype.getValuesStrList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.ListconfigsConfigsDisableplugin} returns this
 */
proto.cln.ListconfigsConfigsDisableplugin.prototype.setValuesStrList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.ListconfigsConfigsDisableplugin} returns this
 */
proto.cln.ListconfigsConfigsDisableplugin.prototype.addValuesStr = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListconfigsConfigsDisableplugin} returns this
 */
proto.cln.ListconfigsConfigsDisableplugin.prototype.clearValuesStrList = function() {
  return this.setValuesStrList([]);
};


/**
 * repeated string sources = 2;
 * @return {!Array<string>}
 */
proto.cln.ListconfigsConfigsDisableplugin.prototype.getSourcesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.ListconfigsConfigsDisableplugin} returns this
 */
proto.cln.ListconfigsConfigsDisableplugin.prototype.setSourcesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.ListconfigsConfigsDisableplugin} returns this
 */
proto.cln.ListconfigsConfigsDisableplugin.prototype.addSources = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListconfigsConfigsDisableplugin} returns this
 */
proto.cln.ListconfigsConfigsDisableplugin.prototype.clearSourcesList = function() {
  return this.setSourcesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsAlwaysuseproxy.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsAlwaysuseproxy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsAlwaysuseproxy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsAlwaysuseproxy.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueBool: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsAlwaysuseproxy}
 */
proto.cln.ListconfigsConfigsAlwaysuseproxy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsAlwaysuseproxy;
  return proto.cln.ListconfigsConfigsAlwaysuseproxy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsAlwaysuseproxy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsAlwaysuseproxy}
 */
proto.cln.ListconfigsConfigsAlwaysuseproxy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setValueBool(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsAlwaysuseproxy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsAlwaysuseproxy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsAlwaysuseproxy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsAlwaysuseproxy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueBool();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool value_bool = 1;
 * @return {boolean}
 */
proto.cln.ListconfigsConfigsAlwaysuseproxy.prototype.getValueBool = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsConfigsAlwaysuseproxy} returns this
 */
proto.cln.ListconfigsConfigsAlwaysuseproxy.prototype.setValueBool = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsAlwaysuseproxy.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsAlwaysuseproxy} returns this
 */
proto.cln.ListconfigsConfigsAlwaysuseproxy.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsDaemon.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsDaemon.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsDaemon} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsDaemon.toObject = function(includeInstance, msg) {
  var f, obj = {
    set: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsDaemon}
 */
proto.cln.ListconfigsConfigsDaemon.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsDaemon;
  return proto.cln.ListconfigsConfigsDaemon.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsDaemon} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsDaemon}
 */
proto.cln.ListconfigsConfigsDaemon.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSet(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsDaemon.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsDaemon.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsDaemon} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsDaemon.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSet();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool set = 1;
 * @return {boolean}
 */
proto.cln.ListconfigsConfigsDaemon.prototype.getSet = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsConfigsDaemon} returns this
 */
proto.cln.ListconfigsConfigsDaemon.prototype.setSet = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsDaemon.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsDaemon} returns this
 */
proto.cln.ListconfigsConfigsDaemon.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsWallet.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsWallet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsWallet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsWallet.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueStr: jspb.Message.getFieldWithDefault(msg, 1, ""),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsWallet}
 */
proto.cln.ListconfigsConfigsWallet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsWallet;
  return proto.cln.ListconfigsConfigsWallet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsWallet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsWallet}
 */
proto.cln.ListconfigsConfigsWallet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValueStr(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsWallet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsWallet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsWallet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsWallet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueStr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string value_str = 1;
 * @return {string}
 */
proto.cln.ListconfigsConfigsWallet.prototype.getValueStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsWallet} returns this
 */
proto.cln.ListconfigsConfigsWallet.prototype.setValueStr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsWallet.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsWallet} returns this
 */
proto.cln.ListconfigsConfigsWallet.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsLargechannels.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsLargechannels.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsLargechannels} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsLargechannels.toObject = function(includeInstance, msg) {
  var f, obj = {
    set: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsLargechannels}
 */
proto.cln.ListconfigsConfigsLargechannels.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsLargechannels;
  return proto.cln.ListconfigsConfigsLargechannels.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsLargechannels} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsLargechannels}
 */
proto.cln.ListconfigsConfigsLargechannels.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSet(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsLargechannels.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsLargechannels.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsLargechannels} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsLargechannels.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSet();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool set = 1;
 * @return {boolean}
 */
proto.cln.ListconfigsConfigsLargechannels.prototype.getSet = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsConfigsLargechannels} returns this
 */
proto.cln.ListconfigsConfigsLargechannels.prototype.setSet = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsLargechannels.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsLargechannels} returns this
 */
proto.cln.ListconfigsConfigsLargechannels.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsExperimentaldualfund.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsExperimentaldualfund.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsExperimentaldualfund} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsExperimentaldualfund.toObject = function(includeInstance, msg) {
  var f, obj = {
    set: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsExperimentaldualfund}
 */
proto.cln.ListconfigsConfigsExperimentaldualfund.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsExperimentaldualfund;
  return proto.cln.ListconfigsConfigsExperimentaldualfund.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsExperimentaldualfund} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsExperimentaldualfund}
 */
proto.cln.ListconfigsConfigsExperimentaldualfund.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSet(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsExperimentaldualfund.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsExperimentaldualfund.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsExperimentaldualfund} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsExperimentaldualfund.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSet();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool set = 1;
 * @return {boolean}
 */
proto.cln.ListconfigsConfigsExperimentaldualfund.prototype.getSet = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsConfigsExperimentaldualfund} returns this
 */
proto.cln.ListconfigsConfigsExperimentaldualfund.prototype.setSet = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsExperimentaldualfund.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsExperimentaldualfund} returns this
 */
proto.cln.ListconfigsConfigsExperimentaldualfund.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsExperimentalsplicing.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsExperimentalsplicing.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsExperimentalsplicing} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsExperimentalsplicing.toObject = function(includeInstance, msg) {
  var f, obj = {
    set: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsExperimentalsplicing}
 */
proto.cln.ListconfigsConfigsExperimentalsplicing.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsExperimentalsplicing;
  return proto.cln.ListconfigsConfigsExperimentalsplicing.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsExperimentalsplicing} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsExperimentalsplicing}
 */
proto.cln.ListconfigsConfigsExperimentalsplicing.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSet(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsExperimentalsplicing.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsExperimentalsplicing.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsExperimentalsplicing} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsExperimentalsplicing.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSet();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool set = 1;
 * @return {boolean}
 */
proto.cln.ListconfigsConfigsExperimentalsplicing.prototype.getSet = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsConfigsExperimentalsplicing} returns this
 */
proto.cln.ListconfigsConfigsExperimentalsplicing.prototype.setSet = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsExperimentalsplicing.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsExperimentalsplicing} returns this
 */
proto.cln.ListconfigsConfigsExperimentalsplicing.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsExperimentalonionmessages.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsExperimentalonionmessages.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsExperimentalonionmessages} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsExperimentalonionmessages.toObject = function(includeInstance, msg) {
  var f, obj = {
    set: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsExperimentalonionmessages}
 */
proto.cln.ListconfigsConfigsExperimentalonionmessages.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsExperimentalonionmessages;
  return proto.cln.ListconfigsConfigsExperimentalonionmessages.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsExperimentalonionmessages} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsExperimentalonionmessages}
 */
proto.cln.ListconfigsConfigsExperimentalonionmessages.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSet(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsExperimentalonionmessages.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsExperimentalonionmessages.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsExperimentalonionmessages} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsExperimentalonionmessages.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSet();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool set = 1;
 * @return {boolean}
 */
proto.cln.ListconfigsConfigsExperimentalonionmessages.prototype.getSet = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsConfigsExperimentalonionmessages} returns this
 */
proto.cln.ListconfigsConfigsExperimentalonionmessages.prototype.setSet = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsExperimentalonionmessages.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsExperimentalonionmessages} returns this
 */
proto.cln.ListconfigsConfigsExperimentalonionmessages.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsExperimentaloffers.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsExperimentaloffers.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsExperimentaloffers} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsExperimentaloffers.toObject = function(includeInstance, msg) {
  var f, obj = {
    set: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsExperimentaloffers}
 */
proto.cln.ListconfigsConfigsExperimentaloffers.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsExperimentaloffers;
  return proto.cln.ListconfigsConfigsExperimentaloffers.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsExperimentaloffers} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsExperimentaloffers}
 */
proto.cln.ListconfigsConfigsExperimentaloffers.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSet(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsExperimentaloffers.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsExperimentaloffers.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsExperimentaloffers} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsExperimentaloffers.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSet();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool set = 1;
 * @return {boolean}
 */
proto.cln.ListconfigsConfigsExperimentaloffers.prototype.getSet = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsConfigsExperimentaloffers} returns this
 */
proto.cln.ListconfigsConfigsExperimentaloffers.prototype.setSet = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsExperimentaloffers.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsExperimentaloffers} returns this
 */
proto.cln.ListconfigsConfigsExperimentaloffers.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsExperimentalshutdownwrongfunding.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsExperimentalshutdownwrongfunding.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsExperimentalshutdownwrongfunding} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsExperimentalshutdownwrongfunding.toObject = function(includeInstance, msg) {
  var f, obj = {
    set: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsExperimentalshutdownwrongfunding}
 */
proto.cln.ListconfigsConfigsExperimentalshutdownwrongfunding.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsExperimentalshutdownwrongfunding;
  return proto.cln.ListconfigsConfigsExperimentalshutdownwrongfunding.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsExperimentalshutdownwrongfunding} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsExperimentalshutdownwrongfunding}
 */
proto.cln.ListconfigsConfigsExperimentalshutdownwrongfunding.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSet(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsExperimentalshutdownwrongfunding.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsExperimentalshutdownwrongfunding.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsExperimentalshutdownwrongfunding} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsExperimentalshutdownwrongfunding.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSet();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool set = 1;
 * @return {boolean}
 */
proto.cln.ListconfigsConfigsExperimentalshutdownwrongfunding.prototype.getSet = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsConfigsExperimentalshutdownwrongfunding} returns this
 */
proto.cln.ListconfigsConfigsExperimentalshutdownwrongfunding.prototype.setSet = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsExperimentalshutdownwrongfunding.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsExperimentalshutdownwrongfunding} returns this
 */
proto.cln.ListconfigsConfigsExperimentalshutdownwrongfunding.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsExperimentalpeerstorage.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsExperimentalpeerstorage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsExperimentalpeerstorage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsExperimentalpeerstorage.toObject = function(includeInstance, msg) {
  var f, obj = {
    set: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsExperimentalpeerstorage}
 */
proto.cln.ListconfigsConfigsExperimentalpeerstorage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsExperimentalpeerstorage;
  return proto.cln.ListconfigsConfigsExperimentalpeerstorage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsExperimentalpeerstorage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsExperimentalpeerstorage}
 */
proto.cln.ListconfigsConfigsExperimentalpeerstorage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSet(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsExperimentalpeerstorage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsExperimentalpeerstorage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsExperimentalpeerstorage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsExperimentalpeerstorage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSet();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool set = 1;
 * @return {boolean}
 */
proto.cln.ListconfigsConfigsExperimentalpeerstorage.prototype.getSet = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsConfigsExperimentalpeerstorage} returns this
 */
proto.cln.ListconfigsConfigsExperimentalpeerstorage.prototype.setSet = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsExperimentalpeerstorage.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsExperimentalpeerstorage} returns this
 */
proto.cln.ListconfigsConfigsExperimentalpeerstorage.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsExperimentalanchors.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsExperimentalanchors.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsExperimentalanchors} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsExperimentalanchors.toObject = function(includeInstance, msg) {
  var f, obj = {
    set: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsExperimentalanchors}
 */
proto.cln.ListconfigsConfigsExperimentalanchors.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsExperimentalanchors;
  return proto.cln.ListconfigsConfigsExperimentalanchors.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsExperimentalanchors} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsExperimentalanchors}
 */
proto.cln.ListconfigsConfigsExperimentalanchors.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSet(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsExperimentalanchors.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsExperimentalanchors.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsExperimentalanchors} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsExperimentalanchors.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSet();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool set = 1;
 * @return {boolean}
 */
proto.cln.ListconfigsConfigsExperimentalanchors.prototype.getSet = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsConfigsExperimentalanchors} returns this
 */
proto.cln.ListconfigsConfigsExperimentalanchors.prototype.setSet = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsExperimentalanchors.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsExperimentalanchors} returns this
 */
proto.cln.ListconfigsConfigsExperimentalanchors.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsDatabaseupgrade.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsDatabaseupgrade.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsDatabaseupgrade} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsDatabaseupgrade.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueBool: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsDatabaseupgrade}
 */
proto.cln.ListconfigsConfigsDatabaseupgrade.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsDatabaseupgrade;
  return proto.cln.ListconfigsConfigsDatabaseupgrade.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsDatabaseupgrade} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsDatabaseupgrade}
 */
proto.cln.ListconfigsConfigsDatabaseupgrade.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setValueBool(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsDatabaseupgrade.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsDatabaseupgrade.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsDatabaseupgrade} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsDatabaseupgrade.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueBool();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool value_bool = 1;
 * @return {boolean}
 */
proto.cln.ListconfigsConfigsDatabaseupgrade.prototype.getValueBool = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsConfigsDatabaseupgrade} returns this
 */
proto.cln.ListconfigsConfigsDatabaseupgrade.prototype.setValueBool = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsDatabaseupgrade.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsDatabaseupgrade} returns this
 */
proto.cln.ListconfigsConfigsDatabaseupgrade.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsRgb.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsRgb.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsRgb} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsRgb.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueStr: msg.getValueStr_asB64(),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsRgb}
 */
proto.cln.ListconfigsConfigsRgb.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsRgb;
  return proto.cln.ListconfigsConfigsRgb.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsRgb} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsRgb}
 */
proto.cln.ListconfigsConfigsRgb.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setValueStr(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsRgb.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsRgb.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsRgb} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsRgb.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueStr_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bytes value_str = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListconfigsConfigsRgb.prototype.getValueStr = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes value_str = 1;
 * This is a type-conversion wrapper around `getValueStr()`
 * @return {string}
 */
proto.cln.ListconfigsConfigsRgb.prototype.getValueStr_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getValueStr()));
};


/**
 * optional bytes value_str = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getValueStr()`
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsRgb.prototype.getValueStr_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getValueStr()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListconfigsConfigsRgb} returns this
 */
proto.cln.ListconfigsConfigsRgb.prototype.setValueStr = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsRgb.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsRgb} returns this
 */
proto.cln.ListconfigsConfigsRgb.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsAlias.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsAlias.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsAlias} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsAlias.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueStr: jspb.Message.getFieldWithDefault(msg, 1, ""),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsAlias}
 */
proto.cln.ListconfigsConfigsAlias.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsAlias;
  return proto.cln.ListconfigsConfigsAlias.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsAlias} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsAlias}
 */
proto.cln.ListconfigsConfigsAlias.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValueStr(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsAlias.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsAlias.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsAlias} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsAlias.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueStr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string value_str = 1;
 * @return {string}
 */
proto.cln.ListconfigsConfigsAlias.prototype.getValueStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsAlias} returns this
 */
proto.cln.ListconfigsConfigsAlias.prototype.setValueStr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsAlias.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsAlias} returns this
 */
proto.cln.ListconfigsConfigsAlias.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsPidfile.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsPidfile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsPidfile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsPidfile.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueStr: jspb.Message.getFieldWithDefault(msg, 1, ""),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsPidfile}
 */
proto.cln.ListconfigsConfigsPidfile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsPidfile;
  return proto.cln.ListconfigsConfigsPidfile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsPidfile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsPidfile}
 */
proto.cln.ListconfigsConfigsPidfile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValueStr(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsPidfile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsPidfile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsPidfile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsPidfile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueStr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string value_str = 1;
 * @return {string}
 */
proto.cln.ListconfigsConfigsPidfile.prototype.getValueStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsPidfile} returns this
 */
proto.cln.ListconfigsConfigsPidfile.prototype.setValueStr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsPidfile.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsPidfile} returns this
 */
proto.cln.ListconfigsConfigsPidfile.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsIgnorefeelimits.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsIgnorefeelimits.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsIgnorefeelimits} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsIgnorefeelimits.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueBool: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsIgnorefeelimits}
 */
proto.cln.ListconfigsConfigsIgnorefeelimits.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsIgnorefeelimits;
  return proto.cln.ListconfigsConfigsIgnorefeelimits.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsIgnorefeelimits} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsIgnorefeelimits}
 */
proto.cln.ListconfigsConfigsIgnorefeelimits.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setValueBool(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsIgnorefeelimits.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsIgnorefeelimits.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsIgnorefeelimits} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsIgnorefeelimits.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueBool();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool value_bool = 1;
 * @return {boolean}
 */
proto.cln.ListconfigsConfigsIgnorefeelimits.prototype.getValueBool = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsConfigsIgnorefeelimits} returns this
 */
proto.cln.ListconfigsConfigsIgnorefeelimits.prototype.setValueBool = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsIgnorefeelimits.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsIgnorefeelimits} returns this
 */
proto.cln.ListconfigsConfigsIgnorefeelimits.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsWatchtimeblocks.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsWatchtimeblocks.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsWatchtimeblocks} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsWatchtimeblocks.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueInt: jspb.Message.getFieldWithDefault(msg, 1, 0),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsWatchtimeblocks}
 */
proto.cln.ListconfigsConfigsWatchtimeblocks.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsWatchtimeblocks;
  return proto.cln.ListconfigsConfigsWatchtimeblocks.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsWatchtimeblocks} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsWatchtimeblocks}
 */
proto.cln.ListconfigsConfigsWatchtimeblocks.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setValueInt(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsWatchtimeblocks.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsWatchtimeblocks.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsWatchtimeblocks} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsWatchtimeblocks.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueInt();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint32 value_int = 1;
 * @return {number}
 */
proto.cln.ListconfigsConfigsWatchtimeblocks.prototype.getValueInt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListconfigsConfigsWatchtimeblocks} returns this
 */
proto.cln.ListconfigsConfigsWatchtimeblocks.prototype.setValueInt = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsWatchtimeblocks.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsWatchtimeblocks} returns this
 */
proto.cln.ListconfigsConfigsWatchtimeblocks.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsMaxlocktimeblocks.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsMaxlocktimeblocks.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsMaxlocktimeblocks} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsMaxlocktimeblocks.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueInt: jspb.Message.getFieldWithDefault(msg, 1, 0),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsMaxlocktimeblocks}
 */
proto.cln.ListconfigsConfigsMaxlocktimeblocks.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsMaxlocktimeblocks;
  return proto.cln.ListconfigsConfigsMaxlocktimeblocks.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsMaxlocktimeblocks} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsMaxlocktimeblocks}
 */
proto.cln.ListconfigsConfigsMaxlocktimeblocks.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setValueInt(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsMaxlocktimeblocks.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsMaxlocktimeblocks.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsMaxlocktimeblocks} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsMaxlocktimeblocks.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueInt();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint32 value_int = 1;
 * @return {number}
 */
proto.cln.ListconfigsConfigsMaxlocktimeblocks.prototype.getValueInt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListconfigsConfigsMaxlocktimeblocks} returns this
 */
proto.cln.ListconfigsConfigsMaxlocktimeblocks.prototype.setValueInt = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsMaxlocktimeblocks.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsMaxlocktimeblocks} returns this
 */
proto.cln.ListconfigsConfigsMaxlocktimeblocks.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsFundingconfirms.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsFundingconfirms.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsFundingconfirms} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsFundingconfirms.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueInt: jspb.Message.getFieldWithDefault(msg, 1, 0),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsFundingconfirms}
 */
proto.cln.ListconfigsConfigsFundingconfirms.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsFundingconfirms;
  return proto.cln.ListconfigsConfigsFundingconfirms.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsFundingconfirms} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsFundingconfirms}
 */
proto.cln.ListconfigsConfigsFundingconfirms.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setValueInt(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsFundingconfirms.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsFundingconfirms.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsFundingconfirms} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsFundingconfirms.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueInt();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint32 value_int = 1;
 * @return {number}
 */
proto.cln.ListconfigsConfigsFundingconfirms.prototype.getValueInt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListconfigsConfigsFundingconfirms} returns this
 */
proto.cln.ListconfigsConfigsFundingconfirms.prototype.setValueInt = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsFundingconfirms.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsFundingconfirms} returns this
 */
proto.cln.ListconfigsConfigsFundingconfirms.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsCltvdelta.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsCltvdelta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsCltvdelta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsCltvdelta.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueInt: jspb.Message.getFieldWithDefault(msg, 1, 0),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsCltvdelta}
 */
proto.cln.ListconfigsConfigsCltvdelta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsCltvdelta;
  return proto.cln.ListconfigsConfigsCltvdelta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsCltvdelta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsCltvdelta}
 */
proto.cln.ListconfigsConfigsCltvdelta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setValueInt(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsCltvdelta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsCltvdelta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsCltvdelta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsCltvdelta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueInt();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint32 value_int = 1;
 * @return {number}
 */
proto.cln.ListconfigsConfigsCltvdelta.prototype.getValueInt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListconfigsConfigsCltvdelta} returns this
 */
proto.cln.ListconfigsConfigsCltvdelta.prototype.setValueInt = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsCltvdelta.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsCltvdelta} returns this
 */
proto.cln.ListconfigsConfigsCltvdelta.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsCltvfinal.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsCltvfinal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsCltvfinal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsCltvfinal.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueInt: jspb.Message.getFieldWithDefault(msg, 1, 0),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsCltvfinal}
 */
proto.cln.ListconfigsConfigsCltvfinal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsCltvfinal;
  return proto.cln.ListconfigsConfigsCltvfinal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsCltvfinal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsCltvfinal}
 */
proto.cln.ListconfigsConfigsCltvfinal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setValueInt(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsCltvfinal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsCltvfinal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsCltvfinal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsCltvfinal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueInt();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint32 value_int = 1;
 * @return {number}
 */
proto.cln.ListconfigsConfigsCltvfinal.prototype.getValueInt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListconfigsConfigsCltvfinal} returns this
 */
proto.cln.ListconfigsConfigsCltvfinal.prototype.setValueInt = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsCltvfinal.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsCltvfinal} returns this
 */
proto.cln.ListconfigsConfigsCltvfinal.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsCommittime.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsCommittime.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsCommittime} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsCommittime.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueInt: jspb.Message.getFieldWithDefault(msg, 1, 0),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsCommittime}
 */
proto.cln.ListconfigsConfigsCommittime.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsCommittime;
  return proto.cln.ListconfigsConfigsCommittime.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsCommittime} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsCommittime}
 */
proto.cln.ListconfigsConfigsCommittime.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setValueInt(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsCommittime.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsCommittime.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsCommittime} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsCommittime.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueInt();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint32 value_int = 1;
 * @return {number}
 */
proto.cln.ListconfigsConfigsCommittime.prototype.getValueInt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListconfigsConfigsCommittime} returns this
 */
proto.cln.ListconfigsConfigsCommittime.prototype.setValueInt = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsCommittime.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsCommittime} returns this
 */
proto.cln.ListconfigsConfigsCommittime.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsFeebase.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsFeebase.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsFeebase} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsFeebase.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueInt: jspb.Message.getFieldWithDefault(msg, 1, 0),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsFeebase}
 */
proto.cln.ListconfigsConfigsFeebase.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsFeebase;
  return proto.cln.ListconfigsConfigsFeebase.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsFeebase} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsFeebase}
 */
proto.cln.ListconfigsConfigsFeebase.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setValueInt(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsFeebase.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsFeebase.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsFeebase} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsFeebase.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueInt();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint32 value_int = 1;
 * @return {number}
 */
proto.cln.ListconfigsConfigsFeebase.prototype.getValueInt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListconfigsConfigsFeebase} returns this
 */
proto.cln.ListconfigsConfigsFeebase.prototype.setValueInt = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsFeebase.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsFeebase} returns this
 */
proto.cln.ListconfigsConfigsFeebase.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsRescan.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsRescan.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsRescan} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsRescan.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueInt: jspb.Message.getFieldWithDefault(msg, 1, 0),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsRescan}
 */
proto.cln.ListconfigsConfigsRescan.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsRescan;
  return proto.cln.ListconfigsConfigsRescan.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsRescan} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsRescan}
 */
proto.cln.ListconfigsConfigsRescan.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setValueInt(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsRescan.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsRescan.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsRescan} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsRescan.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueInt();
  if (f !== 0) {
    writer.writeSint64(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional sint64 value_int = 1;
 * @return {number}
 */
proto.cln.ListconfigsConfigsRescan.prototype.getValueInt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListconfigsConfigsRescan} returns this
 */
proto.cln.ListconfigsConfigsRescan.prototype.setValueInt = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsRescan.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsRescan} returns this
 */
proto.cln.ListconfigsConfigsRescan.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsFeepersatoshi.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsFeepersatoshi.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsFeepersatoshi} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsFeepersatoshi.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueInt: jspb.Message.getFieldWithDefault(msg, 1, 0),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsFeepersatoshi}
 */
proto.cln.ListconfigsConfigsFeepersatoshi.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsFeepersatoshi;
  return proto.cln.ListconfigsConfigsFeepersatoshi.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsFeepersatoshi} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsFeepersatoshi}
 */
proto.cln.ListconfigsConfigsFeepersatoshi.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setValueInt(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsFeepersatoshi.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsFeepersatoshi.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsFeepersatoshi} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsFeepersatoshi.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueInt();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint32 value_int = 1;
 * @return {number}
 */
proto.cln.ListconfigsConfigsFeepersatoshi.prototype.getValueInt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListconfigsConfigsFeepersatoshi} returns this
 */
proto.cln.ListconfigsConfigsFeepersatoshi.prototype.setValueInt = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsFeepersatoshi.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsFeepersatoshi} returns this
 */
proto.cln.ListconfigsConfigsFeepersatoshi.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsMaxconcurrenthtlcs.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsMaxconcurrenthtlcs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsMaxconcurrenthtlcs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsMaxconcurrenthtlcs.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueInt: jspb.Message.getFieldWithDefault(msg, 1, 0),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsMaxconcurrenthtlcs}
 */
proto.cln.ListconfigsConfigsMaxconcurrenthtlcs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsMaxconcurrenthtlcs;
  return proto.cln.ListconfigsConfigsMaxconcurrenthtlcs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsMaxconcurrenthtlcs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsMaxconcurrenthtlcs}
 */
proto.cln.ListconfigsConfigsMaxconcurrenthtlcs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setValueInt(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsMaxconcurrenthtlcs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsMaxconcurrenthtlcs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsMaxconcurrenthtlcs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsMaxconcurrenthtlcs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueInt();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint32 value_int = 1;
 * @return {number}
 */
proto.cln.ListconfigsConfigsMaxconcurrenthtlcs.prototype.getValueInt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListconfigsConfigsMaxconcurrenthtlcs} returns this
 */
proto.cln.ListconfigsConfigsMaxconcurrenthtlcs.prototype.setValueInt = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsMaxconcurrenthtlcs.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsMaxconcurrenthtlcs} returns this
 */
proto.cln.ListconfigsConfigsMaxconcurrenthtlcs.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsHtlcminimummsat.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsHtlcminimummsat.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsHtlcminimummsat} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsHtlcminimummsat.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueMsat: (f = msg.getValueMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsHtlcminimummsat}
 */
proto.cln.ListconfigsConfigsHtlcminimummsat.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsHtlcminimummsat;
  return proto.cln.ListconfigsConfigsHtlcminimummsat.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsHtlcminimummsat} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsHtlcminimummsat}
 */
proto.cln.ListconfigsConfigsHtlcminimummsat.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setValueMsat(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsHtlcminimummsat.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsHtlcminimummsat.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsHtlcminimummsat} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsHtlcminimummsat.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueMsat();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Amount value_msat = 1;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListconfigsConfigsHtlcminimummsat.prototype.getValueMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 1));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListconfigsConfigsHtlcminimummsat} returns this
*/
proto.cln.ListconfigsConfigsHtlcminimummsat.prototype.setValueMsat = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigsHtlcminimummsat} returns this
 */
proto.cln.ListconfigsConfigsHtlcminimummsat.prototype.clearValueMsat = function() {
  return this.setValueMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigsHtlcminimummsat.prototype.hasValueMsat = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsHtlcminimummsat.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsHtlcminimummsat} returns this
 */
proto.cln.ListconfigsConfigsHtlcminimummsat.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsHtlcmaximummsat.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsHtlcmaximummsat.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsHtlcmaximummsat} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsHtlcmaximummsat.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueMsat: (f = msg.getValueMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsHtlcmaximummsat}
 */
proto.cln.ListconfigsConfigsHtlcmaximummsat.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsHtlcmaximummsat;
  return proto.cln.ListconfigsConfigsHtlcmaximummsat.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsHtlcmaximummsat} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsHtlcmaximummsat}
 */
proto.cln.ListconfigsConfigsHtlcmaximummsat.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setValueMsat(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsHtlcmaximummsat.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsHtlcmaximummsat.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsHtlcmaximummsat} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsHtlcmaximummsat.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueMsat();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Amount value_msat = 1;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListconfigsConfigsHtlcmaximummsat.prototype.getValueMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 1));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListconfigsConfigsHtlcmaximummsat} returns this
*/
proto.cln.ListconfigsConfigsHtlcmaximummsat.prototype.setValueMsat = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigsHtlcmaximummsat} returns this
 */
proto.cln.ListconfigsConfigsHtlcmaximummsat.prototype.clearValueMsat = function() {
  return this.setValueMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigsHtlcmaximummsat.prototype.hasValueMsat = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsHtlcmaximummsat.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsHtlcmaximummsat} returns this
 */
proto.cln.ListconfigsConfigsHtlcmaximummsat.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsMaxdusthtlcexposuremsat.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsMaxdusthtlcexposuremsat.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsMaxdusthtlcexposuremsat} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsMaxdusthtlcexposuremsat.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueMsat: (f = msg.getValueMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsMaxdusthtlcexposuremsat}
 */
proto.cln.ListconfigsConfigsMaxdusthtlcexposuremsat.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsMaxdusthtlcexposuremsat;
  return proto.cln.ListconfigsConfigsMaxdusthtlcexposuremsat.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsMaxdusthtlcexposuremsat} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsMaxdusthtlcexposuremsat}
 */
proto.cln.ListconfigsConfigsMaxdusthtlcexposuremsat.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setValueMsat(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsMaxdusthtlcexposuremsat.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsMaxdusthtlcexposuremsat.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsMaxdusthtlcexposuremsat} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsMaxdusthtlcexposuremsat.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueMsat();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Amount value_msat = 1;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListconfigsConfigsMaxdusthtlcexposuremsat.prototype.getValueMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 1));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListconfigsConfigsMaxdusthtlcexposuremsat} returns this
*/
proto.cln.ListconfigsConfigsMaxdusthtlcexposuremsat.prototype.setValueMsat = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsConfigsMaxdusthtlcexposuremsat} returns this
 */
proto.cln.ListconfigsConfigsMaxdusthtlcexposuremsat.prototype.clearValueMsat = function() {
  return this.setValueMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigsMaxdusthtlcexposuremsat.prototype.hasValueMsat = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsMaxdusthtlcexposuremsat.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsMaxdusthtlcexposuremsat} returns this
 */
proto.cln.ListconfigsConfigsMaxdusthtlcexposuremsat.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsMincapacitysat.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsMincapacitysat.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsMincapacitysat} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsMincapacitysat.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueInt: jspb.Message.getFieldWithDefault(msg, 1, 0),
    source: jspb.Message.getFieldWithDefault(msg, 2, ""),
    dynamic: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsMincapacitysat}
 */
proto.cln.ListconfigsConfigsMincapacitysat.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsMincapacitysat;
  return proto.cln.ListconfigsConfigsMincapacitysat.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsMincapacitysat} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsMincapacitysat}
 */
proto.cln.ListconfigsConfigsMincapacitysat.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setValueInt(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDynamic(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsMincapacitysat.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsMincapacitysat.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsMincapacitysat} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsMincapacitysat.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueInt();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional uint64 value_int = 1;
 * @return {number}
 */
proto.cln.ListconfigsConfigsMincapacitysat.prototype.getValueInt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListconfigsConfigsMincapacitysat} returns this
 */
proto.cln.ListconfigsConfigsMincapacitysat.prototype.setValueInt = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsMincapacitysat.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsMincapacitysat} returns this
 */
proto.cln.ListconfigsConfigsMincapacitysat.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool dynamic = 3;
 * @return {boolean}
 */
proto.cln.ListconfigsConfigsMincapacitysat.prototype.getDynamic = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsConfigsMincapacitysat} returns this
 */
proto.cln.ListconfigsConfigsMincapacitysat.prototype.setDynamic = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListconfigsConfigsMincapacitysat} returns this
 */
proto.cln.ListconfigsConfigsMincapacitysat.prototype.clearDynamic = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsConfigsMincapacitysat.prototype.hasDynamic = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListconfigsConfigsAddr.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsAddr.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsAddr.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsAddr} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsAddr.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesStrList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    sourcesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsAddr}
 */
proto.cln.ListconfigsConfigsAddr.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsAddr;
  return proto.cln.ListconfigsConfigsAddr.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsAddr} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsAddr}
 */
proto.cln.ListconfigsConfigsAddr.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addValuesStr(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addSources(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsAddr.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsAddr.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsAddr} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsAddr.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesStrList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getSourcesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * repeated string values_str = 1;
 * @return {!Array<string>}
 */
proto.cln.ListconfigsConfigsAddr.prototype.getValuesStrList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.ListconfigsConfigsAddr} returns this
 */
proto.cln.ListconfigsConfigsAddr.prototype.setValuesStrList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.ListconfigsConfigsAddr} returns this
 */
proto.cln.ListconfigsConfigsAddr.prototype.addValuesStr = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListconfigsConfigsAddr} returns this
 */
proto.cln.ListconfigsConfigsAddr.prototype.clearValuesStrList = function() {
  return this.setValuesStrList([]);
};


/**
 * repeated string sources = 2;
 * @return {!Array<string>}
 */
proto.cln.ListconfigsConfigsAddr.prototype.getSourcesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.ListconfigsConfigsAddr} returns this
 */
proto.cln.ListconfigsConfigsAddr.prototype.setSourcesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.ListconfigsConfigsAddr} returns this
 */
proto.cln.ListconfigsConfigsAddr.prototype.addSources = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListconfigsConfigsAddr} returns this
 */
proto.cln.ListconfigsConfigsAddr.prototype.clearSourcesList = function() {
  return this.setSourcesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListconfigsConfigsAnnounceaddr.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsAnnounceaddr.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsAnnounceaddr.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsAnnounceaddr} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsAnnounceaddr.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesStrList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    sourcesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsAnnounceaddr}
 */
proto.cln.ListconfigsConfigsAnnounceaddr.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsAnnounceaddr;
  return proto.cln.ListconfigsConfigsAnnounceaddr.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsAnnounceaddr} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsAnnounceaddr}
 */
proto.cln.ListconfigsConfigsAnnounceaddr.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addValuesStr(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addSources(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsAnnounceaddr.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsAnnounceaddr.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsAnnounceaddr} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsAnnounceaddr.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesStrList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getSourcesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * repeated string values_str = 1;
 * @return {!Array<string>}
 */
proto.cln.ListconfigsConfigsAnnounceaddr.prototype.getValuesStrList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.ListconfigsConfigsAnnounceaddr} returns this
 */
proto.cln.ListconfigsConfigsAnnounceaddr.prototype.setValuesStrList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.ListconfigsConfigsAnnounceaddr} returns this
 */
proto.cln.ListconfigsConfigsAnnounceaddr.prototype.addValuesStr = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListconfigsConfigsAnnounceaddr} returns this
 */
proto.cln.ListconfigsConfigsAnnounceaddr.prototype.clearValuesStrList = function() {
  return this.setValuesStrList([]);
};


/**
 * repeated string sources = 2;
 * @return {!Array<string>}
 */
proto.cln.ListconfigsConfigsAnnounceaddr.prototype.getSourcesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.ListconfigsConfigsAnnounceaddr} returns this
 */
proto.cln.ListconfigsConfigsAnnounceaddr.prototype.setSourcesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.ListconfigsConfigsAnnounceaddr} returns this
 */
proto.cln.ListconfigsConfigsAnnounceaddr.prototype.addSources = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListconfigsConfigsAnnounceaddr} returns this
 */
proto.cln.ListconfigsConfigsAnnounceaddr.prototype.clearSourcesList = function() {
  return this.setSourcesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListconfigsConfigsBindaddr.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsBindaddr.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsBindaddr.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsBindaddr} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsBindaddr.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesStrList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    sourcesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsBindaddr}
 */
proto.cln.ListconfigsConfigsBindaddr.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsBindaddr;
  return proto.cln.ListconfigsConfigsBindaddr.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsBindaddr} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsBindaddr}
 */
proto.cln.ListconfigsConfigsBindaddr.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addValuesStr(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addSources(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsBindaddr.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsBindaddr.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsBindaddr} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsBindaddr.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesStrList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getSourcesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * repeated string values_str = 1;
 * @return {!Array<string>}
 */
proto.cln.ListconfigsConfigsBindaddr.prototype.getValuesStrList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.ListconfigsConfigsBindaddr} returns this
 */
proto.cln.ListconfigsConfigsBindaddr.prototype.setValuesStrList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.ListconfigsConfigsBindaddr} returns this
 */
proto.cln.ListconfigsConfigsBindaddr.prototype.addValuesStr = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListconfigsConfigsBindaddr} returns this
 */
proto.cln.ListconfigsConfigsBindaddr.prototype.clearValuesStrList = function() {
  return this.setValuesStrList([]);
};


/**
 * repeated string sources = 2;
 * @return {!Array<string>}
 */
proto.cln.ListconfigsConfigsBindaddr.prototype.getSourcesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.ListconfigsConfigsBindaddr} returns this
 */
proto.cln.ListconfigsConfigsBindaddr.prototype.setSourcesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.ListconfigsConfigsBindaddr} returns this
 */
proto.cln.ListconfigsConfigsBindaddr.prototype.addSources = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListconfigsConfigsBindaddr} returns this
 */
proto.cln.ListconfigsConfigsBindaddr.prototype.clearSourcesList = function() {
  return this.setSourcesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsOffline.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsOffline.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsOffline} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsOffline.toObject = function(includeInstance, msg) {
  var f, obj = {
    set: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsOffline}
 */
proto.cln.ListconfigsConfigsOffline.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsOffline;
  return proto.cln.ListconfigsConfigsOffline.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsOffline} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsOffline}
 */
proto.cln.ListconfigsConfigsOffline.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSet(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsOffline.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsOffline.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsOffline} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsOffline.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSet();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool set = 1;
 * @return {boolean}
 */
proto.cln.ListconfigsConfigsOffline.prototype.getSet = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsConfigsOffline} returns this
 */
proto.cln.ListconfigsConfigsOffline.prototype.setSet = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsOffline.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsOffline} returns this
 */
proto.cln.ListconfigsConfigsOffline.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsAutolisten.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsAutolisten.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsAutolisten} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsAutolisten.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueBool: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsAutolisten}
 */
proto.cln.ListconfigsConfigsAutolisten.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsAutolisten;
  return proto.cln.ListconfigsConfigsAutolisten.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsAutolisten} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsAutolisten}
 */
proto.cln.ListconfigsConfigsAutolisten.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setValueBool(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsAutolisten.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsAutolisten.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsAutolisten} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsAutolisten.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueBool();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool value_bool = 1;
 * @return {boolean}
 */
proto.cln.ListconfigsConfigsAutolisten.prototype.getValueBool = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsConfigsAutolisten} returns this
 */
proto.cln.ListconfigsConfigsAutolisten.prototype.setValueBool = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsAutolisten.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsAutolisten} returns this
 */
proto.cln.ListconfigsConfigsAutolisten.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsProxy.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsProxy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsProxy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsProxy.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueStr: jspb.Message.getFieldWithDefault(msg, 1, ""),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsProxy}
 */
proto.cln.ListconfigsConfigsProxy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsProxy;
  return proto.cln.ListconfigsConfigsProxy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsProxy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsProxy}
 */
proto.cln.ListconfigsConfigsProxy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValueStr(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsProxy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsProxy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsProxy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsProxy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueStr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string value_str = 1;
 * @return {string}
 */
proto.cln.ListconfigsConfigsProxy.prototype.getValueStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsProxy} returns this
 */
proto.cln.ListconfigsConfigsProxy.prototype.setValueStr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsProxy.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsProxy} returns this
 */
proto.cln.ListconfigsConfigsProxy.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsDisabledns.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsDisabledns.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsDisabledns} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsDisabledns.toObject = function(includeInstance, msg) {
  var f, obj = {
    set: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsDisabledns}
 */
proto.cln.ListconfigsConfigsDisabledns.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsDisabledns;
  return proto.cln.ListconfigsConfigsDisabledns.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsDisabledns} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsDisabledns}
 */
proto.cln.ListconfigsConfigsDisabledns.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSet(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsDisabledns.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsDisabledns.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsDisabledns} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsDisabledns.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSet();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool set = 1;
 * @return {boolean}
 */
proto.cln.ListconfigsConfigsDisabledns.prototype.getSet = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsConfigsDisabledns} returns this
 */
proto.cln.ListconfigsConfigsDisabledns.prototype.setSet = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsDisabledns.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsDisabledns} returns this
 */
proto.cln.ListconfigsConfigsDisabledns.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsAnnounceaddrdiscovered.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsAnnounceaddrdiscovered.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsAnnounceaddrdiscovered} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsAnnounceaddrdiscovered.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueStr: jspb.Message.getFieldWithDefault(msg, 1, 0),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsAnnounceaddrdiscovered}
 */
proto.cln.ListconfigsConfigsAnnounceaddrdiscovered.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsAnnounceaddrdiscovered;
  return proto.cln.ListconfigsConfigsAnnounceaddrdiscovered.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsAnnounceaddrdiscovered} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsAnnounceaddrdiscovered}
 */
proto.cln.ListconfigsConfigsAnnounceaddrdiscovered.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.ListconfigsConfigsAnnounceaddrdiscovered.ListconfigsConfigsAnnounceaddrdiscoveredValue_str} */ (reader.readEnum());
      msg.setValueStr(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsAnnounceaddrdiscovered.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsAnnounceaddrdiscovered.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsAnnounceaddrdiscovered} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsAnnounceaddrdiscovered.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueStr();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ListconfigsConfigsAnnounceaddrdiscovered.ListconfigsConfigsAnnounceaddrdiscoveredValue_str = {
  TRUE: 0,
  FALSE: 1,
  AUTO: 2
};

/**
 * optional ListconfigsConfigsAnnounceaddrdiscoveredValue_str value_str = 1;
 * @return {!proto.cln.ListconfigsConfigsAnnounceaddrdiscovered.ListconfigsConfigsAnnounceaddrdiscoveredValue_str}
 */
proto.cln.ListconfigsConfigsAnnounceaddrdiscovered.prototype.getValueStr = function() {
  return /** @type {!proto.cln.ListconfigsConfigsAnnounceaddrdiscovered.ListconfigsConfigsAnnounceaddrdiscoveredValue_str} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.ListconfigsConfigsAnnounceaddrdiscovered.ListconfigsConfigsAnnounceaddrdiscoveredValue_str} value
 * @return {!proto.cln.ListconfigsConfigsAnnounceaddrdiscovered} returns this
 */
proto.cln.ListconfigsConfigsAnnounceaddrdiscovered.prototype.setValueStr = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsAnnounceaddrdiscovered.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsAnnounceaddrdiscovered} returns this
 */
proto.cln.ListconfigsConfigsAnnounceaddrdiscovered.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsAnnounceaddrdiscoveredport.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsAnnounceaddrdiscoveredport.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsAnnounceaddrdiscoveredport} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsAnnounceaddrdiscoveredport.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueInt: jspb.Message.getFieldWithDefault(msg, 1, 0),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsAnnounceaddrdiscoveredport}
 */
proto.cln.ListconfigsConfigsAnnounceaddrdiscoveredport.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsAnnounceaddrdiscoveredport;
  return proto.cln.ListconfigsConfigsAnnounceaddrdiscoveredport.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsAnnounceaddrdiscoveredport} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsAnnounceaddrdiscoveredport}
 */
proto.cln.ListconfigsConfigsAnnounceaddrdiscoveredport.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setValueInt(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsAnnounceaddrdiscoveredport.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsAnnounceaddrdiscoveredport.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsAnnounceaddrdiscoveredport} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsAnnounceaddrdiscoveredport.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueInt();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint32 value_int = 1;
 * @return {number}
 */
proto.cln.ListconfigsConfigsAnnounceaddrdiscoveredport.prototype.getValueInt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListconfigsConfigsAnnounceaddrdiscoveredport} returns this
 */
proto.cln.ListconfigsConfigsAnnounceaddrdiscoveredport.prototype.setValueInt = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsAnnounceaddrdiscoveredport.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsAnnounceaddrdiscoveredport} returns this
 */
proto.cln.ListconfigsConfigsAnnounceaddrdiscoveredport.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsEncryptedhsm.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsEncryptedhsm.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsEncryptedhsm} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsEncryptedhsm.toObject = function(includeInstance, msg) {
  var f, obj = {
    set: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsEncryptedhsm}
 */
proto.cln.ListconfigsConfigsEncryptedhsm.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsEncryptedhsm;
  return proto.cln.ListconfigsConfigsEncryptedhsm.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsEncryptedhsm} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsEncryptedhsm}
 */
proto.cln.ListconfigsConfigsEncryptedhsm.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSet(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsEncryptedhsm.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsEncryptedhsm.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsEncryptedhsm} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsEncryptedhsm.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSet();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool set = 1;
 * @return {boolean}
 */
proto.cln.ListconfigsConfigsEncryptedhsm.prototype.getSet = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsConfigsEncryptedhsm} returns this
 */
proto.cln.ListconfigsConfigsEncryptedhsm.prototype.setSet = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsEncryptedhsm.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsEncryptedhsm} returns this
 */
proto.cln.ListconfigsConfigsEncryptedhsm.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsRpcfilemode.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsRpcfilemode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsRpcfilemode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsRpcfilemode.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueStr: jspb.Message.getFieldWithDefault(msg, 1, ""),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsRpcfilemode}
 */
proto.cln.ListconfigsConfigsRpcfilemode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsRpcfilemode;
  return proto.cln.ListconfigsConfigsRpcfilemode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsRpcfilemode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsRpcfilemode}
 */
proto.cln.ListconfigsConfigsRpcfilemode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValueStr(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsRpcfilemode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsRpcfilemode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsRpcfilemode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsRpcfilemode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueStr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string value_str = 1;
 * @return {string}
 */
proto.cln.ListconfigsConfigsRpcfilemode.prototype.getValueStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsRpcfilemode} returns this
 */
proto.cln.ListconfigsConfigsRpcfilemode.prototype.setValueStr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsRpcfilemode.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsRpcfilemode} returns this
 */
proto.cln.ListconfigsConfigsRpcfilemode.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsLoglevel.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsLoglevel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsLoglevel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsLoglevel.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueStr: jspb.Message.getFieldWithDefault(msg, 1, ""),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsLoglevel}
 */
proto.cln.ListconfigsConfigsLoglevel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsLoglevel;
  return proto.cln.ListconfigsConfigsLoglevel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsLoglevel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsLoglevel}
 */
proto.cln.ListconfigsConfigsLoglevel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValueStr(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsLoglevel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsLoglevel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsLoglevel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsLoglevel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueStr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string value_str = 1;
 * @return {string}
 */
proto.cln.ListconfigsConfigsLoglevel.prototype.getValueStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsLoglevel} returns this
 */
proto.cln.ListconfigsConfigsLoglevel.prototype.setValueStr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsLoglevel.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsLoglevel} returns this
 */
proto.cln.ListconfigsConfigsLoglevel.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsLogprefix.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsLogprefix.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsLogprefix} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsLogprefix.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueStr: jspb.Message.getFieldWithDefault(msg, 1, ""),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsLogprefix}
 */
proto.cln.ListconfigsConfigsLogprefix.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsLogprefix;
  return proto.cln.ListconfigsConfigsLogprefix.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsLogprefix} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsLogprefix}
 */
proto.cln.ListconfigsConfigsLogprefix.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValueStr(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsLogprefix.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsLogprefix.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsLogprefix} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsLogprefix.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueStr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string value_str = 1;
 * @return {string}
 */
proto.cln.ListconfigsConfigsLogprefix.prototype.getValueStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsLogprefix} returns this
 */
proto.cln.ListconfigsConfigsLogprefix.prototype.setValueStr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsLogprefix.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsLogprefix} returns this
 */
proto.cln.ListconfigsConfigsLogprefix.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListconfigsConfigsLogfile.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsLogfile.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsLogfile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsLogfile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsLogfile.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesStrList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    sourcesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsLogfile}
 */
proto.cln.ListconfigsConfigsLogfile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsLogfile;
  return proto.cln.ListconfigsConfigsLogfile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsLogfile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsLogfile}
 */
proto.cln.ListconfigsConfigsLogfile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addValuesStr(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addSources(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsLogfile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsLogfile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsLogfile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsLogfile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesStrList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getSourcesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * repeated string values_str = 1;
 * @return {!Array<string>}
 */
proto.cln.ListconfigsConfigsLogfile.prototype.getValuesStrList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.ListconfigsConfigsLogfile} returns this
 */
proto.cln.ListconfigsConfigsLogfile.prototype.setValuesStrList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.ListconfigsConfigsLogfile} returns this
 */
proto.cln.ListconfigsConfigsLogfile.prototype.addValuesStr = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListconfigsConfigsLogfile} returns this
 */
proto.cln.ListconfigsConfigsLogfile.prototype.clearValuesStrList = function() {
  return this.setValuesStrList([]);
};


/**
 * repeated string sources = 2;
 * @return {!Array<string>}
 */
proto.cln.ListconfigsConfigsLogfile.prototype.getSourcesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.ListconfigsConfigsLogfile} returns this
 */
proto.cln.ListconfigsConfigsLogfile.prototype.setSourcesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.ListconfigsConfigsLogfile} returns this
 */
proto.cln.ListconfigsConfigsLogfile.prototype.addSources = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListconfigsConfigsLogfile} returns this
 */
proto.cln.ListconfigsConfigsLogfile.prototype.clearSourcesList = function() {
  return this.setSourcesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsLogtimestamps.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsLogtimestamps.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsLogtimestamps} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsLogtimestamps.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueBool: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsLogtimestamps}
 */
proto.cln.ListconfigsConfigsLogtimestamps.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsLogtimestamps;
  return proto.cln.ListconfigsConfigsLogtimestamps.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsLogtimestamps} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsLogtimestamps}
 */
proto.cln.ListconfigsConfigsLogtimestamps.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setValueBool(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsLogtimestamps.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsLogtimestamps.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsLogtimestamps} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsLogtimestamps.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueBool();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool value_bool = 1;
 * @return {boolean}
 */
proto.cln.ListconfigsConfigsLogtimestamps.prototype.getValueBool = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsConfigsLogtimestamps} returns this
 */
proto.cln.ListconfigsConfigsLogtimestamps.prototype.setValueBool = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsLogtimestamps.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsLogtimestamps} returns this
 */
proto.cln.ListconfigsConfigsLogtimestamps.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsForcefeerates.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsForcefeerates.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsForcefeerates} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsForcefeerates.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueStr: jspb.Message.getFieldWithDefault(msg, 1, ""),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsForcefeerates}
 */
proto.cln.ListconfigsConfigsForcefeerates.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsForcefeerates;
  return proto.cln.ListconfigsConfigsForcefeerates.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsForcefeerates} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsForcefeerates}
 */
proto.cln.ListconfigsConfigsForcefeerates.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValueStr(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsForcefeerates.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsForcefeerates.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsForcefeerates} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsForcefeerates.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueStr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string value_str = 1;
 * @return {string}
 */
proto.cln.ListconfigsConfigsForcefeerates.prototype.getValueStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsForcefeerates} returns this
 */
proto.cln.ListconfigsConfigsForcefeerates.prototype.setValueStr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsForcefeerates.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsForcefeerates} returns this
 */
proto.cln.ListconfigsConfigsForcefeerates.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListconfigsConfigsSubdaemon.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsSubdaemon.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsSubdaemon.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsSubdaemon} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsSubdaemon.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesStrList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    sourcesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsSubdaemon}
 */
proto.cln.ListconfigsConfigsSubdaemon.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsSubdaemon;
  return proto.cln.ListconfigsConfigsSubdaemon.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsSubdaemon} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsSubdaemon}
 */
proto.cln.ListconfigsConfigsSubdaemon.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addValuesStr(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addSources(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsSubdaemon.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsSubdaemon.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsSubdaemon} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsSubdaemon.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesStrList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getSourcesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * repeated string values_str = 1;
 * @return {!Array<string>}
 */
proto.cln.ListconfigsConfigsSubdaemon.prototype.getValuesStrList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.ListconfigsConfigsSubdaemon} returns this
 */
proto.cln.ListconfigsConfigsSubdaemon.prototype.setValuesStrList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.ListconfigsConfigsSubdaemon} returns this
 */
proto.cln.ListconfigsConfigsSubdaemon.prototype.addValuesStr = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListconfigsConfigsSubdaemon} returns this
 */
proto.cln.ListconfigsConfigsSubdaemon.prototype.clearValuesStrList = function() {
  return this.setValuesStrList([]);
};


/**
 * repeated string sources = 2;
 * @return {!Array<string>}
 */
proto.cln.ListconfigsConfigsSubdaemon.prototype.getSourcesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.ListconfigsConfigsSubdaemon} returns this
 */
proto.cln.ListconfigsConfigsSubdaemon.prototype.setSourcesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.ListconfigsConfigsSubdaemon} returns this
 */
proto.cln.ListconfigsConfigsSubdaemon.prototype.addSources = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListconfigsConfigsSubdaemon} returns this
 */
proto.cln.ListconfigsConfigsSubdaemon.prototype.clearSourcesList = function() {
  return this.setSourcesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsFetchinvoicenoconnect.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsFetchinvoicenoconnect.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsFetchinvoicenoconnect} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsFetchinvoicenoconnect.toObject = function(includeInstance, msg) {
  var f, obj = {
    set: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsFetchinvoicenoconnect}
 */
proto.cln.ListconfigsConfigsFetchinvoicenoconnect.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsFetchinvoicenoconnect;
  return proto.cln.ListconfigsConfigsFetchinvoicenoconnect.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsFetchinvoicenoconnect} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsFetchinvoicenoconnect}
 */
proto.cln.ListconfigsConfigsFetchinvoicenoconnect.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSet(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsFetchinvoicenoconnect.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsFetchinvoicenoconnect.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsFetchinvoicenoconnect} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsFetchinvoicenoconnect.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSet();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool set = 1;
 * @return {boolean}
 */
proto.cln.ListconfigsConfigsFetchinvoicenoconnect.prototype.getSet = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsConfigsFetchinvoicenoconnect} returns this
 */
proto.cln.ListconfigsConfigsFetchinvoicenoconnect.prototype.setSet = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsFetchinvoicenoconnect.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsFetchinvoicenoconnect} returns this
 */
proto.cln.ListconfigsConfigsFetchinvoicenoconnect.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsAccepthtlctlvtypes.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsAccepthtlctlvtypes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsAccepthtlctlvtypes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsAccepthtlctlvtypes.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueStr: jspb.Message.getFieldWithDefault(msg, 1, ""),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsAccepthtlctlvtypes}
 */
proto.cln.ListconfigsConfigsAccepthtlctlvtypes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsAccepthtlctlvtypes;
  return proto.cln.ListconfigsConfigsAccepthtlctlvtypes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsAccepthtlctlvtypes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsAccepthtlctlvtypes}
 */
proto.cln.ListconfigsConfigsAccepthtlctlvtypes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValueStr(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsAccepthtlctlvtypes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsAccepthtlctlvtypes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsAccepthtlctlvtypes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsAccepthtlctlvtypes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueStr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string value_str = 1;
 * @return {string}
 */
proto.cln.ListconfigsConfigsAccepthtlctlvtypes.prototype.getValueStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsAccepthtlctlvtypes} returns this
 */
proto.cln.ListconfigsConfigsAccepthtlctlvtypes.prototype.setValueStr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsAccepthtlctlvtypes.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsAccepthtlctlvtypes} returns this
 */
proto.cln.ListconfigsConfigsAccepthtlctlvtypes.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsTorservicepassword.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsTorservicepassword.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsTorservicepassword} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsTorservicepassword.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueStr: jspb.Message.getFieldWithDefault(msg, 1, ""),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsTorservicepassword}
 */
proto.cln.ListconfigsConfigsTorservicepassword.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsTorservicepassword;
  return proto.cln.ListconfigsConfigsTorservicepassword.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsTorservicepassword} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsTorservicepassword}
 */
proto.cln.ListconfigsConfigsTorservicepassword.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValueStr(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsTorservicepassword.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsTorservicepassword.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsTorservicepassword} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsTorservicepassword.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueStr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string value_str = 1;
 * @return {string}
 */
proto.cln.ListconfigsConfigsTorservicepassword.prototype.getValueStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsTorservicepassword} returns this
 */
proto.cln.ListconfigsConfigsTorservicepassword.prototype.setValueStr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsTorservicepassword.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsTorservicepassword} returns this
 */
proto.cln.ListconfigsConfigsTorservicepassword.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsAnnounceaddrdns.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsAnnounceaddrdns.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsAnnounceaddrdns} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsAnnounceaddrdns.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueBool: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsAnnounceaddrdns}
 */
proto.cln.ListconfigsConfigsAnnounceaddrdns.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsAnnounceaddrdns;
  return proto.cln.ListconfigsConfigsAnnounceaddrdns.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsAnnounceaddrdns} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsAnnounceaddrdns}
 */
proto.cln.ListconfigsConfigsAnnounceaddrdns.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setValueBool(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsAnnounceaddrdns.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsAnnounceaddrdns.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsAnnounceaddrdns} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsAnnounceaddrdns.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueBool();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool value_bool = 1;
 * @return {boolean}
 */
proto.cln.ListconfigsConfigsAnnounceaddrdns.prototype.getValueBool = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsConfigsAnnounceaddrdns} returns this
 */
proto.cln.ListconfigsConfigsAnnounceaddrdns.prototype.setValueBool = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsAnnounceaddrdns.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsAnnounceaddrdns} returns this
 */
proto.cln.ListconfigsConfigsAnnounceaddrdns.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsRequireconfirmedinputs.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsRequireconfirmedinputs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsRequireconfirmedinputs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsRequireconfirmedinputs.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueBool: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsRequireconfirmedinputs}
 */
proto.cln.ListconfigsConfigsRequireconfirmedinputs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsRequireconfirmedinputs;
  return proto.cln.ListconfigsConfigsRequireconfirmedinputs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsRequireconfirmedinputs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsRequireconfirmedinputs}
 */
proto.cln.ListconfigsConfigsRequireconfirmedinputs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setValueBool(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsRequireconfirmedinputs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsRequireconfirmedinputs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsRequireconfirmedinputs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsRequireconfirmedinputs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueBool();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool value_bool = 1;
 * @return {boolean}
 */
proto.cln.ListconfigsConfigsRequireconfirmedinputs.prototype.getValueBool = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListconfigsConfigsRequireconfirmedinputs} returns this
 */
proto.cln.ListconfigsConfigsRequireconfirmedinputs.prototype.setValueBool = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsRequireconfirmedinputs.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsRequireconfirmedinputs} returns this
 */
proto.cln.ListconfigsConfigsRequireconfirmedinputs.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsCommitfee.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsCommitfee.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsCommitfee} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsCommitfee.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueInt: jspb.Message.getFieldWithDefault(msg, 1, 0),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsCommitfee}
 */
proto.cln.ListconfigsConfigsCommitfee.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsCommitfee;
  return proto.cln.ListconfigsConfigsCommitfee.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsCommitfee} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsCommitfee}
 */
proto.cln.ListconfigsConfigsCommitfee.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setValueInt(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsCommitfee.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsCommitfee.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsCommitfee} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsCommitfee.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueInt();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint64 value_int = 1;
 * @return {number}
 */
proto.cln.ListconfigsConfigsCommitfee.prototype.getValueInt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListconfigsConfigsCommitfee} returns this
 */
proto.cln.ListconfigsConfigsCommitfee.prototype.setValueInt = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsCommitfee.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsCommitfee} returns this
 */
proto.cln.ListconfigsConfigsCommitfee.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsConfigsCommitfeerateoffset.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsConfigsCommitfeerateoffset.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsConfigsCommitfeerateoffset} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsCommitfeerateoffset.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueInt: jspb.Message.getFieldWithDefault(msg, 1, 0),
    source: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsConfigsCommitfeerateoffset}
 */
proto.cln.ListconfigsConfigsCommitfeerateoffset.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsConfigsCommitfeerateoffset;
  return proto.cln.ListconfigsConfigsCommitfeerateoffset.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsConfigsCommitfeerateoffset} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsConfigsCommitfeerateoffset}
 */
proto.cln.ListconfigsConfigsCommitfeerateoffset.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setValueInt(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsConfigsCommitfeerateoffset.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsConfigsCommitfeerateoffset.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsConfigsCommitfeerateoffset} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsConfigsCommitfeerateoffset.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueInt();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint32 value_int = 1;
 * @return {number}
 */
proto.cln.ListconfigsConfigsCommitfeerateoffset.prototype.getValueInt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListconfigsConfigsCommitfeerateoffset} returns this
 */
proto.cln.ListconfigsConfigsCommitfeerateoffset.prototype.setValueInt = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.cln.ListconfigsConfigsCommitfeerateoffset.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsConfigsCommitfeerateoffset} returns this
 */
proto.cln.ListconfigsConfigsCommitfeerateoffset.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsPlugins.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsPlugins.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsPlugins} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsPlugins.toObject = function(includeInstance, msg) {
  var f, obj = {
    path: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    options: (f = msg.getOptions()) && proto.cln.ListconfigsPluginsOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsPlugins}
 */
proto.cln.ListconfigsPlugins.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsPlugins;
  return proto.cln.ListconfigsPlugins.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsPlugins} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsPlugins}
 */
proto.cln.ListconfigsPlugins.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new proto.cln.ListconfigsPluginsOptions;
      reader.readMessage(value,proto.cln.ListconfigsPluginsOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsPlugins.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsPlugins.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsPlugins} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsPlugins.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cln.ListconfigsPluginsOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional string path = 1;
 * @return {string}
 */
proto.cln.ListconfigsPlugins.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsPlugins} returns this
 */
proto.cln.ListconfigsPlugins.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.cln.ListconfigsPlugins.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsPlugins} returns this
 */
proto.cln.ListconfigsPlugins.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional ListconfigsPluginsOptions options = 3;
 * @return {?proto.cln.ListconfigsPluginsOptions}
 */
proto.cln.ListconfigsPlugins.prototype.getOptions = function() {
  return /** @type{?proto.cln.ListconfigsPluginsOptions} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsPluginsOptions, 3));
};


/**
 * @param {?proto.cln.ListconfigsPluginsOptions|undefined} value
 * @return {!proto.cln.ListconfigsPlugins} returns this
*/
proto.cln.ListconfigsPlugins.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsPlugins} returns this
 */
proto.cln.ListconfigsPlugins.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsPlugins.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsPluginsOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsPluginsOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsPluginsOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsPluginsOptions.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsPluginsOptions}
 */
proto.cln.ListconfigsPluginsOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsPluginsOptions;
  return proto.cln.ListconfigsPluginsOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsPluginsOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsPluginsOptions}
 */
proto.cln.ListconfigsPluginsOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsPluginsOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsPluginsOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsPluginsOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsPluginsOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsImportantplugins.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsImportantplugins.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsImportantplugins} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsImportantplugins.toObject = function(includeInstance, msg) {
  var f, obj = {
    path: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    options: (f = msg.getOptions()) && proto.cln.ListconfigsImportantpluginsOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsImportantplugins}
 */
proto.cln.ListconfigsImportantplugins.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsImportantplugins;
  return proto.cln.ListconfigsImportantplugins.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsImportantplugins} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsImportantplugins}
 */
proto.cln.ListconfigsImportantplugins.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new proto.cln.ListconfigsImportantpluginsOptions;
      reader.readMessage(value,proto.cln.ListconfigsImportantpluginsOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsImportantplugins.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsImportantplugins.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsImportantplugins} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsImportantplugins.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cln.ListconfigsImportantpluginsOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional string path = 1;
 * @return {string}
 */
proto.cln.ListconfigsImportantplugins.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsImportantplugins} returns this
 */
proto.cln.ListconfigsImportantplugins.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.cln.ListconfigsImportantplugins.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListconfigsImportantplugins} returns this
 */
proto.cln.ListconfigsImportantplugins.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional ListconfigsImportantpluginsOptions options = 3;
 * @return {?proto.cln.ListconfigsImportantpluginsOptions}
 */
proto.cln.ListconfigsImportantplugins.prototype.getOptions = function() {
  return /** @type{?proto.cln.ListconfigsImportantpluginsOptions} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListconfigsImportantpluginsOptions, 3));
};


/**
 * @param {?proto.cln.ListconfigsImportantpluginsOptions|undefined} value
 * @return {!proto.cln.ListconfigsImportantplugins} returns this
*/
proto.cln.ListconfigsImportantplugins.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListconfigsImportantplugins} returns this
 */
proto.cln.ListconfigsImportantplugins.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListconfigsImportantplugins.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListconfigsImportantpluginsOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListconfigsImportantpluginsOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListconfigsImportantpluginsOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsImportantpluginsOptions.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListconfigsImportantpluginsOptions}
 */
proto.cln.ListconfigsImportantpluginsOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListconfigsImportantpluginsOptions;
  return proto.cln.ListconfigsImportantpluginsOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListconfigsImportantpluginsOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListconfigsImportantpluginsOptions}
 */
proto.cln.ListconfigsImportantpluginsOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListconfigsImportantpluginsOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListconfigsImportantpluginsOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListconfigsImportantpluginsOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListconfigsImportantpluginsOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.StopRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.StopRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.StopRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.StopRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.StopRequest}
 */
proto.cln.StopRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.StopRequest;
  return proto.cln.StopRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.StopRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.StopRequest}
 */
proto.cln.StopRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.StopRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.StopRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.StopRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.StopRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.StopResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.StopResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.StopResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.StopResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.StopResponse}
 */
proto.cln.StopResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.StopResponse;
  return proto.cln.StopResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.StopResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.StopResponse}
 */
proto.cln.StopResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.StopResponse.StopResult} */ (reader.readEnum());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.StopResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.StopResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.StopResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.StopResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.cln.StopResponse.StopResult} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.StopResponse.StopResult = {
  SHUTDOWN_COMPLETE: 0
};

/**
 * optional StopResult result = 1;
 * @return {!proto.cln.StopResponse.StopResult}
 */
proto.cln.StopResponse.prototype.getResult = function() {
  return /** @type {!proto.cln.StopResponse.StopResult} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.StopResponse.StopResult} value
 * @return {!proto.cln.StopResponse} returns this
 */
proto.cln.StopResponse.prototype.setResult = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.StopResponse} returns this
 */
proto.cln.StopResponse.prototype.clearResult = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.StopResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.HelpRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.HelpRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.HelpRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.HelpRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    command: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.HelpRequest}
 */
proto.cln.HelpRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.HelpRequest;
  return proto.cln.HelpRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.HelpRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.HelpRequest}
 */
proto.cln.HelpRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommand(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.HelpRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.HelpRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.HelpRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.HelpRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string command = 1;
 * @return {string}
 */
proto.cln.HelpRequest.prototype.getCommand = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.HelpRequest} returns this
 */
proto.cln.HelpRequest.prototype.setCommand = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.HelpRequest} returns this
 */
proto.cln.HelpRequest.prototype.clearCommand = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.HelpRequest.prototype.hasCommand = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.HelpResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.HelpResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.HelpResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.HelpResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.HelpResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    helpList: jspb.Message.toObjectList(msg.getHelpList(),
    proto.cln.HelpHelp.toObject, includeInstance),
    formatHint: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.HelpResponse}
 */
proto.cln.HelpResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.HelpResponse;
  return proto.cln.HelpResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.HelpResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.HelpResponse}
 */
proto.cln.HelpResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.HelpHelp;
      reader.readMessage(value,proto.cln.HelpHelp.deserializeBinaryFromReader);
      msg.addHelp(value);
      break;
    case 2:
      var value = /** @type {!proto.cln.HelpResponse.HelpFormathint} */ (reader.readEnum());
      msg.setFormatHint(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.HelpResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.HelpResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.HelpResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.HelpResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHelpList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.HelpHelp.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.cln.HelpResponse.HelpFormathint} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.HelpResponse.HelpFormathint = {
  SIMPLE: 0
};

/**
 * repeated HelpHelp help = 1;
 * @return {!Array<!proto.cln.HelpHelp>}
 */
proto.cln.HelpResponse.prototype.getHelpList = function() {
  return /** @type{!Array<!proto.cln.HelpHelp>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.HelpHelp, 1));
};


/**
 * @param {!Array<!proto.cln.HelpHelp>} value
 * @return {!proto.cln.HelpResponse} returns this
*/
proto.cln.HelpResponse.prototype.setHelpList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.HelpHelp=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.HelpHelp}
 */
proto.cln.HelpResponse.prototype.addHelp = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.HelpHelp, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.HelpResponse} returns this
 */
proto.cln.HelpResponse.prototype.clearHelpList = function() {
  return this.setHelpList([]);
};


/**
 * optional HelpFormathint format_hint = 2;
 * @return {!proto.cln.HelpResponse.HelpFormathint}
 */
proto.cln.HelpResponse.prototype.getFormatHint = function() {
  return /** @type {!proto.cln.HelpResponse.HelpFormathint} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.cln.HelpResponse.HelpFormathint} value
 * @return {!proto.cln.HelpResponse} returns this
 */
proto.cln.HelpResponse.prototype.setFormatHint = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.HelpResponse} returns this
 */
proto.cln.HelpResponse.prototype.clearFormatHint = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.HelpResponse.prototype.hasFormatHint = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.HelpHelp.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.HelpHelp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.HelpHelp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.HelpHelp.toObject = function(includeInstance, msg) {
  var f, obj = {
    command: jspb.Message.getFieldWithDefault(msg, 1, ""),
    category: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    verbose: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.HelpHelp}
 */
proto.cln.HelpHelp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.HelpHelp;
  return proto.cln.HelpHelp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.HelpHelp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.HelpHelp}
 */
proto.cln.HelpHelp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommand(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setVerbose(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.HelpHelp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.HelpHelp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.HelpHelp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.HelpHelp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommand();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCategory();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getVerbose();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string command = 1;
 * @return {string}
 */
proto.cln.HelpHelp.prototype.getCommand = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.HelpHelp} returns this
 */
proto.cln.HelpHelp.prototype.setCommand = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string category = 2;
 * @return {string}
 */
proto.cln.HelpHelp.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.HelpHelp} returns this
 */
proto.cln.HelpHelp.prototype.setCategory = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.cln.HelpHelp.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.HelpHelp} returns this
 */
proto.cln.HelpHelp.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string verbose = 4;
 * @return {string}
 */
proto.cln.HelpHelp.prototype.getVerbose = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.HelpHelp} returns this
 */
proto.cln.HelpHelp.prototype.setVerbose = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.PreapprovekeysendRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.PreapprovekeysendRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.PreapprovekeysendRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PreapprovekeysendRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    destination: msg.getDestination_asB64(),
    paymentHash: msg.getPaymentHash_asB64(),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.PreapprovekeysendRequest}
 */
proto.cln.PreapprovekeysendRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.PreapprovekeysendRequest;
  return proto.cln.PreapprovekeysendRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.PreapprovekeysendRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.PreapprovekeysendRequest}
 */
proto.cln.PreapprovekeysendRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDestination(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 3:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.PreapprovekeysendRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.PreapprovekeysendRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.PreapprovekeysendRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PreapprovekeysendRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDestination_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes destination = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.PreapprovekeysendRequest.prototype.getDestination = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes destination = 1;
 * This is a type-conversion wrapper around `getDestination()`
 * @return {string}
 */
proto.cln.PreapprovekeysendRequest.prototype.getDestination_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDestination()));
};


/**
 * optional bytes destination = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDestination()`
 * @return {!Uint8Array}
 */
proto.cln.PreapprovekeysendRequest.prototype.getDestination_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDestination()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.PreapprovekeysendRequest} returns this
 */
proto.cln.PreapprovekeysendRequest.prototype.setDestination = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes payment_hash = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.PreapprovekeysendRequest.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes payment_hash = 2;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.PreapprovekeysendRequest.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.PreapprovekeysendRequest.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.PreapprovekeysendRequest} returns this
 */
proto.cln.PreapprovekeysendRequest.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional Amount amount_msat = 3;
 * @return {?proto.cln.Amount}
 */
proto.cln.PreapprovekeysendRequest.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 3));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.PreapprovekeysendRequest} returns this
*/
proto.cln.PreapprovekeysendRequest.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.PreapprovekeysendRequest} returns this
 */
proto.cln.PreapprovekeysendRequest.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PreapprovekeysendRequest.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.PreapprovekeysendResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.PreapprovekeysendResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.PreapprovekeysendResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PreapprovekeysendResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.PreapprovekeysendResponse}
 */
proto.cln.PreapprovekeysendResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.PreapprovekeysendResponse;
  return proto.cln.PreapprovekeysendResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.PreapprovekeysendResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.PreapprovekeysendResponse}
 */
proto.cln.PreapprovekeysendResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.PreapprovekeysendResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.PreapprovekeysendResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.PreapprovekeysendResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PreapprovekeysendResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.PreapproveinvoiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.PreapproveinvoiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.PreapproveinvoiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PreapproveinvoiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    bolt11: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.PreapproveinvoiceRequest}
 */
proto.cln.PreapproveinvoiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.PreapproveinvoiceRequest;
  return proto.cln.PreapproveinvoiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.PreapproveinvoiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.PreapproveinvoiceRequest}
 */
proto.cln.PreapproveinvoiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.PreapproveinvoiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.PreapproveinvoiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.PreapproveinvoiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PreapproveinvoiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBolt11();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string bolt11 = 1;
 * @return {string}
 */
proto.cln.PreapproveinvoiceRequest.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.PreapproveinvoiceRequest} returns this
 */
proto.cln.PreapproveinvoiceRequest.prototype.setBolt11 = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.PreapproveinvoiceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.PreapproveinvoiceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.PreapproveinvoiceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PreapproveinvoiceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.PreapproveinvoiceResponse}
 */
proto.cln.PreapproveinvoiceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.PreapproveinvoiceResponse;
  return proto.cln.PreapproveinvoiceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.PreapproveinvoiceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.PreapproveinvoiceResponse}
 */
proto.cln.PreapproveinvoiceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.PreapproveinvoiceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.PreapproveinvoiceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.PreapproveinvoiceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PreapproveinvoiceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.StaticbackupRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.StaticbackupRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.StaticbackupRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.StaticbackupRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.StaticbackupRequest}
 */
proto.cln.StaticbackupRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.StaticbackupRequest;
  return proto.cln.StaticbackupRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.StaticbackupRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.StaticbackupRequest}
 */
proto.cln.StaticbackupRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.StaticbackupRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.StaticbackupRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.StaticbackupRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.StaticbackupRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.StaticbackupResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.StaticbackupResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.StaticbackupResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.StaticbackupResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.StaticbackupResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    scbList: msg.getScbList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.StaticbackupResponse}
 */
proto.cln.StaticbackupResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.StaticbackupResponse;
  return proto.cln.StaticbackupResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.StaticbackupResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.StaticbackupResponse}
 */
proto.cln.StaticbackupResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addScb(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.StaticbackupResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.StaticbackupResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.StaticbackupResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.StaticbackupResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScbList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      1,
      f
    );
  }
};


/**
 * repeated bytes scb = 1;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.cln.StaticbackupResponse.prototype.getScbList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * repeated bytes scb = 1;
 * This is a type-conversion wrapper around `getScbList()`
 * @return {!Array<string>}
 */
proto.cln.StaticbackupResponse.prototype.getScbList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getScbList()));
};


/**
 * repeated bytes scb = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getScbList()`
 * @return {!Array<!Uint8Array>}
 */
proto.cln.StaticbackupResponse.prototype.getScbList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getScbList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.cln.StaticbackupResponse} returns this
 */
proto.cln.StaticbackupResponse.prototype.setScbList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.cln.StaticbackupResponse} returns this
 */
proto.cln.StaticbackupResponse.prototype.addScb = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.StaticbackupResponse} returns this
 */
proto.cln.StaticbackupResponse.prototype.clearScbList = function() {
  return this.setScbList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.BkprchannelsapyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.BkprchannelsapyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.BkprchannelsapyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprchannelsapyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    startTime: jspb.Message.getFieldWithDefault(msg, 1, 0),
    endTime: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.BkprchannelsapyRequest}
 */
proto.cln.BkprchannelsapyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.BkprchannelsapyRequest;
  return proto.cln.BkprchannelsapyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.BkprchannelsapyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.BkprchannelsapyRequest}
 */
proto.cln.BkprchannelsapyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStartTime(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEndTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.BkprchannelsapyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.BkprchannelsapyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.BkprchannelsapyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprchannelsapyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 start_time = 1;
 * @return {number}
 */
proto.cln.BkprchannelsapyRequest.prototype.getStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.BkprchannelsapyRequest} returns this
 */
proto.cln.BkprchannelsapyRequest.prototype.setStartTime = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprchannelsapyRequest} returns this
 */
proto.cln.BkprchannelsapyRequest.prototype.clearStartTime = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprchannelsapyRequest.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 end_time = 2;
 * @return {number}
 */
proto.cln.BkprchannelsapyRequest.prototype.getEndTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.BkprchannelsapyRequest} returns this
 */
proto.cln.BkprchannelsapyRequest.prototype.setEndTime = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprchannelsapyRequest} returns this
 */
proto.cln.BkprchannelsapyRequest.prototype.clearEndTime = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprchannelsapyRequest.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.BkprchannelsapyResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.BkprchannelsapyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.BkprchannelsapyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.BkprchannelsapyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprchannelsapyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelsApyList: jspb.Message.toObjectList(msg.getChannelsApyList(),
    proto.cln.BkprchannelsapyChannels_apy.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.BkprchannelsapyResponse}
 */
proto.cln.BkprchannelsapyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.BkprchannelsapyResponse;
  return proto.cln.BkprchannelsapyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.BkprchannelsapyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.BkprchannelsapyResponse}
 */
proto.cln.BkprchannelsapyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.BkprchannelsapyChannels_apy;
      reader.readMessage(value,proto.cln.BkprchannelsapyChannels_apy.deserializeBinaryFromReader);
      msg.addChannelsApy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.BkprchannelsapyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.BkprchannelsapyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.BkprchannelsapyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprchannelsapyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelsApyList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.BkprchannelsapyChannels_apy.serializeBinaryToWriter
    );
  }
};


/**
 * repeated BkprchannelsapyChannels_apy channels_apy = 1;
 * @return {!Array<!proto.cln.BkprchannelsapyChannels_apy>}
 */
proto.cln.BkprchannelsapyResponse.prototype.getChannelsApyList = function() {
  return /** @type{!Array<!proto.cln.BkprchannelsapyChannels_apy>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.BkprchannelsapyChannels_apy, 1));
};


/**
 * @param {!Array<!proto.cln.BkprchannelsapyChannels_apy>} value
 * @return {!proto.cln.BkprchannelsapyResponse} returns this
*/
proto.cln.BkprchannelsapyResponse.prototype.setChannelsApyList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.BkprchannelsapyChannels_apy=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.BkprchannelsapyChannels_apy}
 */
proto.cln.BkprchannelsapyResponse.prototype.addChannelsApy = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.BkprchannelsapyChannels_apy, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.BkprchannelsapyResponse} returns this
 */
proto.cln.BkprchannelsapyResponse.prototype.clearChannelsApyList = function() {
  return this.setChannelsApyList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.BkprchannelsapyChannels_apy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.BkprchannelsapyChannels_apy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprchannelsapyChannels_apy.toObject = function(includeInstance, msg) {
  var f, obj = {
    account: jspb.Message.getFieldWithDefault(msg, 1, ""),
    routedOutMsat: (f = msg.getRoutedOutMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    routedInMsat: (f = msg.getRoutedInMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    leaseFeePaidMsat: (f = msg.getLeaseFeePaidMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    leaseFeeEarnedMsat: (f = msg.getLeaseFeeEarnedMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    pushedOutMsat: (f = msg.getPushedOutMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    pushedInMsat: (f = msg.getPushedInMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    ourStartBalanceMsat: (f = msg.getOurStartBalanceMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    channelStartBalanceMsat: (f = msg.getChannelStartBalanceMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    feesOutMsat: (f = msg.getFeesOutMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    feesInMsat: (f = msg.getFeesInMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    utilizationOut: jspb.Message.getFieldWithDefault(msg, 12, ""),
    utilizationOutInitial: jspb.Message.getFieldWithDefault(msg, 13, ""),
    utilizationIn: jspb.Message.getFieldWithDefault(msg, 14, ""),
    utilizationInInitial: jspb.Message.getFieldWithDefault(msg, 15, ""),
    apyOut: jspb.Message.getFieldWithDefault(msg, 16, ""),
    apyOutInitial: jspb.Message.getFieldWithDefault(msg, 17, ""),
    apyIn: jspb.Message.getFieldWithDefault(msg, 18, ""),
    apyInInitial: jspb.Message.getFieldWithDefault(msg, 19, ""),
    apyTotal: jspb.Message.getFieldWithDefault(msg, 20, ""),
    apyTotalInitial: jspb.Message.getFieldWithDefault(msg, 21, ""),
    apyLease: jspb.Message.getFieldWithDefault(msg, 22, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.BkprchannelsapyChannels_apy}
 */
proto.cln.BkprchannelsapyChannels_apy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.BkprchannelsapyChannels_apy;
  return proto.cln.BkprchannelsapyChannels_apy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.BkprchannelsapyChannels_apy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.BkprchannelsapyChannels_apy}
 */
proto.cln.BkprchannelsapyChannels_apy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccount(value);
      break;
    case 2:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setRoutedOutMsat(value);
      break;
    case 3:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setRoutedInMsat(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setLeaseFeePaidMsat(value);
      break;
    case 5:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setLeaseFeeEarnedMsat(value);
      break;
    case 6:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setPushedOutMsat(value);
      break;
    case 7:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setPushedInMsat(value);
      break;
    case 8:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setOurStartBalanceMsat(value);
      break;
    case 9:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setChannelStartBalanceMsat(value);
      break;
    case 10:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setFeesOutMsat(value);
      break;
    case 11:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setFeesInMsat(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setUtilizationOut(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setUtilizationOutInitial(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setUtilizationIn(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setUtilizationInInitial(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setApyOut(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setApyOutInitial(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setApyIn(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setApyInInitial(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setApyTotal(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setApyTotalInitial(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setApyLease(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.BkprchannelsapyChannels_apy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.BkprchannelsapyChannels_apy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprchannelsapyChannels_apy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccount();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRoutedOutMsat();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getRoutedInMsat();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getLeaseFeePaidMsat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getLeaseFeeEarnedMsat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getPushedOutMsat();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getPushedInMsat();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getOurStartBalanceMsat();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getChannelStartBalanceMsat();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getFeesOutMsat();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getFeesInMsat();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getUtilizationOut();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getUtilizationIn();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getApyOut();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getApyIn();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getApyTotal();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeString(
      21,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeString(
      22,
      f
    );
  }
};


/**
 * optional string account = 1;
 * @return {string}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.getAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.setAccount = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Amount routed_out_msat = 2;
 * @return {?proto.cln.Amount}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.getRoutedOutMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 2));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
*/
proto.cln.BkprchannelsapyChannels_apy.prototype.setRoutedOutMsat = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.clearRoutedOutMsat = function() {
  return this.setRoutedOutMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.hasRoutedOutMsat = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Amount routed_in_msat = 3;
 * @return {?proto.cln.Amount}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.getRoutedInMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 3));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
*/
proto.cln.BkprchannelsapyChannels_apy.prototype.setRoutedInMsat = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.clearRoutedInMsat = function() {
  return this.setRoutedInMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.hasRoutedInMsat = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Amount lease_fee_paid_msat = 4;
 * @return {?proto.cln.Amount}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.getLeaseFeePaidMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 4));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
*/
proto.cln.BkprchannelsapyChannels_apy.prototype.setLeaseFeePaidMsat = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.clearLeaseFeePaidMsat = function() {
  return this.setLeaseFeePaidMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.hasLeaseFeePaidMsat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Amount lease_fee_earned_msat = 5;
 * @return {?proto.cln.Amount}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.getLeaseFeeEarnedMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 5));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
*/
proto.cln.BkprchannelsapyChannels_apy.prototype.setLeaseFeeEarnedMsat = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.clearLeaseFeeEarnedMsat = function() {
  return this.setLeaseFeeEarnedMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.hasLeaseFeeEarnedMsat = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Amount pushed_out_msat = 6;
 * @return {?proto.cln.Amount}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.getPushedOutMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 6));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
*/
proto.cln.BkprchannelsapyChannels_apy.prototype.setPushedOutMsat = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.clearPushedOutMsat = function() {
  return this.setPushedOutMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.hasPushedOutMsat = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Amount pushed_in_msat = 7;
 * @return {?proto.cln.Amount}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.getPushedInMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 7));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
*/
proto.cln.BkprchannelsapyChannels_apy.prototype.setPushedInMsat = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.clearPushedInMsat = function() {
  return this.setPushedInMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.hasPushedInMsat = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Amount our_start_balance_msat = 8;
 * @return {?proto.cln.Amount}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.getOurStartBalanceMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 8));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
*/
proto.cln.BkprchannelsapyChannels_apy.prototype.setOurStartBalanceMsat = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.clearOurStartBalanceMsat = function() {
  return this.setOurStartBalanceMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.hasOurStartBalanceMsat = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Amount channel_start_balance_msat = 9;
 * @return {?proto.cln.Amount}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.getChannelStartBalanceMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 9));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
*/
proto.cln.BkprchannelsapyChannels_apy.prototype.setChannelStartBalanceMsat = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.clearChannelStartBalanceMsat = function() {
  return this.setChannelStartBalanceMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.hasChannelStartBalanceMsat = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Amount fees_out_msat = 10;
 * @return {?proto.cln.Amount}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.getFeesOutMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 10));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
*/
proto.cln.BkprchannelsapyChannels_apy.prototype.setFeesOutMsat = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.clearFeesOutMsat = function() {
  return this.setFeesOutMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.hasFeesOutMsat = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Amount fees_in_msat = 11;
 * @return {?proto.cln.Amount}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.getFeesInMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 11));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
*/
proto.cln.BkprchannelsapyChannels_apy.prototype.setFeesInMsat = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.clearFeesInMsat = function() {
  return this.setFeesInMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.hasFeesInMsat = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string utilization_out = 12;
 * @return {string}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.getUtilizationOut = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.setUtilizationOut = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string utilization_out_initial = 13;
 * @return {string}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.getUtilizationOutInitial = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.setUtilizationOutInitial = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.clearUtilizationOutInitial = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.hasUtilizationOutInitial = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string utilization_in = 14;
 * @return {string}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.getUtilizationIn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.setUtilizationIn = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string utilization_in_initial = 15;
 * @return {string}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.getUtilizationInInitial = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.setUtilizationInInitial = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.clearUtilizationInInitial = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.hasUtilizationInInitial = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional string apy_out = 16;
 * @return {string}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.getApyOut = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.setApyOut = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string apy_out_initial = 17;
 * @return {string}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.getApyOutInitial = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.setApyOutInitial = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.clearApyOutInitial = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.hasApyOutInitial = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional string apy_in = 18;
 * @return {string}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.getApyIn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.setApyIn = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string apy_in_initial = 19;
 * @return {string}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.getApyInInitial = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.setApyInInitial = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.clearApyInInitial = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.hasApyInInitial = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional string apy_total = 20;
 * @return {string}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.getApyTotal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.setApyTotal = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string apy_total_initial = 21;
 * @return {string}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.getApyTotalInitial = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.setApyTotalInitial = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.clearApyTotalInitial = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.hasApyTotalInitial = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional string apy_lease = 22;
 * @return {string}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.getApyLease = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.setApyLease = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprchannelsapyChannels_apy} returns this
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.clearApyLease = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprchannelsapyChannels_apy.prototype.hasApyLease = function() {
  return jspb.Message.getField(this, 22) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.BkprdumpincomecsvRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.BkprdumpincomecsvRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.BkprdumpincomecsvRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprdumpincomecsvRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    csvFormat: jspb.Message.getFieldWithDefault(msg, 1, ""),
    csvFile: jspb.Message.getFieldWithDefault(msg, 2, ""),
    consolidateFees: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    startTime: jspb.Message.getFieldWithDefault(msg, 4, 0),
    endTime: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.BkprdumpincomecsvRequest}
 */
proto.cln.BkprdumpincomecsvRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.BkprdumpincomecsvRequest;
  return proto.cln.BkprdumpincomecsvRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.BkprdumpincomecsvRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.BkprdumpincomecsvRequest}
 */
proto.cln.BkprdumpincomecsvRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCsvFormat(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCsvFile(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setConsolidateFees(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStartTime(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEndTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.BkprdumpincomecsvRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.BkprdumpincomecsvRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.BkprdumpincomecsvRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprdumpincomecsvRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCsvFormat();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint64(
      5,
      f
    );
  }
};


/**
 * optional string csv_format = 1;
 * @return {string}
 */
proto.cln.BkprdumpincomecsvRequest.prototype.getCsvFormat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.BkprdumpincomecsvRequest} returns this
 */
proto.cln.BkprdumpincomecsvRequest.prototype.setCsvFormat = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string csv_file = 2;
 * @return {string}
 */
proto.cln.BkprdumpincomecsvRequest.prototype.getCsvFile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.BkprdumpincomecsvRequest} returns this
 */
proto.cln.BkprdumpincomecsvRequest.prototype.setCsvFile = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprdumpincomecsvRequest} returns this
 */
proto.cln.BkprdumpincomecsvRequest.prototype.clearCsvFile = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprdumpincomecsvRequest.prototype.hasCsvFile = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool consolidate_fees = 3;
 * @return {boolean}
 */
proto.cln.BkprdumpincomecsvRequest.prototype.getConsolidateFees = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.BkprdumpincomecsvRequest} returns this
 */
proto.cln.BkprdumpincomecsvRequest.prototype.setConsolidateFees = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprdumpincomecsvRequest} returns this
 */
proto.cln.BkprdumpincomecsvRequest.prototype.clearConsolidateFees = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprdumpincomecsvRequest.prototype.hasConsolidateFees = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 start_time = 4;
 * @return {number}
 */
proto.cln.BkprdumpincomecsvRequest.prototype.getStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.BkprdumpincomecsvRequest} returns this
 */
proto.cln.BkprdumpincomecsvRequest.prototype.setStartTime = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprdumpincomecsvRequest} returns this
 */
proto.cln.BkprdumpincomecsvRequest.prototype.clearStartTime = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprdumpincomecsvRequest.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint64 end_time = 5;
 * @return {number}
 */
proto.cln.BkprdumpincomecsvRequest.prototype.getEndTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.BkprdumpincomecsvRequest} returns this
 */
proto.cln.BkprdumpincomecsvRequest.prototype.setEndTime = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprdumpincomecsvRequest} returns this
 */
proto.cln.BkprdumpincomecsvRequest.prototype.clearEndTime = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprdumpincomecsvRequest.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.BkprdumpincomecsvResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.BkprdumpincomecsvResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.BkprdumpincomecsvResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprdumpincomecsvResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    csvFile: jspb.Message.getFieldWithDefault(msg, 1, ""),
    csvFormat: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.BkprdumpincomecsvResponse}
 */
proto.cln.BkprdumpincomecsvResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.BkprdumpincomecsvResponse;
  return proto.cln.BkprdumpincomecsvResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.BkprdumpincomecsvResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.BkprdumpincomecsvResponse}
 */
proto.cln.BkprdumpincomecsvResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCsvFile(value);
      break;
    case 2:
      var value = /** @type {!proto.cln.BkprdumpincomecsvResponse.BkprdumpincomecsvCsv_format} */ (reader.readEnum());
      msg.setCsvFormat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.BkprdumpincomecsvResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.BkprdumpincomecsvResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.BkprdumpincomecsvResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprdumpincomecsvResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCsvFile();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCsvFormat();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.BkprdumpincomecsvResponse.BkprdumpincomecsvCsv_format = {
  COINTRACKER: 0,
  KOINLY: 1,
  HARMONY: 2,
  QUICKBOOKS: 3
};

/**
 * optional string csv_file = 1;
 * @return {string}
 */
proto.cln.BkprdumpincomecsvResponse.prototype.getCsvFile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.BkprdumpincomecsvResponse} returns this
 */
proto.cln.BkprdumpincomecsvResponse.prototype.setCsvFile = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional BkprdumpincomecsvCsv_format csv_format = 2;
 * @return {!proto.cln.BkprdumpincomecsvResponse.BkprdumpincomecsvCsv_format}
 */
proto.cln.BkprdumpincomecsvResponse.prototype.getCsvFormat = function() {
  return /** @type {!proto.cln.BkprdumpincomecsvResponse.BkprdumpincomecsvCsv_format} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.cln.BkprdumpincomecsvResponse.BkprdumpincomecsvCsv_format} value
 * @return {!proto.cln.BkprdumpincomecsvResponse} returns this
 */
proto.cln.BkprdumpincomecsvResponse.prototype.setCsvFormat = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.BkprinspectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.BkprinspectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.BkprinspectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprinspectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    account: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.BkprinspectRequest}
 */
proto.cln.BkprinspectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.BkprinspectRequest;
  return proto.cln.BkprinspectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.BkprinspectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.BkprinspectRequest}
 */
proto.cln.BkprinspectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.BkprinspectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.BkprinspectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.BkprinspectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprinspectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccount();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string account = 1;
 * @return {string}
 */
proto.cln.BkprinspectRequest.prototype.getAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.BkprinspectRequest} returns this
 */
proto.cln.BkprinspectRequest.prototype.setAccount = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.BkprinspectResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.BkprinspectResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.BkprinspectResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.BkprinspectResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprinspectResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    txsList: jspb.Message.toObjectList(msg.getTxsList(),
    proto.cln.BkprinspectTxs.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.BkprinspectResponse}
 */
proto.cln.BkprinspectResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.BkprinspectResponse;
  return proto.cln.BkprinspectResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.BkprinspectResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.BkprinspectResponse}
 */
proto.cln.BkprinspectResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.BkprinspectTxs;
      reader.readMessage(value,proto.cln.BkprinspectTxs.deserializeBinaryFromReader);
      msg.addTxs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.BkprinspectResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.BkprinspectResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.BkprinspectResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprinspectResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTxsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.BkprinspectTxs.serializeBinaryToWriter
    );
  }
};


/**
 * repeated BkprinspectTxs txs = 1;
 * @return {!Array<!proto.cln.BkprinspectTxs>}
 */
proto.cln.BkprinspectResponse.prototype.getTxsList = function() {
  return /** @type{!Array<!proto.cln.BkprinspectTxs>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.BkprinspectTxs, 1));
};


/**
 * @param {!Array<!proto.cln.BkprinspectTxs>} value
 * @return {!proto.cln.BkprinspectResponse} returns this
*/
proto.cln.BkprinspectResponse.prototype.setTxsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.BkprinspectTxs=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.BkprinspectTxs}
 */
proto.cln.BkprinspectResponse.prototype.addTxs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.BkprinspectTxs, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.BkprinspectResponse} returns this
 */
proto.cln.BkprinspectResponse.prototype.clearTxsList = function() {
  return this.setTxsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.BkprinspectTxs.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.BkprinspectTxs.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.BkprinspectTxs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.BkprinspectTxs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprinspectTxs.toObject = function(includeInstance, msg) {
  var f, obj = {
    txid: msg.getTxid_asB64(),
    blockheight: jspb.Message.getFieldWithDefault(msg, 2, 0),
    feesPaidMsat: (f = msg.getFeesPaidMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    outputsList: jspb.Message.toObjectList(msg.getOutputsList(),
    proto.cln.BkprinspectTxsOutputs.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.BkprinspectTxs}
 */
proto.cln.BkprinspectTxs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.BkprinspectTxs;
  return proto.cln.BkprinspectTxs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.BkprinspectTxs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.BkprinspectTxs}
 */
proto.cln.BkprinspectTxs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBlockheight(value);
      break;
    case 3:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setFeesPaidMsat(value);
      break;
    case 4:
      var value = new proto.cln.BkprinspectTxsOutputs;
      reader.readMessage(value,proto.cln.BkprinspectTxsOutputs.deserializeBinaryFromReader);
      msg.addOutputs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.BkprinspectTxs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.BkprinspectTxs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.BkprinspectTxs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprinspectTxs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getFeesPaidMsat();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getOutputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.cln.BkprinspectTxsOutputs.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes txid = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.BkprinspectTxs.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes txid = 1;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.BkprinspectTxs.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.BkprinspectTxs.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.BkprinspectTxs} returns this
 */
proto.cln.BkprinspectTxs.prototype.setTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint32 blockheight = 2;
 * @return {number}
 */
proto.cln.BkprinspectTxs.prototype.getBlockheight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.BkprinspectTxs} returns this
 */
proto.cln.BkprinspectTxs.prototype.setBlockheight = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprinspectTxs} returns this
 */
proto.cln.BkprinspectTxs.prototype.clearBlockheight = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprinspectTxs.prototype.hasBlockheight = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Amount fees_paid_msat = 3;
 * @return {?proto.cln.Amount}
 */
proto.cln.BkprinspectTxs.prototype.getFeesPaidMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 3));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.BkprinspectTxs} returns this
*/
proto.cln.BkprinspectTxs.prototype.setFeesPaidMsat = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.BkprinspectTxs} returns this
 */
proto.cln.BkprinspectTxs.prototype.clearFeesPaidMsat = function() {
  return this.setFeesPaidMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprinspectTxs.prototype.hasFeesPaidMsat = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated BkprinspectTxsOutputs outputs = 4;
 * @return {!Array<!proto.cln.BkprinspectTxsOutputs>}
 */
proto.cln.BkprinspectTxs.prototype.getOutputsList = function() {
  return /** @type{!Array<!proto.cln.BkprinspectTxsOutputs>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.BkprinspectTxsOutputs, 4));
};


/**
 * @param {!Array<!proto.cln.BkprinspectTxsOutputs>} value
 * @return {!proto.cln.BkprinspectTxs} returns this
*/
proto.cln.BkprinspectTxs.prototype.setOutputsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.cln.BkprinspectTxsOutputs=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.BkprinspectTxsOutputs}
 */
proto.cln.BkprinspectTxs.prototype.addOutputs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.cln.BkprinspectTxsOutputs, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.BkprinspectTxs} returns this
 */
proto.cln.BkprinspectTxs.prototype.clearOutputsList = function() {
  return this.setOutputsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.BkprinspectTxsOutputs.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.BkprinspectTxsOutputs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.BkprinspectTxsOutputs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprinspectTxsOutputs.toObject = function(includeInstance, msg) {
  var f, obj = {
    account: jspb.Message.getFieldWithDefault(msg, 1, ""),
    outnum: jspb.Message.getFieldWithDefault(msg, 2, 0),
    outputValueMsat: (f = msg.getOutputValueMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    currency: jspb.Message.getFieldWithDefault(msg, 4, ""),
    creditMsat: (f = msg.getCreditMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    debitMsat: (f = msg.getDebitMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    originatingAccount: jspb.Message.getFieldWithDefault(msg, 7, ""),
    outputTag: jspb.Message.getFieldWithDefault(msg, 8, ""),
    spendTag: jspb.Message.getFieldWithDefault(msg, 9, ""),
    spendingTxid: msg.getSpendingTxid_asB64(),
    paymentId: msg.getPaymentId_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.BkprinspectTxsOutputs}
 */
proto.cln.BkprinspectTxsOutputs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.BkprinspectTxsOutputs;
  return proto.cln.BkprinspectTxsOutputs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.BkprinspectTxsOutputs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.BkprinspectTxsOutputs}
 */
proto.cln.BkprinspectTxsOutputs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOutnum(value);
      break;
    case 3:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setOutputValueMsat(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 5:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setCreditMsat(value);
      break;
    case 6:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setDebitMsat(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setOriginatingAccount(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutputTag(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setSpendTag(value);
      break;
    case 10:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSpendingTxid(value);
      break;
    case 11:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.BkprinspectTxsOutputs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.BkprinspectTxsOutputs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.BkprinspectTxsOutputs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprinspectTxsOutputs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccount();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOutnum();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getOutputValueMsat();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCreditMsat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getDebitMsat();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBytes(
      10,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeBytes(
      11,
      f
    );
  }
};


/**
 * optional string account = 1;
 * @return {string}
 */
proto.cln.BkprinspectTxsOutputs.prototype.getAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.BkprinspectTxsOutputs} returns this
 */
proto.cln.BkprinspectTxsOutputs.prototype.setAccount = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 outnum = 2;
 * @return {number}
 */
proto.cln.BkprinspectTxsOutputs.prototype.getOutnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.BkprinspectTxsOutputs} returns this
 */
proto.cln.BkprinspectTxsOutputs.prototype.setOutnum = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Amount output_value_msat = 3;
 * @return {?proto.cln.Amount}
 */
proto.cln.BkprinspectTxsOutputs.prototype.getOutputValueMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 3));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.BkprinspectTxsOutputs} returns this
*/
proto.cln.BkprinspectTxsOutputs.prototype.setOutputValueMsat = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.BkprinspectTxsOutputs} returns this
 */
proto.cln.BkprinspectTxsOutputs.prototype.clearOutputValueMsat = function() {
  return this.setOutputValueMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprinspectTxsOutputs.prototype.hasOutputValueMsat = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string currency = 4;
 * @return {string}
 */
proto.cln.BkprinspectTxsOutputs.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.BkprinspectTxsOutputs} returns this
 */
proto.cln.BkprinspectTxsOutputs.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional Amount credit_msat = 5;
 * @return {?proto.cln.Amount}
 */
proto.cln.BkprinspectTxsOutputs.prototype.getCreditMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 5));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.BkprinspectTxsOutputs} returns this
*/
proto.cln.BkprinspectTxsOutputs.prototype.setCreditMsat = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.BkprinspectTxsOutputs} returns this
 */
proto.cln.BkprinspectTxsOutputs.prototype.clearCreditMsat = function() {
  return this.setCreditMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprinspectTxsOutputs.prototype.hasCreditMsat = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Amount debit_msat = 6;
 * @return {?proto.cln.Amount}
 */
proto.cln.BkprinspectTxsOutputs.prototype.getDebitMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 6));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.BkprinspectTxsOutputs} returns this
*/
proto.cln.BkprinspectTxsOutputs.prototype.setDebitMsat = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.BkprinspectTxsOutputs} returns this
 */
proto.cln.BkprinspectTxsOutputs.prototype.clearDebitMsat = function() {
  return this.setDebitMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprinspectTxsOutputs.prototype.hasDebitMsat = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string originating_account = 7;
 * @return {string}
 */
proto.cln.BkprinspectTxsOutputs.prototype.getOriginatingAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.BkprinspectTxsOutputs} returns this
 */
proto.cln.BkprinspectTxsOutputs.prototype.setOriginatingAccount = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprinspectTxsOutputs} returns this
 */
proto.cln.BkprinspectTxsOutputs.prototype.clearOriginatingAccount = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprinspectTxsOutputs.prototype.hasOriginatingAccount = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string output_tag = 8;
 * @return {string}
 */
proto.cln.BkprinspectTxsOutputs.prototype.getOutputTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.BkprinspectTxsOutputs} returns this
 */
proto.cln.BkprinspectTxsOutputs.prototype.setOutputTag = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprinspectTxsOutputs} returns this
 */
proto.cln.BkprinspectTxsOutputs.prototype.clearOutputTag = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprinspectTxsOutputs.prototype.hasOutputTag = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string spend_tag = 9;
 * @return {string}
 */
proto.cln.BkprinspectTxsOutputs.prototype.getSpendTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.BkprinspectTxsOutputs} returns this
 */
proto.cln.BkprinspectTxsOutputs.prototype.setSpendTag = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprinspectTxsOutputs} returns this
 */
proto.cln.BkprinspectTxsOutputs.prototype.clearSpendTag = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprinspectTxsOutputs.prototype.hasSpendTag = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bytes spending_txid = 10;
 * @return {!(string|Uint8Array)}
 */
proto.cln.BkprinspectTxsOutputs.prototype.getSpendingTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * optional bytes spending_txid = 10;
 * This is a type-conversion wrapper around `getSpendingTxid()`
 * @return {string}
 */
proto.cln.BkprinspectTxsOutputs.prototype.getSpendingTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSpendingTxid()));
};


/**
 * optional bytes spending_txid = 10;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSpendingTxid()`
 * @return {!Uint8Array}
 */
proto.cln.BkprinspectTxsOutputs.prototype.getSpendingTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSpendingTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.BkprinspectTxsOutputs} returns this
 */
proto.cln.BkprinspectTxsOutputs.prototype.setSpendingTxid = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprinspectTxsOutputs} returns this
 */
proto.cln.BkprinspectTxsOutputs.prototype.clearSpendingTxid = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprinspectTxsOutputs.prototype.hasSpendingTxid = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional bytes payment_id = 11;
 * @return {!(string|Uint8Array)}
 */
proto.cln.BkprinspectTxsOutputs.prototype.getPaymentId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * optional bytes payment_id = 11;
 * This is a type-conversion wrapper around `getPaymentId()`
 * @return {string}
 */
proto.cln.BkprinspectTxsOutputs.prototype.getPaymentId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentId()));
};


/**
 * optional bytes payment_id = 11;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentId()`
 * @return {!Uint8Array}
 */
proto.cln.BkprinspectTxsOutputs.prototype.getPaymentId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.BkprinspectTxsOutputs} returns this
 */
proto.cln.BkprinspectTxsOutputs.prototype.setPaymentId = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprinspectTxsOutputs} returns this
 */
proto.cln.BkprinspectTxsOutputs.prototype.clearPaymentId = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprinspectTxsOutputs.prototype.hasPaymentId = function() {
  return jspb.Message.getField(this, 11) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.BkprlistaccounteventsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.BkprlistaccounteventsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.BkprlistaccounteventsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprlistaccounteventsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    account: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.BkprlistaccounteventsRequest}
 */
proto.cln.BkprlistaccounteventsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.BkprlistaccounteventsRequest;
  return proto.cln.BkprlistaccounteventsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.BkprlistaccounteventsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.BkprlistaccounteventsRequest}
 */
proto.cln.BkprlistaccounteventsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.BkprlistaccounteventsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.BkprlistaccounteventsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.BkprlistaccounteventsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprlistaccounteventsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string account = 1;
 * @return {string}
 */
proto.cln.BkprlistaccounteventsRequest.prototype.getAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.BkprlistaccounteventsRequest} returns this
 */
proto.cln.BkprlistaccounteventsRequest.prototype.setAccount = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprlistaccounteventsRequest} returns this
 */
proto.cln.BkprlistaccounteventsRequest.prototype.clearAccount = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprlistaccounteventsRequest.prototype.hasAccount = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.BkprlistaccounteventsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.BkprlistaccounteventsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.BkprlistaccounteventsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.BkprlistaccounteventsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprlistaccounteventsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventsList: jspb.Message.toObjectList(msg.getEventsList(),
    proto.cln.BkprlistaccounteventsEvents.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.BkprlistaccounteventsResponse}
 */
proto.cln.BkprlistaccounteventsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.BkprlistaccounteventsResponse;
  return proto.cln.BkprlistaccounteventsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.BkprlistaccounteventsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.BkprlistaccounteventsResponse}
 */
proto.cln.BkprlistaccounteventsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.BkprlistaccounteventsEvents;
      reader.readMessage(value,proto.cln.BkprlistaccounteventsEvents.deserializeBinaryFromReader);
      msg.addEvents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.BkprlistaccounteventsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.BkprlistaccounteventsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.BkprlistaccounteventsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprlistaccounteventsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.BkprlistaccounteventsEvents.serializeBinaryToWriter
    );
  }
};


/**
 * repeated BkprlistaccounteventsEvents events = 1;
 * @return {!Array<!proto.cln.BkprlistaccounteventsEvents>}
 */
proto.cln.BkprlistaccounteventsResponse.prototype.getEventsList = function() {
  return /** @type{!Array<!proto.cln.BkprlistaccounteventsEvents>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.BkprlistaccounteventsEvents, 1));
};


/**
 * @param {!Array<!proto.cln.BkprlistaccounteventsEvents>} value
 * @return {!proto.cln.BkprlistaccounteventsResponse} returns this
*/
proto.cln.BkprlistaccounteventsResponse.prototype.setEventsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.BkprlistaccounteventsEvents=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.BkprlistaccounteventsEvents}
 */
proto.cln.BkprlistaccounteventsResponse.prototype.addEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.BkprlistaccounteventsEvents, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.BkprlistaccounteventsResponse} returns this
 */
proto.cln.BkprlistaccounteventsResponse.prototype.clearEventsList = function() {
  return this.setEventsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.BkprlistaccounteventsEvents.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.BkprlistaccounteventsEvents.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.BkprlistaccounteventsEvents} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprlistaccounteventsEvents.toObject = function(includeInstance, msg) {
  var f, obj = {
    account: jspb.Message.getFieldWithDefault(msg, 1, ""),
    itemType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    tag: jspb.Message.getFieldWithDefault(msg, 3, ""),
    creditMsat: (f = msg.getCreditMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    debitMsat: (f = msg.getDebitMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    currency: jspb.Message.getFieldWithDefault(msg, 6, ""),
    timestamp: jspb.Message.getFieldWithDefault(msg, 7, 0),
    outpoint: jspb.Message.getFieldWithDefault(msg, 8, ""),
    blockheight: jspb.Message.getFieldWithDefault(msg, 9, 0),
    origin: jspb.Message.getFieldWithDefault(msg, 10, ""),
    paymentId: msg.getPaymentId_asB64(),
    txid: msg.getTxid_asB64(),
    description: jspb.Message.getFieldWithDefault(msg, 13, ""),
    feesMsat: (f = msg.getFeesMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    isRebalance: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    partId: jspb.Message.getFieldWithDefault(msg, 16, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.BkprlistaccounteventsEvents}
 */
proto.cln.BkprlistaccounteventsEvents.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.BkprlistaccounteventsEvents;
  return proto.cln.BkprlistaccounteventsEvents.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.BkprlistaccounteventsEvents} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.BkprlistaccounteventsEvents}
 */
proto.cln.BkprlistaccounteventsEvents.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccount(value);
      break;
    case 2:
      var value = /** @type {!proto.cln.BkprlistaccounteventsEvents.BkprlistaccounteventsEventsType} */ (reader.readEnum());
      msg.setItemType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTag(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setCreditMsat(value);
      break;
    case 5:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setDebitMsat(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTimestamp(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutpoint(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBlockheight(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrigin(value);
      break;
    case 11:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentId(value);
      break;
    case 12:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 14:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setFeesMsat(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsRebalance(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPartId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.BkprlistaccounteventsEvents.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.BkprlistaccounteventsEvents.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.BkprlistaccounteventsEvents} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprlistaccounteventsEvents.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccount();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getItemType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getTag();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCreditMsat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getDebitMsat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeBytes(
      11,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBytes(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getFeesMsat();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeBool(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint32(
      16,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.BkprlistaccounteventsEvents.BkprlistaccounteventsEventsType = {
  ONCHAIN_FEE: 0,
  CHAIN: 1,
  CHANNEL: 2
};

/**
 * optional string account = 1;
 * @return {string}
 */
proto.cln.BkprlistaccounteventsEvents.prototype.getAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.BkprlistaccounteventsEvents} returns this
 */
proto.cln.BkprlistaccounteventsEvents.prototype.setAccount = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional BkprlistaccounteventsEventsType item_type = 2;
 * @return {!proto.cln.BkprlistaccounteventsEvents.BkprlistaccounteventsEventsType}
 */
proto.cln.BkprlistaccounteventsEvents.prototype.getItemType = function() {
  return /** @type {!proto.cln.BkprlistaccounteventsEvents.BkprlistaccounteventsEventsType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.cln.BkprlistaccounteventsEvents.BkprlistaccounteventsEventsType} value
 * @return {!proto.cln.BkprlistaccounteventsEvents} returns this
 */
proto.cln.BkprlistaccounteventsEvents.prototype.setItemType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string tag = 3;
 * @return {string}
 */
proto.cln.BkprlistaccounteventsEvents.prototype.getTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.BkprlistaccounteventsEvents} returns this
 */
proto.cln.BkprlistaccounteventsEvents.prototype.setTag = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Amount credit_msat = 4;
 * @return {?proto.cln.Amount}
 */
proto.cln.BkprlistaccounteventsEvents.prototype.getCreditMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 4));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.BkprlistaccounteventsEvents} returns this
*/
proto.cln.BkprlistaccounteventsEvents.prototype.setCreditMsat = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.BkprlistaccounteventsEvents} returns this
 */
proto.cln.BkprlistaccounteventsEvents.prototype.clearCreditMsat = function() {
  return this.setCreditMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprlistaccounteventsEvents.prototype.hasCreditMsat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Amount debit_msat = 5;
 * @return {?proto.cln.Amount}
 */
proto.cln.BkprlistaccounteventsEvents.prototype.getDebitMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 5));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.BkprlistaccounteventsEvents} returns this
*/
proto.cln.BkprlistaccounteventsEvents.prototype.setDebitMsat = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.BkprlistaccounteventsEvents} returns this
 */
proto.cln.BkprlistaccounteventsEvents.prototype.clearDebitMsat = function() {
  return this.setDebitMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprlistaccounteventsEvents.prototype.hasDebitMsat = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string currency = 6;
 * @return {string}
 */
proto.cln.BkprlistaccounteventsEvents.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.BkprlistaccounteventsEvents} returns this
 */
proto.cln.BkprlistaccounteventsEvents.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional uint32 timestamp = 7;
 * @return {number}
 */
proto.cln.BkprlistaccounteventsEvents.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.BkprlistaccounteventsEvents} returns this
 */
proto.cln.BkprlistaccounteventsEvents.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string outpoint = 8;
 * @return {string}
 */
proto.cln.BkprlistaccounteventsEvents.prototype.getOutpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.BkprlistaccounteventsEvents} returns this
 */
proto.cln.BkprlistaccounteventsEvents.prototype.setOutpoint = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprlistaccounteventsEvents} returns this
 */
proto.cln.BkprlistaccounteventsEvents.prototype.clearOutpoint = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprlistaccounteventsEvents.prototype.hasOutpoint = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 blockheight = 9;
 * @return {number}
 */
proto.cln.BkprlistaccounteventsEvents.prototype.getBlockheight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.BkprlistaccounteventsEvents} returns this
 */
proto.cln.BkprlistaccounteventsEvents.prototype.setBlockheight = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprlistaccounteventsEvents} returns this
 */
proto.cln.BkprlistaccounteventsEvents.prototype.clearBlockheight = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprlistaccounteventsEvents.prototype.hasBlockheight = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string origin = 10;
 * @return {string}
 */
proto.cln.BkprlistaccounteventsEvents.prototype.getOrigin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.BkprlistaccounteventsEvents} returns this
 */
proto.cln.BkprlistaccounteventsEvents.prototype.setOrigin = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprlistaccounteventsEvents} returns this
 */
proto.cln.BkprlistaccounteventsEvents.prototype.clearOrigin = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprlistaccounteventsEvents.prototype.hasOrigin = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional bytes payment_id = 11;
 * @return {!(string|Uint8Array)}
 */
proto.cln.BkprlistaccounteventsEvents.prototype.getPaymentId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * optional bytes payment_id = 11;
 * This is a type-conversion wrapper around `getPaymentId()`
 * @return {string}
 */
proto.cln.BkprlistaccounteventsEvents.prototype.getPaymentId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentId()));
};


/**
 * optional bytes payment_id = 11;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentId()`
 * @return {!Uint8Array}
 */
proto.cln.BkprlistaccounteventsEvents.prototype.getPaymentId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.BkprlistaccounteventsEvents} returns this
 */
proto.cln.BkprlistaccounteventsEvents.prototype.setPaymentId = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprlistaccounteventsEvents} returns this
 */
proto.cln.BkprlistaccounteventsEvents.prototype.clearPaymentId = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprlistaccounteventsEvents.prototype.hasPaymentId = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bytes txid = 12;
 * @return {!(string|Uint8Array)}
 */
proto.cln.BkprlistaccounteventsEvents.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * optional bytes txid = 12;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.BkprlistaccounteventsEvents.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 12;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.BkprlistaccounteventsEvents.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.BkprlistaccounteventsEvents} returns this
 */
proto.cln.BkprlistaccounteventsEvents.prototype.setTxid = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprlistaccounteventsEvents} returns this
 */
proto.cln.BkprlistaccounteventsEvents.prototype.clearTxid = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprlistaccounteventsEvents.prototype.hasTxid = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string description = 13;
 * @return {string}
 */
proto.cln.BkprlistaccounteventsEvents.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.BkprlistaccounteventsEvents} returns this
 */
proto.cln.BkprlistaccounteventsEvents.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprlistaccounteventsEvents} returns this
 */
proto.cln.BkprlistaccounteventsEvents.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprlistaccounteventsEvents.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional Amount fees_msat = 14;
 * @return {?proto.cln.Amount}
 */
proto.cln.BkprlistaccounteventsEvents.prototype.getFeesMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 14));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.BkprlistaccounteventsEvents} returns this
*/
proto.cln.BkprlistaccounteventsEvents.prototype.setFeesMsat = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.BkprlistaccounteventsEvents} returns this
 */
proto.cln.BkprlistaccounteventsEvents.prototype.clearFeesMsat = function() {
  return this.setFeesMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprlistaccounteventsEvents.prototype.hasFeesMsat = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool is_rebalance = 15;
 * @return {boolean}
 */
proto.cln.BkprlistaccounteventsEvents.prototype.getIsRebalance = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.BkprlistaccounteventsEvents} returns this
 */
proto.cln.BkprlistaccounteventsEvents.prototype.setIsRebalance = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprlistaccounteventsEvents} returns this
 */
proto.cln.BkprlistaccounteventsEvents.prototype.clearIsRebalance = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprlistaccounteventsEvents.prototype.hasIsRebalance = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional uint32 part_id = 16;
 * @return {number}
 */
proto.cln.BkprlistaccounteventsEvents.prototype.getPartId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.BkprlistaccounteventsEvents} returns this
 */
proto.cln.BkprlistaccounteventsEvents.prototype.setPartId = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprlistaccounteventsEvents} returns this
 */
proto.cln.BkprlistaccounteventsEvents.prototype.clearPartId = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprlistaccounteventsEvents.prototype.hasPartId = function() {
  return jspb.Message.getField(this, 16) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.BkprlistbalancesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.BkprlistbalancesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.BkprlistbalancesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprlistbalancesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.BkprlistbalancesRequest}
 */
proto.cln.BkprlistbalancesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.BkprlistbalancesRequest;
  return proto.cln.BkprlistbalancesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.BkprlistbalancesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.BkprlistbalancesRequest}
 */
proto.cln.BkprlistbalancesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.BkprlistbalancesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.BkprlistbalancesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.BkprlistbalancesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprlistbalancesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.BkprlistbalancesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.BkprlistbalancesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.BkprlistbalancesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.BkprlistbalancesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprlistbalancesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountsList: jspb.Message.toObjectList(msg.getAccountsList(),
    proto.cln.BkprlistbalancesAccounts.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.BkprlistbalancesResponse}
 */
proto.cln.BkprlistbalancesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.BkprlistbalancesResponse;
  return proto.cln.BkprlistbalancesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.BkprlistbalancesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.BkprlistbalancesResponse}
 */
proto.cln.BkprlistbalancesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.BkprlistbalancesAccounts;
      reader.readMessage(value,proto.cln.BkprlistbalancesAccounts.deserializeBinaryFromReader);
      msg.addAccounts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.BkprlistbalancesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.BkprlistbalancesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.BkprlistbalancesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprlistbalancesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.BkprlistbalancesAccounts.serializeBinaryToWriter
    );
  }
};


/**
 * repeated BkprlistbalancesAccounts accounts = 1;
 * @return {!Array<!proto.cln.BkprlistbalancesAccounts>}
 */
proto.cln.BkprlistbalancesResponse.prototype.getAccountsList = function() {
  return /** @type{!Array<!proto.cln.BkprlistbalancesAccounts>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.BkprlistbalancesAccounts, 1));
};


/**
 * @param {!Array<!proto.cln.BkprlistbalancesAccounts>} value
 * @return {!proto.cln.BkprlistbalancesResponse} returns this
*/
proto.cln.BkprlistbalancesResponse.prototype.setAccountsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.BkprlistbalancesAccounts=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.BkprlistbalancesAccounts}
 */
proto.cln.BkprlistbalancesResponse.prototype.addAccounts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.BkprlistbalancesAccounts, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.BkprlistbalancesResponse} returns this
 */
proto.cln.BkprlistbalancesResponse.prototype.clearAccountsList = function() {
  return this.setAccountsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.BkprlistbalancesAccounts.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.BkprlistbalancesAccounts.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.BkprlistbalancesAccounts.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.BkprlistbalancesAccounts} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprlistbalancesAccounts.toObject = function(includeInstance, msg) {
  var f, obj = {
    account: jspb.Message.getFieldWithDefault(msg, 1, ""),
    balancesList: jspb.Message.toObjectList(msg.getBalancesList(),
    proto.cln.BkprlistbalancesAccountsBalances.toObject, includeInstance),
    peerId: msg.getPeerId_asB64(),
    weOpened: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    accountClosed: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    accountResolved: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    resolvedAtBlock: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.BkprlistbalancesAccounts}
 */
proto.cln.BkprlistbalancesAccounts.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.BkprlistbalancesAccounts;
  return proto.cln.BkprlistbalancesAccounts.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.BkprlistbalancesAccounts} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.BkprlistbalancesAccounts}
 */
proto.cln.BkprlistbalancesAccounts.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccount(value);
      break;
    case 2:
      var value = new proto.cln.BkprlistbalancesAccountsBalances;
      reader.readMessage(value,proto.cln.BkprlistbalancesAccountsBalances.deserializeBinaryFromReader);
      msg.addBalances(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPeerId(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWeOpened(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAccountClosed(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAccountResolved(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setResolvedAtBlock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.BkprlistbalancesAccounts.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.BkprlistbalancesAccounts.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.BkprlistbalancesAccounts} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprlistbalancesAccounts.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccount();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBalancesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.cln.BkprlistbalancesAccountsBalances.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
};


/**
 * optional string account = 1;
 * @return {string}
 */
proto.cln.BkprlistbalancesAccounts.prototype.getAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.BkprlistbalancesAccounts} returns this
 */
proto.cln.BkprlistbalancesAccounts.prototype.setAccount = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated BkprlistbalancesAccountsBalances balances = 2;
 * @return {!Array<!proto.cln.BkprlistbalancesAccountsBalances>}
 */
proto.cln.BkprlistbalancesAccounts.prototype.getBalancesList = function() {
  return /** @type{!Array<!proto.cln.BkprlistbalancesAccountsBalances>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.BkprlistbalancesAccountsBalances, 2));
};


/**
 * @param {!Array<!proto.cln.BkprlistbalancesAccountsBalances>} value
 * @return {!proto.cln.BkprlistbalancesAccounts} returns this
*/
proto.cln.BkprlistbalancesAccounts.prototype.setBalancesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.cln.BkprlistbalancesAccountsBalances=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.BkprlistbalancesAccountsBalances}
 */
proto.cln.BkprlistbalancesAccounts.prototype.addBalances = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.cln.BkprlistbalancesAccountsBalances, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.BkprlistbalancesAccounts} returns this
 */
proto.cln.BkprlistbalancesAccounts.prototype.clearBalancesList = function() {
  return this.setBalancesList([]);
};


/**
 * optional bytes peer_id = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.BkprlistbalancesAccounts.prototype.getPeerId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes peer_id = 3;
 * This is a type-conversion wrapper around `getPeerId()`
 * @return {string}
 */
proto.cln.BkprlistbalancesAccounts.prototype.getPeerId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPeerId()));
};


/**
 * optional bytes peer_id = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPeerId()`
 * @return {!Uint8Array}
 */
proto.cln.BkprlistbalancesAccounts.prototype.getPeerId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPeerId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.BkprlistbalancesAccounts} returns this
 */
proto.cln.BkprlistbalancesAccounts.prototype.setPeerId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprlistbalancesAccounts} returns this
 */
proto.cln.BkprlistbalancesAccounts.prototype.clearPeerId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprlistbalancesAccounts.prototype.hasPeerId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool we_opened = 4;
 * @return {boolean}
 */
proto.cln.BkprlistbalancesAccounts.prototype.getWeOpened = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.BkprlistbalancesAccounts} returns this
 */
proto.cln.BkprlistbalancesAccounts.prototype.setWeOpened = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprlistbalancesAccounts} returns this
 */
proto.cln.BkprlistbalancesAccounts.prototype.clearWeOpened = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprlistbalancesAccounts.prototype.hasWeOpened = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool account_closed = 5;
 * @return {boolean}
 */
proto.cln.BkprlistbalancesAccounts.prototype.getAccountClosed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.BkprlistbalancesAccounts} returns this
 */
proto.cln.BkprlistbalancesAccounts.prototype.setAccountClosed = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprlistbalancesAccounts} returns this
 */
proto.cln.BkprlistbalancesAccounts.prototype.clearAccountClosed = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprlistbalancesAccounts.prototype.hasAccountClosed = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool account_resolved = 6;
 * @return {boolean}
 */
proto.cln.BkprlistbalancesAccounts.prototype.getAccountResolved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.BkprlistbalancesAccounts} returns this
 */
proto.cln.BkprlistbalancesAccounts.prototype.setAccountResolved = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprlistbalancesAccounts} returns this
 */
proto.cln.BkprlistbalancesAccounts.prototype.clearAccountResolved = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprlistbalancesAccounts.prototype.hasAccountResolved = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 resolved_at_block = 7;
 * @return {number}
 */
proto.cln.BkprlistbalancesAccounts.prototype.getResolvedAtBlock = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.BkprlistbalancesAccounts} returns this
 */
proto.cln.BkprlistbalancesAccounts.prototype.setResolvedAtBlock = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprlistbalancesAccounts} returns this
 */
proto.cln.BkprlistbalancesAccounts.prototype.clearResolvedAtBlock = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprlistbalancesAccounts.prototype.hasResolvedAtBlock = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.BkprlistbalancesAccountsBalances.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.BkprlistbalancesAccountsBalances.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.BkprlistbalancesAccountsBalances} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprlistbalancesAccountsBalances.toObject = function(includeInstance, msg) {
  var f, obj = {
    balanceMsat: (f = msg.getBalanceMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    coinType: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.BkprlistbalancesAccountsBalances}
 */
proto.cln.BkprlistbalancesAccountsBalances.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.BkprlistbalancesAccountsBalances;
  return proto.cln.BkprlistbalancesAccountsBalances.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.BkprlistbalancesAccountsBalances} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.BkprlistbalancesAccountsBalances}
 */
proto.cln.BkprlistbalancesAccountsBalances.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setBalanceMsat(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoinType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.BkprlistbalancesAccountsBalances.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.BkprlistbalancesAccountsBalances.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.BkprlistbalancesAccountsBalances} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprlistbalancesAccountsBalances.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBalanceMsat();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getCoinType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Amount balance_msat = 1;
 * @return {?proto.cln.Amount}
 */
proto.cln.BkprlistbalancesAccountsBalances.prototype.getBalanceMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 1));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.BkprlistbalancesAccountsBalances} returns this
*/
proto.cln.BkprlistbalancesAccountsBalances.prototype.setBalanceMsat = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.BkprlistbalancesAccountsBalances} returns this
 */
proto.cln.BkprlistbalancesAccountsBalances.prototype.clearBalanceMsat = function() {
  return this.setBalanceMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprlistbalancesAccountsBalances.prototype.hasBalanceMsat = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string coin_type = 2;
 * @return {string}
 */
proto.cln.BkprlistbalancesAccountsBalances.prototype.getCoinType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.BkprlistbalancesAccountsBalances} returns this
 */
proto.cln.BkprlistbalancesAccountsBalances.prototype.setCoinType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.BkprlistincomeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.BkprlistincomeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.BkprlistincomeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprlistincomeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    consolidateFees: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    startTime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    endTime: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.BkprlistincomeRequest}
 */
proto.cln.BkprlistincomeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.BkprlistincomeRequest;
  return proto.cln.BkprlistincomeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.BkprlistincomeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.BkprlistincomeRequest}
 */
proto.cln.BkprlistincomeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setConsolidateFees(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStartTime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setEndTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.BkprlistincomeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.BkprlistincomeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.BkprlistincomeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprlistincomeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional bool consolidate_fees = 1;
 * @return {boolean}
 */
proto.cln.BkprlistincomeRequest.prototype.getConsolidateFees = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.BkprlistincomeRequest} returns this
 */
proto.cln.BkprlistincomeRequest.prototype.setConsolidateFees = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprlistincomeRequest} returns this
 */
proto.cln.BkprlistincomeRequest.prototype.clearConsolidateFees = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprlistincomeRequest.prototype.hasConsolidateFees = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 start_time = 2;
 * @return {number}
 */
proto.cln.BkprlistincomeRequest.prototype.getStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.BkprlistincomeRequest} returns this
 */
proto.cln.BkprlistincomeRequest.prototype.setStartTime = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprlistincomeRequest} returns this
 */
proto.cln.BkprlistincomeRequest.prototype.clearStartTime = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprlistincomeRequest.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 end_time = 3;
 * @return {number}
 */
proto.cln.BkprlistincomeRequest.prototype.getEndTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.BkprlistincomeRequest} returns this
 */
proto.cln.BkprlistincomeRequest.prototype.setEndTime = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprlistincomeRequest} returns this
 */
proto.cln.BkprlistincomeRequest.prototype.clearEndTime = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprlistincomeRequest.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.BkprlistincomeResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.BkprlistincomeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.BkprlistincomeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.BkprlistincomeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprlistincomeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    incomeEventsList: jspb.Message.toObjectList(msg.getIncomeEventsList(),
    proto.cln.BkprlistincomeIncome_events.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.BkprlistincomeResponse}
 */
proto.cln.BkprlistincomeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.BkprlistincomeResponse;
  return proto.cln.BkprlistincomeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.BkprlistincomeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.BkprlistincomeResponse}
 */
proto.cln.BkprlistincomeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.BkprlistincomeIncome_events;
      reader.readMessage(value,proto.cln.BkprlistincomeIncome_events.deserializeBinaryFromReader);
      msg.addIncomeEvents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.BkprlistincomeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.BkprlistincomeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.BkprlistincomeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprlistincomeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIncomeEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.BkprlistincomeIncome_events.serializeBinaryToWriter
    );
  }
};


/**
 * repeated BkprlistincomeIncome_events income_events = 1;
 * @return {!Array<!proto.cln.BkprlistincomeIncome_events>}
 */
proto.cln.BkprlistincomeResponse.prototype.getIncomeEventsList = function() {
  return /** @type{!Array<!proto.cln.BkprlistincomeIncome_events>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.BkprlistincomeIncome_events, 1));
};


/**
 * @param {!Array<!proto.cln.BkprlistincomeIncome_events>} value
 * @return {!proto.cln.BkprlistincomeResponse} returns this
*/
proto.cln.BkprlistincomeResponse.prototype.setIncomeEventsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.BkprlistincomeIncome_events=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.BkprlistincomeIncome_events}
 */
proto.cln.BkprlistincomeResponse.prototype.addIncomeEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.BkprlistincomeIncome_events, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.BkprlistincomeResponse} returns this
 */
proto.cln.BkprlistincomeResponse.prototype.clearIncomeEventsList = function() {
  return this.setIncomeEventsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.BkprlistincomeIncome_events.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.BkprlistincomeIncome_events.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.BkprlistincomeIncome_events} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprlistincomeIncome_events.toObject = function(includeInstance, msg) {
  var f, obj = {
    account: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tag: jspb.Message.getFieldWithDefault(msg, 2, ""),
    creditMsat: (f = msg.getCreditMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    debitMsat: (f = msg.getDebitMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    currency: jspb.Message.getFieldWithDefault(msg, 5, ""),
    timestamp: jspb.Message.getFieldWithDefault(msg, 6, 0),
    description: jspb.Message.getFieldWithDefault(msg, 7, ""),
    outpoint: jspb.Message.getFieldWithDefault(msg, 8, ""),
    txid: msg.getTxid_asB64(),
    paymentId: msg.getPaymentId_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.BkprlistincomeIncome_events}
 */
proto.cln.BkprlistincomeIncome_events.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.BkprlistincomeIncome_events;
  return proto.cln.BkprlistincomeIncome_events.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.BkprlistincomeIncome_events} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.BkprlistincomeIncome_events}
 */
proto.cln.BkprlistincomeIncome_events.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTag(value);
      break;
    case 3:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setCreditMsat(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setDebitMsat(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTimestamp(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutpoint(value);
      break;
    case 9:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    case 10:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.BkprlistincomeIncome_events.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.BkprlistincomeIncome_events.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.BkprlistincomeIncome_events} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BkprlistincomeIncome_events.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccount();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTag();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCreditMsat();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getDebitMsat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBytes(
      9,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBytes(
      10,
      f
    );
  }
};


/**
 * optional string account = 1;
 * @return {string}
 */
proto.cln.BkprlistincomeIncome_events.prototype.getAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.BkprlistincomeIncome_events} returns this
 */
proto.cln.BkprlistincomeIncome_events.prototype.setAccount = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string tag = 2;
 * @return {string}
 */
proto.cln.BkprlistincomeIncome_events.prototype.getTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.BkprlistincomeIncome_events} returns this
 */
proto.cln.BkprlistincomeIncome_events.prototype.setTag = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Amount credit_msat = 3;
 * @return {?proto.cln.Amount}
 */
proto.cln.BkprlistincomeIncome_events.prototype.getCreditMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 3));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.BkprlistincomeIncome_events} returns this
*/
proto.cln.BkprlistincomeIncome_events.prototype.setCreditMsat = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.BkprlistincomeIncome_events} returns this
 */
proto.cln.BkprlistincomeIncome_events.prototype.clearCreditMsat = function() {
  return this.setCreditMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprlistincomeIncome_events.prototype.hasCreditMsat = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Amount debit_msat = 4;
 * @return {?proto.cln.Amount}
 */
proto.cln.BkprlistincomeIncome_events.prototype.getDebitMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 4));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.BkprlistincomeIncome_events} returns this
*/
proto.cln.BkprlistincomeIncome_events.prototype.setDebitMsat = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.BkprlistincomeIncome_events} returns this
 */
proto.cln.BkprlistincomeIncome_events.prototype.clearDebitMsat = function() {
  return this.setDebitMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprlistincomeIncome_events.prototype.hasDebitMsat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string currency = 5;
 * @return {string}
 */
proto.cln.BkprlistincomeIncome_events.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.BkprlistincomeIncome_events} returns this
 */
proto.cln.BkprlistincomeIncome_events.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional uint32 timestamp = 6;
 * @return {number}
 */
proto.cln.BkprlistincomeIncome_events.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.BkprlistincomeIncome_events} returns this
 */
proto.cln.BkprlistincomeIncome_events.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string description = 7;
 * @return {string}
 */
proto.cln.BkprlistincomeIncome_events.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.BkprlistincomeIncome_events} returns this
 */
proto.cln.BkprlistincomeIncome_events.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprlistincomeIncome_events} returns this
 */
proto.cln.BkprlistincomeIncome_events.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprlistincomeIncome_events.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string outpoint = 8;
 * @return {string}
 */
proto.cln.BkprlistincomeIncome_events.prototype.getOutpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.BkprlistincomeIncome_events} returns this
 */
proto.cln.BkprlistincomeIncome_events.prototype.setOutpoint = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprlistincomeIncome_events} returns this
 */
proto.cln.BkprlistincomeIncome_events.prototype.clearOutpoint = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprlistincomeIncome_events.prototype.hasOutpoint = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bytes txid = 9;
 * @return {!(string|Uint8Array)}
 */
proto.cln.BkprlistincomeIncome_events.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * optional bytes txid = 9;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.BkprlistincomeIncome_events.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 9;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.BkprlistincomeIncome_events.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.BkprlistincomeIncome_events} returns this
 */
proto.cln.BkprlistincomeIncome_events.prototype.setTxid = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprlistincomeIncome_events} returns this
 */
proto.cln.BkprlistincomeIncome_events.prototype.clearTxid = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprlistincomeIncome_events.prototype.hasTxid = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bytes payment_id = 10;
 * @return {!(string|Uint8Array)}
 */
proto.cln.BkprlistincomeIncome_events.prototype.getPaymentId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * optional bytes payment_id = 10;
 * This is a type-conversion wrapper around `getPaymentId()`
 * @return {string}
 */
proto.cln.BkprlistincomeIncome_events.prototype.getPaymentId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentId()));
};


/**
 * optional bytes payment_id = 10;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentId()`
 * @return {!Uint8Array}
 */
proto.cln.BkprlistincomeIncome_events.prototype.getPaymentId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.BkprlistincomeIncome_events} returns this
 */
proto.cln.BkprlistincomeIncome_events.prototype.setPaymentId = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BkprlistincomeIncome_events} returns this
 */
proto.cln.BkprlistincomeIncome_events.prototype.clearPaymentId = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BkprlistincomeIncome_events.prototype.hasPaymentId = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.BlacklistruneRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.BlacklistruneRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.BlacklistruneRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BlacklistruneRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    start: jspb.Message.getFieldWithDefault(msg, 1, 0),
    end: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.BlacklistruneRequest}
 */
proto.cln.BlacklistruneRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.BlacklistruneRequest;
  return proto.cln.BlacklistruneRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.BlacklistruneRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.BlacklistruneRequest}
 */
proto.cln.BlacklistruneRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStart(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.BlacklistruneRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.BlacklistruneRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.BlacklistruneRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BlacklistruneRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 start = 1;
 * @return {number}
 */
proto.cln.BlacklistruneRequest.prototype.getStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.BlacklistruneRequest} returns this
 */
proto.cln.BlacklistruneRequest.prototype.setStart = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BlacklistruneRequest} returns this
 */
proto.cln.BlacklistruneRequest.prototype.clearStart = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BlacklistruneRequest.prototype.hasStart = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 end = 2;
 * @return {number}
 */
proto.cln.BlacklistruneRequest.prototype.getEnd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.BlacklistruneRequest} returns this
 */
proto.cln.BlacklistruneRequest.prototype.setEnd = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.BlacklistruneRequest} returns this
 */
proto.cln.BlacklistruneRequest.prototype.clearEnd = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.BlacklistruneRequest.prototype.hasEnd = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.BlacklistruneResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.BlacklistruneResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.BlacklistruneResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.BlacklistruneResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BlacklistruneResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    blacklistList: jspb.Message.toObjectList(msg.getBlacklistList(),
    proto.cln.BlacklistruneBlacklist.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.BlacklistruneResponse}
 */
proto.cln.BlacklistruneResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.BlacklistruneResponse;
  return proto.cln.BlacklistruneResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.BlacklistruneResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.BlacklistruneResponse}
 */
proto.cln.BlacklistruneResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.BlacklistruneBlacklist;
      reader.readMessage(value,proto.cln.BlacklistruneBlacklist.deserializeBinaryFromReader);
      msg.addBlacklist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.BlacklistruneResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.BlacklistruneResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.BlacklistruneResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BlacklistruneResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlacklistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.BlacklistruneBlacklist.serializeBinaryToWriter
    );
  }
};


/**
 * repeated BlacklistruneBlacklist blacklist = 1;
 * @return {!Array<!proto.cln.BlacklistruneBlacklist>}
 */
proto.cln.BlacklistruneResponse.prototype.getBlacklistList = function() {
  return /** @type{!Array<!proto.cln.BlacklistruneBlacklist>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.BlacklistruneBlacklist, 1));
};


/**
 * @param {!Array<!proto.cln.BlacklistruneBlacklist>} value
 * @return {!proto.cln.BlacklistruneResponse} returns this
*/
proto.cln.BlacklistruneResponse.prototype.setBlacklistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.BlacklistruneBlacklist=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.BlacklistruneBlacklist}
 */
proto.cln.BlacklistruneResponse.prototype.addBlacklist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.BlacklistruneBlacklist, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.BlacklistruneResponse} returns this
 */
proto.cln.BlacklistruneResponse.prototype.clearBlacklistList = function() {
  return this.setBlacklistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.BlacklistruneBlacklist.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.BlacklistruneBlacklist.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.BlacklistruneBlacklist} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BlacklistruneBlacklist.toObject = function(includeInstance, msg) {
  var f, obj = {
    start: jspb.Message.getFieldWithDefault(msg, 1, 0),
    end: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.BlacklistruneBlacklist}
 */
proto.cln.BlacklistruneBlacklist.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.BlacklistruneBlacklist;
  return proto.cln.BlacklistruneBlacklist.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.BlacklistruneBlacklist} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.BlacklistruneBlacklist}
 */
proto.cln.BlacklistruneBlacklist.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStart(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.BlacklistruneBlacklist.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.BlacklistruneBlacklist.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.BlacklistruneBlacklist} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BlacklistruneBlacklist.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStart();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getEnd();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 start = 1;
 * @return {number}
 */
proto.cln.BlacklistruneBlacklist.prototype.getStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.BlacklistruneBlacklist} returns this
 */
proto.cln.BlacklistruneBlacklist.prototype.setStart = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 end = 2;
 * @return {number}
 */
proto.cln.BlacklistruneBlacklist.prototype.getEnd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.BlacklistruneBlacklist} returns this
 */
proto.cln.BlacklistruneBlacklist.prototype.setEnd = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.CheckruneRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.CheckruneRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.CheckruneRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.CheckruneRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CheckruneRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rune: jspb.Message.getFieldWithDefault(msg, 1, ""),
    nodeid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    method: jspb.Message.getFieldWithDefault(msg, 3, ""),
    paramsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.CheckruneRequest}
 */
proto.cln.CheckruneRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.CheckruneRequest;
  return proto.cln.CheckruneRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.CheckruneRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.CheckruneRequest}
 */
proto.cln.CheckruneRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRune(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethod(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addParams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.CheckruneRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.CheckruneRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.CheckruneRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CheckruneRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRune();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getParamsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * optional string rune = 1;
 * @return {string}
 */
proto.cln.CheckruneRequest.prototype.getRune = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.CheckruneRequest} returns this
 */
proto.cln.CheckruneRequest.prototype.setRune = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string nodeid = 2;
 * @return {string}
 */
proto.cln.CheckruneRequest.prototype.getNodeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.CheckruneRequest} returns this
 */
proto.cln.CheckruneRequest.prototype.setNodeid = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CheckruneRequest} returns this
 */
proto.cln.CheckruneRequest.prototype.clearNodeid = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CheckruneRequest.prototype.hasNodeid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string method = 3;
 * @return {string}
 */
proto.cln.CheckruneRequest.prototype.getMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.CheckruneRequest} returns this
 */
proto.cln.CheckruneRequest.prototype.setMethod = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CheckruneRequest} returns this
 */
proto.cln.CheckruneRequest.prototype.clearMethod = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CheckruneRequest.prototype.hasMethod = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated string params = 4;
 * @return {!Array<string>}
 */
proto.cln.CheckruneRequest.prototype.getParamsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.CheckruneRequest} returns this
 */
proto.cln.CheckruneRequest.prototype.setParamsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.CheckruneRequest} returns this
 */
proto.cln.CheckruneRequest.prototype.addParams = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.CheckruneRequest} returns this
 */
proto.cln.CheckruneRequest.prototype.clearParamsList = function() {
  return this.setParamsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.CheckruneResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.CheckruneResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.CheckruneResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CheckruneResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    valid: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.CheckruneResponse}
 */
proto.cln.CheckruneResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.CheckruneResponse;
  return proto.cln.CheckruneResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.CheckruneResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.CheckruneResponse}
 */
proto.cln.CheckruneResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setValid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.CheckruneResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.CheckruneResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.CheckruneResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CheckruneResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValid();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool valid = 1;
 * @return {boolean}
 */
proto.cln.CheckruneResponse.prototype.getValid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.CheckruneResponse} returns this
 */
proto.cln.CheckruneResponse.prototype.setValid = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.CreateruneRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.CreateruneRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.CreateruneRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.CreateruneRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CreateruneRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rune: jspb.Message.getFieldWithDefault(msg, 1, ""),
    restrictionsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.CreateruneRequest}
 */
proto.cln.CreateruneRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.CreateruneRequest;
  return proto.cln.CreateruneRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.CreateruneRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.CreateruneRequest}
 */
proto.cln.CreateruneRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRune(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addRestrictions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.CreateruneRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.CreateruneRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.CreateruneRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CreateruneRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRestrictionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string rune = 1;
 * @return {string}
 */
proto.cln.CreateruneRequest.prototype.getRune = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.CreateruneRequest} returns this
 */
proto.cln.CreateruneRequest.prototype.setRune = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CreateruneRequest} returns this
 */
proto.cln.CreateruneRequest.prototype.clearRune = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CreateruneRequest.prototype.hasRune = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated string restrictions = 2;
 * @return {!Array<string>}
 */
proto.cln.CreateruneRequest.prototype.getRestrictionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.CreateruneRequest} returns this
 */
proto.cln.CreateruneRequest.prototype.setRestrictionsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.CreateruneRequest} returns this
 */
proto.cln.CreateruneRequest.prototype.addRestrictions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.CreateruneRequest} returns this
 */
proto.cln.CreateruneRequest.prototype.clearRestrictionsList = function() {
  return this.setRestrictionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.CreateruneResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.CreateruneResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.CreateruneResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CreateruneResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    rune: jspb.Message.getFieldWithDefault(msg, 1, ""),
    uniqueId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    warningUnrestrictedRune: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.CreateruneResponse}
 */
proto.cln.CreateruneResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.CreateruneResponse;
  return proto.cln.CreateruneResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.CreateruneResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.CreateruneResponse}
 */
proto.cln.CreateruneResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRune(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUniqueId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningUnrestrictedRune(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.CreateruneResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.CreateruneResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.CreateruneResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CreateruneResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRune();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUniqueId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string rune = 1;
 * @return {string}
 */
proto.cln.CreateruneResponse.prototype.getRune = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.CreateruneResponse} returns this
 */
proto.cln.CreateruneResponse.prototype.setRune = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string unique_id = 2;
 * @return {string}
 */
proto.cln.CreateruneResponse.prototype.getUniqueId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.CreateruneResponse} returns this
 */
proto.cln.CreateruneResponse.prototype.setUniqueId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string warning_unrestricted_rune = 3;
 * @return {string}
 */
proto.cln.CreateruneResponse.prototype.getWarningUnrestrictedRune = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.CreateruneResponse} returns this
 */
proto.cln.CreateruneResponse.prototype.setWarningUnrestrictedRune = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CreateruneResponse} returns this
 */
proto.cln.CreateruneResponse.prototype.clearWarningUnrestrictedRune = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CreateruneResponse.prototype.hasWarningUnrestrictedRune = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ShowrunesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ShowrunesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ShowrunesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ShowrunesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rune: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ShowrunesRequest}
 */
proto.cln.ShowrunesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ShowrunesRequest;
  return proto.cln.ShowrunesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ShowrunesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ShowrunesRequest}
 */
proto.cln.ShowrunesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRune(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ShowrunesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ShowrunesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ShowrunesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ShowrunesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string rune = 1;
 * @return {string}
 */
proto.cln.ShowrunesRequest.prototype.getRune = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ShowrunesRequest} returns this
 */
proto.cln.ShowrunesRequest.prototype.setRune = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ShowrunesRequest} returns this
 */
proto.cln.ShowrunesRequest.prototype.clearRune = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ShowrunesRequest.prototype.hasRune = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ShowrunesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ShowrunesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ShowrunesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ShowrunesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ShowrunesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    runesList: jspb.Message.toObjectList(msg.getRunesList(),
    proto.cln.ShowrunesRunes.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ShowrunesResponse}
 */
proto.cln.ShowrunesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ShowrunesResponse;
  return proto.cln.ShowrunesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ShowrunesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ShowrunesResponse}
 */
proto.cln.ShowrunesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.ShowrunesRunes;
      reader.readMessage(value,proto.cln.ShowrunesRunes.deserializeBinaryFromReader);
      msg.addRunes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ShowrunesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ShowrunesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ShowrunesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ShowrunesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRunesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.ShowrunesRunes.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ShowrunesRunes runes = 1;
 * @return {!Array<!proto.cln.ShowrunesRunes>}
 */
proto.cln.ShowrunesResponse.prototype.getRunesList = function() {
  return /** @type{!Array<!proto.cln.ShowrunesRunes>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ShowrunesRunes, 1));
};


/**
 * @param {!Array<!proto.cln.ShowrunesRunes>} value
 * @return {!proto.cln.ShowrunesResponse} returns this
*/
proto.cln.ShowrunesResponse.prototype.setRunesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.ShowrunesRunes=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ShowrunesRunes}
 */
proto.cln.ShowrunesResponse.prototype.addRunes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.ShowrunesRunes, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ShowrunesResponse} returns this
 */
proto.cln.ShowrunesResponse.prototype.clearRunesList = function() {
  return this.setRunesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ShowrunesRunes.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ShowrunesRunes.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ShowrunesRunes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ShowrunesRunes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ShowrunesRunes.toObject = function(includeInstance, msg) {
  var f, obj = {
    rune: jspb.Message.getFieldWithDefault(msg, 1, ""),
    uniqueId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    restrictionsList: jspb.Message.toObjectList(msg.getRestrictionsList(),
    proto.cln.ShowrunesRunesRestrictions.toObject, includeInstance),
    restrictionsAsEnglish: jspb.Message.getFieldWithDefault(msg, 4, ""),
    stored: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    blacklisted: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    lastUsed: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    ourRune: jspb.Message.getBooleanFieldWithDefault(msg, 8, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ShowrunesRunes}
 */
proto.cln.ShowrunesRunes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ShowrunesRunes;
  return proto.cln.ShowrunesRunes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ShowrunesRunes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ShowrunesRunes}
 */
proto.cln.ShowrunesRunes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRune(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUniqueId(value);
      break;
    case 3:
      var value = new proto.cln.ShowrunesRunesRestrictions;
      reader.readMessage(value,proto.cln.ShowrunesRunesRestrictions.deserializeBinaryFromReader);
      msg.addRestrictions(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRestrictionsAsEnglish(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStored(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBlacklisted(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLastUsed(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOurRune(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ShowrunesRunes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ShowrunesRunes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ShowrunesRunes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ShowrunesRunes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRune();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUniqueId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRestrictionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.cln.ShowrunesRunesRestrictions.serializeBinaryToWriter
    );
  }
  f = message.getRestrictionsAsEnglish();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * optional string rune = 1;
 * @return {string}
 */
proto.cln.ShowrunesRunes.prototype.getRune = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ShowrunesRunes} returns this
 */
proto.cln.ShowrunesRunes.prototype.setRune = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string unique_id = 2;
 * @return {string}
 */
proto.cln.ShowrunesRunes.prototype.getUniqueId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ShowrunesRunes} returns this
 */
proto.cln.ShowrunesRunes.prototype.setUniqueId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated ShowrunesRunesRestrictions restrictions = 3;
 * @return {!Array<!proto.cln.ShowrunesRunesRestrictions>}
 */
proto.cln.ShowrunesRunes.prototype.getRestrictionsList = function() {
  return /** @type{!Array<!proto.cln.ShowrunesRunesRestrictions>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ShowrunesRunesRestrictions, 3));
};


/**
 * @param {!Array<!proto.cln.ShowrunesRunesRestrictions>} value
 * @return {!proto.cln.ShowrunesRunes} returns this
*/
proto.cln.ShowrunesRunes.prototype.setRestrictionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.cln.ShowrunesRunesRestrictions=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ShowrunesRunesRestrictions}
 */
proto.cln.ShowrunesRunes.prototype.addRestrictions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.cln.ShowrunesRunesRestrictions, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ShowrunesRunes} returns this
 */
proto.cln.ShowrunesRunes.prototype.clearRestrictionsList = function() {
  return this.setRestrictionsList([]);
};


/**
 * optional string restrictions_as_english = 4;
 * @return {string}
 */
proto.cln.ShowrunesRunes.prototype.getRestrictionsAsEnglish = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ShowrunesRunes} returns this
 */
proto.cln.ShowrunesRunes.prototype.setRestrictionsAsEnglish = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool stored = 5;
 * @return {boolean}
 */
proto.cln.ShowrunesRunes.prototype.getStored = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ShowrunesRunes} returns this
 */
proto.cln.ShowrunesRunes.prototype.setStored = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ShowrunesRunes} returns this
 */
proto.cln.ShowrunesRunes.prototype.clearStored = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ShowrunesRunes.prototype.hasStored = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool blacklisted = 6;
 * @return {boolean}
 */
proto.cln.ShowrunesRunes.prototype.getBlacklisted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ShowrunesRunes} returns this
 */
proto.cln.ShowrunesRunes.prototype.setBlacklisted = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ShowrunesRunes} returns this
 */
proto.cln.ShowrunesRunes.prototype.clearBlacklisted = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ShowrunesRunes.prototype.hasBlacklisted = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double last_used = 7;
 * @return {number}
 */
proto.cln.ShowrunesRunes.prototype.getLastUsed = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ShowrunesRunes} returns this
 */
proto.cln.ShowrunesRunes.prototype.setLastUsed = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ShowrunesRunes} returns this
 */
proto.cln.ShowrunesRunes.prototype.clearLastUsed = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ShowrunesRunes.prototype.hasLastUsed = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool our_rune = 8;
 * @return {boolean}
 */
proto.cln.ShowrunesRunes.prototype.getOurRune = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ShowrunesRunes} returns this
 */
proto.cln.ShowrunesRunes.prototype.setOurRune = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ShowrunesRunes} returns this
 */
proto.cln.ShowrunesRunes.prototype.clearOurRune = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ShowrunesRunes.prototype.hasOurRune = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ShowrunesRunesRestrictions.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ShowrunesRunesRestrictions.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ShowrunesRunesRestrictions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ShowrunesRunesRestrictions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ShowrunesRunesRestrictions.toObject = function(includeInstance, msg) {
  var f, obj = {
    alternativesList: jspb.Message.toObjectList(msg.getAlternativesList(),
    proto.cln.ShowrunesRunesRestrictionsAlternatives.toObject, includeInstance),
    english: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ShowrunesRunesRestrictions}
 */
proto.cln.ShowrunesRunesRestrictions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ShowrunesRunesRestrictions;
  return proto.cln.ShowrunesRunesRestrictions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ShowrunesRunesRestrictions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ShowrunesRunesRestrictions}
 */
proto.cln.ShowrunesRunesRestrictions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.ShowrunesRunesRestrictionsAlternatives;
      reader.readMessage(value,proto.cln.ShowrunesRunesRestrictionsAlternatives.deserializeBinaryFromReader);
      msg.addAlternatives(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnglish(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ShowrunesRunesRestrictions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ShowrunesRunesRestrictions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ShowrunesRunesRestrictions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ShowrunesRunesRestrictions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAlternativesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.ShowrunesRunesRestrictionsAlternatives.serializeBinaryToWriter
    );
  }
  f = message.getEnglish();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated ShowrunesRunesRestrictionsAlternatives alternatives = 1;
 * @return {!Array<!proto.cln.ShowrunesRunesRestrictionsAlternatives>}
 */
proto.cln.ShowrunesRunesRestrictions.prototype.getAlternativesList = function() {
  return /** @type{!Array<!proto.cln.ShowrunesRunesRestrictionsAlternatives>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ShowrunesRunesRestrictionsAlternatives, 1));
};


/**
 * @param {!Array<!proto.cln.ShowrunesRunesRestrictionsAlternatives>} value
 * @return {!proto.cln.ShowrunesRunesRestrictions} returns this
*/
proto.cln.ShowrunesRunesRestrictions.prototype.setAlternativesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.ShowrunesRunesRestrictionsAlternatives=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ShowrunesRunesRestrictionsAlternatives}
 */
proto.cln.ShowrunesRunesRestrictions.prototype.addAlternatives = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.ShowrunesRunesRestrictionsAlternatives, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ShowrunesRunesRestrictions} returns this
 */
proto.cln.ShowrunesRunesRestrictions.prototype.clearAlternativesList = function() {
  return this.setAlternativesList([]);
};


/**
 * optional string english = 2;
 * @return {string}
 */
proto.cln.ShowrunesRunesRestrictions.prototype.getEnglish = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ShowrunesRunesRestrictions} returns this
 */
proto.cln.ShowrunesRunesRestrictions.prototype.setEnglish = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ShowrunesRunesRestrictionsAlternatives.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ShowrunesRunesRestrictionsAlternatives.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ShowrunesRunesRestrictionsAlternatives} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ShowrunesRunesRestrictionsAlternatives.toObject = function(includeInstance, msg) {
  var f, obj = {
    fieldname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, ""),
    condition: jspb.Message.getFieldWithDefault(msg, 3, ""),
    english: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ShowrunesRunesRestrictionsAlternatives}
 */
proto.cln.ShowrunesRunesRestrictionsAlternatives.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ShowrunesRunesRestrictionsAlternatives;
  return proto.cln.ShowrunesRunesRestrictionsAlternatives.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ShowrunesRunesRestrictionsAlternatives} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ShowrunesRunesRestrictionsAlternatives}
 */
proto.cln.ShowrunesRunesRestrictionsAlternatives.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFieldname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCondition(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnglish(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ShowrunesRunesRestrictionsAlternatives.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ShowrunesRunesRestrictionsAlternatives.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ShowrunesRunesRestrictionsAlternatives} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ShowrunesRunesRestrictionsAlternatives.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCondition();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEnglish();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string fieldname = 1;
 * @return {string}
 */
proto.cln.ShowrunesRunesRestrictionsAlternatives.prototype.getFieldname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ShowrunesRunesRestrictionsAlternatives} returns this
 */
proto.cln.ShowrunesRunesRestrictionsAlternatives.prototype.setFieldname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.cln.ShowrunesRunesRestrictionsAlternatives.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ShowrunesRunesRestrictionsAlternatives} returns this
 */
proto.cln.ShowrunesRunesRestrictionsAlternatives.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string condition = 3;
 * @return {string}
 */
proto.cln.ShowrunesRunesRestrictionsAlternatives.prototype.getCondition = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ShowrunesRunesRestrictionsAlternatives} returns this
 */
proto.cln.ShowrunesRunesRestrictionsAlternatives.prototype.setCondition = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string english = 4;
 * @return {string}
 */
proto.cln.ShowrunesRunesRestrictionsAlternatives.prototype.getEnglish = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ShowrunesRunesRestrictionsAlternatives} returns this
 */
proto.cln.ShowrunesRunesRestrictionsAlternatives.prototype.setEnglish = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.StreamBlockAddedRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.StreamBlockAddedRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.StreamBlockAddedRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.StreamBlockAddedRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.StreamBlockAddedRequest}
 */
proto.cln.StreamBlockAddedRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.StreamBlockAddedRequest;
  return proto.cln.StreamBlockAddedRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.StreamBlockAddedRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.StreamBlockAddedRequest}
 */
proto.cln.StreamBlockAddedRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.StreamBlockAddedRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.StreamBlockAddedRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.StreamBlockAddedRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.StreamBlockAddedRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.BlockAddedNotification.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.BlockAddedNotification.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.BlockAddedNotification} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BlockAddedNotification.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: msg.getHash_asB64(),
    height: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.BlockAddedNotification}
 */
proto.cln.BlockAddedNotification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.BlockAddedNotification;
  return proto.cln.BlockAddedNotification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.BlockAddedNotification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.BlockAddedNotification}
 */
proto.cln.BlockAddedNotification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.BlockAddedNotification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.BlockAddedNotification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.BlockAddedNotification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.BlockAddedNotification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional bytes hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.BlockAddedNotification.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes hash = 1;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.cln.BlockAddedNotification.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.cln.BlockAddedNotification.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.BlockAddedNotification} returns this
 */
proto.cln.BlockAddedNotification.prototype.setHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint32 height = 2;
 * @return {number}
 */
proto.cln.BlockAddedNotification.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.BlockAddedNotification} returns this
 */
proto.cln.BlockAddedNotification.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.StreamChannelOpenFailedRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.StreamChannelOpenFailedRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.StreamChannelOpenFailedRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.StreamChannelOpenFailedRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.StreamChannelOpenFailedRequest}
 */
proto.cln.StreamChannelOpenFailedRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.StreamChannelOpenFailedRequest;
  return proto.cln.StreamChannelOpenFailedRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.StreamChannelOpenFailedRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.StreamChannelOpenFailedRequest}
 */
proto.cln.StreamChannelOpenFailedRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.StreamChannelOpenFailedRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.StreamChannelOpenFailedRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.StreamChannelOpenFailedRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.StreamChannelOpenFailedRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ChannelOpenFailedNotification.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ChannelOpenFailedNotification.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ChannelOpenFailedNotification} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ChannelOpenFailedNotification.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelId: msg.getChannelId_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ChannelOpenFailedNotification}
 */
proto.cln.ChannelOpenFailedNotification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ChannelOpenFailedNotification;
  return proto.cln.ChannelOpenFailedNotification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ChannelOpenFailedNotification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ChannelOpenFailedNotification}
 */
proto.cln.ChannelOpenFailedNotification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChannelId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ChannelOpenFailedNotification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ChannelOpenFailedNotification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ChannelOpenFailedNotification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ChannelOpenFailedNotification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes channel_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ChannelOpenFailedNotification.prototype.getChannelId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes channel_id = 1;
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {string}
 */
proto.cln.ChannelOpenFailedNotification.prototype.getChannelId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChannelId()));
};


/**
 * optional bytes channel_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {!Uint8Array}
 */
proto.cln.ChannelOpenFailedNotification.prototype.getChannelId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChannelId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ChannelOpenFailedNotification} returns this
 */
proto.cln.ChannelOpenFailedNotification.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.StreamChannelOpenedRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.StreamChannelOpenedRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.StreamChannelOpenedRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.StreamChannelOpenedRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.StreamChannelOpenedRequest}
 */
proto.cln.StreamChannelOpenedRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.StreamChannelOpenedRequest;
  return proto.cln.StreamChannelOpenedRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.StreamChannelOpenedRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.StreamChannelOpenedRequest}
 */
proto.cln.StreamChannelOpenedRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.StreamChannelOpenedRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.StreamChannelOpenedRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.StreamChannelOpenedRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.StreamChannelOpenedRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ChannelOpenedNotification.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ChannelOpenedNotification.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ChannelOpenedNotification} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ChannelOpenedNotification.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64(),
    fundingMsat: (f = msg.getFundingMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    fundingTxid: msg.getFundingTxid_asB64(),
    channelReady: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ChannelOpenedNotification}
 */
proto.cln.ChannelOpenedNotification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ChannelOpenedNotification;
  return proto.cln.ChannelOpenedNotification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ChannelOpenedNotification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ChannelOpenedNotification}
 */
proto.cln.ChannelOpenedNotification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    case 2:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setFundingMsat(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFundingTxid(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setChannelReady(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ChannelOpenedNotification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ChannelOpenedNotification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ChannelOpenedNotification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ChannelOpenedNotification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getFundingMsat();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getFundingTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getChannelReady();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional bytes id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ChannelOpenedNotification.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes id = 1;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.cln.ChannelOpenedNotification.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.cln.ChannelOpenedNotification.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ChannelOpenedNotification} returns this
 */
proto.cln.ChannelOpenedNotification.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ChannelOpenedNotification} returns this
 */
proto.cln.ChannelOpenedNotification.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ChannelOpenedNotification.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Amount funding_msat = 2;
 * @return {?proto.cln.Amount}
 */
proto.cln.ChannelOpenedNotification.prototype.getFundingMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 2));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ChannelOpenedNotification} returns this
*/
proto.cln.ChannelOpenedNotification.prototype.setFundingMsat = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ChannelOpenedNotification} returns this
 */
proto.cln.ChannelOpenedNotification.prototype.clearFundingMsat = function() {
  return this.setFundingMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ChannelOpenedNotification.prototype.hasFundingMsat = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes funding_txid = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ChannelOpenedNotification.prototype.getFundingTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes funding_txid = 3;
 * This is a type-conversion wrapper around `getFundingTxid()`
 * @return {string}
 */
proto.cln.ChannelOpenedNotification.prototype.getFundingTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFundingTxid()));
};


/**
 * optional bytes funding_txid = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFundingTxid()`
 * @return {!Uint8Array}
 */
proto.cln.ChannelOpenedNotification.prototype.getFundingTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFundingTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ChannelOpenedNotification} returns this
 */
proto.cln.ChannelOpenedNotification.prototype.setFundingTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional bool channel_ready = 4;
 * @return {boolean}
 */
proto.cln.ChannelOpenedNotification.prototype.getChannelReady = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ChannelOpenedNotification} returns this
 */
proto.cln.ChannelOpenedNotification.prototype.setChannelReady = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.StreamConnectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.StreamConnectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.StreamConnectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.StreamConnectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.StreamConnectRequest}
 */
proto.cln.StreamConnectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.StreamConnectRequest;
  return proto.cln.StreamConnectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.StreamConnectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.StreamConnectRequest}
 */
proto.cln.StreamConnectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.StreamConnectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.StreamConnectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.StreamConnectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.StreamConnectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.PeerConnectNotification.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.PeerConnectNotification.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.PeerConnectNotification} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PeerConnectNotification.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64(),
    direction: jspb.Message.getFieldWithDefault(msg, 2, 0),
    address: (f = msg.getAddress()) && proto.cln.PeerConnectAddress.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.PeerConnectNotification}
 */
proto.cln.PeerConnectNotification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.PeerConnectNotification;
  return proto.cln.PeerConnectNotification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.PeerConnectNotification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.PeerConnectNotification}
 */
proto.cln.PeerConnectNotification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.cln.PeerConnectNotification.PeerConnectDirection} */ (reader.readEnum());
      msg.setDirection(value);
      break;
    case 3:
      var value = new proto.cln.PeerConnectAddress;
      reader.readMessage(value,proto.cln.PeerConnectAddress.deserializeBinaryFromReader);
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.PeerConnectNotification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.PeerConnectNotification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.PeerConnectNotification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PeerConnectNotification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getDirection();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getAddress();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cln.PeerConnectAddress.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.PeerConnectNotification.PeerConnectDirection = {
  IN: 0,
  OUT: 1
};

/**
 * optional bytes id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.PeerConnectNotification.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes id = 1;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.cln.PeerConnectNotification.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.cln.PeerConnectNotification.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.PeerConnectNotification} returns this
 */
proto.cln.PeerConnectNotification.prototype.setId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional PeerConnectDirection direction = 2;
 * @return {!proto.cln.PeerConnectNotification.PeerConnectDirection}
 */
proto.cln.PeerConnectNotification.prototype.getDirection = function() {
  return /** @type {!proto.cln.PeerConnectNotification.PeerConnectDirection} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.cln.PeerConnectNotification.PeerConnectDirection} value
 * @return {!proto.cln.PeerConnectNotification} returns this
 */
proto.cln.PeerConnectNotification.prototype.setDirection = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional PeerConnectAddress address = 3;
 * @return {?proto.cln.PeerConnectAddress}
 */
proto.cln.PeerConnectNotification.prototype.getAddress = function() {
  return /** @type{?proto.cln.PeerConnectAddress} */ (
    jspb.Message.getWrapperField(this, proto.cln.PeerConnectAddress, 3));
};


/**
 * @param {?proto.cln.PeerConnectAddress|undefined} value
 * @return {!proto.cln.PeerConnectNotification} returns this
*/
proto.cln.PeerConnectNotification.prototype.setAddress = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.PeerConnectNotification} returns this
 */
proto.cln.PeerConnectNotification.prototype.clearAddress = function() {
  return this.setAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PeerConnectNotification.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.PeerConnectAddress.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.PeerConnectAddress.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.PeerConnectAddress} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PeerConnectAddress.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    socket: jspb.Message.getFieldWithDefault(msg, 2, ""),
    address: jspb.Message.getFieldWithDefault(msg, 3, ""),
    port: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.PeerConnectAddress}
 */
proto.cln.PeerConnectAddress.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.PeerConnectAddress;
  return proto.cln.PeerConnectAddress.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.PeerConnectAddress} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.PeerConnectAddress}
 */
proto.cln.PeerConnectAddress.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.PeerConnectAddress.PeerConnectAddressType} */ (reader.readEnum());
      msg.setItemType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSocket(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPort(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.PeerConnectAddress.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.PeerConnectAddress.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.PeerConnectAddress} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PeerConnectAddress.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.PeerConnectAddress.PeerConnectAddressType = {
  LOCAL_SOCKET: 0,
  IPV4: 1,
  IPV6: 2,
  TORV2: 3,
  TORV3: 4
};

/**
 * optional PeerConnectAddressType item_type = 1;
 * @return {!proto.cln.PeerConnectAddress.PeerConnectAddressType}
 */
proto.cln.PeerConnectAddress.prototype.getItemType = function() {
  return /** @type {!proto.cln.PeerConnectAddress.PeerConnectAddressType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.PeerConnectAddress.PeerConnectAddressType} value
 * @return {!proto.cln.PeerConnectAddress} returns this
 */
proto.cln.PeerConnectAddress.prototype.setItemType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string socket = 2;
 * @return {string}
 */
proto.cln.PeerConnectAddress.prototype.getSocket = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.PeerConnectAddress} returns this
 */
proto.cln.PeerConnectAddress.prototype.setSocket = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.PeerConnectAddress} returns this
 */
proto.cln.PeerConnectAddress.prototype.clearSocket = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PeerConnectAddress.prototype.hasSocket = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string address = 3;
 * @return {string}
 */
proto.cln.PeerConnectAddress.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.PeerConnectAddress} returns this
 */
proto.cln.PeerConnectAddress.prototype.setAddress = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.PeerConnectAddress} returns this
 */
proto.cln.PeerConnectAddress.prototype.clearAddress = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PeerConnectAddress.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 port = 4;
 * @return {number}
 */
proto.cln.PeerConnectAddress.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.PeerConnectAddress} returns this
 */
proto.cln.PeerConnectAddress.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.PeerConnectAddress} returns this
 */
proto.cln.PeerConnectAddress.prototype.clearPort = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PeerConnectAddress.prototype.hasPort = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.StreamCustomMsgRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.StreamCustomMsgRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.StreamCustomMsgRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.StreamCustomMsgRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.StreamCustomMsgRequest}
 */
proto.cln.StreamCustomMsgRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.StreamCustomMsgRequest;
  return proto.cln.StreamCustomMsgRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.StreamCustomMsgRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.StreamCustomMsgRequest}
 */
proto.cln.StreamCustomMsgRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.StreamCustomMsgRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.StreamCustomMsgRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.StreamCustomMsgRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.StreamCustomMsgRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.CustomMsgNotification.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.CustomMsgNotification.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.CustomMsgNotification} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CustomMsgNotification.toObject = function(includeInstance, msg) {
  var f, obj = {
    peerId: msg.getPeerId_asB64(),
    payload: msg.getPayload_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.CustomMsgNotification}
 */
proto.cln.CustomMsgNotification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.CustomMsgNotification;
  return proto.cln.CustomMsgNotification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.CustomMsgNotification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.CustomMsgNotification}
 */
proto.cln.CustomMsgNotification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPeerId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.CustomMsgNotification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.CustomMsgNotification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.CustomMsgNotification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CustomMsgNotification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeerId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getPayload_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional bytes peer_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.CustomMsgNotification.prototype.getPeerId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes peer_id = 1;
 * This is a type-conversion wrapper around `getPeerId()`
 * @return {string}
 */
proto.cln.CustomMsgNotification.prototype.getPeerId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPeerId()));
};


/**
 * optional bytes peer_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPeerId()`
 * @return {!Uint8Array}
 */
proto.cln.CustomMsgNotification.prototype.getPeerId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPeerId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.CustomMsgNotification} returns this
 */
proto.cln.CustomMsgNotification.prototype.setPeerId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes payload = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.CustomMsgNotification.prototype.getPayload = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes payload = 2;
 * This is a type-conversion wrapper around `getPayload()`
 * @return {string}
 */
proto.cln.CustomMsgNotification.prototype.getPayload_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPayload()));
};


/**
 * optional bytes payload = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPayload()`
 * @return {!Uint8Array}
 */
proto.cln.CustomMsgNotification.prototype.getPayload_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPayload()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.CustomMsgNotification} returns this
 */
proto.cln.CustomMsgNotification.prototype.setPayload = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


goog.object.extend(exports, proto.cln);
