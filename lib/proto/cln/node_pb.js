// source: cln/node.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var cln_primitives_pb = require('../cln/primitives_pb.js');
goog.object.extend(proto, cln_primitives_pb);
goog.exportSymbol('proto.cln.AddgossipRequest', null, global);
goog.exportSymbol('proto.cln.AddgossipResponse', null, global);
goog.exportSymbol('proto.cln.AutocleaninvoiceRequest', null, global);
goog.exportSymbol('proto.cln.AutocleaninvoiceResponse', null, global);
goog.exportSymbol('proto.cln.CheckmessageRequest', null, global);
goog.exportSymbol('proto.cln.CheckmessageResponse', null, global);
goog.exportSymbol('proto.cln.CloseRequest', null, global);
goog.exportSymbol('proto.cln.CloseResponse', null, global);
goog.exportSymbol('proto.cln.CloseResponse.CloseType', null, global);
goog.exportSymbol('proto.cln.ConnectAddress', null, global);
goog.exportSymbol('proto.cln.ConnectAddress.ConnectAddressType', null, global);
goog.exportSymbol('proto.cln.ConnectRequest', null, global);
goog.exportSymbol('proto.cln.ConnectResponse', null, global);
goog.exportSymbol('proto.cln.ConnectResponse.ConnectDirection', null, global);
goog.exportSymbol('proto.cln.CreateinvoicePaid_outpoint', null, global);
goog.exportSymbol('proto.cln.CreateinvoiceRequest', null, global);
goog.exportSymbol('proto.cln.CreateinvoiceResponse', null, global);
goog.exportSymbol('proto.cln.CreateinvoiceResponse.CreateinvoiceStatus', null, global);
goog.exportSymbol('proto.cln.CreateonionHops', null, global);
goog.exportSymbol('proto.cln.CreateonionRequest', null, global);
goog.exportSymbol('proto.cln.CreateonionResponse', null, global);
goog.exportSymbol('proto.cln.DatastoreRequest', null, global);
goog.exportSymbol('proto.cln.DatastoreRequest.DatastoreMode', null, global);
goog.exportSymbol('proto.cln.DatastoreResponse', null, global);
goog.exportSymbol('proto.cln.DatastoreusageDatastoreusage', null, global);
goog.exportSymbol('proto.cln.DatastoreusageRequest', null, global);
goog.exportSymbol('proto.cln.DatastoreusageResponse', null, global);
goog.exportSymbol('proto.cln.DecodeExtra', null, global);
goog.exportSymbol('proto.cln.DecodeFallbacks', null, global);
goog.exportSymbol('proto.cln.DecodeInvoice_fallbacks', null, global);
goog.exportSymbol('proto.cln.DecodeInvoice_pathsPath', null, global);
goog.exportSymbol('proto.cln.DecodeOffer_paths', null, global);
goog.exportSymbol('proto.cln.DecodeOffer_recurrencePaywindow', null, global);
goog.exportSymbol('proto.cln.DecodeRequest', null, global);
goog.exportSymbol('proto.cln.DecodeResponse', null, global);
goog.exportSymbol('proto.cln.DecodeResponse.DecodeType', null, global);
goog.exportSymbol('proto.cln.DecodeRestrictions', null, global);
goog.exportSymbol('proto.cln.DecodepayExtra', null, global);
goog.exportSymbol('proto.cln.DecodepayFallbacks', null, global);
goog.exportSymbol('proto.cln.DecodepayFallbacks.DecodepayFallbacksType', null, global);
goog.exportSymbol('proto.cln.DecodepayRequest', null, global);
goog.exportSymbol('proto.cln.DecodepayResponse', null, global);
goog.exportSymbol('proto.cln.DeldatastoreRequest', null, global);
goog.exportSymbol('proto.cln.DeldatastoreResponse', null, global);
goog.exportSymbol('proto.cln.DelexpiredinvoiceRequest', null, global);
goog.exportSymbol('proto.cln.DelexpiredinvoiceResponse', null, global);
goog.exportSymbol('proto.cln.DelinvoiceRequest', null, global);
goog.exportSymbol('proto.cln.DelinvoiceRequest.DelinvoiceStatus', null, global);
goog.exportSymbol('proto.cln.DelinvoiceResponse', null, global);
goog.exportSymbol('proto.cln.DelinvoiceResponse.DelinvoiceStatus', null, global);
goog.exportSymbol('proto.cln.DisconnectRequest', null, global);
goog.exportSymbol('proto.cln.DisconnectResponse', null, global);
goog.exportSymbol('proto.cln.FeeratesOnchain_fee_estimates', null, global);
goog.exportSymbol('proto.cln.FeeratesPerkb', null, global);
goog.exportSymbol('proto.cln.FeeratesPerkbEstimates', null, global);
goog.exportSymbol('proto.cln.FeeratesPerkw', null, global);
goog.exportSymbol('proto.cln.FeeratesPerkwEstimates', null, global);
goog.exportSymbol('proto.cln.FeeratesRequest', null, global);
goog.exportSymbol('proto.cln.FeeratesRequest.FeeratesStyle', null, global);
goog.exportSymbol('proto.cln.FeeratesResponse', null, global);
goog.exportSymbol('proto.cln.FetchinvoiceChanges', null, global);
goog.exportSymbol('proto.cln.FetchinvoiceNext_period', null, global);
goog.exportSymbol('proto.cln.FetchinvoiceRequest', null, global);
goog.exportSymbol('proto.cln.FetchinvoiceResponse', null, global);
goog.exportSymbol('proto.cln.FundchannelRequest', null, global);
goog.exportSymbol('proto.cln.FundchannelResponse', null, global);
goog.exportSymbol('proto.cln.FundpsbtRequest', null, global);
goog.exportSymbol('proto.cln.FundpsbtReservations', null, global);
goog.exportSymbol('proto.cln.FundpsbtResponse', null, global);
goog.exportSymbol('proto.cln.GetinfoAddress', null, global);
goog.exportSymbol('proto.cln.GetinfoAddress.GetinfoAddressType', null, global);
goog.exportSymbol('proto.cln.GetinfoBinding', null, global);
goog.exportSymbol('proto.cln.GetinfoBinding.GetinfoBindingType', null, global);
goog.exportSymbol('proto.cln.GetinfoOur_features', null, global);
goog.exportSymbol('proto.cln.GetinfoRequest', null, global);
goog.exportSymbol('proto.cln.GetinfoResponse', null, global);
goog.exportSymbol('proto.cln.GetrouteRequest', null, global);
goog.exportSymbol('proto.cln.GetrouteResponse', null, global);
goog.exportSymbol('proto.cln.GetrouteRoute', null, global);
goog.exportSymbol('proto.cln.GetrouteRoute.GetrouteRouteStyle', null, global);
goog.exportSymbol('proto.cln.InvoiceRequest', null, global);
goog.exportSymbol('proto.cln.InvoiceResponse', null, global);
goog.exportSymbol('proto.cln.KeysendRequest', null, global);
goog.exportSymbol('proto.cln.KeysendResponse', null, global);
goog.exportSymbol('proto.cln.KeysendResponse.KeysendStatus', null, global);
goog.exportSymbol('proto.cln.ListchannelsChannels', null, global);
goog.exportSymbol('proto.cln.ListchannelsRequest', null, global);
goog.exportSymbol('proto.cln.ListchannelsResponse', null, global);
goog.exportSymbol('proto.cln.ListclosedchannelsClosedchannels', null, global);
goog.exportSymbol('proto.cln.ListclosedchannelsClosedchannels.ListclosedchannelsClosedchannelsClose_cause', null, global);
goog.exportSymbol('proto.cln.ListclosedchannelsClosedchannelsAlias', null, global);
goog.exportSymbol('proto.cln.ListclosedchannelsRequest', null, global);
goog.exportSymbol('proto.cln.ListclosedchannelsResponse', null, global);
goog.exportSymbol('proto.cln.ListdatastoreDatastore', null, global);
goog.exportSymbol('proto.cln.ListdatastoreRequest', null, global);
goog.exportSymbol('proto.cln.ListdatastoreResponse', null, global);
goog.exportSymbol('proto.cln.ListforwardsForwards', null, global);
goog.exportSymbol('proto.cln.ListforwardsForwards.ListforwardsForwardsStatus', null, global);
goog.exportSymbol('proto.cln.ListforwardsForwards.ListforwardsForwardsStyle', null, global);
goog.exportSymbol('proto.cln.ListforwardsRequest', null, global);
goog.exportSymbol('proto.cln.ListforwardsRequest.ListforwardsIndex', null, global);
goog.exportSymbol('proto.cln.ListforwardsRequest.ListforwardsStatus', null, global);
goog.exportSymbol('proto.cln.ListforwardsResponse', null, global);
goog.exportSymbol('proto.cln.ListfundsChannels', null, global);
goog.exportSymbol('proto.cln.ListfundsOutputs', null, global);
goog.exportSymbol('proto.cln.ListfundsOutputs.ListfundsOutputsStatus', null, global);
goog.exportSymbol('proto.cln.ListfundsRequest', null, global);
goog.exportSymbol('proto.cln.ListfundsResponse', null, global);
goog.exportSymbol('proto.cln.ListhtlcsHtlcs', null, global);
goog.exportSymbol('proto.cln.ListhtlcsHtlcs.ListhtlcsHtlcsDirection', null, global);
goog.exportSymbol('proto.cln.ListhtlcsRequest', null, global);
goog.exportSymbol('proto.cln.ListhtlcsResponse', null, global);
goog.exportSymbol('proto.cln.ListinvoicesInvoices', null, global);
goog.exportSymbol('proto.cln.ListinvoicesInvoices.ListinvoicesInvoicesStatus', null, global);
goog.exportSymbol('proto.cln.ListinvoicesInvoicesPaid_outpoint', null, global);
goog.exportSymbol('proto.cln.ListinvoicesRequest', null, global);
goog.exportSymbol('proto.cln.ListinvoicesRequest.ListinvoicesIndex', null, global);
goog.exportSymbol('proto.cln.ListinvoicesResponse', null, global);
goog.exportSymbol('proto.cln.ListnodesNodes', null, global);
goog.exportSymbol('proto.cln.ListnodesNodesAddresses', null, global);
goog.exportSymbol('proto.cln.ListnodesNodesAddresses.ListnodesNodesAddressesType', null, global);
goog.exportSymbol('proto.cln.ListnodesRequest', null, global);
goog.exportSymbol('proto.cln.ListnodesResponse', null, global);
goog.exportSymbol('proto.cln.ListpaysPays', null, global);
goog.exportSymbol('proto.cln.ListpaysPays.ListpaysPaysStatus', null, global);
goog.exportSymbol('proto.cln.ListpaysRequest', null, global);
goog.exportSymbol('proto.cln.ListpaysRequest.ListpaysStatus', null, global);
goog.exportSymbol('proto.cln.ListpaysResponse', null, global);
goog.exportSymbol('proto.cln.ListpeerchannelsChannels', null, global);
goog.exportSymbol('proto.cln.ListpeerchannelsChannels.ListpeerchannelsChannelsState', null, global);
goog.exportSymbol('proto.cln.ListpeerchannelsChannelsAlias', null, global);
goog.exportSymbol('proto.cln.ListpeerchannelsChannelsFeerate', null, global);
goog.exportSymbol('proto.cln.ListpeerchannelsChannelsFunding', null, global);
goog.exportSymbol('proto.cln.ListpeerchannelsChannelsHtlcs', null, global);
goog.exportSymbol('proto.cln.ListpeerchannelsChannelsHtlcs.ListpeerchannelsChannelsHtlcsDirection', null, global);
goog.exportSymbol('proto.cln.ListpeerchannelsChannelsInflight', null, global);
goog.exportSymbol('proto.cln.ListpeerchannelsRequest', null, global);
goog.exportSymbol('proto.cln.ListpeerchannelsResponse', null, global);
goog.exportSymbol('proto.cln.ListpeersPeers', null, global);
goog.exportSymbol('proto.cln.ListpeersPeersChannels', null, global);
goog.exportSymbol('proto.cln.ListpeersPeersChannels.ListpeersPeersChannelsState', null, global);
goog.exportSymbol('proto.cln.ListpeersPeersChannelsAlias', null, global);
goog.exportSymbol('proto.cln.ListpeersPeersChannelsFeerate', null, global);
goog.exportSymbol('proto.cln.ListpeersPeersChannelsFunding', null, global);
goog.exportSymbol('proto.cln.ListpeersPeersChannelsHtlcs', null, global);
goog.exportSymbol('proto.cln.ListpeersPeersChannelsHtlcs.ListpeersPeersChannelsHtlcsDirection', null, global);
goog.exportSymbol('proto.cln.ListpeersPeersChannelsInflight', null, global);
goog.exportSymbol('proto.cln.ListpeersPeersLog', null, global);
goog.exportSymbol('proto.cln.ListpeersPeersLog.ListpeersPeersLogType', null, global);
goog.exportSymbol('proto.cln.ListpeersRequest', null, global);
goog.exportSymbol('proto.cln.ListpeersResponse', null, global);
goog.exportSymbol('proto.cln.ListsendpaysPayments', null, global);
goog.exportSymbol('proto.cln.ListsendpaysPayments.ListsendpaysPaymentsStatus', null, global);
goog.exportSymbol('proto.cln.ListsendpaysRequest', null, global);
goog.exportSymbol('proto.cln.ListsendpaysRequest.ListsendpaysIndex', null, global);
goog.exportSymbol('proto.cln.ListsendpaysRequest.ListsendpaysStatus', null, global);
goog.exportSymbol('proto.cln.ListsendpaysResponse', null, global);
goog.exportSymbol('proto.cln.ListtransactionsRequest', null, global);
goog.exportSymbol('proto.cln.ListtransactionsResponse', null, global);
goog.exportSymbol('proto.cln.ListtransactionsTransactions', null, global);
goog.exportSymbol('proto.cln.ListtransactionsTransactionsInputs', null, global);
goog.exportSymbol('proto.cln.ListtransactionsTransactionsOutputs', null, global);
goog.exportSymbol('proto.cln.NewaddrRequest', null, global);
goog.exportSymbol('proto.cln.NewaddrRequest.NewaddrAddresstype', null, global);
goog.exportSymbol('proto.cln.NewaddrResponse', null, global);
goog.exportSymbol('proto.cln.PayRequest', null, global);
goog.exportSymbol('proto.cln.PayResponse', null, global);
goog.exportSymbol('proto.cln.PayResponse.PayStatus', null, global);
goog.exportSymbol('proto.cln.PingRequest', null, global);
goog.exportSymbol('proto.cln.PingResponse', null, global);
goog.exportSymbol('proto.cln.PreapproveinvoiceRequest', null, global);
goog.exportSymbol('proto.cln.PreapproveinvoiceResponse', null, global);
goog.exportSymbol('proto.cln.PreapprovekeysendRequest', null, global);
goog.exportSymbol('proto.cln.PreapprovekeysendResponse', null, global);
goog.exportSymbol('proto.cln.SendcustommsgRequest', null, global);
goog.exportSymbol('proto.cln.SendcustommsgResponse', null, global);
goog.exportSymbol('proto.cln.SendonionFirst_hop', null, global);
goog.exportSymbol('proto.cln.SendonionRequest', null, global);
goog.exportSymbol('proto.cln.SendonionResponse', null, global);
goog.exportSymbol('proto.cln.SendonionResponse.SendonionStatus', null, global);
goog.exportSymbol('proto.cln.SendpayRequest', null, global);
goog.exportSymbol('proto.cln.SendpayResponse', null, global);
goog.exportSymbol('proto.cln.SendpayResponse.SendpayStatus', null, global);
goog.exportSymbol('proto.cln.SendpayRoute', null, global);
goog.exportSymbol('proto.cln.SendpsbtRequest', null, global);
goog.exportSymbol('proto.cln.SendpsbtResponse', null, global);
goog.exportSymbol('proto.cln.SetchannelChannels', null, global);
goog.exportSymbol('proto.cln.SetchannelRequest', null, global);
goog.exportSymbol('proto.cln.SetchannelResponse', null, global);
goog.exportSymbol('proto.cln.SigninvoiceRequest', null, global);
goog.exportSymbol('proto.cln.SigninvoiceResponse', null, global);
goog.exportSymbol('proto.cln.SignmessageRequest', null, global);
goog.exportSymbol('proto.cln.SignmessageResponse', null, global);
goog.exportSymbol('proto.cln.SignpsbtRequest', null, global);
goog.exportSymbol('proto.cln.SignpsbtResponse', null, global);
goog.exportSymbol('proto.cln.StaticbackupRequest', null, global);
goog.exportSymbol('proto.cln.StaticbackupResponse', null, global);
goog.exportSymbol('proto.cln.StopRequest', null, global);
goog.exportSymbol('proto.cln.StopResponse', null, global);
goog.exportSymbol('proto.cln.TxdiscardRequest', null, global);
goog.exportSymbol('proto.cln.TxdiscardResponse', null, global);
goog.exportSymbol('proto.cln.TxprepareRequest', null, global);
goog.exportSymbol('proto.cln.TxprepareResponse', null, global);
goog.exportSymbol('proto.cln.TxsendRequest', null, global);
goog.exportSymbol('proto.cln.TxsendResponse', null, global);
goog.exportSymbol('proto.cln.UtxopsbtRequest', null, global);
goog.exportSymbol('proto.cln.UtxopsbtReservations', null, global);
goog.exportSymbol('proto.cln.UtxopsbtResponse', null, global);
goog.exportSymbol('proto.cln.WaitRequest', null, global);
goog.exportSymbol('proto.cln.WaitRequest.WaitIndexname', null, global);
goog.exportSymbol('proto.cln.WaitRequest.WaitSubsystem', null, global);
goog.exportSymbol('proto.cln.WaitResponse', null, global);
goog.exportSymbol('proto.cln.WaitResponse.WaitSubsystem', null, global);
goog.exportSymbol('proto.cln.WaitanyinvoicePaid_outpoint', null, global);
goog.exportSymbol('proto.cln.WaitanyinvoiceRequest', null, global);
goog.exportSymbol('proto.cln.WaitanyinvoiceResponse', null, global);
goog.exportSymbol('proto.cln.WaitanyinvoiceResponse.WaitanyinvoiceStatus', null, global);
goog.exportSymbol('proto.cln.WaitblockheightRequest', null, global);
goog.exportSymbol('proto.cln.WaitblockheightResponse', null, global);
goog.exportSymbol('proto.cln.WaitinvoicePaid_outpoint', null, global);
goog.exportSymbol('proto.cln.WaitinvoiceRequest', null, global);
goog.exportSymbol('proto.cln.WaitinvoiceResponse', null, global);
goog.exportSymbol('proto.cln.WaitinvoiceResponse.WaitinvoiceStatus', null, global);
goog.exportSymbol('proto.cln.WaitsendpayRequest', null, global);
goog.exportSymbol('proto.cln.WaitsendpayResponse', null, global);
goog.exportSymbol('proto.cln.WaitsendpayResponse.WaitsendpayStatus', null, global);
goog.exportSymbol('proto.cln.WithdrawRequest', null, global);
goog.exportSymbol('proto.cln.WithdrawResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.GetinfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.GetinfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.GetinfoRequest.displayName = 'proto.cln.GetinfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.GetinfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.GetinfoResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.GetinfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.GetinfoResponse.displayName = 'proto.cln.GetinfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.GetinfoOur_features = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.GetinfoOur_features, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.GetinfoOur_features.displayName = 'proto.cln.GetinfoOur_features';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.GetinfoAddress = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.GetinfoAddress, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.GetinfoAddress.displayName = 'proto.cln.GetinfoAddress';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.GetinfoBinding = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.GetinfoBinding, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.GetinfoBinding.displayName = 'proto.cln.GetinfoBinding';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpeersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListpeersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpeersRequest.displayName = 'proto.cln.ListpeersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpeersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListpeersResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.ListpeersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpeersResponse.displayName = 'proto.cln.ListpeersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpeersPeers = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListpeersPeers.repeatedFields_, null);
};
goog.inherits(proto.cln.ListpeersPeers, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpeersPeers.displayName = 'proto.cln.ListpeersPeers';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpeersPeersLog = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListpeersPeersLog, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpeersPeersLog.displayName = 'proto.cln.ListpeersPeersLog';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpeersPeersChannels = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListpeersPeersChannels.repeatedFields_, null);
};
goog.inherits(proto.cln.ListpeersPeersChannels, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpeersPeersChannels.displayName = 'proto.cln.ListpeersPeersChannels';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpeersPeersChannelsFeerate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListpeersPeersChannelsFeerate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpeersPeersChannelsFeerate.displayName = 'proto.cln.ListpeersPeersChannelsFeerate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpeersPeersChannelsInflight = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListpeersPeersChannelsInflight, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpeersPeersChannelsInflight.displayName = 'proto.cln.ListpeersPeersChannelsInflight';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpeersPeersChannelsFunding = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListpeersPeersChannelsFunding, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpeersPeersChannelsFunding.displayName = 'proto.cln.ListpeersPeersChannelsFunding';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpeersPeersChannelsAlias = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListpeersPeersChannelsAlias, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpeersPeersChannelsAlias.displayName = 'proto.cln.ListpeersPeersChannelsAlias';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpeersPeersChannelsHtlcs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListpeersPeersChannelsHtlcs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpeersPeersChannelsHtlcs.displayName = 'proto.cln.ListpeersPeersChannelsHtlcs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListfundsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListfundsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListfundsRequest.displayName = 'proto.cln.ListfundsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListfundsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListfundsResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.ListfundsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListfundsResponse.displayName = 'proto.cln.ListfundsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListfundsOutputs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListfundsOutputs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListfundsOutputs.displayName = 'proto.cln.ListfundsOutputs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListfundsChannels = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListfundsChannels, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListfundsChannels.displayName = 'proto.cln.ListfundsChannels';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SendpayRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.SendpayRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.SendpayRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SendpayRequest.displayName = 'proto.cln.SendpayRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SendpayResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SendpayResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SendpayResponse.displayName = 'proto.cln.SendpayResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SendpayRoute = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SendpayRoute, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SendpayRoute.displayName = 'proto.cln.SendpayRoute';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListchannelsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListchannelsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListchannelsRequest.displayName = 'proto.cln.ListchannelsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListchannelsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListchannelsResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.ListchannelsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListchannelsResponse.displayName = 'proto.cln.ListchannelsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListchannelsChannels = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListchannelsChannels, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListchannelsChannels.displayName = 'proto.cln.ListchannelsChannels';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.AddgossipRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.AddgossipRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.AddgossipRequest.displayName = 'proto.cln.AddgossipRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.AddgossipResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.AddgossipResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.AddgossipResponse.displayName = 'proto.cln.AddgossipResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.AutocleaninvoiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.AutocleaninvoiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.AutocleaninvoiceRequest.displayName = 'proto.cln.AutocleaninvoiceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.AutocleaninvoiceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.AutocleaninvoiceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.AutocleaninvoiceResponse.displayName = 'proto.cln.AutocleaninvoiceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.CheckmessageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.CheckmessageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.CheckmessageRequest.displayName = 'proto.cln.CheckmessageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.CheckmessageResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.CheckmessageResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.CheckmessageResponse.displayName = 'proto.cln.CheckmessageResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.CloseRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.CloseRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.CloseRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.CloseRequest.displayName = 'proto.cln.CloseRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.CloseResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.CloseResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.CloseResponse.displayName = 'proto.cln.CloseResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ConnectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ConnectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ConnectRequest.displayName = 'proto.cln.ConnectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ConnectResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ConnectResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ConnectResponse.displayName = 'proto.cln.ConnectResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ConnectAddress = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ConnectAddress, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ConnectAddress.displayName = 'proto.cln.ConnectAddress';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.CreateinvoiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.CreateinvoiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.CreateinvoiceRequest.displayName = 'proto.cln.CreateinvoiceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.CreateinvoiceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.CreateinvoiceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.CreateinvoiceResponse.displayName = 'proto.cln.CreateinvoiceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.CreateinvoicePaid_outpoint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.CreateinvoicePaid_outpoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.CreateinvoicePaid_outpoint.displayName = 'proto.cln.CreateinvoicePaid_outpoint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DatastoreRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.DatastoreRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.DatastoreRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DatastoreRequest.displayName = 'proto.cln.DatastoreRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DatastoreResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.DatastoreResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.DatastoreResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DatastoreResponse.displayName = 'proto.cln.DatastoreResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DatastoreusageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DatastoreusageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DatastoreusageRequest.displayName = 'proto.cln.DatastoreusageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DatastoreusageResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DatastoreusageResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DatastoreusageResponse.displayName = 'proto.cln.DatastoreusageResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DatastoreusageDatastoreusage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DatastoreusageDatastoreusage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DatastoreusageDatastoreusage.displayName = 'proto.cln.DatastoreusageDatastoreusage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.CreateonionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.CreateonionRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.CreateonionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.CreateonionRequest.displayName = 'proto.cln.CreateonionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.CreateonionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.CreateonionResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.CreateonionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.CreateonionResponse.displayName = 'proto.cln.CreateonionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.CreateonionHops = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.CreateonionHops, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.CreateonionHops.displayName = 'proto.cln.CreateonionHops';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DeldatastoreRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.DeldatastoreRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.DeldatastoreRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DeldatastoreRequest.displayName = 'proto.cln.DeldatastoreRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DeldatastoreResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.DeldatastoreResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.DeldatastoreResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DeldatastoreResponse.displayName = 'proto.cln.DeldatastoreResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DelexpiredinvoiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DelexpiredinvoiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DelexpiredinvoiceRequest.displayName = 'proto.cln.DelexpiredinvoiceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DelexpiredinvoiceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DelexpiredinvoiceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DelexpiredinvoiceResponse.displayName = 'proto.cln.DelexpiredinvoiceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DelinvoiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DelinvoiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DelinvoiceRequest.displayName = 'proto.cln.DelinvoiceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DelinvoiceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DelinvoiceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DelinvoiceResponse.displayName = 'proto.cln.DelinvoiceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.InvoiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.InvoiceRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.InvoiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.InvoiceRequest.displayName = 'proto.cln.InvoiceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.InvoiceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.InvoiceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.InvoiceResponse.displayName = 'proto.cln.InvoiceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListdatastoreRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListdatastoreRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.ListdatastoreRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListdatastoreRequest.displayName = 'proto.cln.ListdatastoreRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListdatastoreResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListdatastoreResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.ListdatastoreResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListdatastoreResponse.displayName = 'proto.cln.ListdatastoreResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListdatastoreDatastore = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListdatastoreDatastore.repeatedFields_, null);
};
goog.inherits(proto.cln.ListdatastoreDatastore, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListdatastoreDatastore.displayName = 'proto.cln.ListdatastoreDatastore';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListinvoicesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListinvoicesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListinvoicesRequest.displayName = 'proto.cln.ListinvoicesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListinvoicesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListinvoicesResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.ListinvoicesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListinvoicesResponse.displayName = 'proto.cln.ListinvoicesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListinvoicesInvoices = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListinvoicesInvoices, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListinvoicesInvoices.displayName = 'proto.cln.ListinvoicesInvoices';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListinvoicesInvoicesPaid_outpoint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListinvoicesInvoicesPaid_outpoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListinvoicesInvoicesPaid_outpoint.displayName = 'proto.cln.ListinvoicesInvoicesPaid_outpoint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SendonionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.SendonionRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.SendonionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SendonionRequest.displayName = 'proto.cln.SendonionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SendonionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SendonionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SendonionResponse.displayName = 'proto.cln.SendonionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SendonionFirst_hop = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SendonionFirst_hop, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SendonionFirst_hop.displayName = 'proto.cln.SendonionFirst_hop';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListsendpaysRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListsendpaysRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListsendpaysRequest.displayName = 'proto.cln.ListsendpaysRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListsendpaysResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListsendpaysResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.ListsendpaysResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListsendpaysResponse.displayName = 'proto.cln.ListsendpaysResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListsendpaysPayments = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListsendpaysPayments, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListsendpaysPayments.displayName = 'proto.cln.ListsendpaysPayments';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListtransactionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListtransactionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListtransactionsRequest.displayName = 'proto.cln.ListtransactionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListtransactionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListtransactionsResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.ListtransactionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListtransactionsResponse.displayName = 'proto.cln.ListtransactionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListtransactionsTransactions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListtransactionsTransactions.repeatedFields_, null);
};
goog.inherits(proto.cln.ListtransactionsTransactions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListtransactionsTransactions.displayName = 'proto.cln.ListtransactionsTransactions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListtransactionsTransactionsInputs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListtransactionsTransactionsInputs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListtransactionsTransactionsInputs.displayName = 'proto.cln.ListtransactionsTransactionsInputs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListtransactionsTransactionsOutputs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListtransactionsTransactionsOutputs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListtransactionsTransactionsOutputs.displayName = 'proto.cln.ListtransactionsTransactionsOutputs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.PayRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.PayRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.PayRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.PayRequest.displayName = 'proto.cln.PayRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.PayResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.PayResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.PayResponse.displayName = 'proto.cln.PayResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListnodesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListnodesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListnodesRequest.displayName = 'proto.cln.ListnodesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListnodesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListnodesResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.ListnodesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListnodesResponse.displayName = 'proto.cln.ListnodesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListnodesNodes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListnodesNodes.repeatedFields_, null);
};
goog.inherits(proto.cln.ListnodesNodes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListnodesNodes.displayName = 'proto.cln.ListnodesNodes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListnodesNodesAddresses = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListnodesNodesAddresses, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListnodesNodesAddresses.displayName = 'proto.cln.ListnodesNodesAddresses';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.WaitanyinvoiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.WaitanyinvoiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.WaitanyinvoiceRequest.displayName = 'proto.cln.WaitanyinvoiceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.WaitanyinvoiceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.WaitanyinvoiceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.WaitanyinvoiceResponse.displayName = 'proto.cln.WaitanyinvoiceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.WaitanyinvoicePaid_outpoint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.WaitanyinvoicePaid_outpoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.WaitanyinvoicePaid_outpoint.displayName = 'proto.cln.WaitanyinvoicePaid_outpoint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.WaitinvoiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.WaitinvoiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.WaitinvoiceRequest.displayName = 'proto.cln.WaitinvoiceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.WaitinvoiceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.WaitinvoiceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.WaitinvoiceResponse.displayName = 'proto.cln.WaitinvoiceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.WaitinvoicePaid_outpoint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.WaitinvoicePaid_outpoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.WaitinvoicePaid_outpoint.displayName = 'proto.cln.WaitinvoicePaid_outpoint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.WaitsendpayRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.WaitsendpayRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.WaitsendpayRequest.displayName = 'proto.cln.WaitsendpayRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.WaitsendpayResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.WaitsendpayResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.WaitsendpayResponse.displayName = 'proto.cln.WaitsendpayResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.NewaddrRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.NewaddrRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.NewaddrRequest.displayName = 'proto.cln.NewaddrRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.NewaddrResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.NewaddrResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.NewaddrResponse.displayName = 'proto.cln.NewaddrResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.WithdrawRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.WithdrawRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.WithdrawRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.WithdrawRequest.displayName = 'proto.cln.WithdrawRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.WithdrawResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.WithdrawResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.WithdrawResponse.displayName = 'proto.cln.WithdrawResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.KeysendRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.KeysendRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.KeysendRequest.displayName = 'proto.cln.KeysendRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.KeysendResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.KeysendResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.KeysendResponse.displayName = 'proto.cln.KeysendResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.FundpsbtRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.FundpsbtRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.FundpsbtRequest.displayName = 'proto.cln.FundpsbtRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.FundpsbtResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.FundpsbtResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.FundpsbtResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.FundpsbtResponse.displayName = 'proto.cln.FundpsbtResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.FundpsbtReservations = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.FundpsbtReservations, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.FundpsbtReservations.displayName = 'proto.cln.FundpsbtReservations';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SendpsbtRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SendpsbtRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SendpsbtRequest.displayName = 'proto.cln.SendpsbtRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SendpsbtResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SendpsbtResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SendpsbtResponse.displayName = 'proto.cln.SendpsbtResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SignpsbtRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.SignpsbtRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.SignpsbtRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SignpsbtRequest.displayName = 'proto.cln.SignpsbtRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SignpsbtResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SignpsbtResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SignpsbtResponse.displayName = 'proto.cln.SignpsbtResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.UtxopsbtRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.UtxopsbtRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.UtxopsbtRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.UtxopsbtRequest.displayName = 'proto.cln.UtxopsbtRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.UtxopsbtResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.UtxopsbtResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.UtxopsbtResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.UtxopsbtResponse.displayName = 'proto.cln.UtxopsbtResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.UtxopsbtReservations = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.UtxopsbtReservations, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.UtxopsbtReservations.displayName = 'proto.cln.UtxopsbtReservations';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.TxdiscardRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.TxdiscardRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.TxdiscardRequest.displayName = 'proto.cln.TxdiscardRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.TxdiscardResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.TxdiscardResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.TxdiscardResponse.displayName = 'proto.cln.TxdiscardResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.TxprepareRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.TxprepareRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.TxprepareRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.TxprepareRequest.displayName = 'proto.cln.TxprepareRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.TxprepareResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.TxprepareResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.TxprepareResponse.displayName = 'proto.cln.TxprepareResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.TxsendRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.TxsendRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.TxsendRequest.displayName = 'proto.cln.TxsendRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.TxsendResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.TxsendResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.TxsendResponse.displayName = 'proto.cln.TxsendResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpeerchannelsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListpeerchannelsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpeerchannelsRequest.displayName = 'proto.cln.ListpeerchannelsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpeerchannelsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListpeerchannelsResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.ListpeerchannelsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpeerchannelsResponse.displayName = 'proto.cln.ListpeerchannelsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpeerchannelsChannels = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListpeerchannelsChannels.repeatedFields_, null);
};
goog.inherits(proto.cln.ListpeerchannelsChannels, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpeerchannelsChannels.displayName = 'proto.cln.ListpeerchannelsChannels';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpeerchannelsChannelsFeerate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListpeerchannelsChannelsFeerate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpeerchannelsChannelsFeerate.displayName = 'proto.cln.ListpeerchannelsChannelsFeerate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpeerchannelsChannelsInflight = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListpeerchannelsChannelsInflight, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpeerchannelsChannelsInflight.displayName = 'proto.cln.ListpeerchannelsChannelsInflight';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpeerchannelsChannelsFunding = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListpeerchannelsChannelsFunding, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpeerchannelsChannelsFunding.displayName = 'proto.cln.ListpeerchannelsChannelsFunding';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpeerchannelsChannelsAlias = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListpeerchannelsChannelsAlias, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpeerchannelsChannelsAlias.displayName = 'proto.cln.ListpeerchannelsChannelsAlias';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpeerchannelsChannelsHtlcs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListpeerchannelsChannelsHtlcs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpeerchannelsChannelsHtlcs.displayName = 'proto.cln.ListpeerchannelsChannelsHtlcs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListclosedchannelsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListclosedchannelsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListclosedchannelsRequest.displayName = 'proto.cln.ListclosedchannelsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListclosedchannelsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListclosedchannelsResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.ListclosedchannelsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListclosedchannelsResponse.displayName = 'proto.cln.ListclosedchannelsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListclosedchannelsClosedchannels = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListclosedchannelsClosedchannels, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListclosedchannelsClosedchannels.displayName = 'proto.cln.ListclosedchannelsClosedchannels';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListclosedchannelsClosedchannelsAlias = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListclosedchannelsClosedchannelsAlias, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListclosedchannelsClosedchannelsAlias.displayName = 'proto.cln.ListclosedchannelsClosedchannelsAlias';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DecodepayRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DecodepayRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DecodepayRequest.displayName = 'proto.cln.DecodepayRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DecodepayResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.DecodepayResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.DecodepayResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DecodepayResponse.displayName = 'proto.cln.DecodepayResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DecodepayFallbacks = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DecodepayFallbacks, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DecodepayFallbacks.displayName = 'proto.cln.DecodepayFallbacks';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DecodepayExtra = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DecodepayExtra, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DecodepayExtra.displayName = 'proto.cln.DecodepayExtra';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DecodeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DecodeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DecodeRequest.displayName = 'proto.cln.DecodeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DecodeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.DecodeResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.DecodeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DecodeResponse.displayName = 'proto.cln.DecodeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DecodeOffer_paths = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DecodeOffer_paths, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DecodeOffer_paths.displayName = 'proto.cln.DecodeOffer_paths';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DecodeOffer_recurrencePaywindow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DecodeOffer_recurrencePaywindow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DecodeOffer_recurrencePaywindow.displayName = 'proto.cln.DecodeOffer_recurrencePaywindow';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DecodeInvoice_pathsPath = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DecodeInvoice_pathsPath, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DecodeInvoice_pathsPath.displayName = 'proto.cln.DecodeInvoice_pathsPath';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DecodeInvoice_fallbacks = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DecodeInvoice_fallbacks, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DecodeInvoice_fallbacks.displayName = 'proto.cln.DecodeInvoice_fallbacks';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DecodeFallbacks = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DecodeFallbacks, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DecodeFallbacks.displayName = 'proto.cln.DecodeFallbacks';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DecodeExtra = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DecodeExtra, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DecodeExtra.displayName = 'proto.cln.DecodeExtra';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DecodeRestrictions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.DecodeRestrictions.repeatedFields_, null);
};
goog.inherits(proto.cln.DecodeRestrictions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DecodeRestrictions.displayName = 'proto.cln.DecodeRestrictions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DisconnectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DisconnectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DisconnectRequest.displayName = 'proto.cln.DisconnectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.DisconnectResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.DisconnectResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.DisconnectResponse.displayName = 'proto.cln.DisconnectResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.FeeratesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.FeeratesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.FeeratesRequest.displayName = 'proto.cln.FeeratesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.FeeratesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.FeeratesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.FeeratesResponse.displayName = 'proto.cln.FeeratesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.FeeratesPerkb = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.FeeratesPerkb.repeatedFields_, null);
};
goog.inherits(proto.cln.FeeratesPerkb, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.FeeratesPerkb.displayName = 'proto.cln.FeeratesPerkb';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.FeeratesPerkbEstimates = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.FeeratesPerkbEstimates, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.FeeratesPerkbEstimates.displayName = 'proto.cln.FeeratesPerkbEstimates';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.FeeratesPerkw = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.FeeratesPerkw.repeatedFields_, null);
};
goog.inherits(proto.cln.FeeratesPerkw, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.FeeratesPerkw.displayName = 'proto.cln.FeeratesPerkw';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.FeeratesPerkwEstimates = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.FeeratesPerkwEstimates, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.FeeratesPerkwEstimates.displayName = 'proto.cln.FeeratesPerkwEstimates';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.FeeratesOnchain_fee_estimates = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.FeeratesOnchain_fee_estimates, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.FeeratesOnchain_fee_estimates.displayName = 'proto.cln.FeeratesOnchain_fee_estimates';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.FetchinvoiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.FetchinvoiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.FetchinvoiceRequest.displayName = 'proto.cln.FetchinvoiceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.FetchinvoiceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.FetchinvoiceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.FetchinvoiceResponse.displayName = 'proto.cln.FetchinvoiceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.FetchinvoiceChanges = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.FetchinvoiceChanges, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.FetchinvoiceChanges.displayName = 'proto.cln.FetchinvoiceChanges';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.FetchinvoiceNext_period = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.FetchinvoiceNext_period, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.FetchinvoiceNext_period.displayName = 'proto.cln.FetchinvoiceNext_period';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.FundchannelRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.FundchannelRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.FundchannelRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.FundchannelRequest.displayName = 'proto.cln.FundchannelRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.FundchannelResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.FundchannelResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.FundchannelResponse.displayName = 'proto.cln.FundchannelResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.GetrouteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.GetrouteRequest.repeatedFields_, null);
};
goog.inherits(proto.cln.GetrouteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.GetrouteRequest.displayName = 'proto.cln.GetrouteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.GetrouteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.GetrouteResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.GetrouteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.GetrouteResponse.displayName = 'proto.cln.GetrouteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.GetrouteRoute = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.GetrouteRoute, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.GetrouteRoute.displayName = 'proto.cln.GetrouteRoute';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListforwardsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListforwardsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListforwardsRequest.displayName = 'proto.cln.ListforwardsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListforwardsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListforwardsResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.ListforwardsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListforwardsResponse.displayName = 'proto.cln.ListforwardsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListforwardsForwards = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListforwardsForwards, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListforwardsForwards.displayName = 'proto.cln.ListforwardsForwards';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpaysRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListpaysRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpaysRequest.displayName = 'proto.cln.ListpaysRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpaysResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListpaysResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.ListpaysResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpaysResponse.displayName = 'proto.cln.ListpaysResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListpaysPays = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListpaysPays, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListpaysPays.displayName = 'proto.cln.ListpaysPays';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListhtlcsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListhtlcsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListhtlcsRequest.displayName = 'proto.cln.ListhtlcsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListhtlcsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.ListhtlcsResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.ListhtlcsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListhtlcsResponse.displayName = 'proto.cln.ListhtlcsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.ListhtlcsHtlcs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.ListhtlcsHtlcs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.ListhtlcsHtlcs.displayName = 'proto.cln.ListhtlcsHtlcs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.PingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.PingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.PingRequest.displayName = 'proto.cln.PingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.PingResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.PingResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.PingResponse.displayName = 'proto.cln.PingResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SendcustommsgRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SendcustommsgRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SendcustommsgRequest.displayName = 'proto.cln.SendcustommsgRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SendcustommsgResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SendcustommsgResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SendcustommsgResponse.displayName = 'proto.cln.SendcustommsgResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SetchannelRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SetchannelRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SetchannelRequest.displayName = 'proto.cln.SetchannelRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SetchannelResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.SetchannelResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.SetchannelResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SetchannelResponse.displayName = 'proto.cln.SetchannelResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SetchannelChannels = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SetchannelChannels, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SetchannelChannels.displayName = 'proto.cln.SetchannelChannels';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SigninvoiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SigninvoiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SigninvoiceRequest.displayName = 'proto.cln.SigninvoiceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SigninvoiceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SigninvoiceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SigninvoiceResponse.displayName = 'proto.cln.SigninvoiceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SignmessageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SignmessageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SignmessageRequest.displayName = 'proto.cln.SignmessageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.SignmessageResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.SignmessageResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.SignmessageResponse.displayName = 'proto.cln.SignmessageResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.WaitblockheightRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.WaitblockheightRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.WaitblockheightRequest.displayName = 'proto.cln.WaitblockheightRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.WaitblockheightResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.WaitblockheightResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.WaitblockheightResponse.displayName = 'proto.cln.WaitblockheightResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.WaitRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.WaitRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.WaitRequest.displayName = 'proto.cln.WaitRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.WaitResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.WaitResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.WaitResponse.displayName = 'proto.cln.WaitResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.StopRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.StopRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.StopRequest.displayName = 'proto.cln.StopRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.StopResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.StopResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.StopResponse.displayName = 'proto.cln.StopResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.PreapprovekeysendRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.PreapprovekeysendRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.PreapprovekeysendRequest.displayName = 'proto.cln.PreapprovekeysendRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.PreapprovekeysendResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.PreapprovekeysendResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.PreapprovekeysendResponse.displayName = 'proto.cln.PreapprovekeysendResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.PreapproveinvoiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.PreapproveinvoiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.PreapproveinvoiceRequest.displayName = 'proto.cln.PreapproveinvoiceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.PreapproveinvoiceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.PreapproveinvoiceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.PreapproveinvoiceResponse.displayName = 'proto.cln.PreapproveinvoiceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.StaticbackupRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cln.StaticbackupRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.StaticbackupRequest.displayName = 'proto.cln.StaticbackupRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cln.StaticbackupResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cln.StaticbackupResponse.repeatedFields_, null);
};
goog.inherits(proto.cln.StaticbackupResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cln.StaticbackupResponse.displayName = 'proto.cln.StaticbackupResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.GetinfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.GetinfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.GetinfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetinfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.GetinfoRequest}
 */
proto.cln.GetinfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.GetinfoRequest;
  return proto.cln.GetinfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.GetinfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.GetinfoRequest}
 */
proto.cln.GetinfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.GetinfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.GetinfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.GetinfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetinfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.GetinfoResponse.repeatedFields_ = [14,15];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.GetinfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.GetinfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.GetinfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetinfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64(),
    alias: jspb.Message.getFieldWithDefault(msg, 2, ""),
    color: msg.getColor_asB64(),
    numPeers: jspb.Message.getFieldWithDefault(msg, 4, 0),
    numPendingChannels: jspb.Message.getFieldWithDefault(msg, 5, 0),
    numActiveChannels: jspb.Message.getFieldWithDefault(msg, 6, 0),
    numInactiveChannels: jspb.Message.getFieldWithDefault(msg, 7, 0),
    version: jspb.Message.getFieldWithDefault(msg, 8, ""),
    lightningDir: jspb.Message.getFieldWithDefault(msg, 9, ""),
    ourFeatures: (f = msg.getOurFeatures()) && proto.cln.GetinfoOur_features.toObject(includeInstance, f),
    blockheight: jspb.Message.getFieldWithDefault(msg, 11, 0),
    network: jspb.Message.getFieldWithDefault(msg, 12, ""),
    feesCollectedMsat: (f = msg.getFeesCollectedMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    addressList: jspb.Message.toObjectList(msg.getAddressList(),
    proto.cln.GetinfoAddress.toObject, includeInstance),
    bindingList: jspb.Message.toObjectList(msg.getBindingList(),
    proto.cln.GetinfoBinding.toObject, includeInstance),
    warningBitcoindSync: jspb.Message.getFieldWithDefault(msg, 16, ""),
    warningLightningdSync: jspb.Message.getFieldWithDefault(msg, 17, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.GetinfoResponse}
 */
proto.cln.GetinfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.GetinfoResponse;
  return proto.cln.GetinfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.GetinfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.GetinfoResponse}
 */
proto.cln.GetinfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlias(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setColor(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumPeers(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumPendingChannels(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumActiveChannels(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumInactiveChannels(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setLightningDir(value);
      break;
    case 10:
      var value = new proto.cln.GetinfoOur_features;
      reader.readMessage(value,proto.cln.GetinfoOur_features.deserializeBinaryFromReader);
      msg.setOurFeatures(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBlockheight(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setNetwork(value);
      break;
    case 13:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setFeesCollectedMsat(value);
      break;
    case 14:
      var value = new proto.cln.GetinfoAddress;
      reader.readMessage(value,proto.cln.GetinfoAddress.deserializeBinaryFromReader);
      msg.addAddress(value);
      break;
    case 15:
      var value = new proto.cln.GetinfoBinding;
      reader.readMessage(value,proto.cln.GetinfoBinding.deserializeBinaryFromReader);
      msg.addBinding(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningBitcoindSync(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningLightningdSync(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.GetinfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.GetinfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.GetinfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetinfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getColor_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getNumPeers();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getNumPendingChannels();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getNumActiveChannels();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getNumInactiveChannels();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getLightningDir();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getOurFeatures();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.cln.GetinfoOur_features.serializeBinaryToWriter
    );
  }
  f = message.getBlockheight();
  if (f !== 0) {
    writer.writeUint32(
      11,
      f
    );
  }
  f = message.getNetwork();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getFeesCollectedMsat();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getAddressList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      14,
      f,
      proto.cln.GetinfoAddress.serializeBinaryToWriter
    );
  }
  f = message.getBindingList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      15,
      f,
      proto.cln.GetinfoBinding.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeString(
      16,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeString(
      17,
      f
    );
  }
};


/**
 * optional bytes id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.GetinfoResponse.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes id = 1;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.cln.GetinfoResponse.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.cln.GetinfoResponse.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string alias = 2;
 * @return {string}
 */
proto.cln.GetinfoResponse.prototype.getAlias = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.setAlias = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.clearAlias = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetinfoResponse.prototype.hasAlias = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes color = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.GetinfoResponse.prototype.getColor = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes color = 3;
 * This is a type-conversion wrapper around `getColor()`
 * @return {string}
 */
proto.cln.GetinfoResponse.prototype.getColor_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getColor()));
};


/**
 * optional bytes color = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getColor()`
 * @return {!Uint8Array}
 */
proto.cln.GetinfoResponse.prototype.getColor_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getColor()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.setColor = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional uint32 num_peers = 4;
 * @return {number}
 */
proto.cln.GetinfoResponse.prototype.getNumPeers = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.setNumPeers = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 num_pending_channels = 5;
 * @return {number}
 */
proto.cln.GetinfoResponse.prototype.getNumPendingChannels = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.setNumPendingChannels = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 num_active_channels = 6;
 * @return {number}
 */
proto.cln.GetinfoResponse.prototype.getNumActiveChannels = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.setNumActiveChannels = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint32 num_inactive_channels = 7;
 * @return {number}
 */
proto.cln.GetinfoResponse.prototype.getNumInactiveChannels = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.setNumInactiveChannels = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string version = 8;
 * @return {string}
 */
proto.cln.GetinfoResponse.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string lightning_dir = 9;
 * @return {string}
 */
proto.cln.GetinfoResponse.prototype.getLightningDir = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.setLightningDir = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional GetinfoOur_features our_features = 10;
 * @return {?proto.cln.GetinfoOur_features}
 */
proto.cln.GetinfoResponse.prototype.getOurFeatures = function() {
  return /** @type{?proto.cln.GetinfoOur_features} */ (
    jspb.Message.getWrapperField(this, proto.cln.GetinfoOur_features, 10));
};


/**
 * @param {?proto.cln.GetinfoOur_features|undefined} value
 * @return {!proto.cln.GetinfoResponse} returns this
*/
proto.cln.GetinfoResponse.prototype.setOurFeatures = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.clearOurFeatures = function() {
  return this.setOurFeatures(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetinfoResponse.prototype.hasOurFeatures = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint32 blockheight = 11;
 * @return {number}
 */
proto.cln.GetinfoResponse.prototype.getBlockheight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.setBlockheight = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional string network = 12;
 * @return {string}
 */
proto.cln.GetinfoResponse.prototype.getNetwork = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.setNetwork = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional Amount fees_collected_msat = 13;
 * @return {?proto.cln.Amount}
 */
proto.cln.GetinfoResponse.prototype.getFeesCollectedMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 13));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.GetinfoResponse} returns this
*/
proto.cln.GetinfoResponse.prototype.setFeesCollectedMsat = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.clearFeesCollectedMsat = function() {
  return this.setFeesCollectedMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetinfoResponse.prototype.hasFeesCollectedMsat = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * repeated GetinfoAddress address = 14;
 * @return {!Array<!proto.cln.GetinfoAddress>}
 */
proto.cln.GetinfoResponse.prototype.getAddressList = function() {
  return /** @type{!Array<!proto.cln.GetinfoAddress>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.GetinfoAddress, 14));
};


/**
 * @param {!Array<!proto.cln.GetinfoAddress>} value
 * @return {!proto.cln.GetinfoResponse} returns this
*/
proto.cln.GetinfoResponse.prototype.setAddressList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 14, value);
};


/**
 * @param {!proto.cln.GetinfoAddress=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.GetinfoAddress}
 */
proto.cln.GetinfoResponse.prototype.addAddress = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 14, opt_value, proto.cln.GetinfoAddress, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.clearAddressList = function() {
  return this.setAddressList([]);
};


/**
 * repeated GetinfoBinding binding = 15;
 * @return {!Array<!proto.cln.GetinfoBinding>}
 */
proto.cln.GetinfoResponse.prototype.getBindingList = function() {
  return /** @type{!Array<!proto.cln.GetinfoBinding>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.GetinfoBinding, 15));
};


/**
 * @param {!Array<!proto.cln.GetinfoBinding>} value
 * @return {!proto.cln.GetinfoResponse} returns this
*/
proto.cln.GetinfoResponse.prototype.setBindingList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 15, value);
};


/**
 * @param {!proto.cln.GetinfoBinding=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.GetinfoBinding}
 */
proto.cln.GetinfoResponse.prototype.addBinding = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.cln.GetinfoBinding, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.clearBindingList = function() {
  return this.setBindingList([]);
};


/**
 * optional string warning_bitcoind_sync = 16;
 * @return {string}
 */
proto.cln.GetinfoResponse.prototype.getWarningBitcoindSync = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.setWarningBitcoindSync = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.clearWarningBitcoindSync = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetinfoResponse.prototype.hasWarningBitcoindSync = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional string warning_lightningd_sync = 17;
 * @return {string}
 */
proto.cln.GetinfoResponse.prototype.getWarningLightningdSync = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.setWarningLightningdSync = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.GetinfoResponse} returns this
 */
proto.cln.GetinfoResponse.prototype.clearWarningLightningdSync = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetinfoResponse.prototype.hasWarningLightningdSync = function() {
  return jspb.Message.getField(this, 17) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.GetinfoOur_features.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.GetinfoOur_features.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.GetinfoOur_features} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetinfoOur_features.toObject = function(includeInstance, msg) {
  var f, obj = {
    init: msg.getInit_asB64(),
    node: msg.getNode_asB64(),
    channel: msg.getChannel_asB64(),
    invoice: msg.getInvoice_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.GetinfoOur_features}
 */
proto.cln.GetinfoOur_features.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.GetinfoOur_features;
  return proto.cln.GetinfoOur_features.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.GetinfoOur_features} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.GetinfoOur_features}
 */
proto.cln.GetinfoOur_features.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInit(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setNode(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChannel(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInvoice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.GetinfoOur_features.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.GetinfoOur_features.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.GetinfoOur_features} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetinfoOur_features.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInit_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getNode_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getChannel_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getInvoice_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * optional bytes init = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.GetinfoOur_features.prototype.getInit = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes init = 1;
 * This is a type-conversion wrapper around `getInit()`
 * @return {string}
 */
proto.cln.GetinfoOur_features.prototype.getInit_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInit()));
};


/**
 * optional bytes init = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInit()`
 * @return {!Uint8Array}
 */
proto.cln.GetinfoOur_features.prototype.getInit_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInit()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.GetinfoOur_features} returns this
 */
proto.cln.GetinfoOur_features.prototype.setInit = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes node = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.GetinfoOur_features.prototype.getNode = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes node = 2;
 * This is a type-conversion wrapper around `getNode()`
 * @return {string}
 */
proto.cln.GetinfoOur_features.prototype.getNode_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getNode()));
};


/**
 * optional bytes node = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getNode()`
 * @return {!Uint8Array}
 */
proto.cln.GetinfoOur_features.prototype.getNode_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getNode()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.GetinfoOur_features} returns this
 */
proto.cln.GetinfoOur_features.prototype.setNode = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes channel = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.GetinfoOur_features.prototype.getChannel = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes channel = 3;
 * This is a type-conversion wrapper around `getChannel()`
 * @return {string}
 */
proto.cln.GetinfoOur_features.prototype.getChannel_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChannel()));
};


/**
 * optional bytes channel = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChannel()`
 * @return {!Uint8Array}
 */
proto.cln.GetinfoOur_features.prototype.getChannel_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChannel()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.GetinfoOur_features} returns this
 */
proto.cln.GetinfoOur_features.prototype.setChannel = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional bytes invoice = 4;
 * @return {!(string|Uint8Array)}
 */
proto.cln.GetinfoOur_features.prototype.getInvoice = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes invoice = 4;
 * This is a type-conversion wrapper around `getInvoice()`
 * @return {string}
 */
proto.cln.GetinfoOur_features.prototype.getInvoice_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInvoice()));
};


/**
 * optional bytes invoice = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInvoice()`
 * @return {!Uint8Array}
 */
proto.cln.GetinfoOur_features.prototype.getInvoice_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInvoice()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.GetinfoOur_features} returns this
 */
proto.cln.GetinfoOur_features.prototype.setInvoice = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.GetinfoAddress.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.GetinfoAddress.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.GetinfoAddress} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetinfoAddress.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    port: jspb.Message.getFieldWithDefault(msg, 2, 0),
    address: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.GetinfoAddress}
 */
proto.cln.GetinfoAddress.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.GetinfoAddress;
  return proto.cln.GetinfoAddress.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.GetinfoAddress} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.GetinfoAddress}
 */
proto.cln.GetinfoAddress.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.GetinfoAddress.GetinfoAddressType} */ (reader.readEnum());
      msg.setItemType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.GetinfoAddress.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.GetinfoAddress.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.GetinfoAddress} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetinfoAddress.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getPort();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.GetinfoAddress.GetinfoAddressType = {
  DNS: 0,
  IPV4: 1,
  IPV6: 2,
  TORV2: 3,
  TORV3: 4
};

/**
 * optional GetinfoAddressType item_type = 1;
 * @return {!proto.cln.GetinfoAddress.GetinfoAddressType}
 */
proto.cln.GetinfoAddress.prototype.getItemType = function() {
  return /** @type {!proto.cln.GetinfoAddress.GetinfoAddressType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.GetinfoAddress.GetinfoAddressType} value
 * @return {!proto.cln.GetinfoAddress} returns this
 */
proto.cln.GetinfoAddress.prototype.setItemType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint32 port = 2;
 * @return {number}
 */
proto.cln.GetinfoAddress.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.GetinfoAddress} returns this
 */
proto.cln.GetinfoAddress.prototype.setPort = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string address = 3;
 * @return {string}
 */
proto.cln.GetinfoAddress.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.GetinfoAddress} returns this
 */
proto.cln.GetinfoAddress.prototype.setAddress = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.GetinfoAddress} returns this
 */
proto.cln.GetinfoAddress.prototype.clearAddress = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetinfoAddress.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.GetinfoBinding.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.GetinfoBinding.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.GetinfoBinding} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetinfoBinding.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    address: jspb.Message.getFieldWithDefault(msg, 2, ""),
    port: jspb.Message.getFieldWithDefault(msg, 3, 0),
    socket: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.GetinfoBinding}
 */
proto.cln.GetinfoBinding.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.GetinfoBinding;
  return proto.cln.GetinfoBinding.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.GetinfoBinding} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.GetinfoBinding}
 */
proto.cln.GetinfoBinding.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.GetinfoBinding.GetinfoBindingType} */ (reader.readEnum());
      msg.setItemType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPort(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSocket(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.GetinfoBinding.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.GetinfoBinding.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.GetinfoBinding} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetinfoBinding.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.GetinfoBinding.GetinfoBindingType = {
  LOCAL_SOCKET: 0,
  WEBSOCKET: 5,
  IPV4: 1,
  IPV6: 2,
  TORV2: 3,
  TORV3: 4
};

/**
 * optional GetinfoBindingType item_type = 1;
 * @return {!proto.cln.GetinfoBinding.GetinfoBindingType}
 */
proto.cln.GetinfoBinding.prototype.getItemType = function() {
  return /** @type {!proto.cln.GetinfoBinding.GetinfoBindingType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.GetinfoBinding.GetinfoBindingType} value
 * @return {!proto.cln.GetinfoBinding} returns this
 */
proto.cln.GetinfoBinding.prototype.setItemType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string address = 2;
 * @return {string}
 */
proto.cln.GetinfoBinding.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.GetinfoBinding} returns this
 */
proto.cln.GetinfoBinding.prototype.setAddress = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.GetinfoBinding} returns this
 */
proto.cln.GetinfoBinding.prototype.clearAddress = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetinfoBinding.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 port = 3;
 * @return {number}
 */
proto.cln.GetinfoBinding.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.GetinfoBinding} returns this
 */
proto.cln.GetinfoBinding.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.GetinfoBinding} returns this
 */
proto.cln.GetinfoBinding.prototype.clearPort = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetinfoBinding.prototype.hasPort = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string socket = 4;
 * @return {string}
 */
proto.cln.GetinfoBinding.prototype.getSocket = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.GetinfoBinding} returns this
 */
proto.cln.GetinfoBinding.prototype.setSocket = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.GetinfoBinding} returns this
 */
proto.cln.GetinfoBinding.prototype.clearSocket = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetinfoBinding.prototype.hasSocket = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpeersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpeersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpeersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64(),
    level: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpeersRequest}
 */
proto.cln.ListpeersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpeersRequest;
  return proto.cln.ListpeersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpeersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpeersRequest}
 */
proto.cln.ListpeersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLevel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpeersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpeersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpeersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bytes id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpeersRequest.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes id = 1;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.cln.ListpeersRequest.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.cln.ListpeersRequest.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpeersRequest} returns this
 */
proto.cln.ListpeersRequest.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersRequest} returns this
 */
proto.cln.ListpeersRequest.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string level = 2;
 * @return {string}
 */
proto.cln.ListpeersRequest.prototype.getLevel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeersRequest} returns this
 */
proto.cln.ListpeersRequest.prototype.setLevel = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersRequest} returns this
 */
proto.cln.ListpeersRequest.prototype.clearLevel = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersRequest.prototype.hasLevel = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListpeersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpeersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpeersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpeersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    peersList: jspb.Message.toObjectList(msg.getPeersList(),
    proto.cln.ListpeersPeers.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpeersResponse}
 */
proto.cln.ListpeersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpeersResponse;
  return proto.cln.ListpeersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpeersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpeersResponse}
 */
proto.cln.ListpeersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.ListpeersPeers;
      reader.readMessage(value,proto.cln.ListpeersPeers.deserializeBinaryFromReader);
      msg.addPeers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpeersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpeersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpeersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.ListpeersPeers.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ListpeersPeers peers = 1;
 * @return {!Array<!proto.cln.ListpeersPeers>}
 */
proto.cln.ListpeersResponse.prototype.getPeersList = function() {
  return /** @type{!Array<!proto.cln.ListpeersPeers>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListpeersPeers, 1));
};


/**
 * @param {!Array<!proto.cln.ListpeersPeers>} value
 * @return {!proto.cln.ListpeersResponse} returns this
*/
proto.cln.ListpeersResponse.prototype.setPeersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.ListpeersPeers=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListpeersPeers}
 */
proto.cln.ListpeersResponse.prototype.addPeers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.ListpeersPeers, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListpeersResponse} returns this
 */
proto.cln.ListpeersResponse.prototype.clearPeersList = function() {
  return this.setPeersList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListpeersPeers.repeatedFields_ = [3,4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpeersPeers.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpeersPeers.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpeersPeers} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeersPeers.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64(),
    connected: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    numChannels: jspb.Message.getFieldWithDefault(msg, 8, 0),
    logList: jspb.Message.toObjectList(msg.getLogList(),
    proto.cln.ListpeersPeersLog.toObject, includeInstance),
    channelsList: jspb.Message.toObjectList(msg.getChannelsList(),
    proto.cln.ListpeersPeersChannels.toObject, includeInstance),
    netaddrList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    remoteAddr: jspb.Message.getFieldWithDefault(msg, 7, ""),
    features: msg.getFeatures_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpeersPeers}
 */
proto.cln.ListpeersPeers.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpeersPeers;
  return proto.cln.ListpeersPeers.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpeersPeers} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpeersPeers}
 */
proto.cln.ListpeersPeers.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setConnected(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumChannels(value);
      break;
    case 3:
      var value = new proto.cln.ListpeersPeersLog;
      reader.readMessage(value,proto.cln.ListpeersPeersLog.deserializeBinaryFromReader);
      msg.addLog(value);
      break;
    case 4:
      var value = new proto.cln.ListpeersPeersChannels;
      reader.readMessage(value,proto.cln.ListpeersPeersChannels.deserializeBinaryFromReader);
      msg.addChannels(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addNetaddr(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteAddr(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFeatures(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpeersPeers.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpeersPeers.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpeersPeers} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeersPeers.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getConnected();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getLogList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.cln.ListpeersPeersLog.serializeBinaryToWriter
    );
  }
  f = message.getChannelsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.cln.ListpeersPeersChannels.serializeBinaryToWriter
    );
  }
  f = message.getNetaddrList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBytes(
      6,
      f
    );
  }
};


/**
 * optional bytes id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpeersPeers.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes id = 1;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.cln.ListpeersPeers.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.cln.ListpeersPeers.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpeersPeers} returns this
 */
proto.cln.ListpeersPeers.prototype.setId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bool connected = 2;
 * @return {boolean}
 */
proto.cln.ListpeersPeers.prototype.getConnected = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListpeersPeers} returns this
 */
proto.cln.ListpeersPeers.prototype.setConnected = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional uint32 num_channels = 8;
 * @return {number}
 */
proto.cln.ListpeersPeers.prototype.getNumChannels = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeersPeers} returns this
 */
proto.cln.ListpeersPeers.prototype.setNumChannels = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeers} returns this
 */
proto.cln.ListpeersPeers.prototype.clearNumChannels = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeers.prototype.hasNumChannels = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * repeated ListpeersPeersLog log = 3;
 * @return {!Array<!proto.cln.ListpeersPeersLog>}
 */
proto.cln.ListpeersPeers.prototype.getLogList = function() {
  return /** @type{!Array<!proto.cln.ListpeersPeersLog>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListpeersPeersLog, 3));
};


/**
 * @param {!Array<!proto.cln.ListpeersPeersLog>} value
 * @return {!proto.cln.ListpeersPeers} returns this
*/
proto.cln.ListpeersPeers.prototype.setLogList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.cln.ListpeersPeersLog=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListpeersPeersLog}
 */
proto.cln.ListpeersPeers.prototype.addLog = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.cln.ListpeersPeersLog, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListpeersPeers} returns this
 */
proto.cln.ListpeersPeers.prototype.clearLogList = function() {
  return this.setLogList([]);
};


/**
 * repeated ListpeersPeersChannels channels = 4;
 * @return {!Array<!proto.cln.ListpeersPeersChannels>}
 */
proto.cln.ListpeersPeers.prototype.getChannelsList = function() {
  return /** @type{!Array<!proto.cln.ListpeersPeersChannels>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListpeersPeersChannels, 4));
};


/**
 * @param {!Array<!proto.cln.ListpeersPeersChannels>} value
 * @return {!proto.cln.ListpeersPeers} returns this
*/
proto.cln.ListpeersPeers.prototype.setChannelsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.cln.ListpeersPeersChannels=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListpeersPeersChannels}
 */
proto.cln.ListpeersPeers.prototype.addChannels = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.cln.ListpeersPeersChannels, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListpeersPeers} returns this
 */
proto.cln.ListpeersPeers.prototype.clearChannelsList = function() {
  return this.setChannelsList([]);
};


/**
 * repeated string netaddr = 5;
 * @return {!Array<string>}
 */
proto.cln.ListpeersPeers.prototype.getNetaddrList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.ListpeersPeers} returns this
 */
proto.cln.ListpeersPeers.prototype.setNetaddrList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.ListpeersPeers} returns this
 */
proto.cln.ListpeersPeers.prototype.addNetaddr = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListpeersPeers} returns this
 */
proto.cln.ListpeersPeers.prototype.clearNetaddrList = function() {
  return this.setNetaddrList([]);
};


/**
 * optional string remote_addr = 7;
 * @return {string}
 */
proto.cln.ListpeersPeers.prototype.getRemoteAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeersPeers} returns this
 */
proto.cln.ListpeersPeers.prototype.setRemoteAddr = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeers} returns this
 */
proto.cln.ListpeersPeers.prototype.clearRemoteAddr = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeers.prototype.hasRemoteAddr = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bytes features = 6;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpeersPeers.prototype.getFeatures = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes features = 6;
 * This is a type-conversion wrapper around `getFeatures()`
 * @return {string}
 */
proto.cln.ListpeersPeers.prototype.getFeatures_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFeatures()));
};


/**
 * optional bytes features = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFeatures()`
 * @return {!Uint8Array}
 */
proto.cln.ListpeersPeers.prototype.getFeatures_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFeatures()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpeersPeers} returns this
 */
proto.cln.ListpeersPeers.prototype.setFeatures = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeers} returns this
 */
proto.cln.ListpeersPeers.prototype.clearFeatures = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeers.prototype.hasFeatures = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpeersPeersLog.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpeersPeersLog.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpeersPeersLog} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeersPeersLog.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    numSkipped: jspb.Message.getFieldWithDefault(msg, 2, 0),
    time: jspb.Message.getFieldWithDefault(msg, 3, ""),
    source: jspb.Message.getFieldWithDefault(msg, 4, ""),
    log: jspb.Message.getFieldWithDefault(msg, 5, ""),
    nodeId: msg.getNodeId_asB64(),
    data: msg.getData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpeersPeersLog}
 */
proto.cln.ListpeersPeersLog.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpeersPeersLog;
  return proto.cln.ListpeersPeersLog.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpeersPeersLog} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpeersPeersLog}
 */
proto.cln.ListpeersPeersLog.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.ListpeersPeersLog.ListpeersPeersLogType} */ (reader.readEnum());
      msg.setItemType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumSkipped(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTime(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLog(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setNodeId(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpeersPeersLog.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpeersPeersLog.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpeersPeersLog} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeersPeersLog.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBytes(
      7,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ListpeersPeersLog.ListpeersPeersLogType = {
  SKIPPED: 0,
  BROKEN: 1,
  UNUSUAL: 2,
  INFO: 3,
  DEBUG: 4,
  IO_IN: 5,
  IO_OUT: 6
};

/**
 * optional ListpeersPeersLogType item_type = 1;
 * @return {!proto.cln.ListpeersPeersLog.ListpeersPeersLogType}
 */
proto.cln.ListpeersPeersLog.prototype.getItemType = function() {
  return /** @type {!proto.cln.ListpeersPeersLog.ListpeersPeersLogType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.ListpeersPeersLog.ListpeersPeersLogType} value
 * @return {!proto.cln.ListpeersPeersLog} returns this
 */
proto.cln.ListpeersPeersLog.prototype.setItemType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint32 num_skipped = 2;
 * @return {number}
 */
proto.cln.ListpeersPeersLog.prototype.getNumSkipped = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeersPeersLog} returns this
 */
proto.cln.ListpeersPeersLog.prototype.setNumSkipped = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersLog} returns this
 */
proto.cln.ListpeersPeersLog.prototype.clearNumSkipped = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersLog.prototype.hasNumSkipped = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string time = 3;
 * @return {string}
 */
proto.cln.ListpeersPeersLog.prototype.getTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeersPeersLog} returns this
 */
proto.cln.ListpeersPeersLog.prototype.setTime = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersLog} returns this
 */
proto.cln.ListpeersPeersLog.prototype.clearTime = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersLog.prototype.hasTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string source = 4;
 * @return {string}
 */
proto.cln.ListpeersPeersLog.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeersPeersLog} returns this
 */
proto.cln.ListpeersPeersLog.prototype.setSource = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersLog} returns this
 */
proto.cln.ListpeersPeersLog.prototype.clearSource = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersLog.prototype.hasSource = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string log = 5;
 * @return {string}
 */
proto.cln.ListpeersPeersLog.prototype.getLog = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeersPeersLog} returns this
 */
proto.cln.ListpeersPeersLog.prototype.setLog = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersLog} returns this
 */
proto.cln.ListpeersPeersLog.prototype.clearLog = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersLog.prototype.hasLog = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bytes node_id = 6;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpeersPeersLog.prototype.getNodeId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes node_id = 6;
 * This is a type-conversion wrapper around `getNodeId()`
 * @return {string}
 */
proto.cln.ListpeersPeersLog.prototype.getNodeId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getNodeId()));
};


/**
 * optional bytes node_id = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getNodeId()`
 * @return {!Uint8Array}
 */
proto.cln.ListpeersPeersLog.prototype.getNodeId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getNodeId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpeersPeersLog} returns this
 */
proto.cln.ListpeersPeersLog.prototype.setNodeId = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersLog} returns this
 */
proto.cln.ListpeersPeersLog.prototype.clearNodeId = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersLog.prototype.hasNodeId = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bytes data = 7;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpeersPeersLog.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes data = 7;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.cln.ListpeersPeersLog.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.cln.ListpeersPeersLog.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpeersPeersLog} returns this
 */
proto.cln.ListpeersPeersLog.prototype.setData = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersLog} returns this
 */
proto.cln.ListpeersPeersLog.prototype.clearData = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersLog.prototype.hasData = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListpeersPeersChannels.repeatedFields_ = [13,18,37,46];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpeersPeersChannels.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpeersPeersChannels.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpeersPeersChannels} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeersPeersChannels.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: jspb.Message.getFieldWithDefault(msg, 1, 0),
    scratchTxid: msg.getScratchTxid_asB64(),
    feerate: (f = msg.getFeerate()) && proto.cln.ListpeersPeersChannelsFeerate.toObject(includeInstance, f),
    owner: jspb.Message.getFieldWithDefault(msg, 4, ""),
    shortChannelId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    channelId: msg.getChannelId_asB64(),
    fundingTxid: msg.getFundingTxid_asB64(),
    fundingOutnum: jspb.Message.getFieldWithDefault(msg, 8, 0),
    initialFeerate: jspb.Message.getFieldWithDefault(msg, 9, ""),
    lastFeerate: jspb.Message.getFieldWithDefault(msg, 10, ""),
    nextFeerate: jspb.Message.getFieldWithDefault(msg, 11, ""),
    nextFeeStep: jspb.Message.getFieldWithDefault(msg, 12, 0),
    inflightList: jspb.Message.toObjectList(msg.getInflightList(),
    proto.cln.ListpeersPeersChannelsInflight.toObject, includeInstance),
    closeTo: msg.getCloseTo_asB64(),
    pb_private: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    opener: jspb.Message.getFieldWithDefault(msg, 16, 0),
    closer: jspb.Message.getFieldWithDefault(msg, 17, 0),
    featuresList: (f = jspb.Message.getRepeatedField(msg, 18)) == null ? undefined : f,
    funding: (f = msg.getFunding()) && proto.cln.ListpeersPeersChannelsFunding.toObject(includeInstance, f),
    toUsMsat: (f = msg.getToUsMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    minToUsMsat: (f = msg.getMinToUsMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    maxToUsMsat: (f = msg.getMaxToUsMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    totalMsat: (f = msg.getTotalMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    feeBaseMsat: (f = msg.getFeeBaseMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    feeProportionalMillionths: jspb.Message.getFieldWithDefault(msg, 25, 0),
    dustLimitMsat: (f = msg.getDustLimitMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    maxTotalHtlcInMsat: (f = msg.getMaxTotalHtlcInMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    theirReserveMsat: (f = msg.getTheirReserveMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    ourReserveMsat: (f = msg.getOurReserveMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    spendableMsat: (f = msg.getSpendableMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    receivableMsat: (f = msg.getReceivableMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    minimumHtlcInMsat: (f = msg.getMinimumHtlcInMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    minimumHtlcOutMsat: (f = msg.getMinimumHtlcOutMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    maximumHtlcOutMsat: (f = msg.getMaximumHtlcOutMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    theirToSelfDelay: jspb.Message.getFieldWithDefault(msg, 33, 0),
    ourToSelfDelay: jspb.Message.getFieldWithDefault(msg, 34, 0),
    maxAcceptedHtlcs: jspb.Message.getFieldWithDefault(msg, 35, 0),
    alias: (f = msg.getAlias()) && proto.cln.ListpeersPeersChannelsAlias.toObject(includeInstance, f),
    statusList: (f = jspb.Message.getRepeatedField(msg, 37)) == null ? undefined : f,
    inPaymentsOffered: jspb.Message.getFieldWithDefault(msg, 38, 0),
    inOfferedMsat: (f = msg.getInOfferedMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    inPaymentsFulfilled: jspb.Message.getFieldWithDefault(msg, 40, 0),
    inFulfilledMsat: (f = msg.getInFulfilledMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    outPaymentsOffered: jspb.Message.getFieldWithDefault(msg, 42, 0),
    outOfferedMsat: (f = msg.getOutOfferedMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    outPaymentsFulfilled: jspb.Message.getFieldWithDefault(msg, 44, 0),
    outFulfilledMsat: (f = msg.getOutFulfilledMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    htlcsList: jspb.Message.toObjectList(msg.getHtlcsList(),
    proto.cln.ListpeersPeersChannelsHtlcs.toObject, includeInstance),
    closeToAddr: jspb.Message.getFieldWithDefault(msg, 47, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpeersPeersChannels}
 */
proto.cln.ListpeersPeersChannels.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpeersPeersChannels;
  return proto.cln.ListpeersPeersChannels.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpeersPeersChannels} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpeersPeersChannels}
 */
proto.cln.ListpeersPeersChannels.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.ListpeersPeersChannels.ListpeersPeersChannelsState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setScratchTxid(value);
      break;
    case 3:
      var value = new proto.cln.ListpeersPeersChannelsFeerate;
      reader.readMessage(value,proto.cln.ListpeersPeersChannelsFeerate.deserializeBinaryFromReader);
      msg.setFeerate(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setShortChannelId(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChannelId(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFundingTxid(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFundingOutnum(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setInitialFeerate(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastFeerate(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextFeerate(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNextFeeStep(value);
      break;
    case 13:
      var value = new proto.cln.ListpeersPeersChannelsInflight;
      reader.readMessage(value,proto.cln.ListpeersPeersChannelsInflight.deserializeBinaryFromReader);
      msg.addInflight(value);
      break;
    case 14:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setCloseTo(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPrivate(value);
      break;
    case 16:
      var value = /** @type {!proto.cln.ChannelSide} */ (reader.readEnum());
      msg.setOpener(value);
      break;
    case 17:
      var value = /** @type {!proto.cln.ChannelSide} */ (reader.readEnum());
      msg.setCloser(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.addFeatures(value);
      break;
    case 19:
      var value = new proto.cln.ListpeersPeersChannelsFunding;
      reader.readMessage(value,proto.cln.ListpeersPeersChannelsFunding.deserializeBinaryFromReader);
      msg.setFunding(value);
      break;
    case 20:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setToUsMsat(value);
      break;
    case 21:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setMinToUsMsat(value);
      break;
    case 22:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setMaxToUsMsat(value);
      break;
    case 23:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setTotalMsat(value);
      break;
    case 24:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setFeeBaseMsat(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFeeProportionalMillionths(value);
      break;
    case 26:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setDustLimitMsat(value);
      break;
    case 27:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setMaxTotalHtlcInMsat(value);
      break;
    case 28:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setTheirReserveMsat(value);
      break;
    case 29:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setOurReserveMsat(value);
      break;
    case 30:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setSpendableMsat(value);
      break;
    case 31:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setReceivableMsat(value);
      break;
    case 32:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setMinimumHtlcInMsat(value);
      break;
    case 48:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setMinimumHtlcOutMsat(value);
      break;
    case 49:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setMaximumHtlcOutMsat(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTheirToSelfDelay(value);
      break;
    case 34:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOurToSelfDelay(value);
      break;
    case 35:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxAcceptedHtlcs(value);
      break;
    case 50:
      var value = new proto.cln.ListpeersPeersChannelsAlias;
      reader.readMessage(value,proto.cln.ListpeersPeersChannelsAlias.deserializeBinaryFromReader);
      msg.setAlias(value);
      break;
    case 37:
      var value = /** @type {string} */ (reader.readString());
      msg.addStatus(value);
      break;
    case 38:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInPaymentsOffered(value);
      break;
    case 39:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setInOfferedMsat(value);
      break;
    case 40:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInPaymentsFulfilled(value);
      break;
    case 41:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setInFulfilledMsat(value);
      break;
    case 42:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOutPaymentsOffered(value);
      break;
    case 43:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setOutOfferedMsat(value);
      break;
    case 44:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOutPaymentsFulfilled(value);
      break;
    case 45:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setOutFulfilledMsat(value);
      break;
    case 46:
      var value = new proto.cln.ListpeersPeersChannelsHtlcs;
      reader.readMessage(value,proto.cln.ListpeersPeersChannelsHtlcs.deserializeBinaryFromReader);
      msg.addHtlcs(value);
      break;
    case 47:
      var value = /** @type {string} */ (reader.readString());
      msg.setCloseToAddr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpeersPeersChannels.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpeersPeersChannels.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpeersPeersChannels} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeersPeersChannels.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getFeerate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cln.ListpeersPeersChannelsFeerate.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBytes(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint32(
      12,
      f
    );
  }
  f = message.getInflightList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.cln.ListpeersPeersChannelsInflight.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeBytes(
      14,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getOpener();
  if (f !== 0.0) {
    writer.writeEnum(
      16,
      f
    );
  }
  f = /** @type {!proto.cln.ChannelSide} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeEnum(
      17,
      f
    );
  }
  f = message.getFeaturesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      18,
      f
    );
  }
  f = message.getFunding();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.cln.ListpeersPeersChannelsFunding.serializeBinaryToWriter
    );
  }
  f = message.getToUsMsat();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getMinToUsMsat();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getMaxToUsMsat();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getTotalMsat();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getFeeBaseMsat();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeUint32(
      25,
      f
    );
  }
  f = message.getDustLimitMsat();
  if (f != null) {
    writer.writeMessage(
      26,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getMaxTotalHtlcInMsat();
  if (f != null) {
    writer.writeMessage(
      27,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getTheirReserveMsat();
  if (f != null) {
    writer.writeMessage(
      28,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getOurReserveMsat();
  if (f != null) {
    writer.writeMessage(
      29,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getSpendableMsat();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getReceivableMsat();
  if (f != null) {
    writer.writeMessage(
      31,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getMinimumHtlcInMsat();
  if (f != null) {
    writer.writeMessage(
      32,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getMinimumHtlcOutMsat();
  if (f != null) {
    writer.writeMessage(
      48,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getMaximumHtlcOutMsat();
  if (f != null) {
    writer.writeMessage(
      49,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 33));
  if (f != null) {
    writer.writeUint32(
      33,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 34));
  if (f != null) {
    writer.writeUint32(
      34,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 35));
  if (f != null) {
    writer.writeUint32(
      35,
      f
    );
  }
  f = message.getAlias();
  if (f != null) {
    writer.writeMessage(
      50,
      f,
      proto.cln.ListpeersPeersChannelsAlias.serializeBinaryToWriter
    );
  }
  f = message.getStatusList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      37,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 38));
  if (f != null) {
    writer.writeUint64(
      38,
      f
    );
  }
  f = message.getInOfferedMsat();
  if (f != null) {
    writer.writeMessage(
      39,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 40));
  if (f != null) {
    writer.writeUint64(
      40,
      f
    );
  }
  f = message.getInFulfilledMsat();
  if (f != null) {
    writer.writeMessage(
      41,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 42));
  if (f != null) {
    writer.writeUint64(
      42,
      f
    );
  }
  f = message.getOutOfferedMsat();
  if (f != null) {
    writer.writeMessage(
      43,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 44));
  if (f != null) {
    writer.writeUint64(
      44,
      f
    );
  }
  f = message.getOutFulfilledMsat();
  if (f != null) {
    writer.writeMessage(
      45,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getHtlcsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      46,
      f,
      proto.cln.ListpeersPeersChannelsHtlcs.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 47));
  if (f != null) {
    writer.writeString(
      47,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ListpeersPeersChannels.ListpeersPeersChannelsState = {
  OPENINGD: 0,
  CHANNELD_AWAITING_LOCKIN: 1,
  CHANNELD_NORMAL: 2,
  CHANNELD_SHUTTING_DOWN: 3,
  CLOSINGD_SIGEXCHANGE: 4,
  CLOSINGD_COMPLETE: 5,
  AWAITING_UNILATERAL: 6,
  FUNDING_SPEND_SEEN: 7,
  ONCHAIN: 8,
  DUALOPEND_OPEN_INIT: 9,
  DUALOPEND_AWAITING_LOCKIN: 10,
  DUALOPEND_OPEN_COMMITTED: 11,
  DUALOPEND_OPEN_COMMIT_READY: 12
};

/**
 * optional ListpeersPeersChannelsState state = 1;
 * @return {!proto.cln.ListpeersPeersChannels.ListpeersPeersChannelsState}
 */
proto.cln.ListpeersPeersChannels.prototype.getState = function() {
  return /** @type {!proto.cln.ListpeersPeersChannels.ListpeersPeersChannelsState} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.ListpeersPeersChannels.ListpeersPeersChannelsState} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional bytes scratch_txid = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpeersPeersChannels.prototype.getScratchTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes scratch_txid = 2;
 * This is a type-conversion wrapper around `getScratchTxid()`
 * @return {string}
 */
proto.cln.ListpeersPeersChannels.prototype.getScratchTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getScratchTxid()));
};


/**
 * optional bytes scratch_txid = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getScratchTxid()`
 * @return {!Uint8Array}
 */
proto.cln.ListpeersPeersChannels.prototype.getScratchTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getScratchTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.setScratchTxid = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearScratchTxid = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasScratchTxid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ListpeersPeersChannelsFeerate feerate = 3;
 * @return {?proto.cln.ListpeersPeersChannelsFeerate}
 */
proto.cln.ListpeersPeersChannels.prototype.getFeerate = function() {
  return /** @type{?proto.cln.ListpeersPeersChannelsFeerate} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListpeersPeersChannelsFeerate, 3));
};


/**
 * @param {?proto.cln.ListpeersPeersChannelsFeerate|undefined} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
*/
proto.cln.ListpeersPeersChannels.prototype.setFeerate = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearFeerate = function() {
  return this.setFeerate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasFeerate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string owner = 4;
 * @return {string}
 */
proto.cln.ListpeersPeersChannels.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.setOwner = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearOwner = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasOwner = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string short_channel_id = 5;
 * @return {string}
 */
proto.cln.ListpeersPeersChannels.prototype.getShortChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.setShortChannelId = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearShortChannelId = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasShortChannelId = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bytes channel_id = 6;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpeersPeersChannels.prototype.getChannelId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes channel_id = 6;
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {string}
 */
proto.cln.ListpeersPeersChannels.prototype.getChannelId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChannelId()));
};


/**
 * optional bytes channel_id = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {!Uint8Array}
 */
proto.cln.ListpeersPeersChannels.prototype.getChannelId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChannelId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.setChannelId = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearChannelId = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasChannelId = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bytes funding_txid = 7;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpeersPeersChannels.prototype.getFundingTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes funding_txid = 7;
 * This is a type-conversion wrapper around `getFundingTxid()`
 * @return {string}
 */
proto.cln.ListpeersPeersChannels.prototype.getFundingTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFundingTxid()));
};


/**
 * optional bytes funding_txid = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFundingTxid()`
 * @return {!Uint8Array}
 */
proto.cln.ListpeersPeersChannels.prototype.getFundingTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFundingTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.setFundingTxid = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearFundingTxid = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasFundingTxid = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 funding_outnum = 8;
 * @return {number}
 */
proto.cln.ListpeersPeersChannels.prototype.getFundingOutnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.setFundingOutnum = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearFundingOutnum = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasFundingOutnum = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string initial_feerate = 9;
 * @return {string}
 */
proto.cln.ListpeersPeersChannels.prototype.getInitialFeerate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.setInitialFeerate = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearInitialFeerate = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasInitialFeerate = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string last_feerate = 10;
 * @return {string}
 */
proto.cln.ListpeersPeersChannels.prototype.getLastFeerate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.setLastFeerate = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearLastFeerate = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasLastFeerate = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string next_feerate = 11;
 * @return {string}
 */
proto.cln.ListpeersPeersChannels.prototype.getNextFeerate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.setNextFeerate = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearNextFeerate = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasNextFeerate = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint32 next_fee_step = 12;
 * @return {number}
 */
proto.cln.ListpeersPeersChannels.prototype.getNextFeeStep = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.setNextFeeStep = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearNextFeeStep = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasNextFeeStep = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * repeated ListpeersPeersChannelsInflight inflight = 13;
 * @return {!Array<!proto.cln.ListpeersPeersChannelsInflight>}
 */
proto.cln.ListpeersPeersChannels.prototype.getInflightList = function() {
  return /** @type{!Array<!proto.cln.ListpeersPeersChannelsInflight>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListpeersPeersChannelsInflight, 13));
};


/**
 * @param {!Array<!proto.cln.ListpeersPeersChannelsInflight>} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
*/
proto.cln.ListpeersPeersChannels.prototype.setInflightList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.cln.ListpeersPeersChannelsInflight=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListpeersPeersChannelsInflight}
 */
proto.cln.ListpeersPeersChannels.prototype.addInflight = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.cln.ListpeersPeersChannelsInflight, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearInflightList = function() {
  return this.setInflightList([]);
};


/**
 * optional bytes close_to = 14;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpeersPeersChannels.prototype.getCloseTo = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * optional bytes close_to = 14;
 * This is a type-conversion wrapper around `getCloseTo()`
 * @return {string}
 */
proto.cln.ListpeersPeersChannels.prototype.getCloseTo_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getCloseTo()));
};


/**
 * optional bytes close_to = 14;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCloseTo()`
 * @return {!Uint8Array}
 */
proto.cln.ListpeersPeersChannels.prototype.getCloseTo_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getCloseTo()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.setCloseTo = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearCloseTo = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasCloseTo = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool private = 15;
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.getPrivate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.setPrivate = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearPrivate = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasPrivate = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional ChannelSide opener = 16;
 * @return {!proto.cln.ChannelSide}
 */
proto.cln.ListpeersPeersChannels.prototype.getOpener = function() {
  return /** @type {!proto.cln.ChannelSide} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {!proto.cln.ChannelSide} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.setOpener = function(value) {
  return jspb.Message.setProto3EnumField(this, 16, value);
};


/**
 * optional ChannelSide closer = 17;
 * @return {!proto.cln.ChannelSide}
 */
proto.cln.ListpeersPeersChannels.prototype.getCloser = function() {
  return /** @type {!proto.cln.ChannelSide} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {!proto.cln.ChannelSide} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.setCloser = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearCloser = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasCloser = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * repeated string features = 18;
 * @return {!Array<string>}
 */
proto.cln.ListpeersPeersChannels.prototype.getFeaturesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 18));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.setFeaturesList = function(value) {
  return jspb.Message.setField(this, 18, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.addFeatures = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 18, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearFeaturesList = function() {
  return this.setFeaturesList([]);
};


/**
 * optional ListpeersPeersChannelsFunding funding = 19;
 * @return {?proto.cln.ListpeersPeersChannelsFunding}
 */
proto.cln.ListpeersPeersChannels.prototype.getFunding = function() {
  return /** @type{?proto.cln.ListpeersPeersChannelsFunding} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListpeersPeersChannelsFunding, 19));
};


/**
 * @param {?proto.cln.ListpeersPeersChannelsFunding|undefined} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
*/
proto.cln.ListpeersPeersChannels.prototype.setFunding = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearFunding = function() {
  return this.setFunding(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasFunding = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional Amount to_us_msat = 20;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeersPeersChannels.prototype.getToUsMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 20));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
*/
proto.cln.ListpeersPeersChannels.prototype.setToUsMsat = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearToUsMsat = function() {
  return this.setToUsMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasToUsMsat = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional Amount min_to_us_msat = 21;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeersPeersChannels.prototype.getMinToUsMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 21));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
*/
proto.cln.ListpeersPeersChannels.prototype.setMinToUsMsat = function(value) {
  return jspb.Message.setWrapperField(this, 21, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearMinToUsMsat = function() {
  return this.setMinToUsMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasMinToUsMsat = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional Amount max_to_us_msat = 22;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeersPeersChannels.prototype.getMaxToUsMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 22));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
*/
proto.cln.ListpeersPeersChannels.prototype.setMaxToUsMsat = function(value) {
  return jspb.Message.setWrapperField(this, 22, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearMaxToUsMsat = function() {
  return this.setMaxToUsMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasMaxToUsMsat = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional Amount total_msat = 23;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeersPeersChannels.prototype.getTotalMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 23));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
*/
proto.cln.ListpeersPeersChannels.prototype.setTotalMsat = function(value) {
  return jspb.Message.setWrapperField(this, 23, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearTotalMsat = function() {
  return this.setTotalMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasTotalMsat = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional Amount fee_base_msat = 24;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeersPeersChannels.prototype.getFeeBaseMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 24));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
*/
proto.cln.ListpeersPeersChannels.prototype.setFeeBaseMsat = function(value) {
  return jspb.Message.setWrapperField(this, 24, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearFeeBaseMsat = function() {
  return this.setFeeBaseMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasFeeBaseMsat = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional uint32 fee_proportional_millionths = 25;
 * @return {number}
 */
proto.cln.ListpeersPeersChannels.prototype.getFeeProportionalMillionths = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.setFeeProportionalMillionths = function(value) {
  return jspb.Message.setField(this, 25, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearFeeProportionalMillionths = function() {
  return jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasFeeProportionalMillionths = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional Amount dust_limit_msat = 26;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeersPeersChannels.prototype.getDustLimitMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 26));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
*/
proto.cln.ListpeersPeersChannels.prototype.setDustLimitMsat = function(value) {
  return jspb.Message.setWrapperField(this, 26, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearDustLimitMsat = function() {
  return this.setDustLimitMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasDustLimitMsat = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional Amount max_total_htlc_in_msat = 27;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeersPeersChannels.prototype.getMaxTotalHtlcInMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 27));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
*/
proto.cln.ListpeersPeersChannels.prototype.setMaxTotalHtlcInMsat = function(value) {
  return jspb.Message.setWrapperField(this, 27, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearMaxTotalHtlcInMsat = function() {
  return this.setMaxTotalHtlcInMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasMaxTotalHtlcInMsat = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional Amount their_reserve_msat = 28;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeersPeersChannels.prototype.getTheirReserveMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 28));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
*/
proto.cln.ListpeersPeersChannels.prototype.setTheirReserveMsat = function(value) {
  return jspb.Message.setWrapperField(this, 28, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearTheirReserveMsat = function() {
  return this.setTheirReserveMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasTheirReserveMsat = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional Amount our_reserve_msat = 29;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeersPeersChannels.prototype.getOurReserveMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 29));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
*/
proto.cln.ListpeersPeersChannels.prototype.setOurReserveMsat = function(value) {
  return jspb.Message.setWrapperField(this, 29, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearOurReserveMsat = function() {
  return this.setOurReserveMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasOurReserveMsat = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional Amount spendable_msat = 30;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeersPeersChannels.prototype.getSpendableMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 30));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
*/
proto.cln.ListpeersPeersChannels.prototype.setSpendableMsat = function(value) {
  return jspb.Message.setWrapperField(this, 30, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearSpendableMsat = function() {
  return this.setSpendableMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasSpendableMsat = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional Amount receivable_msat = 31;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeersPeersChannels.prototype.getReceivableMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 31));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
*/
proto.cln.ListpeersPeersChannels.prototype.setReceivableMsat = function(value) {
  return jspb.Message.setWrapperField(this, 31, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearReceivableMsat = function() {
  return this.setReceivableMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasReceivableMsat = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional Amount minimum_htlc_in_msat = 32;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeersPeersChannels.prototype.getMinimumHtlcInMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 32));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
*/
proto.cln.ListpeersPeersChannels.prototype.setMinimumHtlcInMsat = function(value) {
  return jspb.Message.setWrapperField(this, 32, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearMinimumHtlcInMsat = function() {
  return this.setMinimumHtlcInMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasMinimumHtlcInMsat = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional Amount minimum_htlc_out_msat = 48;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeersPeersChannels.prototype.getMinimumHtlcOutMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 48));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
*/
proto.cln.ListpeersPeersChannels.prototype.setMinimumHtlcOutMsat = function(value) {
  return jspb.Message.setWrapperField(this, 48, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearMinimumHtlcOutMsat = function() {
  return this.setMinimumHtlcOutMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasMinimumHtlcOutMsat = function() {
  return jspb.Message.getField(this, 48) != null;
};


/**
 * optional Amount maximum_htlc_out_msat = 49;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeersPeersChannels.prototype.getMaximumHtlcOutMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 49));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
*/
proto.cln.ListpeersPeersChannels.prototype.setMaximumHtlcOutMsat = function(value) {
  return jspb.Message.setWrapperField(this, 49, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearMaximumHtlcOutMsat = function() {
  return this.setMaximumHtlcOutMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasMaximumHtlcOutMsat = function() {
  return jspb.Message.getField(this, 49) != null;
};


/**
 * optional uint32 their_to_self_delay = 33;
 * @return {number}
 */
proto.cln.ListpeersPeersChannels.prototype.getTheirToSelfDelay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 33, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.setTheirToSelfDelay = function(value) {
  return jspb.Message.setField(this, 33, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearTheirToSelfDelay = function() {
  return jspb.Message.setField(this, 33, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasTheirToSelfDelay = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * optional uint32 our_to_self_delay = 34;
 * @return {number}
 */
proto.cln.ListpeersPeersChannels.prototype.getOurToSelfDelay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 34, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.setOurToSelfDelay = function(value) {
  return jspb.Message.setField(this, 34, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearOurToSelfDelay = function() {
  return jspb.Message.setField(this, 34, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasOurToSelfDelay = function() {
  return jspb.Message.getField(this, 34) != null;
};


/**
 * optional uint32 max_accepted_htlcs = 35;
 * @return {number}
 */
proto.cln.ListpeersPeersChannels.prototype.getMaxAcceptedHtlcs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 35, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.setMaxAcceptedHtlcs = function(value) {
  return jspb.Message.setField(this, 35, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearMaxAcceptedHtlcs = function() {
  return jspb.Message.setField(this, 35, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasMaxAcceptedHtlcs = function() {
  return jspb.Message.getField(this, 35) != null;
};


/**
 * optional ListpeersPeersChannelsAlias alias = 50;
 * @return {?proto.cln.ListpeersPeersChannelsAlias}
 */
proto.cln.ListpeersPeersChannels.prototype.getAlias = function() {
  return /** @type{?proto.cln.ListpeersPeersChannelsAlias} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListpeersPeersChannelsAlias, 50));
};


/**
 * @param {?proto.cln.ListpeersPeersChannelsAlias|undefined} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
*/
proto.cln.ListpeersPeersChannels.prototype.setAlias = function(value) {
  return jspb.Message.setWrapperField(this, 50, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearAlias = function() {
  return this.setAlias(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasAlias = function() {
  return jspb.Message.getField(this, 50) != null;
};


/**
 * repeated string status = 37;
 * @return {!Array<string>}
 */
proto.cln.ListpeersPeersChannels.prototype.getStatusList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 37));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.setStatusList = function(value) {
  return jspb.Message.setField(this, 37, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.addStatus = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 37, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearStatusList = function() {
  return this.setStatusList([]);
};


/**
 * optional uint64 in_payments_offered = 38;
 * @return {number}
 */
proto.cln.ListpeersPeersChannels.prototype.getInPaymentsOffered = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 38, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.setInPaymentsOffered = function(value) {
  return jspb.Message.setField(this, 38, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearInPaymentsOffered = function() {
  return jspb.Message.setField(this, 38, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasInPaymentsOffered = function() {
  return jspb.Message.getField(this, 38) != null;
};


/**
 * optional Amount in_offered_msat = 39;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeersPeersChannels.prototype.getInOfferedMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 39));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
*/
proto.cln.ListpeersPeersChannels.prototype.setInOfferedMsat = function(value) {
  return jspb.Message.setWrapperField(this, 39, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearInOfferedMsat = function() {
  return this.setInOfferedMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasInOfferedMsat = function() {
  return jspb.Message.getField(this, 39) != null;
};


/**
 * optional uint64 in_payments_fulfilled = 40;
 * @return {number}
 */
proto.cln.ListpeersPeersChannels.prototype.getInPaymentsFulfilled = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 40, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.setInPaymentsFulfilled = function(value) {
  return jspb.Message.setField(this, 40, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearInPaymentsFulfilled = function() {
  return jspb.Message.setField(this, 40, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasInPaymentsFulfilled = function() {
  return jspb.Message.getField(this, 40) != null;
};


/**
 * optional Amount in_fulfilled_msat = 41;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeersPeersChannels.prototype.getInFulfilledMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 41));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
*/
proto.cln.ListpeersPeersChannels.prototype.setInFulfilledMsat = function(value) {
  return jspb.Message.setWrapperField(this, 41, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearInFulfilledMsat = function() {
  return this.setInFulfilledMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasInFulfilledMsat = function() {
  return jspb.Message.getField(this, 41) != null;
};


/**
 * optional uint64 out_payments_offered = 42;
 * @return {number}
 */
proto.cln.ListpeersPeersChannels.prototype.getOutPaymentsOffered = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 42, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.setOutPaymentsOffered = function(value) {
  return jspb.Message.setField(this, 42, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearOutPaymentsOffered = function() {
  return jspb.Message.setField(this, 42, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasOutPaymentsOffered = function() {
  return jspb.Message.getField(this, 42) != null;
};


/**
 * optional Amount out_offered_msat = 43;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeersPeersChannels.prototype.getOutOfferedMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 43));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
*/
proto.cln.ListpeersPeersChannels.prototype.setOutOfferedMsat = function(value) {
  return jspb.Message.setWrapperField(this, 43, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearOutOfferedMsat = function() {
  return this.setOutOfferedMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasOutOfferedMsat = function() {
  return jspb.Message.getField(this, 43) != null;
};


/**
 * optional uint64 out_payments_fulfilled = 44;
 * @return {number}
 */
proto.cln.ListpeersPeersChannels.prototype.getOutPaymentsFulfilled = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 44, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.setOutPaymentsFulfilled = function(value) {
  return jspb.Message.setField(this, 44, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearOutPaymentsFulfilled = function() {
  return jspb.Message.setField(this, 44, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasOutPaymentsFulfilled = function() {
  return jspb.Message.getField(this, 44) != null;
};


/**
 * optional Amount out_fulfilled_msat = 45;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeersPeersChannels.prototype.getOutFulfilledMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 45));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
*/
proto.cln.ListpeersPeersChannels.prototype.setOutFulfilledMsat = function(value) {
  return jspb.Message.setWrapperField(this, 45, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearOutFulfilledMsat = function() {
  return this.setOutFulfilledMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasOutFulfilledMsat = function() {
  return jspb.Message.getField(this, 45) != null;
};


/**
 * repeated ListpeersPeersChannelsHtlcs htlcs = 46;
 * @return {!Array<!proto.cln.ListpeersPeersChannelsHtlcs>}
 */
proto.cln.ListpeersPeersChannels.prototype.getHtlcsList = function() {
  return /** @type{!Array<!proto.cln.ListpeersPeersChannelsHtlcs>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListpeersPeersChannelsHtlcs, 46));
};


/**
 * @param {!Array<!proto.cln.ListpeersPeersChannelsHtlcs>} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
*/
proto.cln.ListpeersPeersChannels.prototype.setHtlcsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 46, value);
};


/**
 * @param {!proto.cln.ListpeersPeersChannelsHtlcs=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListpeersPeersChannelsHtlcs}
 */
proto.cln.ListpeersPeersChannels.prototype.addHtlcs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 46, opt_value, proto.cln.ListpeersPeersChannelsHtlcs, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearHtlcsList = function() {
  return this.setHtlcsList([]);
};


/**
 * optional string close_to_addr = 47;
 * @return {string}
 */
proto.cln.ListpeersPeersChannels.prototype.getCloseToAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 47, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.setCloseToAddr = function(value) {
  return jspb.Message.setField(this, 47, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannels} returns this
 */
proto.cln.ListpeersPeersChannels.prototype.clearCloseToAddr = function() {
  return jspb.Message.setField(this, 47, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannels.prototype.hasCloseToAddr = function() {
  return jspb.Message.getField(this, 47) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpeersPeersChannelsFeerate.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpeersPeersChannelsFeerate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpeersPeersChannelsFeerate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeersPeersChannelsFeerate.toObject = function(includeInstance, msg) {
  var f, obj = {
    perkw: jspb.Message.getFieldWithDefault(msg, 1, 0),
    perkb: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpeersPeersChannelsFeerate}
 */
proto.cln.ListpeersPeersChannelsFeerate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpeersPeersChannelsFeerate;
  return proto.cln.ListpeersPeersChannelsFeerate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpeersPeersChannelsFeerate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpeersPeersChannelsFeerate}
 */
proto.cln.ListpeersPeersChannelsFeerate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPerkw(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPerkb(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpeersPeersChannelsFeerate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpeersPeersChannelsFeerate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpeersPeersChannelsFeerate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeersPeersChannelsFeerate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPerkw();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getPerkb();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 perkw = 1;
 * @return {number}
 */
proto.cln.ListpeersPeersChannelsFeerate.prototype.getPerkw = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeersPeersChannelsFeerate} returns this
 */
proto.cln.ListpeersPeersChannelsFeerate.prototype.setPerkw = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 perkb = 2;
 * @return {number}
 */
proto.cln.ListpeersPeersChannelsFeerate.prototype.getPerkb = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeersPeersChannelsFeerate} returns this
 */
proto.cln.ListpeersPeersChannelsFeerate.prototype.setPerkb = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpeersPeersChannelsInflight.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpeersPeersChannelsInflight.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpeersPeersChannelsInflight} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeersPeersChannelsInflight.toObject = function(includeInstance, msg) {
  var f, obj = {
    fundingTxid: msg.getFundingTxid_asB64(),
    fundingOutnum: jspb.Message.getFieldWithDefault(msg, 2, 0),
    feerate: jspb.Message.getFieldWithDefault(msg, 3, ""),
    totalFundingMsat: (f = msg.getTotalFundingMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    ourFundingMsat: (f = msg.getOurFundingMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    spliceAmount: jspb.Message.getFieldWithDefault(msg, 7, 0),
    scratchTxid: msg.getScratchTxid_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpeersPeersChannelsInflight}
 */
proto.cln.ListpeersPeersChannelsInflight.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpeersPeersChannelsInflight;
  return proto.cln.ListpeersPeersChannelsInflight.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpeersPeersChannelsInflight} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpeersPeersChannelsInflight}
 */
proto.cln.ListpeersPeersChannelsInflight.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFundingTxid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFundingOutnum(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeerate(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setTotalFundingMsat(value);
      break;
    case 5:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setOurFundingMsat(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setSpliceAmount(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setScratchTxid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpeersPeersChannelsInflight.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpeersPeersChannelsInflight.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpeersPeersChannelsInflight} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeersPeersChannelsInflight.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFundingTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getFundingOutnum();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getFeerate();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTotalFundingMsat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getOurFundingMsat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeSint64(
      7,
      f
    );
  }
  f = message.getScratchTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
};


/**
 * optional bytes funding_txid = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpeersPeersChannelsInflight.prototype.getFundingTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes funding_txid = 1;
 * This is a type-conversion wrapper around `getFundingTxid()`
 * @return {string}
 */
proto.cln.ListpeersPeersChannelsInflight.prototype.getFundingTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFundingTxid()));
};


/**
 * optional bytes funding_txid = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFundingTxid()`
 * @return {!Uint8Array}
 */
proto.cln.ListpeersPeersChannelsInflight.prototype.getFundingTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFundingTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpeersPeersChannelsInflight} returns this
 */
proto.cln.ListpeersPeersChannelsInflight.prototype.setFundingTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint32 funding_outnum = 2;
 * @return {number}
 */
proto.cln.ListpeersPeersChannelsInflight.prototype.getFundingOutnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeersPeersChannelsInflight} returns this
 */
proto.cln.ListpeersPeersChannelsInflight.prototype.setFundingOutnum = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string feerate = 3;
 * @return {string}
 */
proto.cln.ListpeersPeersChannelsInflight.prototype.getFeerate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeersPeersChannelsInflight} returns this
 */
proto.cln.ListpeersPeersChannelsInflight.prototype.setFeerate = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Amount total_funding_msat = 4;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeersPeersChannelsInflight.prototype.getTotalFundingMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 4));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeersPeersChannelsInflight} returns this
*/
proto.cln.ListpeersPeersChannelsInflight.prototype.setTotalFundingMsat = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannelsInflight} returns this
 */
proto.cln.ListpeersPeersChannelsInflight.prototype.clearTotalFundingMsat = function() {
  return this.setTotalFundingMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannelsInflight.prototype.hasTotalFundingMsat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Amount our_funding_msat = 5;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeersPeersChannelsInflight.prototype.getOurFundingMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 5));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeersPeersChannelsInflight} returns this
*/
proto.cln.ListpeersPeersChannelsInflight.prototype.setOurFundingMsat = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannelsInflight} returns this
 */
proto.cln.ListpeersPeersChannelsInflight.prototype.clearOurFundingMsat = function() {
  return this.setOurFundingMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannelsInflight.prototype.hasOurFundingMsat = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional sint64 splice_amount = 7;
 * @return {number}
 */
proto.cln.ListpeersPeersChannelsInflight.prototype.getSpliceAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeersPeersChannelsInflight} returns this
 */
proto.cln.ListpeersPeersChannelsInflight.prototype.setSpliceAmount = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannelsInflight} returns this
 */
proto.cln.ListpeersPeersChannelsInflight.prototype.clearSpliceAmount = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannelsInflight.prototype.hasSpliceAmount = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bytes scratch_txid = 6;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpeersPeersChannelsInflight.prototype.getScratchTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes scratch_txid = 6;
 * This is a type-conversion wrapper around `getScratchTxid()`
 * @return {string}
 */
proto.cln.ListpeersPeersChannelsInflight.prototype.getScratchTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getScratchTxid()));
};


/**
 * optional bytes scratch_txid = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getScratchTxid()`
 * @return {!Uint8Array}
 */
proto.cln.ListpeersPeersChannelsInflight.prototype.getScratchTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getScratchTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpeersPeersChannelsInflight} returns this
 */
proto.cln.ListpeersPeersChannelsInflight.prototype.setScratchTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpeersPeersChannelsFunding.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpeersPeersChannelsFunding.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpeersPeersChannelsFunding} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeersPeersChannelsFunding.toObject = function(includeInstance, msg) {
  var f, obj = {
    pushedMsat: (f = msg.getPushedMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    localFundsMsat: (f = msg.getLocalFundsMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    remoteFundsMsat: (f = msg.getRemoteFundsMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    feePaidMsat: (f = msg.getFeePaidMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    feeRcvdMsat: (f = msg.getFeeRcvdMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpeersPeersChannelsFunding}
 */
proto.cln.ListpeersPeersChannelsFunding.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpeersPeersChannelsFunding;
  return proto.cln.ListpeersPeersChannelsFunding.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpeersPeersChannelsFunding} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpeersPeersChannelsFunding}
 */
proto.cln.ListpeersPeersChannelsFunding.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setPushedMsat(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setLocalFundsMsat(value);
      break;
    case 7:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setRemoteFundsMsat(value);
      break;
    case 5:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setFeePaidMsat(value);
      break;
    case 6:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setFeeRcvdMsat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpeersPeersChannelsFunding.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpeersPeersChannelsFunding.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpeersPeersChannelsFunding} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeersPeersChannelsFunding.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPushedMsat();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getLocalFundsMsat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getRemoteFundsMsat();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getFeePaidMsat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getFeeRcvdMsat();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
};


/**
 * optional Amount pushed_msat = 3;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeersPeersChannelsFunding.prototype.getPushedMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 3));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeersPeersChannelsFunding} returns this
*/
proto.cln.ListpeersPeersChannelsFunding.prototype.setPushedMsat = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannelsFunding} returns this
 */
proto.cln.ListpeersPeersChannelsFunding.prototype.clearPushedMsat = function() {
  return this.setPushedMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannelsFunding.prototype.hasPushedMsat = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Amount local_funds_msat = 4;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeersPeersChannelsFunding.prototype.getLocalFundsMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 4));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeersPeersChannelsFunding} returns this
*/
proto.cln.ListpeersPeersChannelsFunding.prototype.setLocalFundsMsat = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannelsFunding} returns this
 */
proto.cln.ListpeersPeersChannelsFunding.prototype.clearLocalFundsMsat = function() {
  return this.setLocalFundsMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannelsFunding.prototype.hasLocalFundsMsat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Amount remote_funds_msat = 7;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeersPeersChannelsFunding.prototype.getRemoteFundsMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 7));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeersPeersChannelsFunding} returns this
*/
proto.cln.ListpeersPeersChannelsFunding.prototype.setRemoteFundsMsat = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannelsFunding} returns this
 */
proto.cln.ListpeersPeersChannelsFunding.prototype.clearRemoteFundsMsat = function() {
  return this.setRemoteFundsMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannelsFunding.prototype.hasRemoteFundsMsat = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Amount fee_paid_msat = 5;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeersPeersChannelsFunding.prototype.getFeePaidMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 5));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeersPeersChannelsFunding} returns this
*/
proto.cln.ListpeersPeersChannelsFunding.prototype.setFeePaidMsat = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannelsFunding} returns this
 */
proto.cln.ListpeersPeersChannelsFunding.prototype.clearFeePaidMsat = function() {
  return this.setFeePaidMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannelsFunding.prototype.hasFeePaidMsat = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Amount fee_rcvd_msat = 6;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeersPeersChannelsFunding.prototype.getFeeRcvdMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 6));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeersPeersChannelsFunding} returns this
*/
proto.cln.ListpeersPeersChannelsFunding.prototype.setFeeRcvdMsat = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannelsFunding} returns this
 */
proto.cln.ListpeersPeersChannelsFunding.prototype.clearFeeRcvdMsat = function() {
  return this.setFeeRcvdMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannelsFunding.prototype.hasFeeRcvdMsat = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpeersPeersChannelsAlias.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpeersPeersChannelsAlias.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpeersPeersChannelsAlias} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeersPeersChannelsAlias.toObject = function(includeInstance, msg) {
  var f, obj = {
    local: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remote: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpeersPeersChannelsAlias}
 */
proto.cln.ListpeersPeersChannelsAlias.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpeersPeersChannelsAlias;
  return proto.cln.ListpeersPeersChannelsAlias.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpeersPeersChannelsAlias} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpeersPeersChannelsAlias}
 */
proto.cln.ListpeersPeersChannelsAlias.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocal(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpeersPeersChannelsAlias.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpeersPeersChannelsAlias.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpeersPeersChannelsAlias} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeersPeersChannelsAlias.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string local = 1;
 * @return {string}
 */
proto.cln.ListpeersPeersChannelsAlias.prototype.getLocal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeersPeersChannelsAlias} returns this
 */
proto.cln.ListpeersPeersChannelsAlias.prototype.setLocal = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannelsAlias} returns this
 */
proto.cln.ListpeersPeersChannelsAlias.prototype.clearLocal = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannelsAlias.prototype.hasLocal = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string remote = 2;
 * @return {string}
 */
proto.cln.ListpeersPeersChannelsAlias.prototype.getRemote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeersPeersChannelsAlias} returns this
 */
proto.cln.ListpeersPeersChannelsAlias.prototype.setRemote = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannelsAlias} returns this
 */
proto.cln.ListpeersPeersChannelsAlias.prototype.clearRemote = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannelsAlias.prototype.hasRemote = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpeersPeersChannelsHtlcs.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpeersPeersChannelsHtlcs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpeersPeersChannelsHtlcs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeersPeersChannelsHtlcs.toObject = function(includeInstance, msg) {
  var f, obj = {
    direction: jspb.Message.getFieldWithDefault(msg, 1, 0),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    expiry: jspb.Message.getFieldWithDefault(msg, 4, 0),
    paymentHash: msg.getPaymentHash_asB64(),
    localTrimmed: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    status: jspb.Message.getFieldWithDefault(msg, 7, ""),
    state: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpeersPeersChannelsHtlcs}
 */
proto.cln.ListpeersPeersChannelsHtlcs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpeersPeersChannelsHtlcs;
  return proto.cln.ListpeersPeersChannelsHtlcs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpeersPeersChannelsHtlcs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpeersPeersChannelsHtlcs}
 */
proto.cln.ListpeersPeersChannelsHtlcs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.ListpeersPeersChannelsHtlcs.ListpeersPeersChannelsHtlcsDirection} */ (reader.readEnum());
      msg.setDirection(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 3:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setExpiry(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLocalTrimmed(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 8:
      var value = /** @type {!proto.cln.HtlcState} */ (reader.readEnum());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpeersPeersChannelsHtlcs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpeersPeersChannelsHtlcs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpeersPeersChannelsHtlcs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeersPeersChannelsHtlcs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDirection();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getExpiry();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ListpeersPeersChannelsHtlcs.ListpeersPeersChannelsHtlcsDirection = {
  IN: 0,
  OUT: 1
};

/**
 * optional ListpeersPeersChannelsHtlcsDirection direction = 1;
 * @return {!proto.cln.ListpeersPeersChannelsHtlcs.ListpeersPeersChannelsHtlcsDirection}
 */
proto.cln.ListpeersPeersChannelsHtlcs.prototype.getDirection = function() {
  return /** @type {!proto.cln.ListpeersPeersChannelsHtlcs.ListpeersPeersChannelsHtlcsDirection} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.ListpeersPeersChannelsHtlcs.ListpeersPeersChannelsHtlcsDirection} value
 * @return {!proto.cln.ListpeersPeersChannelsHtlcs} returns this
 */
proto.cln.ListpeersPeersChannelsHtlcs.prototype.setDirection = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint64 id = 2;
 * @return {number}
 */
proto.cln.ListpeersPeersChannelsHtlcs.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeersPeersChannelsHtlcs} returns this
 */
proto.cln.ListpeersPeersChannelsHtlcs.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Amount amount_msat = 3;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeersPeersChannelsHtlcs.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 3));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeersPeersChannelsHtlcs} returns this
*/
proto.cln.ListpeersPeersChannelsHtlcs.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannelsHtlcs} returns this
 */
proto.cln.ListpeersPeersChannelsHtlcs.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannelsHtlcs.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 expiry = 4;
 * @return {number}
 */
proto.cln.ListpeersPeersChannelsHtlcs.prototype.getExpiry = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeersPeersChannelsHtlcs} returns this
 */
proto.cln.ListpeersPeersChannelsHtlcs.prototype.setExpiry = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bytes payment_hash = 5;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpeersPeersChannelsHtlcs.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes payment_hash = 5;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.ListpeersPeersChannelsHtlcs.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.ListpeersPeersChannelsHtlcs.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpeersPeersChannelsHtlcs} returns this
 */
proto.cln.ListpeersPeersChannelsHtlcs.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};


/**
 * optional bool local_trimmed = 6;
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannelsHtlcs.prototype.getLocalTrimmed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListpeersPeersChannelsHtlcs} returns this
 */
proto.cln.ListpeersPeersChannelsHtlcs.prototype.setLocalTrimmed = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannelsHtlcs} returns this
 */
proto.cln.ListpeersPeersChannelsHtlcs.prototype.clearLocalTrimmed = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannelsHtlcs.prototype.hasLocalTrimmed = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string status = 7;
 * @return {string}
 */
proto.cln.ListpeersPeersChannelsHtlcs.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeersPeersChannelsHtlcs} returns this
 */
proto.cln.ListpeersPeersChannelsHtlcs.prototype.setStatus = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeersPeersChannelsHtlcs} returns this
 */
proto.cln.ListpeersPeersChannelsHtlcs.prototype.clearStatus = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeersPeersChannelsHtlcs.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional HtlcState state = 8;
 * @return {!proto.cln.HtlcState}
 */
proto.cln.ListpeersPeersChannelsHtlcs.prototype.getState = function() {
  return /** @type {!proto.cln.HtlcState} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.cln.HtlcState} value
 * @return {!proto.cln.ListpeersPeersChannelsHtlcs} returns this
 */
proto.cln.ListpeersPeersChannelsHtlcs.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListfundsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListfundsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListfundsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListfundsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    spent: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListfundsRequest}
 */
proto.cln.ListfundsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListfundsRequest;
  return proto.cln.ListfundsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListfundsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListfundsRequest}
 */
proto.cln.ListfundsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSpent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListfundsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListfundsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListfundsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListfundsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool spent = 1;
 * @return {boolean}
 */
proto.cln.ListfundsRequest.prototype.getSpent = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListfundsRequest} returns this
 */
proto.cln.ListfundsRequest.prototype.setSpent = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListfundsRequest} returns this
 */
proto.cln.ListfundsRequest.prototype.clearSpent = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListfundsRequest.prototype.hasSpent = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListfundsResponse.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListfundsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListfundsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListfundsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListfundsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    outputsList: jspb.Message.toObjectList(msg.getOutputsList(),
    proto.cln.ListfundsOutputs.toObject, includeInstance),
    channelsList: jspb.Message.toObjectList(msg.getChannelsList(),
    proto.cln.ListfundsChannels.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListfundsResponse}
 */
proto.cln.ListfundsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListfundsResponse;
  return proto.cln.ListfundsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListfundsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListfundsResponse}
 */
proto.cln.ListfundsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.ListfundsOutputs;
      reader.readMessage(value,proto.cln.ListfundsOutputs.deserializeBinaryFromReader);
      msg.addOutputs(value);
      break;
    case 2:
      var value = new proto.cln.ListfundsChannels;
      reader.readMessage(value,proto.cln.ListfundsChannels.deserializeBinaryFromReader);
      msg.addChannels(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListfundsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListfundsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListfundsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListfundsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOutputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.ListfundsOutputs.serializeBinaryToWriter
    );
  }
  f = message.getChannelsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.cln.ListfundsChannels.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ListfundsOutputs outputs = 1;
 * @return {!Array<!proto.cln.ListfundsOutputs>}
 */
proto.cln.ListfundsResponse.prototype.getOutputsList = function() {
  return /** @type{!Array<!proto.cln.ListfundsOutputs>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListfundsOutputs, 1));
};


/**
 * @param {!Array<!proto.cln.ListfundsOutputs>} value
 * @return {!proto.cln.ListfundsResponse} returns this
*/
proto.cln.ListfundsResponse.prototype.setOutputsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.ListfundsOutputs=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListfundsOutputs}
 */
proto.cln.ListfundsResponse.prototype.addOutputs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.ListfundsOutputs, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListfundsResponse} returns this
 */
proto.cln.ListfundsResponse.prototype.clearOutputsList = function() {
  return this.setOutputsList([]);
};


/**
 * repeated ListfundsChannels channels = 2;
 * @return {!Array<!proto.cln.ListfundsChannels>}
 */
proto.cln.ListfundsResponse.prototype.getChannelsList = function() {
  return /** @type{!Array<!proto.cln.ListfundsChannels>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListfundsChannels, 2));
};


/**
 * @param {!Array<!proto.cln.ListfundsChannels>} value
 * @return {!proto.cln.ListfundsResponse} returns this
*/
proto.cln.ListfundsResponse.prototype.setChannelsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.cln.ListfundsChannels=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListfundsChannels}
 */
proto.cln.ListfundsResponse.prototype.addChannels = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.cln.ListfundsChannels, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListfundsResponse} returns this
 */
proto.cln.ListfundsResponse.prototype.clearChannelsList = function() {
  return this.setChannelsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListfundsOutputs.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListfundsOutputs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListfundsOutputs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListfundsOutputs.toObject = function(includeInstance, msg) {
  var f, obj = {
    txid: msg.getTxid_asB64(),
    output: jspb.Message.getFieldWithDefault(msg, 2, 0),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    scriptpubkey: msg.getScriptpubkey_asB64(),
    address: jspb.Message.getFieldWithDefault(msg, 5, ""),
    redeemscript: msg.getRedeemscript_asB64(),
    status: jspb.Message.getFieldWithDefault(msg, 7, 0),
    reserved: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    blockheight: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListfundsOutputs}
 */
proto.cln.ListfundsOutputs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListfundsOutputs;
  return proto.cln.ListfundsOutputs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListfundsOutputs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListfundsOutputs}
 */
proto.cln.ListfundsOutputs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOutput(value);
      break;
    case 3:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setScriptpubkey(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRedeemscript(value);
      break;
    case 7:
      var value = /** @type {!proto.cln.ListfundsOutputs.ListfundsOutputsStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReserved(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBlockheight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListfundsOutputs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListfundsOutputs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListfundsOutputs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListfundsOutputs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getOutput();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getScriptpubkey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getReserved();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ListfundsOutputs.ListfundsOutputsStatus = {
  UNCONFIRMED: 0,
  CONFIRMED: 1,
  SPENT: 2,
  IMMATURE: 3
};

/**
 * optional bytes txid = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListfundsOutputs.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes txid = 1;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.ListfundsOutputs.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.ListfundsOutputs.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListfundsOutputs} returns this
 */
proto.cln.ListfundsOutputs.prototype.setTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint32 output = 2;
 * @return {number}
 */
proto.cln.ListfundsOutputs.prototype.getOutput = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListfundsOutputs} returns this
 */
proto.cln.ListfundsOutputs.prototype.setOutput = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Amount amount_msat = 3;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListfundsOutputs.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 3));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListfundsOutputs} returns this
*/
proto.cln.ListfundsOutputs.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListfundsOutputs} returns this
 */
proto.cln.ListfundsOutputs.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListfundsOutputs.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bytes scriptpubkey = 4;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListfundsOutputs.prototype.getScriptpubkey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes scriptpubkey = 4;
 * This is a type-conversion wrapper around `getScriptpubkey()`
 * @return {string}
 */
proto.cln.ListfundsOutputs.prototype.getScriptpubkey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getScriptpubkey()));
};


/**
 * optional bytes scriptpubkey = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getScriptpubkey()`
 * @return {!Uint8Array}
 */
proto.cln.ListfundsOutputs.prototype.getScriptpubkey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getScriptpubkey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListfundsOutputs} returns this
 */
proto.cln.ListfundsOutputs.prototype.setScriptpubkey = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional string address = 5;
 * @return {string}
 */
proto.cln.ListfundsOutputs.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListfundsOutputs} returns this
 */
proto.cln.ListfundsOutputs.prototype.setAddress = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListfundsOutputs} returns this
 */
proto.cln.ListfundsOutputs.prototype.clearAddress = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListfundsOutputs.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bytes redeemscript = 6;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListfundsOutputs.prototype.getRedeemscript = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes redeemscript = 6;
 * This is a type-conversion wrapper around `getRedeemscript()`
 * @return {string}
 */
proto.cln.ListfundsOutputs.prototype.getRedeemscript_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getRedeemscript()));
};


/**
 * optional bytes redeemscript = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRedeemscript()`
 * @return {!Uint8Array}
 */
proto.cln.ListfundsOutputs.prototype.getRedeemscript_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getRedeemscript()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListfundsOutputs} returns this
 */
proto.cln.ListfundsOutputs.prototype.setRedeemscript = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListfundsOutputs} returns this
 */
proto.cln.ListfundsOutputs.prototype.clearRedeemscript = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListfundsOutputs.prototype.hasRedeemscript = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ListfundsOutputsStatus status = 7;
 * @return {!proto.cln.ListfundsOutputs.ListfundsOutputsStatus}
 */
proto.cln.ListfundsOutputs.prototype.getStatus = function() {
  return /** @type {!proto.cln.ListfundsOutputs.ListfundsOutputsStatus} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.cln.ListfundsOutputs.ListfundsOutputsStatus} value
 * @return {!proto.cln.ListfundsOutputs} returns this
 */
proto.cln.ListfundsOutputs.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional bool reserved = 9;
 * @return {boolean}
 */
proto.cln.ListfundsOutputs.prototype.getReserved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListfundsOutputs} returns this
 */
proto.cln.ListfundsOutputs.prototype.setReserved = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional uint32 blockheight = 8;
 * @return {number}
 */
proto.cln.ListfundsOutputs.prototype.getBlockheight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListfundsOutputs} returns this
 */
proto.cln.ListfundsOutputs.prototype.setBlockheight = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListfundsOutputs} returns this
 */
proto.cln.ListfundsOutputs.prototype.clearBlockheight = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListfundsOutputs.prototype.hasBlockheight = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListfundsChannels.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListfundsChannels.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListfundsChannels} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListfundsChannels.toObject = function(includeInstance, msg) {
  var f, obj = {
    peerId: msg.getPeerId_asB64(),
    ourAmountMsat: (f = msg.getOurAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    fundingTxid: msg.getFundingTxid_asB64(),
    fundingOutput: jspb.Message.getFieldWithDefault(msg, 5, 0),
    connected: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    state: jspb.Message.getFieldWithDefault(msg, 7, 0),
    channelId: msg.getChannelId_asB64(),
    shortChannelId: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListfundsChannels}
 */
proto.cln.ListfundsChannels.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListfundsChannels;
  return proto.cln.ListfundsChannels.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListfundsChannels} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListfundsChannels}
 */
proto.cln.ListfundsChannels.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPeerId(value);
      break;
    case 2:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setOurAmountMsat(value);
      break;
    case 3:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFundingTxid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFundingOutput(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setConnected(value);
      break;
    case 7:
      var value = /** @type {!proto.cln.ChannelState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 9:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChannelId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setShortChannelId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListfundsChannels.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListfundsChannels.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListfundsChannels} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListfundsChannels.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeerId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getOurAmountMsat();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getFundingTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getFundingOutput();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getConnected();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBytes(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional bytes peer_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListfundsChannels.prototype.getPeerId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes peer_id = 1;
 * This is a type-conversion wrapper around `getPeerId()`
 * @return {string}
 */
proto.cln.ListfundsChannels.prototype.getPeerId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPeerId()));
};


/**
 * optional bytes peer_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPeerId()`
 * @return {!Uint8Array}
 */
proto.cln.ListfundsChannels.prototype.getPeerId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPeerId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListfundsChannels} returns this
 */
proto.cln.ListfundsChannels.prototype.setPeerId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional Amount our_amount_msat = 2;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListfundsChannels.prototype.getOurAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 2));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListfundsChannels} returns this
*/
proto.cln.ListfundsChannels.prototype.setOurAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListfundsChannels} returns this
 */
proto.cln.ListfundsChannels.prototype.clearOurAmountMsat = function() {
  return this.setOurAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListfundsChannels.prototype.hasOurAmountMsat = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Amount amount_msat = 3;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListfundsChannels.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 3));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListfundsChannels} returns this
*/
proto.cln.ListfundsChannels.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListfundsChannels} returns this
 */
proto.cln.ListfundsChannels.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListfundsChannels.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bytes funding_txid = 4;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListfundsChannels.prototype.getFundingTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes funding_txid = 4;
 * This is a type-conversion wrapper around `getFundingTxid()`
 * @return {string}
 */
proto.cln.ListfundsChannels.prototype.getFundingTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFundingTxid()));
};


/**
 * optional bytes funding_txid = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFundingTxid()`
 * @return {!Uint8Array}
 */
proto.cln.ListfundsChannels.prototype.getFundingTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFundingTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListfundsChannels} returns this
 */
proto.cln.ListfundsChannels.prototype.setFundingTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional uint32 funding_output = 5;
 * @return {number}
 */
proto.cln.ListfundsChannels.prototype.getFundingOutput = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListfundsChannels} returns this
 */
proto.cln.ListfundsChannels.prototype.setFundingOutput = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool connected = 6;
 * @return {boolean}
 */
proto.cln.ListfundsChannels.prototype.getConnected = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListfundsChannels} returns this
 */
proto.cln.ListfundsChannels.prototype.setConnected = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional ChannelState state = 7;
 * @return {!proto.cln.ChannelState}
 */
proto.cln.ListfundsChannels.prototype.getState = function() {
  return /** @type {!proto.cln.ChannelState} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.cln.ChannelState} value
 * @return {!proto.cln.ListfundsChannels} returns this
 */
proto.cln.ListfundsChannels.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional bytes channel_id = 9;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListfundsChannels.prototype.getChannelId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * optional bytes channel_id = 9;
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {string}
 */
proto.cln.ListfundsChannels.prototype.getChannelId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChannelId()));
};


/**
 * optional bytes channel_id = 9;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {!Uint8Array}
 */
proto.cln.ListfundsChannels.prototype.getChannelId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChannelId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListfundsChannels} returns this
 */
proto.cln.ListfundsChannels.prototype.setChannelId = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListfundsChannels} returns this
 */
proto.cln.ListfundsChannels.prototype.clearChannelId = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListfundsChannels.prototype.hasChannelId = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string short_channel_id = 8;
 * @return {string}
 */
proto.cln.ListfundsChannels.prototype.getShortChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListfundsChannels} returns this
 */
proto.cln.ListfundsChannels.prototype.setShortChannelId = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListfundsChannels} returns this
 */
proto.cln.ListfundsChannels.prototype.clearShortChannelId = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListfundsChannels.prototype.hasShortChannelId = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.SendpayRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SendpayRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SendpayRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SendpayRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendpayRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    routeList: jspb.Message.toObjectList(msg.getRouteList(),
    proto.cln.SendpayRoute.toObject, includeInstance),
    paymentHash: msg.getPaymentHash_asB64(),
    label: jspb.Message.getFieldWithDefault(msg, 3, ""),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    bolt11: jspb.Message.getFieldWithDefault(msg, 5, ""),
    paymentSecret: msg.getPaymentSecret_asB64(),
    partid: jspb.Message.getFieldWithDefault(msg, 7, 0),
    localinvreqid: msg.getLocalinvreqid_asB64(),
    groupid: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SendpayRequest}
 */
proto.cln.SendpayRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SendpayRequest;
  return proto.cln.SendpayRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SendpayRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SendpayRequest}
 */
proto.cln.SendpayRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.SendpayRoute;
      reader.readMessage(value,proto.cln.SendpayRoute.deserializeBinaryFromReader);
      msg.addRoute(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 10:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentSecret(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPartid(value);
      break;
    case 11:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setLocalinvreqid(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGroupid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SendpayRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SendpayRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SendpayRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendpayRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRouteList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.SendpayRoute.serializeBinaryToWriter
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeBytes(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint64(
      9,
      f
    );
  }
};


/**
 * repeated SendpayRoute route = 1;
 * @return {!Array<!proto.cln.SendpayRoute>}
 */
proto.cln.SendpayRequest.prototype.getRouteList = function() {
  return /** @type{!Array<!proto.cln.SendpayRoute>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.SendpayRoute, 1));
};


/**
 * @param {!Array<!proto.cln.SendpayRoute>} value
 * @return {!proto.cln.SendpayRequest} returns this
*/
proto.cln.SendpayRequest.prototype.setRouteList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.SendpayRoute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.SendpayRoute}
 */
proto.cln.SendpayRequest.prototype.addRoute = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.SendpayRoute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.SendpayRequest} returns this
 */
proto.cln.SendpayRequest.prototype.clearRouteList = function() {
  return this.setRouteList([]);
};


/**
 * optional bytes payment_hash = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendpayRequest.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes payment_hash = 2;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.SendpayRequest.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.SendpayRequest.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendpayRequest} returns this
 */
proto.cln.SendpayRequest.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string label = 3;
 * @return {string}
 */
proto.cln.SendpayRequest.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SendpayRequest} returns this
 */
proto.cln.SendpayRequest.prototype.setLabel = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpayRequest} returns this
 */
proto.cln.SendpayRequest.prototype.clearLabel = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayRequest.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Amount amount_msat = 10;
 * @return {?proto.cln.Amount}
 */
proto.cln.SendpayRequest.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 10));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.SendpayRequest} returns this
*/
proto.cln.SendpayRequest.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.SendpayRequest} returns this
 */
proto.cln.SendpayRequest.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayRequest.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string bolt11 = 5;
 * @return {string}
 */
proto.cln.SendpayRequest.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SendpayRequest} returns this
 */
proto.cln.SendpayRequest.prototype.setBolt11 = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpayRequest} returns this
 */
proto.cln.SendpayRequest.prototype.clearBolt11 = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayRequest.prototype.hasBolt11 = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bytes payment_secret = 6;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendpayRequest.prototype.getPaymentSecret = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes payment_secret = 6;
 * This is a type-conversion wrapper around `getPaymentSecret()`
 * @return {string}
 */
proto.cln.SendpayRequest.prototype.getPaymentSecret_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentSecret()));
};


/**
 * optional bytes payment_secret = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentSecret()`
 * @return {!Uint8Array}
 */
proto.cln.SendpayRequest.prototype.getPaymentSecret_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentSecret()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendpayRequest} returns this
 */
proto.cln.SendpayRequest.prototype.setPaymentSecret = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpayRequest} returns this
 */
proto.cln.SendpayRequest.prototype.clearPaymentSecret = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayRequest.prototype.hasPaymentSecret = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 partid = 7;
 * @return {number}
 */
proto.cln.SendpayRequest.prototype.getPartid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendpayRequest} returns this
 */
proto.cln.SendpayRequest.prototype.setPartid = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpayRequest} returns this
 */
proto.cln.SendpayRequest.prototype.clearPartid = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayRequest.prototype.hasPartid = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bytes localinvreqid = 11;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendpayRequest.prototype.getLocalinvreqid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * optional bytes localinvreqid = 11;
 * This is a type-conversion wrapper around `getLocalinvreqid()`
 * @return {string}
 */
proto.cln.SendpayRequest.prototype.getLocalinvreqid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getLocalinvreqid()));
};


/**
 * optional bytes localinvreqid = 11;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getLocalinvreqid()`
 * @return {!Uint8Array}
 */
proto.cln.SendpayRequest.prototype.getLocalinvreqid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getLocalinvreqid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendpayRequest} returns this
 */
proto.cln.SendpayRequest.prototype.setLocalinvreqid = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpayRequest} returns this
 */
proto.cln.SendpayRequest.prototype.clearLocalinvreqid = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayRequest.prototype.hasLocalinvreqid = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint64 groupid = 9;
 * @return {number}
 */
proto.cln.SendpayRequest.prototype.getGroupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendpayRequest} returns this
 */
proto.cln.SendpayRequest.prototype.setGroupid = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpayRequest} returns this
 */
proto.cln.SendpayRequest.prototype.clearGroupid = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayRequest.prototype.hasGroupid = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SendpayResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SendpayResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SendpayResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendpayResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    createdIndex: jspb.Message.getFieldWithDefault(msg, 16, 0),
    updatedIndex: jspb.Message.getFieldWithDefault(msg, 17, 0),
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    groupid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    paymentHash: msg.getPaymentHash_asB64(),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    destination: msg.getDestination_asB64(),
    createdAt: jspb.Message.getFieldWithDefault(msg, 7, 0),
    completedAt: jspb.Message.getFieldWithDefault(msg, 15, 0),
    amountSentMsat: (f = msg.getAmountSentMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    label: jspb.Message.getFieldWithDefault(msg, 9, ""),
    partid: jspb.Message.getFieldWithDefault(msg, 10, 0),
    bolt11: jspb.Message.getFieldWithDefault(msg, 11, ""),
    bolt12: jspb.Message.getFieldWithDefault(msg, 12, ""),
    paymentPreimage: msg.getPaymentPreimage_asB64(),
    message: jspb.Message.getFieldWithDefault(msg, 14, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SendpayResponse}
 */
proto.cln.SendpayResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SendpayResponse;
  return proto.cln.SendpayResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SendpayResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SendpayResponse}
 */
proto.cln.SendpayResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 16:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedIndex(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpdatedIndex(value);
      break;
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGroupid(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 4:
      var value = /** @type {!proto.cln.SendpayResponse.SendpayStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 5:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDestination(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedAt(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCompletedAt(value);
      break;
    case 8:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountSentMsat(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPartid(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt12(value);
      break;
    case 13:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentPreimage(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SendpayResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SendpayResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SendpayResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendpayResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint64(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeUint64(
      17,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint64(
      15,
      f
    );
  }
  f = message.getAmountSentMsat();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBytes(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.SendpayResponse.SendpayStatus = {
  PENDING: 0,
  COMPLETE: 1
};

/**
 * optional uint64 created_index = 16;
 * @return {number}
 */
proto.cln.SendpayResponse.prototype.getCreatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.setCreatedIndex = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.clearCreatedIndex = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayResponse.prototype.hasCreatedIndex = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional uint64 updated_index = 17;
 * @return {number}
 */
proto.cln.SendpayResponse.prototype.getUpdatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.setUpdatedIndex = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.clearUpdatedIndex = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayResponse.prototype.hasUpdatedIndex = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.cln.SendpayResponse.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 groupid = 2;
 * @return {number}
 */
proto.cln.SendpayResponse.prototype.getGroupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.setGroupid = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.clearGroupid = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayResponse.prototype.hasGroupid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes payment_hash = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendpayResponse.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes payment_hash = 3;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.SendpayResponse.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.SendpayResponse.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional SendpayStatus status = 4;
 * @return {!proto.cln.SendpayResponse.SendpayStatus}
 */
proto.cln.SendpayResponse.prototype.getStatus = function() {
  return /** @type {!proto.cln.SendpayResponse.SendpayStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.cln.SendpayResponse.SendpayStatus} value
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional Amount amount_msat = 5;
 * @return {?proto.cln.Amount}
 */
proto.cln.SendpayResponse.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 5));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.SendpayResponse} returns this
*/
proto.cln.SendpayResponse.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayResponse.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bytes destination = 6;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendpayResponse.prototype.getDestination = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes destination = 6;
 * This is a type-conversion wrapper around `getDestination()`
 * @return {string}
 */
proto.cln.SendpayResponse.prototype.getDestination_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDestination()));
};


/**
 * optional bytes destination = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDestination()`
 * @return {!Uint8Array}
 */
proto.cln.SendpayResponse.prototype.getDestination_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDestination()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.setDestination = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.clearDestination = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayResponse.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 created_at = 7;
 * @return {number}
 */
proto.cln.SendpayResponse.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint64 completed_at = 15;
 * @return {number}
 */
proto.cln.SendpayResponse.prototype.getCompletedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.setCompletedAt = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.clearCompletedAt = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayResponse.prototype.hasCompletedAt = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional Amount amount_sent_msat = 8;
 * @return {?proto.cln.Amount}
 */
proto.cln.SendpayResponse.prototype.getAmountSentMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 8));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.SendpayResponse} returns this
*/
proto.cln.SendpayResponse.prototype.setAmountSentMsat = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.clearAmountSentMsat = function() {
  return this.setAmountSentMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayResponse.prototype.hasAmountSentMsat = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string label = 9;
 * @return {string}
 */
proto.cln.SendpayResponse.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.setLabel = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.clearLabel = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayResponse.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint64 partid = 10;
 * @return {number}
 */
proto.cln.SendpayResponse.prototype.getPartid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.setPartid = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.clearPartid = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayResponse.prototype.hasPartid = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string bolt11 = 11;
 * @return {string}
 */
proto.cln.SendpayResponse.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.setBolt11 = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.clearBolt11 = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayResponse.prototype.hasBolt11 = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string bolt12 = 12;
 * @return {string}
 */
proto.cln.SendpayResponse.prototype.getBolt12 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.setBolt12 = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.clearBolt12 = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayResponse.prototype.hasBolt12 = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bytes payment_preimage = 13;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendpayResponse.prototype.getPaymentPreimage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * optional bytes payment_preimage = 13;
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {string}
 */
proto.cln.SendpayResponse.prototype.getPaymentPreimage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentPreimage()));
};


/**
 * optional bytes payment_preimage = 13;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {!Uint8Array}
 */
proto.cln.SendpayResponse.prototype.getPaymentPreimage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentPreimage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.setPaymentPreimage = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.clearPaymentPreimage = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayResponse.prototype.hasPaymentPreimage = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string message = 14;
 * @return {string}
 */
proto.cln.SendpayResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.setMessage = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpayResponse} returns this
 */
proto.cln.SendpayResponse.prototype.clearMessage = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayResponse.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 14) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SendpayRoute.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SendpayRoute.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SendpayRoute} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendpayRoute.toObject = function(includeInstance, msg) {
  var f, obj = {
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    id: msg.getId_asB64(),
    delay: jspb.Message.getFieldWithDefault(msg, 3, 0),
    channel: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SendpayRoute}
 */
proto.cln.SendpayRoute.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SendpayRoute;
  return proto.cln.SendpayRoute.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SendpayRoute} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SendpayRoute}
 */
proto.cln.SendpayRoute.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 5:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDelay(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SendpayRoute.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SendpayRoute.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SendpayRoute} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendpayRoute.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getDelay();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getChannel();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional Amount amount_msat = 5;
 * @return {?proto.cln.Amount}
 */
proto.cln.SendpayRoute.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 5));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.SendpayRoute} returns this
*/
proto.cln.SendpayRoute.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.SendpayRoute} returns this
 */
proto.cln.SendpayRoute.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpayRoute.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bytes id = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendpayRoute.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes id = 2;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.cln.SendpayRoute.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.cln.SendpayRoute.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendpayRoute} returns this
 */
proto.cln.SendpayRoute.prototype.setId = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional uint32 delay = 3;
 * @return {number}
 */
proto.cln.SendpayRoute.prototype.getDelay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendpayRoute} returns this
 */
proto.cln.SendpayRoute.prototype.setDelay = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string channel = 4;
 * @return {string}
 */
proto.cln.SendpayRoute.prototype.getChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SendpayRoute} returns this
 */
proto.cln.SendpayRoute.prototype.setChannel = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListchannelsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListchannelsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListchannelsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListchannelsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    shortChannelId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    source: msg.getSource_asB64(),
    destination: msg.getDestination_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListchannelsRequest}
 */
proto.cln.ListchannelsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListchannelsRequest;
  return proto.cln.ListchannelsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListchannelsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListchannelsRequest}
 */
proto.cln.ListchannelsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setShortChannelId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSource(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDestination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListchannelsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListchannelsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListchannelsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListchannelsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional string short_channel_id = 1;
 * @return {string}
 */
proto.cln.ListchannelsRequest.prototype.getShortChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListchannelsRequest} returns this
 */
proto.cln.ListchannelsRequest.prototype.setShortChannelId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListchannelsRequest} returns this
 */
proto.cln.ListchannelsRequest.prototype.clearShortChannelId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListchannelsRequest.prototype.hasShortChannelId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes source = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListchannelsRequest.prototype.getSource = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes source = 2;
 * This is a type-conversion wrapper around `getSource()`
 * @return {string}
 */
proto.cln.ListchannelsRequest.prototype.getSource_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSource()));
};


/**
 * optional bytes source = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSource()`
 * @return {!Uint8Array}
 */
proto.cln.ListchannelsRequest.prototype.getSource_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSource()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListchannelsRequest} returns this
 */
proto.cln.ListchannelsRequest.prototype.setSource = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListchannelsRequest} returns this
 */
proto.cln.ListchannelsRequest.prototype.clearSource = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListchannelsRequest.prototype.hasSource = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes destination = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListchannelsRequest.prototype.getDestination = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes destination = 3;
 * This is a type-conversion wrapper around `getDestination()`
 * @return {string}
 */
proto.cln.ListchannelsRequest.prototype.getDestination_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDestination()));
};


/**
 * optional bytes destination = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDestination()`
 * @return {!Uint8Array}
 */
proto.cln.ListchannelsRequest.prototype.getDestination_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDestination()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListchannelsRequest} returns this
 */
proto.cln.ListchannelsRequest.prototype.setDestination = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListchannelsRequest} returns this
 */
proto.cln.ListchannelsRequest.prototype.clearDestination = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListchannelsRequest.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListchannelsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListchannelsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListchannelsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListchannelsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListchannelsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelsList: jspb.Message.toObjectList(msg.getChannelsList(),
    proto.cln.ListchannelsChannels.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListchannelsResponse}
 */
proto.cln.ListchannelsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListchannelsResponse;
  return proto.cln.ListchannelsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListchannelsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListchannelsResponse}
 */
proto.cln.ListchannelsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.ListchannelsChannels;
      reader.readMessage(value,proto.cln.ListchannelsChannels.deserializeBinaryFromReader);
      msg.addChannels(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListchannelsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListchannelsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListchannelsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListchannelsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.ListchannelsChannels.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ListchannelsChannels channels = 1;
 * @return {!Array<!proto.cln.ListchannelsChannels>}
 */
proto.cln.ListchannelsResponse.prototype.getChannelsList = function() {
  return /** @type{!Array<!proto.cln.ListchannelsChannels>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListchannelsChannels, 1));
};


/**
 * @param {!Array<!proto.cln.ListchannelsChannels>} value
 * @return {!proto.cln.ListchannelsResponse} returns this
*/
proto.cln.ListchannelsResponse.prototype.setChannelsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.ListchannelsChannels=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListchannelsChannels}
 */
proto.cln.ListchannelsResponse.prototype.addChannels = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.ListchannelsChannels, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListchannelsResponse} returns this
 */
proto.cln.ListchannelsResponse.prototype.clearChannelsList = function() {
  return this.setChannelsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListchannelsChannels.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListchannelsChannels.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListchannelsChannels} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListchannelsChannels.toObject = function(includeInstance, msg) {
  var f, obj = {
    source: msg.getSource_asB64(),
    destination: msg.getDestination_asB64(),
    shortChannelId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    direction: jspb.Message.getFieldWithDefault(msg, 16, 0),
    pb_public: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    messageFlags: jspb.Message.getFieldWithDefault(msg, 6, 0),
    channelFlags: jspb.Message.getFieldWithDefault(msg, 7, 0),
    active: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    lastUpdate: jspb.Message.getFieldWithDefault(msg, 9, 0),
    baseFeeMillisatoshi: jspb.Message.getFieldWithDefault(msg, 10, 0),
    feePerMillionth: jspb.Message.getFieldWithDefault(msg, 11, 0),
    delay: jspb.Message.getFieldWithDefault(msg, 12, 0),
    htlcMinimumMsat: (f = msg.getHtlcMinimumMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    htlcMaximumMsat: (f = msg.getHtlcMaximumMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    features: msg.getFeatures_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListchannelsChannels}
 */
proto.cln.ListchannelsChannels.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListchannelsChannels;
  return proto.cln.ListchannelsChannels.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListchannelsChannels} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListchannelsChannels}
 */
proto.cln.ListchannelsChannels.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSource(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDestination(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setShortChannelId(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDirection(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPublic(value);
      break;
    case 5:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMessageFlags(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setChannelFlags(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLastUpdate(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBaseFeeMillisatoshi(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFeePerMillionth(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDelay(value);
      break;
    case 13:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setHtlcMinimumMsat(value);
      break;
    case 14:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setHtlcMaximumMsat(value);
      break;
    case 15:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFeatures(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListchannelsChannels.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListchannelsChannels.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListchannelsChannels} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListchannelsChannels.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSource_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getDestination_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getShortChannelId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDirection();
  if (f !== 0) {
    writer.writeUint32(
      16,
      f
    );
  }
  f = message.getPublic();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getMessageFlags();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getChannelFlags();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getLastUpdate();
  if (f !== 0) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = message.getBaseFeeMillisatoshi();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = message.getFeePerMillionth();
  if (f !== 0) {
    writer.writeUint32(
      11,
      f
    );
  }
  f = message.getDelay();
  if (f !== 0) {
    writer.writeUint32(
      12,
      f
    );
  }
  f = message.getHtlcMinimumMsat();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getHtlcMaximumMsat();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getFeatures_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      15,
      f
    );
  }
};


/**
 * optional bytes source = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListchannelsChannels.prototype.getSource = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes source = 1;
 * This is a type-conversion wrapper around `getSource()`
 * @return {string}
 */
proto.cln.ListchannelsChannels.prototype.getSource_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSource()));
};


/**
 * optional bytes source = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSource()`
 * @return {!Uint8Array}
 */
proto.cln.ListchannelsChannels.prototype.getSource_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSource()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListchannelsChannels} returns this
 */
proto.cln.ListchannelsChannels.prototype.setSource = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes destination = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListchannelsChannels.prototype.getDestination = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes destination = 2;
 * This is a type-conversion wrapper around `getDestination()`
 * @return {string}
 */
proto.cln.ListchannelsChannels.prototype.getDestination_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDestination()));
};


/**
 * optional bytes destination = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDestination()`
 * @return {!Uint8Array}
 */
proto.cln.ListchannelsChannels.prototype.getDestination_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDestination()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListchannelsChannels} returns this
 */
proto.cln.ListchannelsChannels.prototype.setDestination = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string short_channel_id = 3;
 * @return {string}
 */
proto.cln.ListchannelsChannels.prototype.getShortChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListchannelsChannels} returns this
 */
proto.cln.ListchannelsChannels.prototype.setShortChannelId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 direction = 16;
 * @return {number}
 */
proto.cln.ListchannelsChannels.prototype.getDirection = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListchannelsChannels} returns this
 */
proto.cln.ListchannelsChannels.prototype.setDirection = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional bool public = 4;
 * @return {boolean}
 */
proto.cln.ListchannelsChannels.prototype.getPublic = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListchannelsChannels} returns this
 */
proto.cln.ListchannelsChannels.prototype.setPublic = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional Amount amount_msat = 5;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListchannelsChannels.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 5));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListchannelsChannels} returns this
*/
proto.cln.ListchannelsChannels.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListchannelsChannels} returns this
 */
proto.cln.ListchannelsChannels.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListchannelsChannels.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 message_flags = 6;
 * @return {number}
 */
proto.cln.ListchannelsChannels.prototype.getMessageFlags = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListchannelsChannels} returns this
 */
proto.cln.ListchannelsChannels.prototype.setMessageFlags = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint32 channel_flags = 7;
 * @return {number}
 */
proto.cln.ListchannelsChannels.prototype.getChannelFlags = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListchannelsChannels} returns this
 */
proto.cln.ListchannelsChannels.prototype.setChannelFlags = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional bool active = 8;
 * @return {boolean}
 */
proto.cln.ListchannelsChannels.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListchannelsChannels} returns this
 */
proto.cln.ListchannelsChannels.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional uint32 last_update = 9;
 * @return {number}
 */
proto.cln.ListchannelsChannels.prototype.getLastUpdate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListchannelsChannels} returns this
 */
proto.cln.ListchannelsChannels.prototype.setLastUpdate = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional uint32 base_fee_millisatoshi = 10;
 * @return {number}
 */
proto.cln.ListchannelsChannels.prototype.getBaseFeeMillisatoshi = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListchannelsChannels} returns this
 */
proto.cln.ListchannelsChannels.prototype.setBaseFeeMillisatoshi = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional uint32 fee_per_millionth = 11;
 * @return {number}
 */
proto.cln.ListchannelsChannels.prototype.getFeePerMillionth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListchannelsChannels} returns this
 */
proto.cln.ListchannelsChannels.prototype.setFeePerMillionth = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional uint32 delay = 12;
 * @return {number}
 */
proto.cln.ListchannelsChannels.prototype.getDelay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListchannelsChannels} returns this
 */
proto.cln.ListchannelsChannels.prototype.setDelay = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional Amount htlc_minimum_msat = 13;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListchannelsChannels.prototype.getHtlcMinimumMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 13));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListchannelsChannels} returns this
*/
proto.cln.ListchannelsChannels.prototype.setHtlcMinimumMsat = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListchannelsChannels} returns this
 */
proto.cln.ListchannelsChannels.prototype.clearHtlcMinimumMsat = function() {
  return this.setHtlcMinimumMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListchannelsChannels.prototype.hasHtlcMinimumMsat = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional Amount htlc_maximum_msat = 14;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListchannelsChannels.prototype.getHtlcMaximumMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 14));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListchannelsChannels} returns this
*/
proto.cln.ListchannelsChannels.prototype.setHtlcMaximumMsat = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListchannelsChannels} returns this
 */
proto.cln.ListchannelsChannels.prototype.clearHtlcMaximumMsat = function() {
  return this.setHtlcMaximumMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListchannelsChannels.prototype.hasHtlcMaximumMsat = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bytes features = 15;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListchannelsChannels.prototype.getFeatures = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * optional bytes features = 15;
 * This is a type-conversion wrapper around `getFeatures()`
 * @return {string}
 */
proto.cln.ListchannelsChannels.prototype.getFeatures_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFeatures()));
};


/**
 * optional bytes features = 15;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFeatures()`
 * @return {!Uint8Array}
 */
proto.cln.ListchannelsChannels.prototype.getFeatures_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFeatures()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListchannelsChannels} returns this
 */
proto.cln.ListchannelsChannels.prototype.setFeatures = function(value) {
  return jspb.Message.setProto3BytesField(this, 15, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.AddgossipRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.AddgossipRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.AddgossipRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AddgossipRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: msg.getMessage_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.AddgossipRequest}
 */
proto.cln.AddgossipRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.AddgossipRequest;
  return proto.cln.AddgossipRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.AddgossipRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.AddgossipRequest}
 */
proto.cln.AddgossipRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.AddgossipRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.AddgossipRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.AddgossipRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AddgossipRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes message = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.AddgossipRequest.prototype.getMessage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes message = 1;
 * This is a type-conversion wrapper around `getMessage()`
 * @return {string}
 */
proto.cln.AddgossipRequest.prototype.getMessage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMessage()));
};


/**
 * optional bytes message = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMessage()`
 * @return {!Uint8Array}
 */
proto.cln.AddgossipRequest.prototype.getMessage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMessage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.AddgossipRequest} returns this
 */
proto.cln.AddgossipRequest.prototype.setMessage = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.AddgossipResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.AddgossipResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.AddgossipResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AddgossipResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.AddgossipResponse}
 */
proto.cln.AddgossipResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.AddgossipResponse;
  return proto.cln.AddgossipResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.AddgossipResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.AddgossipResponse}
 */
proto.cln.AddgossipResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.AddgossipResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.AddgossipResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.AddgossipResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AddgossipResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.AutocleaninvoiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.AutocleaninvoiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.AutocleaninvoiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleaninvoiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    expiredBy: jspb.Message.getFieldWithDefault(msg, 1, 0),
    cycleSeconds: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.AutocleaninvoiceRequest}
 */
proto.cln.AutocleaninvoiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.AutocleaninvoiceRequest;
  return proto.cln.AutocleaninvoiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.AutocleaninvoiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.AutocleaninvoiceRequest}
 */
proto.cln.AutocleaninvoiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExpiredBy(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCycleSeconds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.AutocleaninvoiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.AutocleaninvoiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.AutocleaninvoiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleaninvoiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 expired_by = 1;
 * @return {number}
 */
proto.cln.AutocleaninvoiceRequest.prototype.getExpiredBy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.AutocleaninvoiceRequest} returns this
 */
proto.cln.AutocleaninvoiceRequest.prototype.setExpiredBy = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.AutocleaninvoiceRequest} returns this
 */
proto.cln.AutocleaninvoiceRequest.prototype.clearExpiredBy = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.AutocleaninvoiceRequest.prototype.hasExpiredBy = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 cycle_seconds = 2;
 * @return {number}
 */
proto.cln.AutocleaninvoiceRequest.prototype.getCycleSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.AutocleaninvoiceRequest} returns this
 */
proto.cln.AutocleaninvoiceRequest.prototype.setCycleSeconds = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.AutocleaninvoiceRequest} returns this
 */
proto.cln.AutocleaninvoiceRequest.prototype.clearCycleSeconds = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.AutocleaninvoiceRequest.prototype.hasCycleSeconds = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.AutocleaninvoiceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.AutocleaninvoiceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.AutocleaninvoiceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleaninvoiceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    enabled: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    expiredBy: jspb.Message.getFieldWithDefault(msg, 2, 0),
    cycleSeconds: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.AutocleaninvoiceResponse}
 */
proto.cln.AutocleaninvoiceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.AutocleaninvoiceResponse;
  return proto.cln.AutocleaninvoiceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.AutocleaninvoiceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.AutocleaninvoiceResponse}
 */
proto.cln.AutocleaninvoiceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExpiredBy(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCycleSeconds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.AutocleaninvoiceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.AutocleaninvoiceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.AutocleaninvoiceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.AutocleaninvoiceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnabled();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional bool enabled = 1;
 * @return {boolean}
 */
proto.cln.AutocleaninvoiceResponse.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.AutocleaninvoiceResponse} returns this
 */
proto.cln.AutocleaninvoiceResponse.prototype.setEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional uint64 expired_by = 2;
 * @return {number}
 */
proto.cln.AutocleaninvoiceResponse.prototype.getExpiredBy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.AutocleaninvoiceResponse} returns this
 */
proto.cln.AutocleaninvoiceResponse.prototype.setExpiredBy = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.AutocleaninvoiceResponse} returns this
 */
proto.cln.AutocleaninvoiceResponse.prototype.clearExpiredBy = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.AutocleaninvoiceResponse.prototype.hasExpiredBy = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 cycle_seconds = 3;
 * @return {number}
 */
proto.cln.AutocleaninvoiceResponse.prototype.getCycleSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.AutocleaninvoiceResponse} returns this
 */
proto.cln.AutocleaninvoiceResponse.prototype.setCycleSeconds = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.AutocleaninvoiceResponse} returns this
 */
proto.cln.AutocleaninvoiceResponse.prototype.clearCycleSeconds = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.AutocleaninvoiceResponse.prototype.hasCycleSeconds = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.CheckmessageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.CheckmessageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.CheckmessageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CheckmessageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, ""),
    zbase: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pubkey: msg.getPubkey_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.CheckmessageRequest}
 */
proto.cln.CheckmessageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.CheckmessageRequest;
  return proto.cln.CheckmessageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.CheckmessageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.CheckmessageRequest}
 */
proto.cln.CheckmessageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setZbase(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPubkey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.CheckmessageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.CheckmessageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.CheckmessageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CheckmessageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getZbase();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.cln.CheckmessageRequest.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.CheckmessageRequest} returns this
 */
proto.cln.CheckmessageRequest.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string zbase = 2;
 * @return {string}
 */
proto.cln.CheckmessageRequest.prototype.getZbase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.CheckmessageRequest} returns this
 */
proto.cln.CheckmessageRequest.prototype.setZbase = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes pubkey = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.CheckmessageRequest.prototype.getPubkey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes pubkey = 3;
 * This is a type-conversion wrapper around `getPubkey()`
 * @return {string}
 */
proto.cln.CheckmessageRequest.prototype.getPubkey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPubkey()));
};


/**
 * optional bytes pubkey = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPubkey()`
 * @return {!Uint8Array}
 */
proto.cln.CheckmessageRequest.prototype.getPubkey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPubkey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.CheckmessageRequest} returns this
 */
proto.cln.CheckmessageRequest.prototype.setPubkey = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CheckmessageRequest} returns this
 */
proto.cln.CheckmessageRequest.prototype.clearPubkey = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CheckmessageRequest.prototype.hasPubkey = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.CheckmessageResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.CheckmessageResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.CheckmessageResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CheckmessageResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    verified: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    pubkey: msg.getPubkey_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.CheckmessageResponse}
 */
proto.cln.CheckmessageResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.CheckmessageResponse;
  return proto.cln.CheckmessageResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.CheckmessageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.CheckmessageResponse}
 */
proto.cln.CheckmessageResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVerified(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPubkey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.CheckmessageResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.CheckmessageResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.CheckmessageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CheckmessageResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVerified();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getPubkey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional bool verified = 1;
 * @return {boolean}
 */
proto.cln.CheckmessageResponse.prototype.getVerified = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.CheckmessageResponse} returns this
 */
proto.cln.CheckmessageResponse.prototype.setVerified = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bytes pubkey = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.CheckmessageResponse.prototype.getPubkey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes pubkey = 2;
 * This is a type-conversion wrapper around `getPubkey()`
 * @return {string}
 */
proto.cln.CheckmessageResponse.prototype.getPubkey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPubkey()));
};


/**
 * optional bytes pubkey = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPubkey()`
 * @return {!Uint8Array}
 */
proto.cln.CheckmessageResponse.prototype.getPubkey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPubkey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.CheckmessageResponse} returns this
 */
proto.cln.CheckmessageResponse.prototype.setPubkey = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.CloseRequest.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.CloseRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.CloseRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.CloseRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CloseRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    unilateraltimeout: jspb.Message.getFieldWithDefault(msg, 2, 0),
    destination: jspb.Message.getFieldWithDefault(msg, 3, ""),
    feeNegotiationStep: jspb.Message.getFieldWithDefault(msg, 4, ""),
    wrongFunding: (f = msg.getWrongFunding()) && cln_primitives_pb.Outpoint.toObject(includeInstance, f),
    forceLeaseClosed: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    feerangeList: jspb.Message.toObjectList(msg.getFeerangeList(),
    cln_primitives_pb.Feerate.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.CloseRequest}
 */
proto.cln.CloseRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.CloseRequest;
  return proto.cln.CloseRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.CloseRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.CloseRequest}
 */
proto.cln.CloseRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUnilateraltimeout(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestination(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeeNegotiationStep(value);
      break;
    case 5:
      var value = new cln_primitives_pb.Outpoint;
      reader.readMessage(value,cln_primitives_pb.Outpoint.deserializeBinaryFromReader);
      msg.setWrongFunding(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForceLeaseClosed(value);
      break;
    case 7:
      var value = new cln_primitives_pb.Feerate;
      reader.readMessage(value,cln_primitives_pb.Feerate.deserializeBinaryFromReader);
      msg.addFeerange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.CloseRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.CloseRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.CloseRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CloseRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getWrongFunding();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cln_primitives_pb.Outpoint.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getFeerangeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      cln_primitives_pb.Feerate.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.cln.CloseRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.CloseRequest} returns this
 */
proto.cln.CloseRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 unilateraltimeout = 2;
 * @return {number}
 */
proto.cln.CloseRequest.prototype.getUnilateraltimeout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.CloseRequest} returns this
 */
proto.cln.CloseRequest.prototype.setUnilateraltimeout = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CloseRequest} returns this
 */
proto.cln.CloseRequest.prototype.clearUnilateraltimeout = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CloseRequest.prototype.hasUnilateraltimeout = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string destination = 3;
 * @return {string}
 */
proto.cln.CloseRequest.prototype.getDestination = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.CloseRequest} returns this
 */
proto.cln.CloseRequest.prototype.setDestination = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CloseRequest} returns this
 */
proto.cln.CloseRequest.prototype.clearDestination = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CloseRequest.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string fee_negotiation_step = 4;
 * @return {string}
 */
proto.cln.CloseRequest.prototype.getFeeNegotiationStep = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.CloseRequest} returns this
 */
proto.cln.CloseRequest.prototype.setFeeNegotiationStep = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CloseRequest} returns this
 */
proto.cln.CloseRequest.prototype.clearFeeNegotiationStep = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CloseRequest.prototype.hasFeeNegotiationStep = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Outpoint wrong_funding = 5;
 * @return {?proto.cln.Outpoint}
 */
proto.cln.CloseRequest.prototype.getWrongFunding = function() {
  return /** @type{?proto.cln.Outpoint} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Outpoint, 5));
};


/**
 * @param {?proto.cln.Outpoint|undefined} value
 * @return {!proto.cln.CloseRequest} returns this
*/
proto.cln.CloseRequest.prototype.setWrongFunding = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.CloseRequest} returns this
 */
proto.cln.CloseRequest.prototype.clearWrongFunding = function() {
  return this.setWrongFunding(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CloseRequest.prototype.hasWrongFunding = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool force_lease_closed = 6;
 * @return {boolean}
 */
proto.cln.CloseRequest.prototype.getForceLeaseClosed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.CloseRequest} returns this
 */
proto.cln.CloseRequest.prototype.setForceLeaseClosed = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CloseRequest} returns this
 */
proto.cln.CloseRequest.prototype.clearForceLeaseClosed = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CloseRequest.prototype.hasForceLeaseClosed = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated Feerate feerange = 7;
 * @return {!Array<!proto.cln.Feerate>}
 */
proto.cln.CloseRequest.prototype.getFeerangeList = function() {
  return /** @type{!Array<!proto.cln.Feerate>} */ (
    jspb.Message.getRepeatedWrapperField(this, cln_primitives_pb.Feerate, 7));
};


/**
 * @param {!Array<!proto.cln.Feerate>} value
 * @return {!proto.cln.CloseRequest} returns this
*/
proto.cln.CloseRequest.prototype.setFeerangeList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.cln.Feerate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.Feerate}
 */
proto.cln.CloseRequest.prototype.addFeerange = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.cln.Feerate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.CloseRequest} returns this
 */
proto.cln.CloseRequest.prototype.clearFeerangeList = function() {
  return this.setFeerangeList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.CloseResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.CloseResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.CloseResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CloseResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    tx: msg.getTx_asB64(),
    txid: msg.getTxid_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.CloseResponse}
 */
proto.cln.CloseResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.CloseResponse;
  return proto.cln.CloseResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.CloseResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.CloseResponse}
 */
proto.cln.CloseResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.CloseResponse.CloseType} */ (reader.readEnum());
      msg.setItemType(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTx(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.CloseResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.CloseResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.CloseResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CloseResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.CloseResponse.CloseType = {
  MUTUAL: 0,
  UNILATERAL: 1,
  UNOPENED: 2
};

/**
 * optional CloseType item_type = 1;
 * @return {!proto.cln.CloseResponse.CloseType}
 */
proto.cln.CloseResponse.prototype.getItemType = function() {
  return /** @type {!proto.cln.CloseResponse.CloseType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.CloseResponse.CloseType} value
 * @return {!proto.cln.CloseResponse} returns this
 */
proto.cln.CloseResponse.prototype.setItemType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional bytes tx = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.CloseResponse.prototype.getTx = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes tx = 2;
 * This is a type-conversion wrapper around `getTx()`
 * @return {string}
 */
proto.cln.CloseResponse.prototype.getTx_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTx()));
};


/**
 * optional bytes tx = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTx()`
 * @return {!Uint8Array}
 */
proto.cln.CloseResponse.prototype.getTx_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTx()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.CloseResponse} returns this
 */
proto.cln.CloseResponse.prototype.setTx = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CloseResponse} returns this
 */
proto.cln.CloseResponse.prototype.clearTx = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CloseResponse.prototype.hasTx = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes txid = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.CloseResponse.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes txid = 3;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.CloseResponse.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.CloseResponse.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.CloseResponse} returns this
 */
proto.cln.CloseResponse.prototype.setTxid = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CloseResponse} returns this
 */
proto.cln.CloseResponse.prototype.clearTxid = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CloseResponse.prototype.hasTxid = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ConnectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ConnectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ConnectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ConnectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    host: jspb.Message.getFieldWithDefault(msg, 2, ""),
    port: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ConnectRequest}
 */
proto.cln.ConnectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ConnectRequest;
  return proto.cln.ConnectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ConnectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ConnectRequest}
 */
proto.cln.ConnectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPort(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ConnectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ConnectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ConnectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ConnectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.cln.ConnectRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ConnectRequest} returns this
 */
proto.cln.ConnectRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string host = 2;
 * @return {string}
 */
proto.cln.ConnectRequest.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ConnectRequest} returns this
 */
proto.cln.ConnectRequest.prototype.setHost = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ConnectRequest} returns this
 */
proto.cln.ConnectRequest.prototype.clearHost = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ConnectRequest.prototype.hasHost = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 port = 3;
 * @return {number}
 */
proto.cln.ConnectRequest.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ConnectRequest} returns this
 */
proto.cln.ConnectRequest.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ConnectRequest} returns this
 */
proto.cln.ConnectRequest.prototype.clearPort = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ConnectRequest.prototype.hasPort = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ConnectResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ConnectResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ConnectResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ConnectResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64(),
    features: msg.getFeatures_asB64(),
    direction: jspb.Message.getFieldWithDefault(msg, 3, 0),
    address: (f = msg.getAddress()) && proto.cln.ConnectAddress.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ConnectResponse}
 */
proto.cln.ConnectResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ConnectResponse;
  return proto.cln.ConnectResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ConnectResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ConnectResponse}
 */
proto.cln.ConnectResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFeatures(value);
      break;
    case 3:
      var value = /** @type {!proto.cln.ConnectResponse.ConnectDirection} */ (reader.readEnum());
      msg.setDirection(value);
      break;
    case 4:
      var value = new proto.cln.ConnectAddress;
      reader.readMessage(value,proto.cln.ConnectAddress.deserializeBinaryFromReader);
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ConnectResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ConnectResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ConnectResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ConnectResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getFeatures_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getDirection();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getAddress();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.cln.ConnectAddress.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ConnectResponse.ConnectDirection = {
  IN: 0,
  OUT: 1
};

/**
 * optional bytes id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ConnectResponse.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes id = 1;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.cln.ConnectResponse.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.cln.ConnectResponse.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ConnectResponse} returns this
 */
proto.cln.ConnectResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes features = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ConnectResponse.prototype.getFeatures = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes features = 2;
 * This is a type-conversion wrapper around `getFeatures()`
 * @return {string}
 */
proto.cln.ConnectResponse.prototype.getFeatures_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFeatures()));
};


/**
 * optional bytes features = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFeatures()`
 * @return {!Uint8Array}
 */
proto.cln.ConnectResponse.prototype.getFeatures_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFeatures()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ConnectResponse} returns this
 */
proto.cln.ConnectResponse.prototype.setFeatures = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional ConnectDirection direction = 3;
 * @return {!proto.cln.ConnectResponse.ConnectDirection}
 */
proto.cln.ConnectResponse.prototype.getDirection = function() {
  return /** @type {!proto.cln.ConnectResponse.ConnectDirection} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.cln.ConnectResponse.ConnectDirection} value
 * @return {!proto.cln.ConnectResponse} returns this
 */
proto.cln.ConnectResponse.prototype.setDirection = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional ConnectAddress address = 4;
 * @return {?proto.cln.ConnectAddress}
 */
proto.cln.ConnectResponse.prototype.getAddress = function() {
  return /** @type{?proto.cln.ConnectAddress} */ (
    jspb.Message.getWrapperField(this, proto.cln.ConnectAddress, 4));
};


/**
 * @param {?proto.cln.ConnectAddress|undefined} value
 * @return {!proto.cln.ConnectResponse} returns this
*/
proto.cln.ConnectResponse.prototype.setAddress = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ConnectResponse} returns this
 */
proto.cln.ConnectResponse.prototype.clearAddress = function() {
  return this.setAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ConnectResponse.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ConnectAddress.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ConnectAddress.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ConnectAddress} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ConnectAddress.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    socket: jspb.Message.getFieldWithDefault(msg, 2, ""),
    address: jspb.Message.getFieldWithDefault(msg, 3, ""),
    port: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ConnectAddress}
 */
proto.cln.ConnectAddress.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ConnectAddress;
  return proto.cln.ConnectAddress.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ConnectAddress} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ConnectAddress}
 */
proto.cln.ConnectAddress.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.ConnectAddress.ConnectAddressType} */ (reader.readEnum());
      msg.setItemType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSocket(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPort(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ConnectAddress.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ConnectAddress.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ConnectAddress} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ConnectAddress.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ConnectAddress.ConnectAddressType = {
  LOCAL_SOCKET: 0,
  IPV4: 1,
  IPV6: 2,
  TORV2: 3,
  TORV3: 4
};

/**
 * optional ConnectAddressType item_type = 1;
 * @return {!proto.cln.ConnectAddress.ConnectAddressType}
 */
proto.cln.ConnectAddress.prototype.getItemType = function() {
  return /** @type {!proto.cln.ConnectAddress.ConnectAddressType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.ConnectAddress.ConnectAddressType} value
 * @return {!proto.cln.ConnectAddress} returns this
 */
proto.cln.ConnectAddress.prototype.setItemType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string socket = 2;
 * @return {string}
 */
proto.cln.ConnectAddress.prototype.getSocket = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ConnectAddress} returns this
 */
proto.cln.ConnectAddress.prototype.setSocket = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ConnectAddress} returns this
 */
proto.cln.ConnectAddress.prototype.clearSocket = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ConnectAddress.prototype.hasSocket = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string address = 3;
 * @return {string}
 */
proto.cln.ConnectAddress.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ConnectAddress} returns this
 */
proto.cln.ConnectAddress.prototype.setAddress = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ConnectAddress} returns this
 */
proto.cln.ConnectAddress.prototype.clearAddress = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ConnectAddress.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 port = 4;
 * @return {number}
 */
proto.cln.ConnectAddress.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ConnectAddress} returns this
 */
proto.cln.ConnectAddress.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ConnectAddress} returns this
 */
proto.cln.ConnectAddress.prototype.clearPort = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ConnectAddress.prototype.hasPort = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.CreateinvoiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.CreateinvoiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.CreateinvoiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CreateinvoiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    invstring: jspb.Message.getFieldWithDefault(msg, 1, ""),
    label: jspb.Message.getFieldWithDefault(msg, 2, ""),
    preimage: msg.getPreimage_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.CreateinvoiceRequest}
 */
proto.cln.CreateinvoiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.CreateinvoiceRequest;
  return proto.cln.CreateinvoiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.CreateinvoiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.CreateinvoiceRequest}
 */
proto.cln.CreateinvoiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvstring(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPreimage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.CreateinvoiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.CreateinvoiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.CreateinvoiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CreateinvoiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvstring();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPreimage_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional string invstring = 1;
 * @return {string}
 */
proto.cln.CreateinvoiceRequest.prototype.getInvstring = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.CreateinvoiceRequest} returns this
 */
proto.cln.CreateinvoiceRequest.prototype.setInvstring = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string label = 2;
 * @return {string}
 */
proto.cln.CreateinvoiceRequest.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.CreateinvoiceRequest} returns this
 */
proto.cln.CreateinvoiceRequest.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes preimage = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.CreateinvoiceRequest.prototype.getPreimage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes preimage = 3;
 * This is a type-conversion wrapper around `getPreimage()`
 * @return {string}
 */
proto.cln.CreateinvoiceRequest.prototype.getPreimage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPreimage()));
};


/**
 * optional bytes preimage = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPreimage()`
 * @return {!Uint8Array}
 */
proto.cln.CreateinvoiceRequest.prototype.getPreimage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPreimage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.CreateinvoiceRequest} returns this
 */
proto.cln.CreateinvoiceRequest.prototype.setPreimage = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.CreateinvoiceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.CreateinvoiceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.CreateinvoiceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CreateinvoiceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: jspb.Message.getFieldWithDefault(msg, 1, ""),
    bolt11: jspb.Message.getFieldWithDefault(msg, 2, ""),
    bolt12: jspb.Message.getFieldWithDefault(msg, 3, ""),
    paymentHash: msg.getPaymentHash_asB64(),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 6, 0),
    description: jspb.Message.getFieldWithDefault(msg, 7, ""),
    expiresAt: jspb.Message.getFieldWithDefault(msg, 8, 0),
    createdIndex: jspb.Message.getFieldWithDefault(msg, 16, 0),
    payIndex: jspb.Message.getFieldWithDefault(msg, 9, 0),
    amountReceivedMsat: (f = msg.getAmountReceivedMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    paidAt: jspb.Message.getFieldWithDefault(msg, 11, 0),
    paidOutpoint: (f = msg.getPaidOutpoint()) && proto.cln.CreateinvoicePaid_outpoint.toObject(includeInstance, f),
    paymentPreimage: msg.getPaymentPreimage_asB64(),
    localOfferId: msg.getLocalOfferId_asB64(),
    invreqPayerNote: jspb.Message.getFieldWithDefault(msg, 15, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.CreateinvoiceResponse}
 */
proto.cln.CreateinvoiceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.CreateinvoiceResponse;
  return proto.cln.CreateinvoiceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.CreateinvoiceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.CreateinvoiceResponse}
 */
proto.cln.CreateinvoiceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt12(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 5:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 6:
      var value = /** @type {!proto.cln.CreateinvoiceResponse.CreateinvoiceStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExpiresAt(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedIndex(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPayIndex(value);
      break;
    case 10:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountReceivedMsat(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPaidAt(value);
      break;
    case 17:
      var value = new proto.cln.CreateinvoicePaid_outpoint;
      reader.readMessage(value,proto.cln.CreateinvoicePaid_outpoint.deserializeBinaryFromReader);
      msg.setPaidOutpoint(value);
      break;
    case 12:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentPreimage(value);
      break;
    case 13:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setLocalOfferId(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvreqPayerNote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.CreateinvoiceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.CreateinvoiceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.CreateinvoiceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CreateinvoiceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getExpiresAt();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint64(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getAmountReceivedMsat();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = message.getPaidOutpoint();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.cln.CreateinvoicePaid_outpoint.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBytes(
      12,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBytes(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeString(
      15,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.CreateinvoiceResponse.CreateinvoiceStatus = {
  PAID: 0,
  EXPIRED: 1,
  UNPAID: 2
};

/**
 * optional string label = 1;
 * @return {string}
 */
proto.cln.CreateinvoiceResponse.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string bolt11 = 2;
 * @return {string}
 */
proto.cln.CreateinvoiceResponse.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.setBolt11 = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.clearBolt11 = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CreateinvoiceResponse.prototype.hasBolt11 = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string bolt12 = 3;
 * @return {string}
 */
proto.cln.CreateinvoiceResponse.prototype.getBolt12 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.setBolt12 = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.clearBolt12 = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CreateinvoiceResponse.prototype.hasBolt12 = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bytes payment_hash = 4;
 * @return {!(string|Uint8Array)}
 */
proto.cln.CreateinvoiceResponse.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes payment_hash = 4;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.CreateinvoiceResponse.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.CreateinvoiceResponse.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional Amount amount_msat = 5;
 * @return {?proto.cln.Amount}
 */
proto.cln.CreateinvoiceResponse.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 5));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.CreateinvoiceResponse} returns this
*/
proto.cln.CreateinvoiceResponse.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CreateinvoiceResponse.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional CreateinvoiceStatus status = 6;
 * @return {!proto.cln.CreateinvoiceResponse.CreateinvoiceStatus}
 */
proto.cln.CreateinvoiceResponse.prototype.getStatus = function() {
  return /** @type {!proto.cln.CreateinvoiceResponse.CreateinvoiceStatus} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.cln.CreateinvoiceResponse.CreateinvoiceStatus} value
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional string description = 7;
 * @return {string}
 */
proto.cln.CreateinvoiceResponse.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional uint64 expires_at = 8;
 * @return {number}
 */
proto.cln.CreateinvoiceResponse.prototype.getExpiresAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.setExpiresAt = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional uint64 created_index = 16;
 * @return {number}
 */
proto.cln.CreateinvoiceResponse.prototype.getCreatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.setCreatedIndex = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.clearCreatedIndex = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CreateinvoiceResponse.prototype.hasCreatedIndex = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional uint64 pay_index = 9;
 * @return {number}
 */
proto.cln.CreateinvoiceResponse.prototype.getPayIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.setPayIndex = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.clearPayIndex = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CreateinvoiceResponse.prototype.hasPayIndex = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Amount amount_received_msat = 10;
 * @return {?proto.cln.Amount}
 */
proto.cln.CreateinvoiceResponse.prototype.getAmountReceivedMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 10));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.CreateinvoiceResponse} returns this
*/
proto.cln.CreateinvoiceResponse.prototype.setAmountReceivedMsat = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.clearAmountReceivedMsat = function() {
  return this.setAmountReceivedMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CreateinvoiceResponse.prototype.hasAmountReceivedMsat = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint64 paid_at = 11;
 * @return {number}
 */
proto.cln.CreateinvoiceResponse.prototype.getPaidAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.setPaidAt = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.clearPaidAt = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CreateinvoiceResponse.prototype.hasPaidAt = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional CreateinvoicePaid_outpoint paid_outpoint = 17;
 * @return {?proto.cln.CreateinvoicePaid_outpoint}
 */
proto.cln.CreateinvoiceResponse.prototype.getPaidOutpoint = function() {
  return /** @type{?proto.cln.CreateinvoicePaid_outpoint} */ (
    jspb.Message.getWrapperField(this, proto.cln.CreateinvoicePaid_outpoint, 17));
};


/**
 * @param {?proto.cln.CreateinvoicePaid_outpoint|undefined} value
 * @return {!proto.cln.CreateinvoiceResponse} returns this
*/
proto.cln.CreateinvoiceResponse.prototype.setPaidOutpoint = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.clearPaidOutpoint = function() {
  return this.setPaidOutpoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CreateinvoiceResponse.prototype.hasPaidOutpoint = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional bytes payment_preimage = 12;
 * @return {!(string|Uint8Array)}
 */
proto.cln.CreateinvoiceResponse.prototype.getPaymentPreimage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * optional bytes payment_preimage = 12;
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {string}
 */
proto.cln.CreateinvoiceResponse.prototype.getPaymentPreimage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentPreimage()));
};


/**
 * optional bytes payment_preimage = 12;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {!Uint8Array}
 */
proto.cln.CreateinvoiceResponse.prototype.getPaymentPreimage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentPreimage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.setPaymentPreimage = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.clearPaymentPreimage = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CreateinvoiceResponse.prototype.hasPaymentPreimage = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bytes local_offer_id = 13;
 * @return {!(string|Uint8Array)}
 */
proto.cln.CreateinvoiceResponse.prototype.getLocalOfferId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * optional bytes local_offer_id = 13;
 * This is a type-conversion wrapper around `getLocalOfferId()`
 * @return {string}
 */
proto.cln.CreateinvoiceResponse.prototype.getLocalOfferId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getLocalOfferId()));
};


/**
 * optional bytes local_offer_id = 13;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getLocalOfferId()`
 * @return {!Uint8Array}
 */
proto.cln.CreateinvoiceResponse.prototype.getLocalOfferId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getLocalOfferId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.setLocalOfferId = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.clearLocalOfferId = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CreateinvoiceResponse.prototype.hasLocalOfferId = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string invreq_payer_note = 15;
 * @return {string}
 */
proto.cln.CreateinvoiceResponse.prototype.getInvreqPayerNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.setInvreqPayerNote = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CreateinvoiceResponse} returns this
 */
proto.cln.CreateinvoiceResponse.prototype.clearInvreqPayerNote = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CreateinvoiceResponse.prototype.hasInvreqPayerNote = function() {
  return jspb.Message.getField(this, 15) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.CreateinvoicePaid_outpoint.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.CreateinvoicePaid_outpoint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.CreateinvoicePaid_outpoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CreateinvoicePaid_outpoint.toObject = function(includeInstance, msg) {
  var f, obj = {
    txid: msg.getTxid_asB64(),
    outnum: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.CreateinvoicePaid_outpoint}
 */
proto.cln.CreateinvoicePaid_outpoint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.CreateinvoicePaid_outpoint;
  return proto.cln.CreateinvoicePaid_outpoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.CreateinvoicePaid_outpoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.CreateinvoicePaid_outpoint}
 */
proto.cln.CreateinvoicePaid_outpoint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOutnum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.CreateinvoicePaid_outpoint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.CreateinvoicePaid_outpoint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.CreateinvoicePaid_outpoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CreateinvoicePaid_outpoint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional bytes txid = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.CreateinvoicePaid_outpoint.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes txid = 1;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.CreateinvoicePaid_outpoint.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.CreateinvoicePaid_outpoint.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.CreateinvoicePaid_outpoint} returns this
 */
proto.cln.CreateinvoicePaid_outpoint.prototype.setTxid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CreateinvoicePaid_outpoint} returns this
 */
proto.cln.CreateinvoicePaid_outpoint.prototype.clearTxid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CreateinvoicePaid_outpoint.prototype.hasTxid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 outnum = 2;
 * @return {number}
 */
proto.cln.CreateinvoicePaid_outpoint.prototype.getOutnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.CreateinvoicePaid_outpoint} returns this
 */
proto.cln.CreateinvoicePaid_outpoint.prototype.setOutnum = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CreateinvoicePaid_outpoint} returns this
 */
proto.cln.CreateinvoicePaid_outpoint.prototype.clearOutnum = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CreateinvoicePaid_outpoint.prototype.hasOutnum = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.DatastoreRequest.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DatastoreRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DatastoreRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DatastoreRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DatastoreRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    keyList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    string: jspb.Message.getFieldWithDefault(msg, 6, ""),
    hex: msg.getHex_asB64(),
    mode: jspb.Message.getFieldWithDefault(msg, 3, 0),
    generation: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DatastoreRequest}
 */
proto.cln.DatastoreRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DatastoreRequest;
  return proto.cln.DatastoreRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DatastoreRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DatastoreRequest}
 */
proto.cln.DatastoreRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addKey(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setString(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHex(value);
      break;
    case 3:
      var value = /** @type {!proto.cln.DatastoreRequest.DatastoreMode} */ (reader.readEnum());
      msg.setMode(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGeneration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DatastoreRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DatastoreRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DatastoreRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DatastoreRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeyList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = /** @type {!proto.cln.DatastoreRequest.DatastoreMode} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint64(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.DatastoreRequest.DatastoreMode = {
  MUST_CREATE: 0,
  MUST_REPLACE: 1,
  CREATE_OR_REPLACE: 2,
  MUST_APPEND: 3,
  CREATE_OR_APPEND: 4
};

/**
 * repeated string key = 5;
 * @return {!Array<string>}
 */
proto.cln.DatastoreRequest.prototype.getKeyList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.DatastoreRequest} returns this
 */
proto.cln.DatastoreRequest.prototype.setKeyList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.DatastoreRequest} returns this
 */
proto.cln.DatastoreRequest.prototype.addKey = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.DatastoreRequest} returns this
 */
proto.cln.DatastoreRequest.prototype.clearKeyList = function() {
  return this.setKeyList([]);
};


/**
 * optional string string = 6;
 * @return {string}
 */
proto.cln.DatastoreRequest.prototype.getString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DatastoreRequest} returns this
 */
proto.cln.DatastoreRequest.prototype.setString = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DatastoreRequest} returns this
 */
proto.cln.DatastoreRequest.prototype.clearString = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DatastoreRequest.prototype.hasString = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bytes hex = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DatastoreRequest.prototype.getHex = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes hex = 2;
 * This is a type-conversion wrapper around `getHex()`
 * @return {string}
 */
proto.cln.DatastoreRequest.prototype.getHex_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHex()));
};


/**
 * optional bytes hex = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHex()`
 * @return {!Uint8Array}
 */
proto.cln.DatastoreRequest.prototype.getHex_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHex()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DatastoreRequest} returns this
 */
proto.cln.DatastoreRequest.prototype.setHex = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DatastoreRequest} returns this
 */
proto.cln.DatastoreRequest.prototype.clearHex = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DatastoreRequest.prototype.hasHex = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional DatastoreMode mode = 3;
 * @return {!proto.cln.DatastoreRequest.DatastoreMode}
 */
proto.cln.DatastoreRequest.prototype.getMode = function() {
  return /** @type {!proto.cln.DatastoreRequest.DatastoreMode} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.cln.DatastoreRequest.DatastoreMode} value
 * @return {!proto.cln.DatastoreRequest} returns this
 */
proto.cln.DatastoreRequest.prototype.setMode = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DatastoreRequest} returns this
 */
proto.cln.DatastoreRequest.prototype.clearMode = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DatastoreRequest.prototype.hasMode = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 generation = 4;
 * @return {number}
 */
proto.cln.DatastoreRequest.prototype.getGeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DatastoreRequest} returns this
 */
proto.cln.DatastoreRequest.prototype.setGeneration = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DatastoreRequest} returns this
 */
proto.cln.DatastoreRequest.prototype.clearGeneration = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DatastoreRequest.prototype.hasGeneration = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.DatastoreResponse.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DatastoreResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DatastoreResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DatastoreResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DatastoreResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    keyList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    generation: jspb.Message.getFieldWithDefault(msg, 2, 0),
    hex: msg.getHex_asB64(),
    string: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DatastoreResponse}
 */
proto.cln.DatastoreResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DatastoreResponse;
  return proto.cln.DatastoreResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DatastoreResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DatastoreResponse}
 */
proto.cln.DatastoreResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addKey(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGeneration(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHex(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setString(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DatastoreResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DatastoreResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DatastoreResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DatastoreResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeyList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * repeated string key = 5;
 * @return {!Array<string>}
 */
proto.cln.DatastoreResponse.prototype.getKeyList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.DatastoreResponse} returns this
 */
proto.cln.DatastoreResponse.prototype.setKeyList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.DatastoreResponse} returns this
 */
proto.cln.DatastoreResponse.prototype.addKey = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.DatastoreResponse} returns this
 */
proto.cln.DatastoreResponse.prototype.clearKeyList = function() {
  return this.setKeyList([]);
};


/**
 * optional uint64 generation = 2;
 * @return {number}
 */
proto.cln.DatastoreResponse.prototype.getGeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DatastoreResponse} returns this
 */
proto.cln.DatastoreResponse.prototype.setGeneration = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DatastoreResponse} returns this
 */
proto.cln.DatastoreResponse.prototype.clearGeneration = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DatastoreResponse.prototype.hasGeneration = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes hex = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DatastoreResponse.prototype.getHex = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes hex = 3;
 * This is a type-conversion wrapper around `getHex()`
 * @return {string}
 */
proto.cln.DatastoreResponse.prototype.getHex_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHex()));
};


/**
 * optional bytes hex = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHex()`
 * @return {!Uint8Array}
 */
proto.cln.DatastoreResponse.prototype.getHex_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHex()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DatastoreResponse} returns this
 */
proto.cln.DatastoreResponse.prototype.setHex = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DatastoreResponse} returns this
 */
proto.cln.DatastoreResponse.prototype.clearHex = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DatastoreResponse.prototype.hasHex = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string string = 4;
 * @return {string}
 */
proto.cln.DatastoreResponse.prototype.getString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DatastoreResponse} returns this
 */
proto.cln.DatastoreResponse.prototype.setString = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DatastoreResponse} returns this
 */
proto.cln.DatastoreResponse.prototype.clearString = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DatastoreResponse.prototype.hasString = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DatastoreusageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DatastoreusageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DatastoreusageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DatastoreusageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DatastoreusageRequest}
 */
proto.cln.DatastoreusageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DatastoreusageRequest;
  return proto.cln.DatastoreusageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DatastoreusageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DatastoreusageRequest}
 */
proto.cln.DatastoreusageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DatastoreusageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DatastoreusageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DatastoreusageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DatastoreusageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DatastoreusageResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DatastoreusageResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DatastoreusageResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DatastoreusageResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    datastoreusage: (f = msg.getDatastoreusage()) && proto.cln.DatastoreusageDatastoreusage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DatastoreusageResponse}
 */
proto.cln.DatastoreusageResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DatastoreusageResponse;
  return proto.cln.DatastoreusageResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DatastoreusageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DatastoreusageResponse}
 */
proto.cln.DatastoreusageResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.DatastoreusageDatastoreusage;
      reader.readMessage(value,proto.cln.DatastoreusageDatastoreusage.deserializeBinaryFromReader);
      msg.setDatastoreusage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DatastoreusageResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DatastoreusageResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DatastoreusageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DatastoreusageResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatastoreusage();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cln.DatastoreusageDatastoreusage.serializeBinaryToWriter
    );
  }
};


/**
 * optional DatastoreusageDatastoreusage datastoreusage = 1;
 * @return {?proto.cln.DatastoreusageDatastoreusage}
 */
proto.cln.DatastoreusageResponse.prototype.getDatastoreusage = function() {
  return /** @type{?proto.cln.DatastoreusageDatastoreusage} */ (
    jspb.Message.getWrapperField(this, proto.cln.DatastoreusageDatastoreusage, 1));
};


/**
 * @param {?proto.cln.DatastoreusageDatastoreusage|undefined} value
 * @return {!proto.cln.DatastoreusageResponse} returns this
*/
proto.cln.DatastoreusageResponse.prototype.setDatastoreusage = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.DatastoreusageResponse} returns this
 */
proto.cln.DatastoreusageResponse.prototype.clearDatastoreusage = function() {
  return this.setDatastoreusage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DatastoreusageResponse.prototype.hasDatastoreusage = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DatastoreusageDatastoreusage.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DatastoreusageDatastoreusage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DatastoreusageDatastoreusage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DatastoreusageDatastoreusage.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    totalBytes: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DatastoreusageDatastoreusage}
 */
proto.cln.DatastoreusageDatastoreusage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DatastoreusageDatastoreusage;
  return proto.cln.DatastoreusageDatastoreusage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DatastoreusageDatastoreusage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DatastoreusageDatastoreusage}
 */
proto.cln.DatastoreusageDatastoreusage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalBytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DatastoreusageDatastoreusage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DatastoreusageDatastoreusage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DatastoreusageDatastoreusage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DatastoreusageDatastoreusage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.cln.DatastoreusageDatastoreusage.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DatastoreusageDatastoreusage} returns this
 */
proto.cln.DatastoreusageDatastoreusage.prototype.setKey = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DatastoreusageDatastoreusage} returns this
 */
proto.cln.DatastoreusageDatastoreusage.prototype.clearKey = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DatastoreusageDatastoreusage.prototype.hasKey = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 total_bytes = 2;
 * @return {number}
 */
proto.cln.DatastoreusageDatastoreusage.prototype.getTotalBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DatastoreusageDatastoreusage} returns this
 */
proto.cln.DatastoreusageDatastoreusage.prototype.setTotalBytes = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DatastoreusageDatastoreusage} returns this
 */
proto.cln.DatastoreusageDatastoreusage.prototype.clearTotalBytes = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DatastoreusageDatastoreusage.prototype.hasTotalBytes = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.CreateonionRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.CreateonionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.CreateonionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.CreateonionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CreateonionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    hopsList: jspb.Message.toObjectList(msg.getHopsList(),
    proto.cln.CreateonionHops.toObject, includeInstance),
    assocdata: msg.getAssocdata_asB64(),
    sessionKey: msg.getSessionKey_asB64(),
    onionSize: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.CreateonionRequest}
 */
proto.cln.CreateonionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.CreateonionRequest;
  return proto.cln.CreateonionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.CreateonionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.CreateonionRequest}
 */
proto.cln.CreateonionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.CreateonionHops;
      reader.readMessage(value,proto.cln.CreateonionHops.deserializeBinaryFromReader);
      msg.addHops(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAssocdata(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSessionKey(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOnionSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.CreateonionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.CreateonionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.CreateonionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CreateonionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHopsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.CreateonionHops.serializeBinaryToWriter
    );
  }
  f = message.getAssocdata_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * repeated CreateonionHops hops = 1;
 * @return {!Array<!proto.cln.CreateonionHops>}
 */
proto.cln.CreateonionRequest.prototype.getHopsList = function() {
  return /** @type{!Array<!proto.cln.CreateonionHops>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.CreateonionHops, 1));
};


/**
 * @param {!Array<!proto.cln.CreateonionHops>} value
 * @return {!proto.cln.CreateonionRequest} returns this
*/
proto.cln.CreateonionRequest.prototype.setHopsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.CreateonionHops=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.CreateonionHops}
 */
proto.cln.CreateonionRequest.prototype.addHops = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.CreateonionHops, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.CreateonionRequest} returns this
 */
proto.cln.CreateonionRequest.prototype.clearHopsList = function() {
  return this.setHopsList([]);
};


/**
 * optional bytes assocdata = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.CreateonionRequest.prototype.getAssocdata = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes assocdata = 2;
 * This is a type-conversion wrapper around `getAssocdata()`
 * @return {string}
 */
proto.cln.CreateonionRequest.prototype.getAssocdata_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAssocdata()));
};


/**
 * optional bytes assocdata = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAssocdata()`
 * @return {!Uint8Array}
 */
proto.cln.CreateonionRequest.prototype.getAssocdata_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAssocdata()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.CreateonionRequest} returns this
 */
proto.cln.CreateonionRequest.prototype.setAssocdata = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes session_key = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.CreateonionRequest.prototype.getSessionKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes session_key = 3;
 * This is a type-conversion wrapper around `getSessionKey()`
 * @return {string}
 */
proto.cln.CreateonionRequest.prototype.getSessionKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSessionKey()));
};


/**
 * optional bytes session_key = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSessionKey()`
 * @return {!Uint8Array}
 */
proto.cln.CreateonionRequest.prototype.getSessionKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSessionKey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.CreateonionRequest} returns this
 */
proto.cln.CreateonionRequest.prototype.setSessionKey = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CreateonionRequest} returns this
 */
proto.cln.CreateonionRequest.prototype.clearSessionKey = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CreateonionRequest.prototype.hasSessionKey = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 onion_size = 4;
 * @return {number}
 */
proto.cln.CreateonionRequest.prototype.getOnionSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.CreateonionRequest} returns this
 */
proto.cln.CreateonionRequest.prototype.setOnionSize = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.CreateonionRequest} returns this
 */
proto.cln.CreateonionRequest.prototype.clearOnionSize = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.CreateonionRequest.prototype.hasOnionSize = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.CreateonionResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.CreateonionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.CreateonionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.CreateonionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CreateonionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    onion: msg.getOnion_asB64(),
    sharedSecretsList: msg.getSharedSecretsList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.CreateonionResponse}
 */
proto.cln.CreateonionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.CreateonionResponse;
  return proto.cln.CreateonionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.CreateonionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.CreateonionResponse}
 */
proto.cln.CreateonionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOnion(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addSharedSecrets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.CreateonionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.CreateonionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.CreateonionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CreateonionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOnion_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getSharedSecretsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      2,
      f
    );
  }
};


/**
 * optional bytes onion = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.CreateonionResponse.prototype.getOnion = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes onion = 1;
 * This is a type-conversion wrapper around `getOnion()`
 * @return {string}
 */
proto.cln.CreateonionResponse.prototype.getOnion_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOnion()));
};


/**
 * optional bytes onion = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOnion()`
 * @return {!Uint8Array}
 */
proto.cln.CreateonionResponse.prototype.getOnion_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOnion()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.CreateonionResponse} returns this
 */
proto.cln.CreateonionResponse.prototype.setOnion = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * repeated bytes shared_secrets = 2;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.cln.CreateonionResponse.prototype.getSharedSecretsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * repeated bytes shared_secrets = 2;
 * This is a type-conversion wrapper around `getSharedSecretsList()`
 * @return {!Array<string>}
 */
proto.cln.CreateonionResponse.prototype.getSharedSecretsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getSharedSecretsList()));
};


/**
 * repeated bytes shared_secrets = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSharedSecretsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.cln.CreateonionResponse.prototype.getSharedSecretsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getSharedSecretsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.cln.CreateonionResponse} returns this
 */
proto.cln.CreateonionResponse.prototype.setSharedSecretsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.cln.CreateonionResponse} returns this
 */
proto.cln.CreateonionResponse.prototype.addSharedSecrets = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.CreateonionResponse} returns this
 */
proto.cln.CreateonionResponse.prototype.clearSharedSecretsList = function() {
  return this.setSharedSecretsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.CreateonionHops.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.CreateonionHops.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.CreateonionHops} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CreateonionHops.toObject = function(includeInstance, msg) {
  var f, obj = {
    pubkey: msg.getPubkey_asB64(),
    payload: msg.getPayload_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.CreateonionHops}
 */
proto.cln.CreateonionHops.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.CreateonionHops;
  return proto.cln.CreateonionHops.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.CreateonionHops} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.CreateonionHops}
 */
proto.cln.CreateonionHops.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPubkey(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.CreateonionHops.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.CreateonionHops.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.CreateonionHops} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.CreateonionHops.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPubkey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getPayload_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional bytes pubkey = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.CreateonionHops.prototype.getPubkey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes pubkey = 1;
 * This is a type-conversion wrapper around `getPubkey()`
 * @return {string}
 */
proto.cln.CreateonionHops.prototype.getPubkey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPubkey()));
};


/**
 * optional bytes pubkey = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPubkey()`
 * @return {!Uint8Array}
 */
proto.cln.CreateonionHops.prototype.getPubkey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPubkey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.CreateonionHops} returns this
 */
proto.cln.CreateonionHops.prototype.setPubkey = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes payload = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.CreateonionHops.prototype.getPayload = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes payload = 2;
 * This is a type-conversion wrapper around `getPayload()`
 * @return {string}
 */
proto.cln.CreateonionHops.prototype.getPayload_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPayload()));
};


/**
 * optional bytes payload = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPayload()`
 * @return {!Uint8Array}
 */
proto.cln.CreateonionHops.prototype.getPayload_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPayload()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.CreateonionHops} returns this
 */
proto.cln.CreateonionHops.prototype.setPayload = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.DeldatastoreRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DeldatastoreRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DeldatastoreRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DeldatastoreRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DeldatastoreRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    keyList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    generation: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DeldatastoreRequest}
 */
proto.cln.DeldatastoreRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DeldatastoreRequest;
  return proto.cln.DeldatastoreRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DeldatastoreRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DeldatastoreRequest}
 */
proto.cln.DeldatastoreRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addKey(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGeneration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DeldatastoreRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DeldatastoreRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DeldatastoreRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DeldatastoreRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeyList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * repeated string key = 3;
 * @return {!Array<string>}
 */
proto.cln.DeldatastoreRequest.prototype.getKeyList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.DeldatastoreRequest} returns this
 */
proto.cln.DeldatastoreRequest.prototype.setKeyList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.DeldatastoreRequest} returns this
 */
proto.cln.DeldatastoreRequest.prototype.addKey = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.DeldatastoreRequest} returns this
 */
proto.cln.DeldatastoreRequest.prototype.clearKeyList = function() {
  return this.setKeyList([]);
};


/**
 * optional uint64 generation = 2;
 * @return {number}
 */
proto.cln.DeldatastoreRequest.prototype.getGeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DeldatastoreRequest} returns this
 */
proto.cln.DeldatastoreRequest.prototype.setGeneration = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DeldatastoreRequest} returns this
 */
proto.cln.DeldatastoreRequest.prototype.clearGeneration = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DeldatastoreRequest.prototype.hasGeneration = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.DeldatastoreResponse.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DeldatastoreResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DeldatastoreResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DeldatastoreResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DeldatastoreResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    keyList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    generation: jspb.Message.getFieldWithDefault(msg, 2, 0),
    hex: msg.getHex_asB64(),
    string: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DeldatastoreResponse}
 */
proto.cln.DeldatastoreResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DeldatastoreResponse;
  return proto.cln.DeldatastoreResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DeldatastoreResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DeldatastoreResponse}
 */
proto.cln.DeldatastoreResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addKey(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGeneration(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHex(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setString(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DeldatastoreResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DeldatastoreResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DeldatastoreResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DeldatastoreResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeyList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * repeated string key = 5;
 * @return {!Array<string>}
 */
proto.cln.DeldatastoreResponse.prototype.getKeyList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.DeldatastoreResponse} returns this
 */
proto.cln.DeldatastoreResponse.prototype.setKeyList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.DeldatastoreResponse} returns this
 */
proto.cln.DeldatastoreResponse.prototype.addKey = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.DeldatastoreResponse} returns this
 */
proto.cln.DeldatastoreResponse.prototype.clearKeyList = function() {
  return this.setKeyList([]);
};


/**
 * optional uint64 generation = 2;
 * @return {number}
 */
proto.cln.DeldatastoreResponse.prototype.getGeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DeldatastoreResponse} returns this
 */
proto.cln.DeldatastoreResponse.prototype.setGeneration = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DeldatastoreResponse} returns this
 */
proto.cln.DeldatastoreResponse.prototype.clearGeneration = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DeldatastoreResponse.prototype.hasGeneration = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes hex = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DeldatastoreResponse.prototype.getHex = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes hex = 3;
 * This is a type-conversion wrapper around `getHex()`
 * @return {string}
 */
proto.cln.DeldatastoreResponse.prototype.getHex_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHex()));
};


/**
 * optional bytes hex = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHex()`
 * @return {!Uint8Array}
 */
proto.cln.DeldatastoreResponse.prototype.getHex_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHex()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DeldatastoreResponse} returns this
 */
proto.cln.DeldatastoreResponse.prototype.setHex = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DeldatastoreResponse} returns this
 */
proto.cln.DeldatastoreResponse.prototype.clearHex = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DeldatastoreResponse.prototype.hasHex = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string string = 4;
 * @return {string}
 */
proto.cln.DeldatastoreResponse.prototype.getString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DeldatastoreResponse} returns this
 */
proto.cln.DeldatastoreResponse.prototype.setString = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DeldatastoreResponse} returns this
 */
proto.cln.DeldatastoreResponse.prototype.clearString = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DeldatastoreResponse.prototype.hasString = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DelexpiredinvoiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DelexpiredinvoiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DelexpiredinvoiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DelexpiredinvoiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    maxexpirytime: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DelexpiredinvoiceRequest}
 */
proto.cln.DelexpiredinvoiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DelexpiredinvoiceRequest;
  return proto.cln.DelexpiredinvoiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DelexpiredinvoiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DelexpiredinvoiceRequest}
 */
proto.cln.DelexpiredinvoiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMaxexpirytime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DelexpiredinvoiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DelexpiredinvoiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DelexpiredinvoiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DelexpiredinvoiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 maxexpirytime = 1;
 * @return {number}
 */
proto.cln.DelexpiredinvoiceRequest.prototype.getMaxexpirytime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DelexpiredinvoiceRequest} returns this
 */
proto.cln.DelexpiredinvoiceRequest.prototype.setMaxexpirytime = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DelexpiredinvoiceRequest} returns this
 */
proto.cln.DelexpiredinvoiceRequest.prototype.clearMaxexpirytime = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelexpiredinvoiceRequest.prototype.hasMaxexpirytime = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DelexpiredinvoiceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DelexpiredinvoiceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DelexpiredinvoiceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DelexpiredinvoiceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DelexpiredinvoiceResponse}
 */
proto.cln.DelexpiredinvoiceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DelexpiredinvoiceResponse;
  return proto.cln.DelexpiredinvoiceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DelexpiredinvoiceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DelexpiredinvoiceResponse}
 */
proto.cln.DelexpiredinvoiceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DelexpiredinvoiceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DelexpiredinvoiceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DelexpiredinvoiceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DelexpiredinvoiceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DelinvoiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DelinvoiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DelinvoiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DelinvoiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    desconly: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DelinvoiceRequest}
 */
proto.cln.DelinvoiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DelinvoiceRequest;
  return proto.cln.DelinvoiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DelinvoiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DelinvoiceRequest}
 */
proto.cln.DelinvoiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 2:
      var value = /** @type {!proto.cln.DelinvoiceRequest.DelinvoiceStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDesconly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DelinvoiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DelinvoiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DelinvoiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DelinvoiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.DelinvoiceRequest.DelinvoiceStatus = {
  PAID: 0,
  EXPIRED: 1,
  UNPAID: 2
};

/**
 * optional string label = 1;
 * @return {string}
 */
proto.cln.DelinvoiceRequest.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DelinvoiceRequest} returns this
 */
proto.cln.DelinvoiceRequest.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional DelinvoiceStatus status = 2;
 * @return {!proto.cln.DelinvoiceRequest.DelinvoiceStatus}
 */
proto.cln.DelinvoiceRequest.prototype.getStatus = function() {
  return /** @type {!proto.cln.DelinvoiceRequest.DelinvoiceStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.cln.DelinvoiceRequest.DelinvoiceStatus} value
 * @return {!proto.cln.DelinvoiceRequest} returns this
 */
proto.cln.DelinvoiceRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional bool desconly = 3;
 * @return {boolean}
 */
proto.cln.DelinvoiceRequest.prototype.getDesconly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.DelinvoiceRequest} returns this
 */
proto.cln.DelinvoiceRequest.prototype.setDesconly = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DelinvoiceRequest} returns this
 */
proto.cln.DelinvoiceRequest.prototype.clearDesconly = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelinvoiceRequest.prototype.hasDesconly = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DelinvoiceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DelinvoiceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DelinvoiceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DelinvoiceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: jspb.Message.getFieldWithDefault(msg, 1, ""),
    bolt11: jspb.Message.getFieldWithDefault(msg, 2, ""),
    bolt12: jspb.Message.getFieldWithDefault(msg, 3, ""),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    description: jspb.Message.getFieldWithDefault(msg, 5, ""),
    paymentHash: msg.getPaymentHash_asB64(),
    createdIndex: jspb.Message.getFieldWithDefault(msg, 12, 0),
    updatedIndex: jspb.Message.getFieldWithDefault(msg, 13, 0),
    status: jspb.Message.getFieldWithDefault(msg, 7, 0),
    expiresAt: jspb.Message.getFieldWithDefault(msg, 8, 0),
    localOfferId: msg.getLocalOfferId_asB64(),
    invreqPayerNote: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DelinvoiceResponse}
 */
proto.cln.DelinvoiceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DelinvoiceResponse;
  return proto.cln.DelinvoiceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DelinvoiceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DelinvoiceResponse}
 */
proto.cln.DelinvoiceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt12(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedIndex(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpdatedIndex(value);
      break;
    case 7:
      var value = /** @type {!proto.cln.DelinvoiceResponse.DelinvoiceStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExpiresAt(value);
      break;
    case 9:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setLocalOfferId(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvreqPayerNote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DelinvoiceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DelinvoiceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DelinvoiceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DelinvoiceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeUint64(
      13,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getExpiresAt();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBytes(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.DelinvoiceResponse.DelinvoiceStatus = {
  PAID: 0,
  EXPIRED: 1,
  UNPAID: 2
};

/**
 * optional string label = 1;
 * @return {string}
 */
proto.cln.DelinvoiceResponse.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string bolt11 = 2;
 * @return {string}
 */
proto.cln.DelinvoiceResponse.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.setBolt11 = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.clearBolt11 = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelinvoiceResponse.prototype.hasBolt11 = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string bolt12 = 3;
 * @return {string}
 */
proto.cln.DelinvoiceResponse.prototype.getBolt12 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.setBolt12 = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.clearBolt12 = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelinvoiceResponse.prototype.hasBolt12 = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Amount amount_msat = 4;
 * @return {?proto.cln.Amount}
 */
proto.cln.DelinvoiceResponse.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 4));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.DelinvoiceResponse} returns this
*/
proto.cln.DelinvoiceResponse.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelinvoiceResponse.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.cln.DelinvoiceResponse.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelinvoiceResponse.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bytes payment_hash = 6;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DelinvoiceResponse.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes payment_hash = 6;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.DelinvoiceResponse.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.DelinvoiceResponse.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional uint64 created_index = 12;
 * @return {number}
 */
proto.cln.DelinvoiceResponse.prototype.getCreatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.setCreatedIndex = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.clearCreatedIndex = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelinvoiceResponse.prototype.hasCreatedIndex = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional uint64 updated_index = 13;
 * @return {number}
 */
proto.cln.DelinvoiceResponse.prototype.getUpdatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.setUpdatedIndex = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.clearUpdatedIndex = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelinvoiceResponse.prototype.hasUpdatedIndex = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional DelinvoiceStatus status = 7;
 * @return {!proto.cln.DelinvoiceResponse.DelinvoiceStatus}
 */
proto.cln.DelinvoiceResponse.prototype.getStatus = function() {
  return /** @type {!proto.cln.DelinvoiceResponse.DelinvoiceStatus} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.cln.DelinvoiceResponse.DelinvoiceStatus} value
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional uint64 expires_at = 8;
 * @return {number}
 */
proto.cln.DelinvoiceResponse.prototype.getExpiresAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.setExpiresAt = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional bytes local_offer_id = 9;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DelinvoiceResponse.prototype.getLocalOfferId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * optional bytes local_offer_id = 9;
 * This is a type-conversion wrapper around `getLocalOfferId()`
 * @return {string}
 */
proto.cln.DelinvoiceResponse.prototype.getLocalOfferId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getLocalOfferId()));
};


/**
 * optional bytes local_offer_id = 9;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getLocalOfferId()`
 * @return {!Uint8Array}
 */
proto.cln.DelinvoiceResponse.prototype.getLocalOfferId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getLocalOfferId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.setLocalOfferId = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.clearLocalOfferId = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelinvoiceResponse.prototype.hasLocalOfferId = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string invreq_payer_note = 11;
 * @return {string}
 */
proto.cln.DelinvoiceResponse.prototype.getInvreqPayerNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.setInvreqPayerNote = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DelinvoiceResponse} returns this
 */
proto.cln.DelinvoiceResponse.prototype.clearInvreqPayerNote = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DelinvoiceResponse.prototype.hasInvreqPayerNote = function() {
  return jspb.Message.getField(this, 11) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.InvoiceRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.InvoiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.InvoiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.InvoiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.InvoiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.AmountOrAny.toObject(includeInstance, f),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    label: jspb.Message.getFieldWithDefault(msg, 3, ""),
    expiry: jspb.Message.getFieldWithDefault(msg, 7, 0),
    fallbacksList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    preimage: msg.getPreimage_asB64(),
    cltv: jspb.Message.getFieldWithDefault(msg, 6, 0),
    deschashonly: jspb.Message.getBooleanFieldWithDefault(msg, 9, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.InvoiceRequest}
 */
proto.cln.InvoiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.InvoiceRequest;
  return proto.cln.InvoiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.InvoiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.InvoiceRequest}
 */
proto.cln.InvoiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 10:
      var value = new cln_primitives_pb.AmountOrAny;
      reader.readMessage(value,cln_primitives_pb.AmountOrAny.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExpiry(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addFallbacks(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPreimage(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCltv(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeschashonly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.InvoiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.InvoiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.InvoiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.InvoiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      cln_primitives_pb.AmountOrAny.serializeBinaryToWriter
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getFallbacksList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
};


/**
 * optional AmountOrAny amount_msat = 10;
 * @return {?proto.cln.AmountOrAny}
 */
proto.cln.InvoiceRequest.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.AmountOrAny} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.AmountOrAny, 10));
};


/**
 * @param {?proto.cln.AmountOrAny|undefined} value
 * @return {!proto.cln.InvoiceRequest} returns this
*/
proto.cln.InvoiceRequest.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.InvoiceRequest} returns this
 */
proto.cln.InvoiceRequest.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.InvoiceRequest.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.cln.InvoiceRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.InvoiceRequest} returns this
 */
proto.cln.InvoiceRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string label = 3;
 * @return {string}
 */
proto.cln.InvoiceRequest.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.InvoiceRequest} returns this
 */
proto.cln.InvoiceRequest.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint64 expiry = 7;
 * @return {number}
 */
proto.cln.InvoiceRequest.prototype.getExpiry = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.InvoiceRequest} returns this
 */
proto.cln.InvoiceRequest.prototype.setExpiry = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.InvoiceRequest} returns this
 */
proto.cln.InvoiceRequest.prototype.clearExpiry = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.InvoiceRequest.prototype.hasExpiry = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated string fallbacks = 4;
 * @return {!Array<string>}
 */
proto.cln.InvoiceRequest.prototype.getFallbacksList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.InvoiceRequest} returns this
 */
proto.cln.InvoiceRequest.prototype.setFallbacksList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.InvoiceRequest} returns this
 */
proto.cln.InvoiceRequest.prototype.addFallbacks = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.InvoiceRequest} returns this
 */
proto.cln.InvoiceRequest.prototype.clearFallbacksList = function() {
  return this.setFallbacksList([]);
};


/**
 * optional bytes preimage = 5;
 * @return {!(string|Uint8Array)}
 */
proto.cln.InvoiceRequest.prototype.getPreimage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes preimage = 5;
 * This is a type-conversion wrapper around `getPreimage()`
 * @return {string}
 */
proto.cln.InvoiceRequest.prototype.getPreimage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPreimage()));
};


/**
 * optional bytes preimage = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPreimage()`
 * @return {!Uint8Array}
 */
proto.cln.InvoiceRequest.prototype.getPreimage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPreimage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.InvoiceRequest} returns this
 */
proto.cln.InvoiceRequest.prototype.setPreimage = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.InvoiceRequest} returns this
 */
proto.cln.InvoiceRequest.prototype.clearPreimage = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.InvoiceRequest.prototype.hasPreimage = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 cltv = 6;
 * @return {number}
 */
proto.cln.InvoiceRequest.prototype.getCltv = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.InvoiceRequest} returns this
 */
proto.cln.InvoiceRequest.prototype.setCltv = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.InvoiceRequest} returns this
 */
proto.cln.InvoiceRequest.prototype.clearCltv = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.InvoiceRequest.prototype.hasCltv = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool deschashonly = 9;
 * @return {boolean}
 */
proto.cln.InvoiceRequest.prototype.getDeschashonly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.InvoiceRequest} returns this
 */
proto.cln.InvoiceRequest.prototype.setDeschashonly = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.InvoiceRequest} returns this
 */
proto.cln.InvoiceRequest.prototype.clearDeschashonly = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.InvoiceRequest.prototype.hasDeschashonly = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.InvoiceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.InvoiceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.InvoiceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.InvoiceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    bolt11: jspb.Message.getFieldWithDefault(msg, 1, ""),
    paymentHash: msg.getPaymentHash_asB64(),
    paymentSecret: msg.getPaymentSecret_asB64(),
    expiresAt: jspb.Message.getFieldWithDefault(msg, 4, 0),
    createdIndex: jspb.Message.getFieldWithDefault(msg, 10, 0),
    warningCapacity: jspb.Message.getFieldWithDefault(msg, 5, ""),
    warningOffline: jspb.Message.getFieldWithDefault(msg, 6, ""),
    warningDeadends: jspb.Message.getFieldWithDefault(msg, 7, ""),
    warningPrivateUnused: jspb.Message.getFieldWithDefault(msg, 8, ""),
    warningMpp: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.InvoiceResponse}
 */
proto.cln.InvoiceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.InvoiceResponse;
  return proto.cln.InvoiceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.InvoiceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.InvoiceResponse}
 */
proto.cln.InvoiceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentSecret(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExpiresAt(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedIndex(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningCapacity(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningOffline(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningDeadends(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningPrivateUnused(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningMpp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.InvoiceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.InvoiceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.InvoiceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.InvoiceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBolt11();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getPaymentSecret_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getExpiresAt();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string bolt11 = 1;
 * @return {string}
 */
proto.cln.InvoiceResponse.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.InvoiceResponse} returns this
 */
proto.cln.InvoiceResponse.prototype.setBolt11 = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes payment_hash = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.InvoiceResponse.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes payment_hash = 2;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.InvoiceResponse.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.InvoiceResponse.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.InvoiceResponse} returns this
 */
proto.cln.InvoiceResponse.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes payment_secret = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.InvoiceResponse.prototype.getPaymentSecret = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes payment_secret = 3;
 * This is a type-conversion wrapper around `getPaymentSecret()`
 * @return {string}
 */
proto.cln.InvoiceResponse.prototype.getPaymentSecret_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentSecret()));
};


/**
 * optional bytes payment_secret = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentSecret()`
 * @return {!Uint8Array}
 */
proto.cln.InvoiceResponse.prototype.getPaymentSecret_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentSecret()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.InvoiceResponse} returns this
 */
proto.cln.InvoiceResponse.prototype.setPaymentSecret = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional uint64 expires_at = 4;
 * @return {number}
 */
proto.cln.InvoiceResponse.prototype.getExpiresAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.InvoiceResponse} returns this
 */
proto.cln.InvoiceResponse.prototype.setExpiresAt = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 created_index = 10;
 * @return {number}
 */
proto.cln.InvoiceResponse.prototype.getCreatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.InvoiceResponse} returns this
 */
proto.cln.InvoiceResponse.prototype.setCreatedIndex = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.InvoiceResponse} returns this
 */
proto.cln.InvoiceResponse.prototype.clearCreatedIndex = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.InvoiceResponse.prototype.hasCreatedIndex = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string warning_capacity = 5;
 * @return {string}
 */
proto.cln.InvoiceResponse.prototype.getWarningCapacity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.InvoiceResponse} returns this
 */
proto.cln.InvoiceResponse.prototype.setWarningCapacity = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.InvoiceResponse} returns this
 */
proto.cln.InvoiceResponse.prototype.clearWarningCapacity = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.InvoiceResponse.prototype.hasWarningCapacity = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string warning_offline = 6;
 * @return {string}
 */
proto.cln.InvoiceResponse.prototype.getWarningOffline = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.InvoiceResponse} returns this
 */
proto.cln.InvoiceResponse.prototype.setWarningOffline = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.InvoiceResponse} returns this
 */
proto.cln.InvoiceResponse.prototype.clearWarningOffline = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.InvoiceResponse.prototype.hasWarningOffline = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string warning_deadends = 7;
 * @return {string}
 */
proto.cln.InvoiceResponse.prototype.getWarningDeadends = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.InvoiceResponse} returns this
 */
proto.cln.InvoiceResponse.prototype.setWarningDeadends = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.InvoiceResponse} returns this
 */
proto.cln.InvoiceResponse.prototype.clearWarningDeadends = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.InvoiceResponse.prototype.hasWarningDeadends = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string warning_private_unused = 8;
 * @return {string}
 */
proto.cln.InvoiceResponse.prototype.getWarningPrivateUnused = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.InvoiceResponse} returns this
 */
proto.cln.InvoiceResponse.prototype.setWarningPrivateUnused = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.InvoiceResponse} returns this
 */
proto.cln.InvoiceResponse.prototype.clearWarningPrivateUnused = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.InvoiceResponse.prototype.hasWarningPrivateUnused = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string warning_mpp = 9;
 * @return {string}
 */
proto.cln.InvoiceResponse.prototype.getWarningMpp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.InvoiceResponse} returns this
 */
proto.cln.InvoiceResponse.prototype.setWarningMpp = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.InvoiceResponse} returns this
 */
proto.cln.InvoiceResponse.prototype.clearWarningMpp = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.InvoiceResponse.prototype.hasWarningMpp = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListdatastoreRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListdatastoreRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListdatastoreRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListdatastoreRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListdatastoreRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    keyList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListdatastoreRequest}
 */
proto.cln.ListdatastoreRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListdatastoreRequest;
  return proto.cln.ListdatastoreRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListdatastoreRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListdatastoreRequest}
 */
proto.cln.ListdatastoreRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListdatastoreRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListdatastoreRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListdatastoreRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListdatastoreRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeyList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * repeated string key = 2;
 * @return {!Array<string>}
 */
proto.cln.ListdatastoreRequest.prototype.getKeyList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.ListdatastoreRequest} returns this
 */
proto.cln.ListdatastoreRequest.prototype.setKeyList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.ListdatastoreRequest} returns this
 */
proto.cln.ListdatastoreRequest.prototype.addKey = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListdatastoreRequest} returns this
 */
proto.cln.ListdatastoreRequest.prototype.clearKeyList = function() {
  return this.setKeyList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListdatastoreResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListdatastoreResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListdatastoreResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListdatastoreResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListdatastoreResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    datastoreList: jspb.Message.toObjectList(msg.getDatastoreList(),
    proto.cln.ListdatastoreDatastore.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListdatastoreResponse}
 */
proto.cln.ListdatastoreResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListdatastoreResponse;
  return proto.cln.ListdatastoreResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListdatastoreResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListdatastoreResponse}
 */
proto.cln.ListdatastoreResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.ListdatastoreDatastore;
      reader.readMessage(value,proto.cln.ListdatastoreDatastore.deserializeBinaryFromReader);
      msg.addDatastore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListdatastoreResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListdatastoreResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListdatastoreResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListdatastoreResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatastoreList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.ListdatastoreDatastore.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ListdatastoreDatastore datastore = 1;
 * @return {!Array<!proto.cln.ListdatastoreDatastore>}
 */
proto.cln.ListdatastoreResponse.prototype.getDatastoreList = function() {
  return /** @type{!Array<!proto.cln.ListdatastoreDatastore>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListdatastoreDatastore, 1));
};


/**
 * @param {!Array<!proto.cln.ListdatastoreDatastore>} value
 * @return {!proto.cln.ListdatastoreResponse} returns this
*/
proto.cln.ListdatastoreResponse.prototype.setDatastoreList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.ListdatastoreDatastore=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListdatastoreDatastore}
 */
proto.cln.ListdatastoreResponse.prototype.addDatastore = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.ListdatastoreDatastore, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListdatastoreResponse} returns this
 */
proto.cln.ListdatastoreResponse.prototype.clearDatastoreList = function() {
  return this.setDatastoreList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListdatastoreDatastore.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListdatastoreDatastore.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListdatastoreDatastore.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListdatastoreDatastore} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListdatastoreDatastore.toObject = function(includeInstance, msg) {
  var f, obj = {
    keyList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    generation: jspb.Message.getFieldWithDefault(msg, 2, 0),
    hex: msg.getHex_asB64(),
    string: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListdatastoreDatastore}
 */
proto.cln.ListdatastoreDatastore.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListdatastoreDatastore;
  return proto.cln.ListdatastoreDatastore.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListdatastoreDatastore} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListdatastoreDatastore}
 */
proto.cln.ListdatastoreDatastore.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addKey(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGeneration(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHex(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setString(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListdatastoreDatastore.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListdatastoreDatastore.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListdatastoreDatastore} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListdatastoreDatastore.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeyList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * repeated string key = 1;
 * @return {!Array<string>}
 */
proto.cln.ListdatastoreDatastore.prototype.getKeyList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.ListdatastoreDatastore} returns this
 */
proto.cln.ListdatastoreDatastore.prototype.setKeyList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.ListdatastoreDatastore} returns this
 */
proto.cln.ListdatastoreDatastore.prototype.addKey = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListdatastoreDatastore} returns this
 */
proto.cln.ListdatastoreDatastore.prototype.clearKeyList = function() {
  return this.setKeyList([]);
};


/**
 * optional uint64 generation = 2;
 * @return {number}
 */
proto.cln.ListdatastoreDatastore.prototype.getGeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListdatastoreDatastore} returns this
 */
proto.cln.ListdatastoreDatastore.prototype.setGeneration = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListdatastoreDatastore} returns this
 */
proto.cln.ListdatastoreDatastore.prototype.clearGeneration = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListdatastoreDatastore.prototype.hasGeneration = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes hex = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListdatastoreDatastore.prototype.getHex = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes hex = 3;
 * This is a type-conversion wrapper around `getHex()`
 * @return {string}
 */
proto.cln.ListdatastoreDatastore.prototype.getHex_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHex()));
};


/**
 * optional bytes hex = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHex()`
 * @return {!Uint8Array}
 */
proto.cln.ListdatastoreDatastore.prototype.getHex_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHex()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListdatastoreDatastore} returns this
 */
proto.cln.ListdatastoreDatastore.prototype.setHex = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListdatastoreDatastore} returns this
 */
proto.cln.ListdatastoreDatastore.prototype.clearHex = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListdatastoreDatastore.prototype.hasHex = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string string = 4;
 * @return {string}
 */
proto.cln.ListdatastoreDatastore.prototype.getString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListdatastoreDatastore} returns this
 */
proto.cln.ListdatastoreDatastore.prototype.setString = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListdatastoreDatastore} returns this
 */
proto.cln.ListdatastoreDatastore.prototype.clearString = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListdatastoreDatastore.prototype.hasString = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListinvoicesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListinvoicesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListinvoicesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListinvoicesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: jspb.Message.getFieldWithDefault(msg, 1, ""),
    invstring: jspb.Message.getFieldWithDefault(msg, 2, ""),
    paymentHash: msg.getPaymentHash_asB64(),
    offerId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    index: jspb.Message.getFieldWithDefault(msg, 5, 0),
    start: jspb.Message.getFieldWithDefault(msg, 6, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListinvoicesRequest}
 */
proto.cln.ListinvoicesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListinvoicesRequest;
  return proto.cln.ListinvoicesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListinvoicesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListinvoicesRequest}
 */
proto.cln.ListinvoicesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvstring(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOfferId(value);
      break;
    case 5:
      var value = /** @type {!proto.cln.ListinvoicesRequest.ListinvoicesIndex} */ (reader.readEnum());
      msg.setIndex(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStart(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListinvoicesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListinvoicesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListinvoicesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListinvoicesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {!proto.cln.ListinvoicesRequest.ListinvoicesIndex} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ListinvoicesRequest.ListinvoicesIndex = {
  CREATED: 0,
  UPDATED: 1
};

/**
 * optional string label = 1;
 * @return {string}
 */
proto.cln.ListinvoicesRequest.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListinvoicesRequest} returns this
 */
proto.cln.ListinvoicesRequest.prototype.setLabel = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicesRequest} returns this
 */
proto.cln.ListinvoicesRequest.prototype.clearLabel = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesRequest.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string invstring = 2;
 * @return {string}
 */
proto.cln.ListinvoicesRequest.prototype.getInvstring = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListinvoicesRequest} returns this
 */
proto.cln.ListinvoicesRequest.prototype.setInvstring = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicesRequest} returns this
 */
proto.cln.ListinvoicesRequest.prototype.clearInvstring = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesRequest.prototype.hasInvstring = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes payment_hash = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListinvoicesRequest.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes payment_hash = 3;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.ListinvoicesRequest.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.ListinvoicesRequest.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListinvoicesRequest} returns this
 */
proto.cln.ListinvoicesRequest.prototype.setPaymentHash = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicesRequest} returns this
 */
proto.cln.ListinvoicesRequest.prototype.clearPaymentHash = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesRequest.prototype.hasPaymentHash = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string offer_id = 4;
 * @return {string}
 */
proto.cln.ListinvoicesRequest.prototype.getOfferId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListinvoicesRequest} returns this
 */
proto.cln.ListinvoicesRequest.prototype.setOfferId = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicesRequest} returns this
 */
proto.cln.ListinvoicesRequest.prototype.clearOfferId = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesRequest.prototype.hasOfferId = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ListinvoicesIndex index = 5;
 * @return {!proto.cln.ListinvoicesRequest.ListinvoicesIndex}
 */
proto.cln.ListinvoicesRequest.prototype.getIndex = function() {
  return /** @type {!proto.cln.ListinvoicesRequest.ListinvoicesIndex} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.cln.ListinvoicesRequest.ListinvoicesIndex} value
 * @return {!proto.cln.ListinvoicesRequest} returns this
 */
proto.cln.ListinvoicesRequest.prototype.setIndex = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicesRequest} returns this
 */
proto.cln.ListinvoicesRequest.prototype.clearIndex = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesRequest.prototype.hasIndex = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint64 start = 6;
 * @return {number}
 */
proto.cln.ListinvoicesRequest.prototype.getStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListinvoicesRequest} returns this
 */
proto.cln.ListinvoicesRequest.prototype.setStart = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicesRequest} returns this
 */
proto.cln.ListinvoicesRequest.prototype.clearStart = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesRequest.prototype.hasStart = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 limit = 7;
 * @return {number}
 */
proto.cln.ListinvoicesRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListinvoicesRequest} returns this
 */
proto.cln.ListinvoicesRequest.prototype.setLimit = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicesRequest} returns this
 */
proto.cln.ListinvoicesRequest.prototype.clearLimit = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesRequest.prototype.hasLimit = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListinvoicesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListinvoicesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListinvoicesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListinvoicesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListinvoicesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    invoicesList: jspb.Message.toObjectList(msg.getInvoicesList(),
    proto.cln.ListinvoicesInvoices.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListinvoicesResponse}
 */
proto.cln.ListinvoicesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListinvoicesResponse;
  return proto.cln.ListinvoicesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListinvoicesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListinvoicesResponse}
 */
proto.cln.ListinvoicesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.ListinvoicesInvoices;
      reader.readMessage(value,proto.cln.ListinvoicesInvoices.deserializeBinaryFromReader);
      msg.addInvoices(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListinvoicesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListinvoicesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListinvoicesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListinvoicesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvoicesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.ListinvoicesInvoices.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ListinvoicesInvoices invoices = 1;
 * @return {!Array<!proto.cln.ListinvoicesInvoices>}
 */
proto.cln.ListinvoicesResponse.prototype.getInvoicesList = function() {
  return /** @type{!Array<!proto.cln.ListinvoicesInvoices>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListinvoicesInvoices, 1));
};


/**
 * @param {!Array<!proto.cln.ListinvoicesInvoices>} value
 * @return {!proto.cln.ListinvoicesResponse} returns this
*/
proto.cln.ListinvoicesResponse.prototype.setInvoicesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.ListinvoicesInvoices=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListinvoicesInvoices}
 */
proto.cln.ListinvoicesResponse.prototype.addInvoices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.ListinvoicesInvoices, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListinvoicesResponse} returns this
 */
proto.cln.ListinvoicesResponse.prototype.clearInvoicesList = function() {
  return this.setInvoicesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListinvoicesInvoices.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListinvoicesInvoices.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListinvoicesInvoices} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListinvoicesInvoices.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    paymentHash: msg.getPaymentHash_asB64(),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0),
    expiresAt: jspb.Message.getFieldWithDefault(msg, 5, 0),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    bolt11: jspb.Message.getFieldWithDefault(msg, 7, ""),
    bolt12: jspb.Message.getFieldWithDefault(msg, 8, ""),
    localOfferId: msg.getLocalOfferId_asB64(),
    invreqPayerNote: jspb.Message.getFieldWithDefault(msg, 15, ""),
    createdIndex: jspb.Message.getFieldWithDefault(msg, 16, 0),
    updatedIndex: jspb.Message.getFieldWithDefault(msg, 17, 0),
    payIndex: jspb.Message.getFieldWithDefault(msg, 11, 0),
    amountReceivedMsat: (f = msg.getAmountReceivedMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    paidAt: jspb.Message.getFieldWithDefault(msg, 13, 0),
    paidOutpoint: (f = msg.getPaidOutpoint()) && proto.cln.ListinvoicesInvoicesPaid_outpoint.toObject(includeInstance, f),
    paymentPreimage: msg.getPaymentPreimage_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListinvoicesInvoices}
 */
proto.cln.ListinvoicesInvoices.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListinvoicesInvoices;
  return proto.cln.ListinvoicesInvoices.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListinvoicesInvoices} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListinvoicesInvoices}
 */
proto.cln.ListinvoicesInvoices.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 4:
      var value = /** @type {!proto.cln.ListinvoicesInvoices.ListinvoicesInvoicesStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExpiresAt(value);
      break;
    case 6:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt12(value);
      break;
    case 9:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setLocalOfferId(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvreqPayerNote(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedIndex(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpdatedIndex(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPayIndex(value);
      break;
    case 12:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountReceivedMsat(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPaidAt(value);
      break;
    case 18:
      var value = new proto.cln.ListinvoicesInvoicesPaid_outpoint;
      reader.readMessage(value,proto.cln.ListinvoicesInvoicesPaid_outpoint.deserializeBinaryFromReader);
      msg.setPaidOutpoint(value);
      break;
    case 14:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentPreimage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListinvoicesInvoices.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListinvoicesInvoices.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListinvoicesInvoices} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListinvoicesInvoices.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getExpiresAt();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBytes(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeString(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint64(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeUint64(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = message.getAmountReceivedMsat();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeUint64(
      13,
      f
    );
  }
  f = message.getPaidOutpoint();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.cln.ListinvoicesInvoicesPaid_outpoint.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeBytes(
      14,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ListinvoicesInvoices.ListinvoicesInvoicesStatus = {
  UNPAID: 0,
  PAID: 1,
  EXPIRED: 2
};

/**
 * optional string label = 1;
 * @return {string}
 */
proto.cln.ListinvoicesInvoices.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.cln.ListinvoicesInvoices.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesInvoices.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes payment_hash = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListinvoicesInvoices.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes payment_hash = 3;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.ListinvoicesInvoices.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.ListinvoicesInvoices.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional ListinvoicesInvoicesStatus status = 4;
 * @return {!proto.cln.ListinvoicesInvoices.ListinvoicesInvoicesStatus}
 */
proto.cln.ListinvoicesInvoices.prototype.getStatus = function() {
  return /** @type {!proto.cln.ListinvoicesInvoices.ListinvoicesInvoicesStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.cln.ListinvoicesInvoices.ListinvoicesInvoicesStatus} value
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional uint64 expires_at = 5;
 * @return {number}
 */
proto.cln.ListinvoicesInvoices.prototype.getExpiresAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.setExpiresAt = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional Amount amount_msat = 6;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListinvoicesInvoices.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 6));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListinvoicesInvoices} returns this
*/
proto.cln.ListinvoicesInvoices.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesInvoices.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string bolt11 = 7;
 * @return {string}
 */
proto.cln.ListinvoicesInvoices.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.setBolt11 = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.clearBolt11 = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesInvoices.prototype.hasBolt11 = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string bolt12 = 8;
 * @return {string}
 */
proto.cln.ListinvoicesInvoices.prototype.getBolt12 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.setBolt12 = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.clearBolt12 = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesInvoices.prototype.hasBolt12 = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bytes local_offer_id = 9;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListinvoicesInvoices.prototype.getLocalOfferId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * optional bytes local_offer_id = 9;
 * This is a type-conversion wrapper around `getLocalOfferId()`
 * @return {string}
 */
proto.cln.ListinvoicesInvoices.prototype.getLocalOfferId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getLocalOfferId()));
};


/**
 * optional bytes local_offer_id = 9;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getLocalOfferId()`
 * @return {!Uint8Array}
 */
proto.cln.ListinvoicesInvoices.prototype.getLocalOfferId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getLocalOfferId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.setLocalOfferId = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.clearLocalOfferId = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesInvoices.prototype.hasLocalOfferId = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string invreq_payer_note = 15;
 * @return {string}
 */
proto.cln.ListinvoicesInvoices.prototype.getInvreqPayerNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.setInvreqPayerNote = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.clearInvreqPayerNote = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesInvoices.prototype.hasInvreqPayerNote = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional uint64 created_index = 16;
 * @return {number}
 */
proto.cln.ListinvoicesInvoices.prototype.getCreatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.setCreatedIndex = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.clearCreatedIndex = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesInvoices.prototype.hasCreatedIndex = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional uint64 updated_index = 17;
 * @return {number}
 */
proto.cln.ListinvoicesInvoices.prototype.getUpdatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.setUpdatedIndex = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.clearUpdatedIndex = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesInvoices.prototype.hasUpdatedIndex = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional uint64 pay_index = 11;
 * @return {number}
 */
proto.cln.ListinvoicesInvoices.prototype.getPayIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.setPayIndex = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.clearPayIndex = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesInvoices.prototype.hasPayIndex = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Amount amount_received_msat = 12;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListinvoicesInvoices.prototype.getAmountReceivedMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 12));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListinvoicesInvoices} returns this
*/
proto.cln.ListinvoicesInvoices.prototype.setAmountReceivedMsat = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.clearAmountReceivedMsat = function() {
  return this.setAmountReceivedMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesInvoices.prototype.hasAmountReceivedMsat = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional uint64 paid_at = 13;
 * @return {number}
 */
proto.cln.ListinvoicesInvoices.prototype.getPaidAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.setPaidAt = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.clearPaidAt = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesInvoices.prototype.hasPaidAt = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional ListinvoicesInvoicesPaid_outpoint paid_outpoint = 18;
 * @return {?proto.cln.ListinvoicesInvoicesPaid_outpoint}
 */
proto.cln.ListinvoicesInvoices.prototype.getPaidOutpoint = function() {
  return /** @type{?proto.cln.ListinvoicesInvoicesPaid_outpoint} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListinvoicesInvoicesPaid_outpoint, 18));
};


/**
 * @param {?proto.cln.ListinvoicesInvoicesPaid_outpoint|undefined} value
 * @return {!proto.cln.ListinvoicesInvoices} returns this
*/
proto.cln.ListinvoicesInvoices.prototype.setPaidOutpoint = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.clearPaidOutpoint = function() {
  return this.setPaidOutpoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesInvoices.prototype.hasPaidOutpoint = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional bytes payment_preimage = 14;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListinvoicesInvoices.prototype.getPaymentPreimage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * optional bytes payment_preimage = 14;
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {string}
 */
proto.cln.ListinvoicesInvoices.prototype.getPaymentPreimage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentPreimage()));
};


/**
 * optional bytes payment_preimage = 14;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {!Uint8Array}
 */
proto.cln.ListinvoicesInvoices.prototype.getPaymentPreimage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentPreimage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.setPaymentPreimage = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicesInvoices} returns this
 */
proto.cln.ListinvoicesInvoices.prototype.clearPaymentPreimage = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesInvoices.prototype.hasPaymentPreimage = function() {
  return jspb.Message.getField(this, 14) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListinvoicesInvoicesPaid_outpoint.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListinvoicesInvoicesPaid_outpoint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListinvoicesInvoicesPaid_outpoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListinvoicesInvoicesPaid_outpoint.toObject = function(includeInstance, msg) {
  var f, obj = {
    txid: msg.getTxid_asB64(),
    outnum: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListinvoicesInvoicesPaid_outpoint}
 */
proto.cln.ListinvoicesInvoicesPaid_outpoint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListinvoicesInvoicesPaid_outpoint;
  return proto.cln.ListinvoicesInvoicesPaid_outpoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListinvoicesInvoicesPaid_outpoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListinvoicesInvoicesPaid_outpoint}
 */
proto.cln.ListinvoicesInvoicesPaid_outpoint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOutnum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListinvoicesInvoicesPaid_outpoint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListinvoicesInvoicesPaid_outpoint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListinvoicesInvoicesPaid_outpoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListinvoicesInvoicesPaid_outpoint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional bytes txid = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListinvoicesInvoicesPaid_outpoint.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes txid = 1;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.ListinvoicesInvoicesPaid_outpoint.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.ListinvoicesInvoicesPaid_outpoint.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListinvoicesInvoicesPaid_outpoint} returns this
 */
proto.cln.ListinvoicesInvoicesPaid_outpoint.prototype.setTxid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicesInvoicesPaid_outpoint} returns this
 */
proto.cln.ListinvoicesInvoicesPaid_outpoint.prototype.clearTxid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesInvoicesPaid_outpoint.prototype.hasTxid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 outnum = 2;
 * @return {number}
 */
proto.cln.ListinvoicesInvoicesPaid_outpoint.prototype.getOutnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListinvoicesInvoicesPaid_outpoint} returns this
 */
proto.cln.ListinvoicesInvoicesPaid_outpoint.prototype.setOutnum = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListinvoicesInvoicesPaid_outpoint} returns this
 */
proto.cln.ListinvoicesInvoicesPaid_outpoint.prototype.clearOutnum = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListinvoicesInvoicesPaid_outpoint.prototype.hasOutnum = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.SendonionRequest.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SendonionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SendonionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SendonionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendonionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    onion: msg.getOnion_asB64(),
    firstHop: (f = msg.getFirstHop()) && proto.cln.SendonionFirst_hop.toObject(includeInstance, f),
    paymentHash: msg.getPaymentHash_asB64(),
    label: jspb.Message.getFieldWithDefault(msg, 4, ""),
    sharedSecretsList: msg.getSharedSecretsList_asB64(),
    partid: jspb.Message.getFieldWithDefault(msg, 6, 0),
    bolt11: jspb.Message.getFieldWithDefault(msg, 7, ""),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    destination: msg.getDestination_asB64(),
    localinvreqid: msg.getLocalinvreqid_asB64(),
    groupid: jspb.Message.getFieldWithDefault(msg, 11, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SendonionRequest}
 */
proto.cln.SendonionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SendonionRequest;
  return proto.cln.SendonionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SendonionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SendonionRequest}
 */
proto.cln.SendonionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOnion(value);
      break;
    case 2:
      var value = new proto.cln.SendonionFirst_hop;
      reader.readMessage(value,proto.cln.SendonionFirst_hop.deserializeBinaryFromReader);
      msg.setFirstHop(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addSharedSecrets(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPartid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 12:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 9:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDestination(value);
      break;
    case 13:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setLocalinvreqid(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGroupid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SendonionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SendonionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SendonionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendonionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOnion_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getFirstHop();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cln.SendonionFirst_hop.serializeBinaryToWriter
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSharedSecretsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBytes(
      9,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBytes(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint64(
      11,
      f
    );
  }
};


/**
 * optional bytes onion = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendonionRequest.prototype.getOnion = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes onion = 1;
 * This is a type-conversion wrapper around `getOnion()`
 * @return {string}
 */
proto.cln.SendonionRequest.prototype.getOnion_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOnion()));
};


/**
 * optional bytes onion = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOnion()`
 * @return {!Uint8Array}
 */
proto.cln.SendonionRequest.prototype.getOnion_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOnion()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.setOnion = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional SendonionFirst_hop first_hop = 2;
 * @return {?proto.cln.SendonionFirst_hop}
 */
proto.cln.SendonionRequest.prototype.getFirstHop = function() {
  return /** @type{?proto.cln.SendonionFirst_hop} */ (
    jspb.Message.getWrapperField(this, proto.cln.SendonionFirst_hop, 2));
};


/**
 * @param {?proto.cln.SendonionFirst_hop|undefined} value
 * @return {!proto.cln.SendonionRequest} returns this
*/
proto.cln.SendonionRequest.prototype.setFirstHop = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.clearFirstHop = function() {
  return this.setFirstHop(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionRequest.prototype.hasFirstHop = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes payment_hash = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendonionRequest.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes payment_hash = 3;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.SendonionRequest.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.SendonionRequest.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional string label = 4;
 * @return {string}
 */
proto.cln.SendonionRequest.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.setLabel = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.clearLabel = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionRequest.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated bytes shared_secrets = 5;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.cln.SendonionRequest.prototype.getSharedSecretsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * repeated bytes shared_secrets = 5;
 * This is a type-conversion wrapper around `getSharedSecretsList()`
 * @return {!Array<string>}
 */
proto.cln.SendonionRequest.prototype.getSharedSecretsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getSharedSecretsList()));
};


/**
 * repeated bytes shared_secrets = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSharedSecretsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.cln.SendonionRequest.prototype.getSharedSecretsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getSharedSecretsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.setSharedSecretsList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.addSharedSecrets = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.clearSharedSecretsList = function() {
  return this.setSharedSecretsList([]);
};


/**
 * optional uint32 partid = 6;
 * @return {number}
 */
proto.cln.SendonionRequest.prototype.getPartid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.setPartid = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.clearPartid = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionRequest.prototype.hasPartid = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string bolt11 = 7;
 * @return {string}
 */
proto.cln.SendonionRequest.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.setBolt11 = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.clearBolt11 = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionRequest.prototype.hasBolt11 = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Amount amount_msat = 12;
 * @return {?proto.cln.Amount}
 */
proto.cln.SendonionRequest.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 12));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.SendonionRequest} returns this
*/
proto.cln.SendonionRequest.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionRequest.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bytes destination = 9;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendonionRequest.prototype.getDestination = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * optional bytes destination = 9;
 * This is a type-conversion wrapper around `getDestination()`
 * @return {string}
 */
proto.cln.SendonionRequest.prototype.getDestination_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDestination()));
};


/**
 * optional bytes destination = 9;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDestination()`
 * @return {!Uint8Array}
 */
proto.cln.SendonionRequest.prototype.getDestination_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDestination()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.setDestination = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.clearDestination = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionRequest.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bytes localinvreqid = 13;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendonionRequest.prototype.getLocalinvreqid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * optional bytes localinvreqid = 13;
 * This is a type-conversion wrapper around `getLocalinvreqid()`
 * @return {string}
 */
proto.cln.SendonionRequest.prototype.getLocalinvreqid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getLocalinvreqid()));
};


/**
 * optional bytes localinvreqid = 13;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getLocalinvreqid()`
 * @return {!Uint8Array}
 */
proto.cln.SendonionRequest.prototype.getLocalinvreqid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getLocalinvreqid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.setLocalinvreqid = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.clearLocalinvreqid = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionRequest.prototype.hasLocalinvreqid = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional uint64 groupid = 11;
 * @return {number}
 */
proto.cln.SendonionRequest.prototype.getGroupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.setGroupid = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendonionRequest} returns this
 */
proto.cln.SendonionRequest.prototype.clearGroupid = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionRequest.prototype.hasGroupid = function() {
  return jspb.Message.getField(this, 11) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SendonionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SendonionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SendonionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendonionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    createdIndex: jspb.Message.getFieldWithDefault(msg, 14, 0),
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    paymentHash: msg.getPaymentHash_asB64(),
    status: jspb.Message.getFieldWithDefault(msg, 3, 0),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    destination: msg.getDestination_asB64(),
    createdAt: jspb.Message.getFieldWithDefault(msg, 6, 0),
    amountSentMsat: (f = msg.getAmountSentMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    label: jspb.Message.getFieldWithDefault(msg, 8, ""),
    bolt11: jspb.Message.getFieldWithDefault(msg, 9, ""),
    bolt12: jspb.Message.getFieldWithDefault(msg, 10, ""),
    partid: jspb.Message.getFieldWithDefault(msg, 13, 0),
    updatedIndex: jspb.Message.getFieldWithDefault(msg, 15, 0),
    paymentPreimage: msg.getPaymentPreimage_asB64(),
    message: jspb.Message.getFieldWithDefault(msg, 12, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SendonionResponse}
 */
proto.cln.SendonionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SendonionResponse;
  return proto.cln.SendonionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SendonionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SendonionResponse}
 */
proto.cln.SendonionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 14:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedIndex(value);
      break;
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 3:
      var value = /** @type {!proto.cln.SendonionResponse.SendonionStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDestination(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedAt(value);
      break;
    case 7:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountSentMsat(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt12(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPartid(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpdatedIndex(value);
      break;
    case 11:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentPreimage(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SendonionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SendonionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SendonionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendonionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeUint64(
      14,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getAmountSentMsat();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeUint64(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint64(
      15,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeBytes(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.SendonionResponse.SendonionStatus = {
  PENDING: 0,
  COMPLETE: 1
};

/**
 * optional uint64 created_index = 14;
 * @return {number}
 */
proto.cln.SendonionResponse.prototype.getCreatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.setCreatedIndex = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.clearCreatedIndex = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionResponse.prototype.hasCreatedIndex = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.cln.SendonionResponse.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bytes payment_hash = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendonionResponse.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes payment_hash = 2;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.SendonionResponse.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.SendonionResponse.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional SendonionStatus status = 3;
 * @return {!proto.cln.SendonionResponse.SendonionStatus}
 */
proto.cln.SendonionResponse.prototype.getStatus = function() {
  return /** @type {!proto.cln.SendonionResponse.SendonionStatus} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.cln.SendonionResponse.SendonionStatus} value
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional Amount amount_msat = 4;
 * @return {?proto.cln.Amount}
 */
proto.cln.SendonionResponse.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 4));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.SendonionResponse} returns this
*/
proto.cln.SendonionResponse.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionResponse.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bytes destination = 5;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendonionResponse.prototype.getDestination = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes destination = 5;
 * This is a type-conversion wrapper around `getDestination()`
 * @return {string}
 */
proto.cln.SendonionResponse.prototype.getDestination_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDestination()));
};


/**
 * optional bytes destination = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDestination()`
 * @return {!Uint8Array}
 */
proto.cln.SendonionResponse.prototype.getDestination_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDestination()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.setDestination = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.clearDestination = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionResponse.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint64 created_at = 6;
 * @return {number}
 */
proto.cln.SendonionResponse.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional Amount amount_sent_msat = 7;
 * @return {?proto.cln.Amount}
 */
proto.cln.SendonionResponse.prototype.getAmountSentMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 7));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.SendonionResponse} returns this
*/
proto.cln.SendonionResponse.prototype.setAmountSentMsat = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.clearAmountSentMsat = function() {
  return this.setAmountSentMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionResponse.prototype.hasAmountSentMsat = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string label = 8;
 * @return {string}
 */
proto.cln.SendonionResponse.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.setLabel = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.clearLabel = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionResponse.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string bolt11 = 9;
 * @return {string}
 */
proto.cln.SendonionResponse.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.setBolt11 = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.clearBolt11 = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionResponse.prototype.hasBolt11 = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string bolt12 = 10;
 * @return {string}
 */
proto.cln.SendonionResponse.prototype.getBolt12 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.setBolt12 = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.clearBolt12 = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionResponse.prototype.hasBolt12 = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint64 partid = 13;
 * @return {number}
 */
proto.cln.SendonionResponse.prototype.getPartid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.setPartid = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.clearPartid = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionResponse.prototype.hasPartid = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional uint64 updated_index = 15;
 * @return {number}
 */
proto.cln.SendonionResponse.prototype.getUpdatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.setUpdatedIndex = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.clearUpdatedIndex = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionResponse.prototype.hasUpdatedIndex = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional bytes payment_preimage = 11;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendonionResponse.prototype.getPaymentPreimage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * optional bytes payment_preimage = 11;
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {string}
 */
proto.cln.SendonionResponse.prototype.getPaymentPreimage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentPreimage()));
};


/**
 * optional bytes payment_preimage = 11;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {!Uint8Array}
 */
proto.cln.SendonionResponse.prototype.getPaymentPreimage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentPreimage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.setPaymentPreimage = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.clearPaymentPreimage = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionResponse.prototype.hasPaymentPreimage = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string message = 12;
 * @return {string}
 */
proto.cln.SendonionResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.setMessage = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendonionResponse} returns this
 */
proto.cln.SendonionResponse.prototype.clearMessage = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionResponse.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 12) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SendonionFirst_hop.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SendonionFirst_hop.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SendonionFirst_hop} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendonionFirst_hop.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64(),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    delay: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SendonionFirst_hop}
 */
proto.cln.SendonionFirst_hop.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SendonionFirst_hop;
  return proto.cln.SendonionFirst_hop.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SendonionFirst_hop} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SendonionFirst_hop}
 */
proto.cln.SendonionFirst_hop.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    case 2:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDelay(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SendonionFirst_hop.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SendonionFirst_hop.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SendonionFirst_hop} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendonionFirst_hop.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getDelay();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional bytes id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendonionFirst_hop.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes id = 1;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.cln.SendonionFirst_hop.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.cln.SendonionFirst_hop.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendonionFirst_hop} returns this
 */
proto.cln.SendonionFirst_hop.prototype.setId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional Amount amount_msat = 2;
 * @return {?proto.cln.Amount}
 */
proto.cln.SendonionFirst_hop.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 2));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.SendonionFirst_hop} returns this
*/
proto.cln.SendonionFirst_hop.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.SendonionFirst_hop} returns this
 */
proto.cln.SendonionFirst_hop.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendonionFirst_hop.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 delay = 3;
 * @return {number}
 */
proto.cln.SendonionFirst_hop.prototype.getDelay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SendonionFirst_hop} returns this
 */
proto.cln.SendonionFirst_hop.prototype.setDelay = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListsendpaysRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListsendpaysRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListsendpaysRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListsendpaysRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    bolt11: jspb.Message.getFieldWithDefault(msg, 1, ""),
    paymentHash: msg.getPaymentHash_asB64(),
    status: jspb.Message.getFieldWithDefault(msg, 3, 0),
    index: jspb.Message.getFieldWithDefault(msg, 4, 0),
    start: jspb.Message.getFieldWithDefault(msg, 5, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListsendpaysRequest}
 */
proto.cln.ListsendpaysRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListsendpaysRequest;
  return proto.cln.ListsendpaysRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListsendpaysRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListsendpaysRequest}
 */
proto.cln.ListsendpaysRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 3:
      var value = /** @type {!proto.cln.ListsendpaysRequest.ListsendpaysStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 4:
      var value = /** @type {!proto.cln.ListsendpaysRequest.ListsendpaysIndex} */ (reader.readEnum());
      msg.setIndex(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStart(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListsendpaysRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListsendpaysRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListsendpaysRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListsendpaysRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = /** @type {!proto.cln.ListsendpaysRequest.ListsendpaysStatus} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {!proto.cln.ListsendpaysRequest.ListsendpaysIndex} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ListsendpaysRequest.ListsendpaysStatus = {
  PENDING: 0,
  COMPLETE: 1,
  FAILED: 2
};

/**
 * @enum {number}
 */
proto.cln.ListsendpaysRequest.ListsendpaysIndex = {
  CREATED: 0,
  UPDATED: 1
};

/**
 * optional string bolt11 = 1;
 * @return {string}
 */
proto.cln.ListsendpaysRequest.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListsendpaysRequest} returns this
 */
proto.cln.ListsendpaysRequest.prototype.setBolt11 = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListsendpaysRequest} returns this
 */
proto.cln.ListsendpaysRequest.prototype.clearBolt11 = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListsendpaysRequest.prototype.hasBolt11 = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes payment_hash = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListsendpaysRequest.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes payment_hash = 2;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.ListsendpaysRequest.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.ListsendpaysRequest.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListsendpaysRequest} returns this
 */
proto.cln.ListsendpaysRequest.prototype.setPaymentHash = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListsendpaysRequest} returns this
 */
proto.cln.ListsendpaysRequest.prototype.clearPaymentHash = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListsendpaysRequest.prototype.hasPaymentHash = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ListsendpaysStatus status = 3;
 * @return {!proto.cln.ListsendpaysRequest.ListsendpaysStatus}
 */
proto.cln.ListsendpaysRequest.prototype.getStatus = function() {
  return /** @type {!proto.cln.ListsendpaysRequest.ListsendpaysStatus} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.cln.ListsendpaysRequest.ListsendpaysStatus} value
 * @return {!proto.cln.ListsendpaysRequest} returns this
 */
proto.cln.ListsendpaysRequest.prototype.setStatus = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListsendpaysRequest} returns this
 */
proto.cln.ListsendpaysRequest.prototype.clearStatus = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListsendpaysRequest.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ListsendpaysIndex index = 4;
 * @return {!proto.cln.ListsendpaysRequest.ListsendpaysIndex}
 */
proto.cln.ListsendpaysRequest.prototype.getIndex = function() {
  return /** @type {!proto.cln.ListsendpaysRequest.ListsendpaysIndex} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.cln.ListsendpaysRequest.ListsendpaysIndex} value
 * @return {!proto.cln.ListsendpaysRequest} returns this
 */
proto.cln.ListsendpaysRequest.prototype.setIndex = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListsendpaysRequest} returns this
 */
proto.cln.ListsendpaysRequest.prototype.clearIndex = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListsendpaysRequest.prototype.hasIndex = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint64 start = 5;
 * @return {number}
 */
proto.cln.ListsendpaysRequest.prototype.getStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListsendpaysRequest} returns this
 */
proto.cln.ListsendpaysRequest.prototype.setStart = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListsendpaysRequest} returns this
 */
proto.cln.ListsendpaysRequest.prototype.clearStart = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListsendpaysRequest.prototype.hasStart = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 limit = 6;
 * @return {number}
 */
proto.cln.ListsendpaysRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListsendpaysRequest} returns this
 */
proto.cln.ListsendpaysRequest.prototype.setLimit = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListsendpaysRequest} returns this
 */
proto.cln.ListsendpaysRequest.prototype.clearLimit = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListsendpaysRequest.prototype.hasLimit = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListsendpaysResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListsendpaysResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListsendpaysResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListsendpaysResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListsendpaysResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentsList: jspb.Message.toObjectList(msg.getPaymentsList(),
    proto.cln.ListsendpaysPayments.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListsendpaysResponse}
 */
proto.cln.ListsendpaysResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListsendpaysResponse;
  return proto.cln.ListsendpaysResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListsendpaysResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListsendpaysResponse}
 */
proto.cln.ListsendpaysResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.ListsendpaysPayments;
      reader.readMessage(value,proto.cln.ListsendpaysPayments.deserializeBinaryFromReader);
      msg.addPayments(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListsendpaysResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListsendpaysResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListsendpaysResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListsendpaysResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.ListsendpaysPayments.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ListsendpaysPayments payments = 1;
 * @return {!Array<!proto.cln.ListsendpaysPayments>}
 */
proto.cln.ListsendpaysResponse.prototype.getPaymentsList = function() {
  return /** @type{!Array<!proto.cln.ListsendpaysPayments>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListsendpaysPayments, 1));
};


/**
 * @param {!Array<!proto.cln.ListsendpaysPayments>} value
 * @return {!proto.cln.ListsendpaysResponse} returns this
*/
proto.cln.ListsendpaysResponse.prototype.setPaymentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.ListsendpaysPayments=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListsendpaysPayments}
 */
proto.cln.ListsendpaysResponse.prototype.addPayments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.ListsendpaysPayments, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListsendpaysResponse} returns this
 */
proto.cln.ListsendpaysResponse.prototype.clearPaymentsList = function() {
  return this.setPaymentsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListsendpaysPayments.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListsendpaysPayments.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListsendpaysPayments} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListsendpaysPayments.toObject = function(includeInstance, msg) {
  var f, obj = {
    createdIndex: jspb.Message.getFieldWithDefault(msg, 16, 0),
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    groupid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    partid: jspb.Message.getFieldWithDefault(msg, 15, 0),
    paymentHash: msg.getPaymentHash_asB64(),
    updatedIndex: jspb.Message.getFieldWithDefault(msg, 17, 0),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    destination: msg.getDestination_asB64(),
    createdAt: jspb.Message.getFieldWithDefault(msg, 7, 0),
    amountSentMsat: (f = msg.getAmountSentMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    label: jspb.Message.getFieldWithDefault(msg, 9, ""),
    bolt11: jspb.Message.getFieldWithDefault(msg, 10, ""),
    description: jspb.Message.getFieldWithDefault(msg, 14, ""),
    bolt12: jspb.Message.getFieldWithDefault(msg, 11, ""),
    paymentPreimage: msg.getPaymentPreimage_asB64(),
    erroronion: msg.getErroronion_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListsendpaysPayments}
 */
proto.cln.ListsendpaysPayments.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListsendpaysPayments;
  return proto.cln.ListsendpaysPayments.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListsendpaysPayments} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListsendpaysPayments}
 */
proto.cln.ListsendpaysPayments.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 16:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedIndex(value);
      break;
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGroupid(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPartid(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpdatedIndex(value);
      break;
    case 4:
      var value = /** @type {!proto.cln.ListsendpaysPayments.ListsendpaysPaymentsStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 5:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDestination(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedAt(value);
      break;
    case 8:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountSentMsat(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt12(value);
      break;
    case 12:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentPreimage(value);
      break;
    case 13:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setErroronion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListsendpaysPayments.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListsendpaysPayments.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListsendpaysPayments} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListsendpaysPayments.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint64(
      16,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getGroupid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint64(
      15,
      f
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeUint64(
      17,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getAmountSentMsat();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBytes(
      12,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBytes(
      13,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ListsendpaysPayments.ListsendpaysPaymentsStatus = {
  PENDING: 0,
  FAILED: 1,
  COMPLETE: 2
};

/**
 * optional uint64 created_index = 16;
 * @return {number}
 */
proto.cln.ListsendpaysPayments.prototype.getCreatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.setCreatedIndex = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.clearCreatedIndex = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListsendpaysPayments.prototype.hasCreatedIndex = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.cln.ListsendpaysPayments.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 groupid = 2;
 * @return {number}
 */
proto.cln.ListsendpaysPayments.prototype.getGroupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.setGroupid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 partid = 15;
 * @return {number}
 */
proto.cln.ListsendpaysPayments.prototype.getPartid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.setPartid = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.clearPartid = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListsendpaysPayments.prototype.hasPartid = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional bytes payment_hash = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListsendpaysPayments.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes payment_hash = 3;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.ListsendpaysPayments.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.ListsendpaysPayments.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional uint64 updated_index = 17;
 * @return {number}
 */
proto.cln.ListsendpaysPayments.prototype.getUpdatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.setUpdatedIndex = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.clearUpdatedIndex = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListsendpaysPayments.prototype.hasUpdatedIndex = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional ListsendpaysPaymentsStatus status = 4;
 * @return {!proto.cln.ListsendpaysPayments.ListsendpaysPaymentsStatus}
 */
proto.cln.ListsendpaysPayments.prototype.getStatus = function() {
  return /** @type {!proto.cln.ListsendpaysPayments.ListsendpaysPaymentsStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.cln.ListsendpaysPayments.ListsendpaysPaymentsStatus} value
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional Amount amount_msat = 5;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListsendpaysPayments.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 5));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListsendpaysPayments} returns this
*/
proto.cln.ListsendpaysPayments.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListsendpaysPayments.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bytes destination = 6;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListsendpaysPayments.prototype.getDestination = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes destination = 6;
 * This is a type-conversion wrapper around `getDestination()`
 * @return {string}
 */
proto.cln.ListsendpaysPayments.prototype.getDestination_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDestination()));
};


/**
 * optional bytes destination = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDestination()`
 * @return {!Uint8Array}
 */
proto.cln.ListsendpaysPayments.prototype.getDestination_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDestination()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.setDestination = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.clearDestination = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListsendpaysPayments.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 created_at = 7;
 * @return {number}
 */
proto.cln.ListsendpaysPayments.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional Amount amount_sent_msat = 8;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListsendpaysPayments.prototype.getAmountSentMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 8));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListsendpaysPayments} returns this
*/
proto.cln.ListsendpaysPayments.prototype.setAmountSentMsat = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.clearAmountSentMsat = function() {
  return this.setAmountSentMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListsendpaysPayments.prototype.hasAmountSentMsat = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string label = 9;
 * @return {string}
 */
proto.cln.ListsendpaysPayments.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.setLabel = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.clearLabel = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListsendpaysPayments.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string bolt11 = 10;
 * @return {string}
 */
proto.cln.ListsendpaysPayments.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.setBolt11 = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.clearBolt11 = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListsendpaysPayments.prototype.hasBolt11 = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string description = 14;
 * @return {string}
 */
proto.cln.ListsendpaysPayments.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListsendpaysPayments.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string bolt12 = 11;
 * @return {string}
 */
proto.cln.ListsendpaysPayments.prototype.getBolt12 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.setBolt12 = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.clearBolt12 = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListsendpaysPayments.prototype.hasBolt12 = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bytes payment_preimage = 12;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListsendpaysPayments.prototype.getPaymentPreimage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * optional bytes payment_preimage = 12;
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {string}
 */
proto.cln.ListsendpaysPayments.prototype.getPaymentPreimage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentPreimage()));
};


/**
 * optional bytes payment_preimage = 12;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {!Uint8Array}
 */
proto.cln.ListsendpaysPayments.prototype.getPaymentPreimage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentPreimage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.setPaymentPreimage = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.clearPaymentPreimage = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListsendpaysPayments.prototype.hasPaymentPreimage = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bytes erroronion = 13;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListsendpaysPayments.prototype.getErroronion = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * optional bytes erroronion = 13;
 * This is a type-conversion wrapper around `getErroronion()`
 * @return {string}
 */
proto.cln.ListsendpaysPayments.prototype.getErroronion_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getErroronion()));
};


/**
 * optional bytes erroronion = 13;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getErroronion()`
 * @return {!Uint8Array}
 */
proto.cln.ListsendpaysPayments.prototype.getErroronion_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getErroronion()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.setErroronion = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListsendpaysPayments} returns this
 */
proto.cln.ListsendpaysPayments.prototype.clearErroronion = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListsendpaysPayments.prototype.hasErroronion = function() {
  return jspb.Message.getField(this, 13) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListtransactionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListtransactionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListtransactionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListtransactionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListtransactionsRequest}
 */
proto.cln.ListtransactionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListtransactionsRequest;
  return proto.cln.ListtransactionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListtransactionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListtransactionsRequest}
 */
proto.cln.ListtransactionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListtransactionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListtransactionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListtransactionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListtransactionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListtransactionsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListtransactionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListtransactionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListtransactionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListtransactionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    transactionsList: jspb.Message.toObjectList(msg.getTransactionsList(),
    proto.cln.ListtransactionsTransactions.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListtransactionsResponse}
 */
proto.cln.ListtransactionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListtransactionsResponse;
  return proto.cln.ListtransactionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListtransactionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListtransactionsResponse}
 */
proto.cln.ListtransactionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.ListtransactionsTransactions;
      reader.readMessage(value,proto.cln.ListtransactionsTransactions.deserializeBinaryFromReader);
      msg.addTransactions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListtransactionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListtransactionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListtransactionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListtransactionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransactionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.ListtransactionsTransactions.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ListtransactionsTransactions transactions = 1;
 * @return {!Array<!proto.cln.ListtransactionsTransactions>}
 */
proto.cln.ListtransactionsResponse.prototype.getTransactionsList = function() {
  return /** @type{!Array<!proto.cln.ListtransactionsTransactions>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListtransactionsTransactions, 1));
};


/**
 * @param {!Array<!proto.cln.ListtransactionsTransactions>} value
 * @return {!proto.cln.ListtransactionsResponse} returns this
*/
proto.cln.ListtransactionsResponse.prototype.setTransactionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.ListtransactionsTransactions=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListtransactionsTransactions}
 */
proto.cln.ListtransactionsResponse.prototype.addTransactions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.ListtransactionsTransactions, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListtransactionsResponse} returns this
 */
proto.cln.ListtransactionsResponse.prototype.clearTransactionsList = function() {
  return this.setTransactionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListtransactionsTransactions.repeatedFields_ = [9,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListtransactionsTransactions.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListtransactionsTransactions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListtransactionsTransactions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListtransactionsTransactions.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: msg.getHash_asB64(),
    rawtx: msg.getRawtx_asB64(),
    blockheight: jspb.Message.getFieldWithDefault(msg, 3, 0),
    txindex: jspb.Message.getFieldWithDefault(msg, 4, 0),
    locktime: jspb.Message.getFieldWithDefault(msg, 7, 0),
    version: jspb.Message.getFieldWithDefault(msg, 8, 0),
    inputsList: jspb.Message.toObjectList(msg.getInputsList(),
    proto.cln.ListtransactionsTransactionsInputs.toObject, includeInstance),
    outputsList: jspb.Message.toObjectList(msg.getOutputsList(),
    proto.cln.ListtransactionsTransactionsOutputs.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListtransactionsTransactions}
 */
proto.cln.ListtransactionsTransactions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListtransactionsTransactions;
  return proto.cln.ListtransactionsTransactions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListtransactionsTransactions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListtransactionsTransactions}
 */
proto.cln.ListtransactionsTransactions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRawtx(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBlockheight(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTxindex(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLocktime(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVersion(value);
      break;
    case 9:
      var value = new proto.cln.ListtransactionsTransactionsInputs;
      reader.readMessage(value,proto.cln.ListtransactionsTransactionsInputs.deserializeBinaryFromReader);
      msg.addInputs(value);
      break;
    case 10:
      var value = new proto.cln.ListtransactionsTransactionsOutputs;
      reader.readMessage(value,proto.cln.ListtransactionsTransactionsOutputs.deserializeBinaryFromReader);
      msg.addOutputs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListtransactionsTransactions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListtransactionsTransactions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListtransactionsTransactions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListtransactionsTransactions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getRawtx_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getBlockheight();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getTxindex();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getLocktime();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getInputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.cln.ListtransactionsTransactionsInputs.serializeBinaryToWriter
    );
  }
  f = message.getOutputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.cln.ListtransactionsTransactionsOutputs.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListtransactionsTransactions.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes hash = 1;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.cln.ListtransactionsTransactions.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.cln.ListtransactionsTransactions.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListtransactionsTransactions} returns this
 */
proto.cln.ListtransactionsTransactions.prototype.setHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes rawtx = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListtransactionsTransactions.prototype.getRawtx = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes rawtx = 2;
 * This is a type-conversion wrapper around `getRawtx()`
 * @return {string}
 */
proto.cln.ListtransactionsTransactions.prototype.getRawtx_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getRawtx()));
};


/**
 * optional bytes rawtx = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRawtx()`
 * @return {!Uint8Array}
 */
proto.cln.ListtransactionsTransactions.prototype.getRawtx_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getRawtx()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListtransactionsTransactions} returns this
 */
proto.cln.ListtransactionsTransactions.prototype.setRawtx = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional uint32 blockheight = 3;
 * @return {number}
 */
proto.cln.ListtransactionsTransactions.prototype.getBlockheight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListtransactionsTransactions} returns this
 */
proto.cln.ListtransactionsTransactions.prototype.setBlockheight = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 txindex = 4;
 * @return {number}
 */
proto.cln.ListtransactionsTransactions.prototype.getTxindex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListtransactionsTransactions} returns this
 */
proto.cln.ListtransactionsTransactions.prototype.setTxindex = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 locktime = 7;
 * @return {number}
 */
proto.cln.ListtransactionsTransactions.prototype.getLocktime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListtransactionsTransactions} returns this
 */
proto.cln.ListtransactionsTransactions.prototype.setLocktime = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint32 version = 8;
 * @return {number}
 */
proto.cln.ListtransactionsTransactions.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListtransactionsTransactions} returns this
 */
proto.cln.ListtransactionsTransactions.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * repeated ListtransactionsTransactionsInputs inputs = 9;
 * @return {!Array<!proto.cln.ListtransactionsTransactionsInputs>}
 */
proto.cln.ListtransactionsTransactions.prototype.getInputsList = function() {
  return /** @type{!Array<!proto.cln.ListtransactionsTransactionsInputs>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListtransactionsTransactionsInputs, 9));
};


/**
 * @param {!Array<!proto.cln.ListtransactionsTransactionsInputs>} value
 * @return {!proto.cln.ListtransactionsTransactions} returns this
*/
proto.cln.ListtransactionsTransactions.prototype.setInputsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.cln.ListtransactionsTransactionsInputs=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListtransactionsTransactionsInputs}
 */
proto.cln.ListtransactionsTransactions.prototype.addInputs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.cln.ListtransactionsTransactionsInputs, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListtransactionsTransactions} returns this
 */
proto.cln.ListtransactionsTransactions.prototype.clearInputsList = function() {
  return this.setInputsList([]);
};


/**
 * repeated ListtransactionsTransactionsOutputs outputs = 10;
 * @return {!Array<!proto.cln.ListtransactionsTransactionsOutputs>}
 */
proto.cln.ListtransactionsTransactions.prototype.getOutputsList = function() {
  return /** @type{!Array<!proto.cln.ListtransactionsTransactionsOutputs>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListtransactionsTransactionsOutputs, 10));
};


/**
 * @param {!Array<!proto.cln.ListtransactionsTransactionsOutputs>} value
 * @return {!proto.cln.ListtransactionsTransactions} returns this
*/
proto.cln.ListtransactionsTransactions.prototype.setOutputsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.cln.ListtransactionsTransactionsOutputs=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListtransactionsTransactionsOutputs}
 */
proto.cln.ListtransactionsTransactions.prototype.addOutputs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.cln.ListtransactionsTransactionsOutputs, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListtransactionsTransactions} returns this
 */
proto.cln.ListtransactionsTransactions.prototype.clearOutputsList = function() {
  return this.setOutputsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListtransactionsTransactionsInputs.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListtransactionsTransactionsInputs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListtransactionsTransactionsInputs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListtransactionsTransactionsInputs.toObject = function(includeInstance, msg) {
  var f, obj = {
    txid: msg.getTxid_asB64(),
    index: jspb.Message.getFieldWithDefault(msg, 2, 0),
    sequence: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListtransactionsTransactionsInputs}
 */
proto.cln.ListtransactionsTransactionsInputs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListtransactionsTransactionsInputs;
  return proto.cln.ListtransactionsTransactionsInputs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListtransactionsTransactionsInputs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListtransactionsTransactionsInputs}
 */
proto.cln.ListtransactionsTransactionsInputs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIndex(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSequence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListtransactionsTransactionsInputs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListtransactionsTransactionsInputs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListtransactionsTransactionsInputs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListtransactionsTransactionsInputs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getIndex();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional bytes txid = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListtransactionsTransactionsInputs.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes txid = 1;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.ListtransactionsTransactionsInputs.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.ListtransactionsTransactionsInputs.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListtransactionsTransactionsInputs} returns this
 */
proto.cln.ListtransactionsTransactionsInputs.prototype.setTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint32 index = 2;
 * @return {number}
 */
proto.cln.ListtransactionsTransactionsInputs.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListtransactionsTransactionsInputs} returns this
 */
proto.cln.ListtransactionsTransactionsInputs.prototype.setIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 sequence = 3;
 * @return {number}
 */
proto.cln.ListtransactionsTransactionsInputs.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListtransactionsTransactionsInputs} returns this
 */
proto.cln.ListtransactionsTransactionsInputs.prototype.setSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListtransactionsTransactionsOutputs.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListtransactionsTransactionsOutputs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListtransactionsTransactionsOutputs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListtransactionsTransactionsOutputs.toObject = function(includeInstance, msg) {
  var f, obj = {
    index: jspb.Message.getFieldWithDefault(msg, 1, 0),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    scriptpubkey: msg.getScriptpubkey_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListtransactionsTransactionsOutputs}
 */
proto.cln.ListtransactionsTransactionsOutputs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListtransactionsTransactionsOutputs;
  return proto.cln.ListtransactionsTransactionsOutputs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListtransactionsTransactionsOutputs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListtransactionsTransactionsOutputs}
 */
proto.cln.ListtransactionsTransactionsOutputs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIndex(value);
      break;
    case 6:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setScriptpubkey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListtransactionsTransactionsOutputs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListtransactionsTransactionsOutputs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListtransactionsTransactionsOutputs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListtransactionsTransactionsOutputs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndex();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getScriptpubkey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional uint32 index = 1;
 * @return {number}
 */
proto.cln.ListtransactionsTransactionsOutputs.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListtransactionsTransactionsOutputs} returns this
 */
proto.cln.ListtransactionsTransactionsOutputs.prototype.setIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Amount amount_msat = 6;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListtransactionsTransactionsOutputs.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 6));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListtransactionsTransactionsOutputs} returns this
*/
proto.cln.ListtransactionsTransactionsOutputs.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListtransactionsTransactionsOutputs} returns this
 */
proto.cln.ListtransactionsTransactionsOutputs.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListtransactionsTransactionsOutputs.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bytes scriptPubKey = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListtransactionsTransactionsOutputs.prototype.getScriptpubkey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes scriptPubKey = 3;
 * This is a type-conversion wrapper around `getScriptpubkey()`
 * @return {string}
 */
proto.cln.ListtransactionsTransactionsOutputs.prototype.getScriptpubkey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getScriptpubkey()));
};


/**
 * optional bytes scriptPubKey = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getScriptpubkey()`
 * @return {!Uint8Array}
 */
proto.cln.ListtransactionsTransactionsOutputs.prototype.getScriptpubkey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getScriptpubkey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListtransactionsTransactionsOutputs} returns this
 */
proto.cln.ListtransactionsTransactionsOutputs.prototype.setScriptpubkey = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.PayRequest.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.PayRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.PayRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.PayRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PayRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    bolt11: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    label: jspb.Message.getFieldWithDefault(msg, 3, ""),
    riskfactor: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    maxfeepercent: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    retryFor: jspb.Message.getFieldWithDefault(msg, 5, 0),
    maxdelay: jspb.Message.getFieldWithDefault(msg, 6, 0),
    exemptfee: (f = msg.getExemptfee()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    localinvreqid: msg.getLocalinvreqid_asB64(),
    excludeList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    maxfee: (f = msg.getMaxfee()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    description: jspb.Message.getFieldWithDefault(msg, 12, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.PayRequest}
 */
proto.cln.PayRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.PayRequest;
  return proto.cln.PayRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.PayRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.PayRequest}
 */
proto.cln.PayRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 13:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRiskfactor(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaxfeepercent(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRetryFor(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxdelay(value);
      break;
    case 7:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setExemptfee(value);
      break;
    case 14:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setLocalinvreqid(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addExclude(value);
      break;
    case 11:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setMaxfee(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.PayRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.PayRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.PayRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PayRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBolt11();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getExemptfee();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeBytes(
      14,
      f
    );
  }
  f = message.getExcludeList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getMaxfee();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
};


/**
 * optional string bolt11 = 1;
 * @return {string}
 */
proto.cln.PayRequest.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.setBolt11 = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Amount amount_msat = 13;
 * @return {?proto.cln.Amount}
 */
proto.cln.PayRequest.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 13));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.PayRequest} returns this
*/
proto.cln.PayRequest.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PayRequest.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string label = 3;
 * @return {string}
 */
proto.cln.PayRequest.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.setLabel = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.clearLabel = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PayRequest.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double riskfactor = 8;
 * @return {number}
 */
proto.cln.PayRequest.prototype.getRiskfactor = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.setRiskfactor = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.clearRiskfactor = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PayRequest.prototype.hasRiskfactor = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional double maxfeepercent = 4;
 * @return {number}
 */
proto.cln.PayRequest.prototype.getMaxfeepercent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.setMaxfeepercent = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.clearMaxfeepercent = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PayRequest.prototype.hasMaxfeepercent = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 retry_for = 5;
 * @return {number}
 */
proto.cln.PayRequest.prototype.getRetryFor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.setRetryFor = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.clearRetryFor = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PayRequest.prototype.hasRetryFor = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 maxdelay = 6;
 * @return {number}
 */
proto.cln.PayRequest.prototype.getMaxdelay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.setMaxdelay = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.clearMaxdelay = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PayRequest.prototype.hasMaxdelay = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Amount exemptfee = 7;
 * @return {?proto.cln.Amount}
 */
proto.cln.PayRequest.prototype.getExemptfee = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 7));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.PayRequest} returns this
*/
proto.cln.PayRequest.prototype.setExemptfee = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.clearExemptfee = function() {
  return this.setExemptfee(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PayRequest.prototype.hasExemptfee = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bytes localinvreqid = 14;
 * @return {!(string|Uint8Array)}
 */
proto.cln.PayRequest.prototype.getLocalinvreqid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * optional bytes localinvreqid = 14;
 * This is a type-conversion wrapper around `getLocalinvreqid()`
 * @return {string}
 */
proto.cln.PayRequest.prototype.getLocalinvreqid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getLocalinvreqid()));
};


/**
 * optional bytes localinvreqid = 14;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getLocalinvreqid()`
 * @return {!Uint8Array}
 */
proto.cln.PayRequest.prototype.getLocalinvreqid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getLocalinvreqid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.setLocalinvreqid = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.clearLocalinvreqid = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PayRequest.prototype.hasLocalinvreqid = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * repeated string exclude = 10;
 * @return {!Array<string>}
 */
proto.cln.PayRequest.prototype.getExcludeList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.setExcludeList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.addExclude = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.clearExcludeList = function() {
  return this.setExcludeList([]);
};


/**
 * optional Amount maxfee = 11;
 * @return {?proto.cln.Amount}
 */
proto.cln.PayRequest.prototype.getMaxfee = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 11));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.PayRequest} returns this
*/
proto.cln.PayRequest.prototype.setMaxfee = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.clearMaxfee = function() {
  return this.setMaxfee(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PayRequest.prototype.hasMaxfee = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string description = 12;
 * @return {string}
 */
proto.cln.PayRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.PayRequest} returns this
 */
proto.cln.PayRequest.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PayRequest.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 12) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.PayResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.PayResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.PayResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PayResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentPreimage: msg.getPaymentPreimage_asB64(),
    destination: msg.getDestination_asB64(),
    paymentHash: msg.getPaymentHash_asB64(),
    createdAt: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    parts: jspb.Message.getFieldWithDefault(msg, 5, 0),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    amountSentMsat: (f = msg.getAmountSentMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    warningPartialCompletion: jspb.Message.getFieldWithDefault(msg, 8, ""),
    status: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.PayResponse}
 */
proto.cln.PayResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.PayResponse;
  return proto.cln.PayResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.PayResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.PayResponse}
 */
proto.cln.PayResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentPreimage(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDestination(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCreatedAt(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setParts(value);
      break;
    case 6:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 7:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountSentMsat(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningPartialCompletion(value);
      break;
    case 9:
      var value = /** @type {!proto.cln.PayResponse.PayStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.PayResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.PayResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.PayResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PayResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentPreimage_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getParts();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getAmountSentMsat();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.PayResponse.PayStatus = {
  COMPLETE: 0,
  PENDING: 1,
  FAILED: 2
};

/**
 * optional bytes payment_preimage = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.PayResponse.prototype.getPaymentPreimage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes payment_preimage = 1;
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {string}
 */
proto.cln.PayResponse.prototype.getPaymentPreimage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentPreimage()));
};


/**
 * optional bytes payment_preimage = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {!Uint8Array}
 */
proto.cln.PayResponse.prototype.getPaymentPreimage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentPreimage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.PayResponse} returns this
 */
proto.cln.PayResponse.prototype.setPaymentPreimage = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes destination = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.PayResponse.prototype.getDestination = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes destination = 2;
 * This is a type-conversion wrapper around `getDestination()`
 * @return {string}
 */
proto.cln.PayResponse.prototype.getDestination_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDestination()));
};


/**
 * optional bytes destination = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDestination()`
 * @return {!Uint8Array}
 */
proto.cln.PayResponse.prototype.getDestination_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDestination()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.PayResponse} returns this
 */
proto.cln.PayResponse.prototype.setDestination = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.PayResponse} returns this
 */
proto.cln.PayResponse.prototype.clearDestination = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PayResponse.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes payment_hash = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.PayResponse.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes payment_hash = 3;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.PayResponse.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.PayResponse.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.PayResponse} returns this
 */
proto.cln.PayResponse.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional double created_at = 4;
 * @return {number}
 */
proto.cln.PayResponse.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.cln.PayResponse} returns this
 */
proto.cln.PayResponse.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional uint32 parts = 5;
 * @return {number}
 */
proto.cln.PayResponse.prototype.getParts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.PayResponse} returns this
 */
proto.cln.PayResponse.prototype.setParts = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional Amount amount_msat = 6;
 * @return {?proto.cln.Amount}
 */
proto.cln.PayResponse.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 6));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.PayResponse} returns this
*/
proto.cln.PayResponse.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.PayResponse} returns this
 */
proto.cln.PayResponse.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PayResponse.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Amount amount_sent_msat = 7;
 * @return {?proto.cln.Amount}
 */
proto.cln.PayResponse.prototype.getAmountSentMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 7));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.PayResponse} returns this
*/
proto.cln.PayResponse.prototype.setAmountSentMsat = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.PayResponse} returns this
 */
proto.cln.PayResponse.prototype.clearAmountSentMsat = function() {
  return this.setAmountSentMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PayResponse.prototype.hasAmountSentMsat = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string warning_partial_completion = 8;
 * @return {string}
 */
proto.cln.PayResponse.prototype.getWarningPartialCompletion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.PayResponse} returns this
 */
proto.cln.PayResponse.prototype.setWarningPartialCompletion = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.PayResponse} returns this
 */
proto.cln.PayResponse.prototype.clearWarningPartialCompletion = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PayResponse.prototype.hasWarningPartialCompletion = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional PayStatus status = 9;
 * @return {!proto.cln.PayResponse.PayStatus}
 */
proto.cln.PayResponse.prototype.getStatus = function() {
  return /** @type {!proto.cln.PayResponse.PayStatus} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.cln.PayResponse.PayStatus} value
 * @return {!proto.cln.PayResponse} returns this
 */
proto.cln.PayResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListnodesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListnodesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListnodesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListnodesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListnodesRequest}
 */
proto.cln.ListnodesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListnodesRequest;
  return proto.cln.ListnodesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListnodesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListnodesRequest}
 */
proto.cln.ListnodesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListnodesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListnodesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListnodesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListnodesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListnodesRequest.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes id = 1;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.cln.ListnodesRequest.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.cln.ListnodesRequest.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListnodesRequest} returns this
 */
proto.cln.ListnodesRequest.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListnodesRequest} returns this
 */
proto.cln.ListnodesRequest.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListnodesRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListnodesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListnodesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListnodesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListnodesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListnodesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodesList: jspb.Message.toObjectList(msg.getNodesList(),
    proto.cln.ListnodesNodes.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListnodesResponse}
 */
proto.cln.ListnodesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListnodesResponse;
  return proto.cln.ListnodesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListnodesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListnodesResponse}
 */
proto.cln.ListnodesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.ListnodesNodes;
      reader.readMessage(value,proto.cln.ListnodesNodes.deserializeBinaryFromReader);
      msg.addNodes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListnodesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListnodesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListnodesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListnodesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.ListnodesNodes.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ListnodesNodes nodes = 1;
 * @return {!Array<!proto.cln.ListnodesNodes>}
 */
proto.cln.ListnodesResponse.prototype.getNodesList = function() {
  return /** @type{!Array<!proto.cln.ListnodesNodes>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListnodesNodes, 1));
};


/**
 * @param {!Array<!proto.cln.ListnodesNodes>} value
 * @return {!proto.cln.ListnodesResponse} returns this
*/
proto.cln.ListnodesResponse.prototype.setNodesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.ListnodesNodes=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListnodesNodes}
 */
proto.cln.ListnodesResponse.prototype.addNodes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.ListnodesNodes, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListnodesResponse} returns this
 */
proto.cln.ListnodesResponse.prototype.clearNodesList = function() {
  return this.setNodesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListnodesNodes.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListnodesNodes.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListnodesNodes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListnodesNodes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListnodesNodes.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeid: msg.getNodeid_asB64(),
    lastTimestamp: jspb.Message.getFieldWithDefault(msg, 2, 0),
    alias: jspb.Message.getFieldWithDefault(msg, 3, ""),
    color: msg.getColor_asB64(),
    features: msg.getFeatures_asB64(),
    addressesList: jspb.Message.toObjectList(msg.getAddressesList(),
    proto.cln.ListnodesNodesAddresses.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListnodesNodes}
 */
proto.cln.ListnodesNodes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListnodesNodes;
  return proto.cln.ListnodesNodes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListnodesNodes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListnodesNodes}
 */
proto.cln.ListnodesNodes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setNodeid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLastTimestamp(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlias(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setColor(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFeatures(value);
      break;
    case 6:
      var value = new proto.cln.ListnodesNodesAddresses;
      reader.readMessage(value,proto.cln.ListnodesNodesAddresses.deserializeBinaryFromReader);
      msg.addAddresses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListnodesNodes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListnodesNodes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListnodesNodes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListnodesNodes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getAddressesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.cln.ListnodesNodesAddresses.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes nodeid = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListnodesNodes.prototype.getNodeid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes nodeid = 1;
 * This is a type-conversion wrapper around `getNodeid()`
 * @return {string}
 */
proto.cln.ListnodesNodes.prototype.getNodeid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getNodeid()));
};


/**
 * optional bytes nodeid = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getNodeid()`
 * @return {!Uint8Array}
 */
proto.cln.ListnodesNodes.prototype.getNodeid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getNodeid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListnodesNodes} returns this
 */
proto.cln.ListnodesNodes.prototype.setNodeid = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint32 last_timestamp = 2;
 * @return {number}
 */
proto.cln.ListnodesNodes.prototype.getLastTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListnodesNodes} returns this
 */
proto.cln.ListnodesNodes.prototype.setLastTimestamp = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListnodesNodes} returns this
 */
proto.cln.ListnodesNodes.prototype.clearLastTimestamp = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListnodesNodes.prototype.hasLastTimestamp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string alias = 3;
 * @return {string}
 */
proto.cln.ListnodesNodes.prototype.getAlias = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListnodesNodes} returns this
 */
proto.cln.ListnodesNodes.prototype.setAlias = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListnodesNodes} returns this
 */
proto.cln.ListnodesNodes.prototype.clearAlias = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListnodesNodes.prototype.hasAlias = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bytes color = 4;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListnodesNodes.prototype.getColor = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes color = 4;
 * This is a type-conversion wrapper around `getColor()`
 * @return {string}
 */
proto.cln.ListnodesNodes.prototype.getColor_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getColor()));
};


/**
 * optional bytes color = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getColor()`
 * @return {!Uint8Array}
 */
proto.cln.ListnodesNodes.prototype.getColor_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getColor()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListnodesNodes} returns this
 */
proto.cln.ListnodesNodes.prototype.setColor = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListnodesNodes} returns this
 */
proto.cln.ListnodesNodes.prototype.clearColor = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListnodesNodes.prototype.hasColor = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bytes features = 5;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListnodesNodes.prototype.getFeatures = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes features = 5;
 * This is a type-conversion wrapper around `getFeatures()`
 * @return {string}
 */
proto.cln.ListnodesNodes.prototype.getFeatures_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFeatures()));
};


/**
 * optional bytes features = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFeatures()`
 * @return {!Uint8Array}
 */
proto.cln.ListnodesNodes.prototype.getFeatures_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFeatures()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListnodesNodes} returns this
 */
proto.cln.ListnodesNodes.prototype.setFeatures = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListnodesNodes} returns this
 */
proto.cln.ListnodesNodes.prototype.clearFeatures = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListnodesNodes.prototype.hasFeatures = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated ListnodesNodesAddresses addresses = 6;
 * @return {!Array<!proto.cln.ListnodesNodesAddresses>}
 */
proto.cln.ListnodesNodes.prototype.getAddressesList = function() {
  return /** @type{!Array<!proto.cln.ListnodesNodesAddresses>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListnodesNodesAddresses, 6));
};


/**
 * @param {!Array<!proto.cln.ListnodesNodesAddresses>} value
 * @return {!proto.cln.ListnodesNodes} returns this
*/
proto.cln.ListnodesNodes.prototype.setAddressesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.cln.ListnodesNodesAddresses=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListnodesNodesAddresses}
 */
proto.cln.ListnodesNodes.prototype.addAddresses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.cln.ListnodesNodesAddresses, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListnodesNodes} returns this
 */
proto.cln.ListnodesNodes.prototype.clearAddressesList = function() {
  return this.setAddressesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListnodesNodesAddresses.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListnodesNodesAddresses.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListnodesNodesAddresses} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListnodesNodesAddresses.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    port: jspb.Message.getFieldWithDefault(msg, 2, 0),
    address: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListnodesNodesAddresses}
 */
proto.cln.ListnodesNodesAddresses.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListnodesNodesAddresses;
  return proto.cln.ListnodesNodesAddresses.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListnodesNodesAddresses} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListnodesNodesAddresses}
 */
proto.cln.ListnodesNodesAddresses.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.ListnodesNodesAddresses.ListnodesNodesAddressesType} */ (reader.readEnum());
      msg.setItemType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListnodesNodesAddresses.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListnodesNodesAddresses.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListnodesNodesAddresses} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListnodesNodesAddresses.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getPort();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ListnodesNodesAddresses.ListnodesNodesAddressesType = {
  DNS: 0,
  IPV4: 1,
  IPV6: 2,
  TORV2: 3,
  TORV3: 4
};

/**
 * optional ListnodesNodesAddressesType item_type = 1;
 * @return {!proto.cln.ListnodesNodesAddresses.ListnodesNodesAddressesType}
 */
proto.cln.ListnodesNodesAddresses.prototype.getItemType = function() {
  return /** @type {!proto.cln.ListnodesNodesAddresses.ListnodesNodesAddressesType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.ListnodesNodesAddresses.ListnodesNodesAddressesType} value
 * @return {!proto.cln.ListnodesNodesAddresses} returns this
 */
proto.cln.ListnodesNodesAddresses.prototype.setItemType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint32 port = 2;
 * @return {number}
 */
proto.cln.ListnodesNodesAddresses.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListnodesNodesAddresses} returns this
 */
proto.cln.ListnodesNodesAddresses.prototype.setPort = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string address = 3;
 * @return {string}
 */
proto.cln.ListnodesNodesAddresses.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListnodesNodesAddresses} returns this
 */
proto.cln.ListnodesNodesAddresses.prototype.setAddress = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListnodesNodesAddresses} returns this
 */
proto.cln.ListnodesNodesAddresses.prototype.clearAddress = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListnodesNodesAddresses.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.WaitanyinvoiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.WaitanyinvoiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.WaitanyinvoiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitanyinvoiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    lastpayIndex: jspb.Message.getFieldWithDefault(msg, 1, 0),
    timeout: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.WaitanyinvoiceRequest}
 */
proto.cln.WaitanyinvoiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.WaitanyinvoiceRequest;
  return proto.cln.WaitanyinvoiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.WaitanyinvoiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.WaitanyinvoiceRequest}
 */
proto.cln.WaitanyinvoiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLastpayIndex(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTimeout(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.WaitanyinvoiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.WaitanyinvoiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.WaitanyinvoiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitanyinvoiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 lastpay_index = 1;
 * @return {number}
 */
proto.cln.WaitanyinvoiceRequest.prototype.getLastpayIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitanyinvoiceRequest} returns this
 */
proto.cln.WaitanyinvoiceRequest.prototype.setLastpayIndex = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitanyinvoiceRequest} returns this
 */
proto.cln.WaitanyinvoiceRequest.prototype.clearLastpayIndex = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitanyinvoiceRequest.prototype.hasLastpayIndex = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 timeout = 2;
 * @return {number}
 */
proto.cln.WaitanyinvoiceRequest.prototype.getTimeout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitanyinvoiceRequest} returns this
 */
proto.cln.WaitanyinvoiceRequest.prototype.setTimeout = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitanyinvoiceRequest} returns this
 */
proto.cln.WaitanyinvoiceRequest.prototype.clearTimeout = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitanyinvoiceRequest.prototype.hasTimeout = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.WaitanyinvoiceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.WaitanyinvoiceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.WaitanyinvoiceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitanyinvoiceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    paymentHash: msg.getPaymentHash_asB64(),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0),
    expiresAt: jspb.Message.getFieldWithDefault(msg, 5, 0),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    bolt11: jspb.Message.getFieldWithDefault(msg, 7, ""),
    bolt12: jspb.Message.getFieldWithDefault(msg, 8, ""),
    createdIndex: jspb.Message.getFieldWithDefault(msg, 13, 0),
    updatedIndex: jspb.Message.getFieldWithDefault(msg, 14, 0),
    payIndex: jspb.Message.getFieldWithDefault(msg, 9, 0),
    amountReceivedMsat: (f = msg.getAmountReceivedMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    paidAt: jspb.Message.getFieldWithDefault(msg, 11, 0),
    paidOutpoint: (f = msg.getPaidOutpoint()) && proto.cln.WaitanyinvoicePaid_outpoint.toObject(includeInstance, f),
    paymentPreimage: msg.getPaymentPreimage_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.WaitanyinvoiceResponse}
 */
proto.cln.WaitanyinvoiceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.WaitanyinvoiceResponse;
  return proto.cln.WaitanyinvoiceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.WaitanyinvoiceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.WaitanyinvoiceResponse}
 */
proto.cln.WaitanyinvoiceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 4:
      var value = /** @type {!proto.cln.WaitanyinvoiceResponse.WaitanyinvoiceStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExpiresAt(value);
      break;
    case 6:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt12(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedIndex(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpdatedIndex(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPayIndex(value);
      break;
    case 10:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountReceivedMsat(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPaidAt(value);
      break;
    case 15:
      var value = new proto.cln.WaitanyinvoicePaid_outpoint;
      reader.readMessage(value,proto.cln.WaitanyinvoicePaid_outpoint.deserializeBinaryFromReader);
      msg.setPaidOutpoint(value);
      break;
    case 12:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentPreimage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.WaitanyinvoiceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.WaitanyinvoiceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.WaitanyinvoiceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitanyinvoiceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getExpiresAt();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeUint64(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeUint64(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getAmountReceivedMsat();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = message.getPaidOutpoint();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.cln.WaitanyinvoicePaid_outpoint.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBytes(
      12,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.WaitanyinvoiceResponse.WaitanyinvoiceStatus = {
  PAID: 0,
  EXPIRED: 1
};

/**
 * optional string label = 1;
 * @return {string}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes payment_hash = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes payment_hash = 3;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional WaitanyinvoiceStatus status = 4;
 * @return {!proto.cln.WaitanyinvoiceResponse.WaitanyinvoiceStatus}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getStatus = function() {
  return /** @type {!proto.cln.WaitanyinvoiceResponse.WaitanyinvoiceStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.cln.WaitanyinvoiceResponse.WaitanyinvoiceStatus} value
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional uint64 expires_at = 5;
 * @return {number}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getExpiresAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.setExpiresAt = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional Amount amount_msat = 6;
 * @return {?proto.cln.Amount}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 6));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
*/
proto.cln.WaitanyinvoiceResponse.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitanyinvoiceResponse.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string bolt11 = 7;
 * @return {string}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.setBolt11 = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.clearBolt11 = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitanyinvoiceResponse.prototype.hasBolt11 = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string bolt12 = 8;
 * @return {string}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getBolt12 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.setBolt12 = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.clearBolt12 = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitanyinvoiceResponse.prototype.hasBolt12 = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint64 created_index = 13;
 * @return {number}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getCreatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.setCreatedIndex = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.clearCreatedIndex = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitanyinvoiceResponse.prototype.hasCreatedIndex = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional uint64 updated_index = 14;
 * @return {number}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getUpdatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.setUpdatedIndex = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.clearUpdatedIndex = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitanyinvoiceResponse.prototype.hasUpdatedIndex = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional uint64 pay_index = 9;
 * @return {number}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getPayIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.setPayIndex = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.clearPayIndex = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitanyinvoiceResponse.prototype.hasPayIndex = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Amount amount_received_msat = 10;
 * @return {?proto.cln.Amount}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getAmountReceivedMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 10));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
*/
proto.cln.WaitanyinvoiceResponse.prototype.setAmountReceivedMsat = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.clearAmountReceivedMsat = function() {
  return this.setAmountReceivedMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitanyinvoiceResponse.prototype.hasAmountReceivedMsat = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint64 paid_at = 11;
 * @return {number}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getPaidAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.setPaidAt = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.clearPaidAt = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitanyinvoiceResponse.prototype.hasPaidAt = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional WaitanyinvoicePaid_outpoint paid_outpoint = 15;
 * @return {?proto.cln.WaitanyinvoicePaid_outpoint}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getPaidOutpoint = function() {
  return /** @type{?proto.cln.WaitanyinvoicePaid_outpoint} */ (
    jspb.Message.getWrapperField(this, proto.cln.WaitanyinvoicePaid_outpoint, 15));
};


/**
 * @param {?proto.cln.WaitanyinvoicePaid_outpoint|undefined} value
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
*/
proto.cln.WaitanyinvoiceResponse.prototype.setPaidOutpoint = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.clearPaidOutpoint = function() {
  return this.setPaidOutpoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitanyinvoiceResponse.prototype.hasPaidOutpoint = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional bytes payment_preimage = 12;
 * @return {!(string|Uint8Array)}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getPaymentPreimage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * optional bytes payment_preimage = 12;
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {string}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getPaymentPreimage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentPreimage()));
};


/**
 * optional bytes payment_preimage = 12;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {!Uint8Array}
 */
proto.cln.WaitanyinvoiceResponse.prototype.getPaymentPreimage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentPreimage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.setPaymentPreimage = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitanyinvoiceResponse} returns this
 */
proto.cln.WaitanyinvoiceResponse.prototype.clearPaymentPreimage = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitanyinvoiceResponse.prototype.hasPaymentPreimage = function() {
  return jspb.Message.getField(this, 12) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.WaitanyinvoicePaid_outpoint.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.WaitanyinvoicePaid_outpoint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.WaitanyinvoicePaid_outpoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitanyinvoicePaid_outpoint.toObject = function(includeInstance, msg) {
  var f, obj = {
    txid: msg.getTxid_asB64(),
    outnum: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.WaitanyinvoicePaid_outpoint}
 */
proto.cln.WaitanyinvoicePaid_outpoint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.WaitanyinvoicePaid_outpoint;
  return proto.cln.WaitanyinvoicePaid_outpoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.WaitanyinvoicePaid_outpoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.WaitanyinvoicePaid_outpoint}
 */
proto.cln.WaitanyinvoicePaid_outpoint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOutnum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.WaitanyinvoicePaid_outpoint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.WaitanyinvoicePaid_outpoint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.WaitanyinvoicePaid_outpoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitanyinvoicePaid_outpoint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional bytes txid = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.WaitanyinvoicePaid_outpoint.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes txid = 1;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.WaitanyinvoicePaid_outpoint.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.WaitanyinvoicePaid_outpoint.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.WaitanyinvoicePaid_outpoint} returns this
 */
proto.cln.WaitanyinvoicePaid_outpoint.prototype.setTxid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitanyinvoicePaid_outpoint} returns this
 */
proto.cln.WaitanyinvoicePaid_outpoint.prototype.clearTxid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitanyinvoicePaid_outpoint.prototype.hasTxid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 outnum = 2;
 * @return {number}
 */
proto.cln.WaitanyinvoicePaid_outpoint.prototype.getOutnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitanyinvoicePaid_outpoint} returns this
 */
proto.cln.WaitanyinvoicePaid_outpoint.prototype.setOutnum = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitanyinvoicePaid_outpoint} returns this
 */
proto.cln.WaitanyinvoicePaid_outpoint.prototype.clearOutnum = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitanyinvoicePaid_outpoint.prototype.hasOutnum = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.WaitinvoiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.WaitinvoiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.WaitinvoiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitinvoiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.WaitinvoiceRequest}
 */
proto.cln.WaitinvoiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.WaitinvoiceRequest;
  return proto.cln.WaitinvoiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.WaitinvoiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.WaitinvoiceRequest}
 */
proto.cln.WaitinvoiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.WaitinvoiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.WaitinvoiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.WaitinvoiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitinvoiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string label = 1;
 * @return {string}
 */
proto.cln.WaitinvoiceRequest.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.WaitinvoiceRequest} returns this
 */
proto.cln.WaitinvoiceRequest.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.WaitinvoiceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.WaitinvoiceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.WaitinvoiceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitinvoiceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    paymentHash: msg.getPaymentHash_asB64(),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0),
    expiresAt: jspb.Message.getFieldWithDefault(msg, 5, 0),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    bolt11: jspb.Message.getFieldWithDefault(msg, 7, ""),
    bolt12: jspb.Message.getFieldWithDefault(msg, 8, ""),
    createdIndex: jspb.Message.getFieldWithDefault(msg, 13, 0),
    updatedIndex: jspb.Message.getFieldWithDefault(msg, 14, 0),
    payIndex: jspb.Message.getFieldWithDefault(msg, 9, 0),
    amountReceivedMsat: (f = msg.getAmountReceivedMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    paidAt: jspb.Message.getFieldWithDefault(msg, 11, 0),
    paidOutpoint: (f = msg.getPaidOutpoint()) && proto.cln.WaitinvoicePaid_outpoint.toObject(includeInstance, f),
    paymentPreimage: msg.getPaymentPreimage_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.WaitinvoiceResponse}
 */
proto.cln.WaitinvoiceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.WaitinvoiceResponse;
  return proto.cln.WaitinvoiceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.WaitinvoiceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.WaitinvoiceResponse}
 */
proto.cln.WaitinvoiceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 4:
      var value = /** @type {!proto.cln.WaitinvoiceResponse.WaitinvoiceStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExpiresAt(value);
      break;
    case 6:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt12(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedIndex(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpdatedIndex(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPayIndex(value);
      break;
    case 10:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountReceivedMsat(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPaidAt(value);
      break;
    case 15:
      var value = new proto.cln.WaitinvoicePaid_outpoint;
      reader.readMessage(value,proto.cln.WaitinvoicePaid_outpoint.deserializeBinaryFromReader);
      msg.setPaidOutpoint(value);
      break;
    case 12:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentPreimage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.WaitinvoiceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.WaitinvoiceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.WaitinvoiceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitinvoiceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getExpiresAt();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeUint64(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeUint64(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getAmountReceivedMsat();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = message.getPaidOutpoint();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.cln.WaitinvoicePaid_outpoint.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBytes(
      12,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.WaitinvoiceResponse.WaitinvoiceStatus = {
  PAID: 0,
  EXPIRED: 1
};

/**
 * optional string label = 1;
 * @return {string}
 */
proto.cln.WaitinvoiceResponse.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.cln.WaitinvoiceResponse.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes payment_hash = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.WaitinvoiceResponse.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes payment_hash = 3;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.WaitinvoiceResponse.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.WaitinvoiceResponse.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional WaitinvoiceStatus status = 4;
 * @return {!proto.cln.WaitinvoiceResponse.WaitinvoiceStatus}
 */
proto.cln.WaitinvoiceResponse.prototype.getStatus = function() {
  return /** @type {!proto.cln.WaitinvoiceResponse.WaitinvoiceStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.cln.WaitinvoiceResponse.WaitinvoiceStatus} value
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional uint64 expires_at = 5;
 * @return {number}
 */
proto.cln.WaitinvoiceResponse.prototype.getExpiresAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.setExpiresAt = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional Amount amount_msat = 6;
 * @return {?proto.cln.Amount}
 */
proto.cln.WaitinvoiceResponse.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 6));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.WaitinvoiceResponse} returns this
*/
proto.cln.WaitinvoiceResponse.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitinvoiceResponse.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string bolt11 = 7;
 * @return {string}
 */
proto.cln.WaitinvoiceResponse.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.setBolt11 = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.clearBolt11 = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitinvoiceResponse.prototype.hasBolt11 = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string bolt12 = 8;
 * @return {string}
 */
proto.cln.WaitinvoiceResponse.prototype.getBolt12 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.setBolt12 = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.clearBolt12 = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitinvoiceResponse.prototype.hasBolt12 = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint64 created_index = 13;
 * @return {number}
 */
proto.cln.WaitinvoiceResponse.prototype.getCreatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.setCreatedIndex = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.clearCreatedIndex = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitinvoiceResponse.prototype.hasCreatedIndex = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional uint64 updated_index = 14;
 * @return {number}
 */
proto.cln.WaitinvoiceResponse.prototype.getUpdatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.setUpdatedIndex = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.clearUpdatedIndex = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitinvoiceResponse.prototype.hasUpdatedIndex = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional uint64 pay_index = 9;
 * @return {number}
 */
proto.cln.WaitinvoiceResponse.prototype.getPayIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.setPayIndex = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.clearPayIndex = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitinvoiceResponse.prototype.hasPayIndex = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Amount amount_received_msat = 10;
 * @return {?proto.cln.Amount}
 */
proto.cln.WaitinvoiceResponse.prototype.getAmountReceivedMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 10));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.WaitinvoiceResponse} returns this
*/
proto.cln.WaitinvoiceResponse.prototype.setAmountReceivedMsat = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.clearAmountReceivedMsat = function() {
  return this.setAmountReceivedMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitinvoiceResponse.prototype.hasAmountReceivedMsat = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint64 paid_at = 11;
 * @return {number}
 */
proto.cln.WaitinvoiceResponse.prototype.getPaidAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.setPaidAt = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.clearPaidAt = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitinvoiceResponse.prototype.hasPaidAt = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional WaitinvoicePaid_outpoint paid_outpoint = 15;
 * @return {?proto.cln.WaitinvoicePaid_outpoint}
 */
proto.cln.WaitinvoiceResponse.prototype.getPaidOutpoint = function() {
  return /** @type{?proto.cln.WaitinvoicePaid_outpoint} */ (
    jspb.Message.getWrapperField(this, proto.cln.WaitinvoicePaid_outpoint, 15));
};


/**
 * @param {?proto.cln.WaitinvoicePaid_outpoint|undefined} value
 * @return {!proto.cln.WaitinvoiceResponse} returns this
*/
proto.cln.WaitinvoiceResponse.prototype.setPaidOutpoint = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.clearPaidOutpoint = function() {
  return this.setPaidOutpoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitinvoiceResponse.prototype.hasPaidOutpoint = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional bytes payment_preimage = 12;
 * @return {!(string|Uint8Array)}
 */
proto.cln.WaitinvoiceResponse.prototype.getPaymentPreimage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * optional bytes payment_preimage = 12;
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {string}
 */
proto.cln.WaitinvoiceResponse.prototype.getPaymentPreimage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentPreimage()));
};


/**
 * optional bytes payment_preimage = 12;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {!Uint8Array}
 */
proto.cln.WaitinvoiceResponse.prototype.getPaymentPreimage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentPreimage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.setPaymentPreimage = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitinvoiceResponse} returns this
 */
proto.cln.WaitinvoiceResponse.prototype.clearPaymentPreimage = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitinvoiceResponse.prototype.hasPaymentPreimage = function() {
  return jspb.Message.getField(this, 12) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.WaitinvoicePaid_outpoint.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.WaitinvoicePaid_outpoint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.WaitinvoicePaid_outpoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitinvoicePaid_outpoint.toObject = function(includeInstance, msg) {
  var f, obj = {
    txid: msg.getTxid_asB64(),
    outnum: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.WaitinvoicePaid_outpoint}
 */
proto.cln.WaitinvoicePaid_outpoint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.WaitinvoicePaid_outpoint;
  return proto.cln.WaitinvoicePaid_outpoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.WaitinvoicePaid_outpoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.WaitinvoicePaid_outpoint}
 */
proto.cln.WaitinvoicePaid_outpoint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOutnum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.WaitinvoicePaid_outpoint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.WaitinvoicePaid_outpoint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.WaitinvoicePaid_outpoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitinvoicePaid_outpoint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional bytes txid = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.WaitinvoicePaid_outpoint.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes txid = 1;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.WaitinvoicePaid_outpoint.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.WaitinvoicePaid_outpoint.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.WaitinvoicePaid_outpoint} returns this
 */
proto.cln.WaitinvoicePaid_outpoint.prototype.setTxid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitinvoicePaid_outpoint} returns this
 */
proto.cln.WaitinvoicePaid_outpoint.prototype.clearTxid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitinvoicePaid_outpoint.prototype.hasTxid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 outnum = 2;
 * @return {number}
 */
proto.cln.WaitinvoicePaid_outpoint.prototype.getOutnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitinvoicePaid_outpoint} returns this
 */
proto.cln.WaitinvoicePaid_outpoint.prototype.setOutnum = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitinvoicePaid_outpoint} returns this
 */
proto.cln.WaitinvoicePaid_outpoint.prototype.clearOutnum = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitinvoicePaid_outpoint.prototype.hasOutnum = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.WaitsendpayRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.WaitsendpayRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.WaitsendpayRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitsendpayRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentHash: msg.getPaymentHash_asB64(),
    timeout: jspb.Message.getFieldWithDefault(msg, 3, 0),
    partid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    groupid: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.WaitsendpayRequest}
 */
proto.cln.WaitsendpayRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.WaitsendpayRequest;
  return proto.cln.WaitsendpayRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.WaitsendpayRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.WaitsendpayRequest}
 */
proto.cln.WaitsendpayRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTimeout(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPartid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGroupid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.WaitsendpayRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.WaitsendpayRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.WaitsendpayRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitsendpayRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint64(
      4,
      f
    );
  }
};


/**
 * optional bytes payment_hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.WaitsendpayRequest.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes payment_hash = 1;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.WaitsendpayRequest.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.WaitsendpayRequest.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.WaitsendpayRequest} returns this
 */
proto.cln.WaitsendpayRequest.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint32 timeout = 3;
 * @return {number}
 */
proto.cln.WaitsendpayRequest.prototype.getTimeout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitsendpayRequest} returns this
 */
proto.cln.WaitsendpayRequest.prototype.setTimeout = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitsendpayRequest} returns this
 */
proto.cln.WaitsendpayRequest.prototype.clearTimeout = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitsendpayRequest.prototype.hasTimeout = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 partid = 2;
 * @return {number}
 */
proto.cln.WaitsendpayRequest.prototype.getPartid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitsendpayRequest} returns this
 */
proto.cln.WaitsendpayRequest.prototype.setPartid = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitsendpayRequest} returns this
 */
proto.cln.WaitsendpayRequest.prototype.clearPartid = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitsendpayRequest.prototype.hasPartid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 groupid = 4;
 * @return {number}
 */
proto.cln.WaitsendpayRequest.prototype.getGroupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitsendpayRequest} returns this
 */
proto.cln.WaitsendpayRequest.prototype.setGroupid = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitsendpayRequest} returns this
 */
proto.cln.WaitsendpayRequest.prototype.clearGroupid = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitsendpayRequest.prototype.hasGroupid = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.WaitsendpayResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.WaitsendpayResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.WaitsendpayResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitsendpayResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    createdIndex: jspb.Message.getFieldWithDefault(msg, 15, 0),
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    groupid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    paymentHash: msg.getPaymentHash_asB64(),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    destination: msg.getDestination_asB64(),
    createdAt: jspb.Message.getFieldWithDefault(msg, 7, 0),
    updatedIndex: jspb.Message.getFieldWithDefault(msg, 16, 0),
    completedAt: jspb.Message.getFloatingPointFieldWithDefault(msg, 14, 0.0),
    amountSentMsat: (f = msg.getAmountSentMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    label: jspb.Message.getFieldWithDefault(msg, 9, ""),
    partid: jspb.Message.getFieldWithDefault(msg, 10, 0),
    bolt11: jspb.Message.getFieldWithDefault(msg, 11, ""),
    bolt12: jspb.Message.getFieldWithDefault(msg, 12, ""),
    paymentPreimage: msg.getPaymentPreimage_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.WaitsendpayResponse}
 */
proto.cln.WaitsendpayResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.WaitsendpayResponse;
  return proto.cln.WaitsendpayResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.WaitsendpayResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.WaitsendpayResponse}
 */
proto.cln.WaitsendpayResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 15:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedIndex(value);
      break;
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGroupid(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 4:
      var value = /** @type {!proto.cln.WaitsendpayResponse.WaitsendpayStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 5:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDestination(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedAt(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpdatedIndex(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCompletedAt(value);
      break;
    case 8:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountSentMsat(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPartid(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt12(value);
      break;
    case 13:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentPreimage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.WaitsendpayResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.WaitsendpayResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.WaitsendpayResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitsendpayResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint64(
      15,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint64(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeDouble(
      14,
      f
    );
  }
  f = message.getAmountSentMsat();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBytes(
      13,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.WaitsendpayResponse.WaitsendpayStatus = {
  COMPLETE: 0
};

/**
 * optional uint64 created_index = 15;
 * @return {number}
 */
proto.cln.WaitsendpayResponse.prototype.getCreatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.setCreatedIndex = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.clearCreatedIndex = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitsendpayResponse.prototype.hasCreatedIndex = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.cln.WaitsendpayResponse.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 groupid = 2;
 * @return {number}
 */
proto.cln.WaitsendpayResponse.prototype.getGroupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.setGroupid = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.clearGroupid = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitsendpayResponse.prototype.hasGroupid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes payment_hash = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.WaitsendpayResponse.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes payment_hash = 3;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.WaitsendpayResponse.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.WaitsendpayResponse.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional WaitsendpayStatus status = 4;
 * @return {!proto.cln.WaitsendpayResponse.WaitsendpayStatus}
 */
proto.cln.WaitsendpayResponse.prototype.getStatus = function() {
  return /** @type {!proto.cln.WaitsendpayResponse.WaitsendpayStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.cln.WaitsendpayResponse.WaitsendpayStatus} value
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional Amount amount_msat = 5;
 * @return {?proto.cln.Amount}
 */
proto.cln.WaitsendpayResponse.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 5));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.WaitsendpayResponse} returns this
*/
proto.cln.WaitsendpayResponse.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitsendpayResponse.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bytes destination = 6;
 * @return {!(string|Uint8Array)}
 */
proto.cln.WaitsendpayResponse.prototype.getDestination = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes destination = 6;
 * This is a type-conversion wrapper around `getDestination()`
 * @return {string}
 */
proto.cln.WaitsendpayResponse.prototype.getDestination_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDestination()));
};


/**
 * optional bytes destination = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDestination()`
 * @return {!Uint8Array}
 */
proto.cln.WaitsendpayResponse.prototype.getDestination_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDestination()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.setDestination = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.clearDestination = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitsendpayResponse.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 created_at = 7;
 * @return {number}
 */
proto.cln.WaitsendpayResponse.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint64 updated_index = 16;
 * @return {number}
 */
proto.cln.WaitsendpayResponse.prototype.getUpdatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.setUpdatedIndex = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.clearUpdatedIndex = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitsendpayResponse.prototype.hasUpdatedIndex = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional double completed_at = 14;
 * @return {number}
 */
proto.cln.WaitsendpayResponse.prototype.getCompletedAt = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.setCompletedAt = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.clearCompletedAt = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitsendpayResponse.prototype.hasCompletedAt = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional Amount amount_sent_msat = 8;
 * @return {?proto.cln.Amount}
 */
proto.cln.WaitsendpayResponse.prototype.getAmountSentMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 8));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.WaitsendpayResponse} returns this
*/
proto.cln.WaitsendpayResponse.prototype.setAmountSentMsat = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.clearAmountSentMsat = function() {
  return this.setAmountSentMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitsendpayResponse.prototype.hasAmountSentMsat = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string label = 9;
 * @return {string}
 */
proto.cln.WaitsendpayResponse.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.setLabel = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.clearLabel = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitsendpayResponse.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint64 partid = 10;
 * @return {number}
 */
proto.cln.WaitsendpayResponse.prototype.getPartid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.setPartid = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.clearPartid = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitsendpayResponse.prototype.hasPartid = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string bolt11 = 11;
 * @return {string}
 */
proto.cln.WaitsendpayResponse.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.setBolt11 = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.clearBolt11 = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitsendpayResponse.prototype.hasBolt11 = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string bolt12 = 12;
 * @return {string}
 */
proto.cln.WaitsendpayResponse.prototype.getBolt12 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.setBolt12 = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.clearBolt12 = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitsendpayResponse.prototype.hasBolt12 = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bytes payment_preimage = 13;
 * @return {!(string|Uint8Array)}
 */
proto.cln.WaitsendpayResponse.prototype.getPaymentPreimage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * optional bytes payment_preimage = 13;
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {string}
 */
proto.cln.WaitsendpayResponse.prototype.getPaymentPreimage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentPreimage()));
};


/**
 * optional bytes payment_preimage = 13;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {!Uint8Array}
 */
proto.cln.WaitsendpayResponse.prototype.getPaymentPreimage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentPreimage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.setPaymentPreimage = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitsendpayResponse} returns this
 */
proto.cln.WaitsendpayResponse.prototype.clearPaymentPreimage = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitsendpayResponse.prototype.hasPaymentPreimage = function() {
  return jspb.Message.getField(this, 13) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.NewaddrRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.NewaddrRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.NewaddrRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.NewaddrRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    addresstype: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.NewaddrRequest}
 */
proto.cln.NewaddrRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.NewaddrRequest;
  return proto.cln.NewaddrRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.NewaddrRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.NewaddrRequest}
 */
proto.cln.NewaddrRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.NewaddrRequest.NewaddrAddresstype} */ (reader.readEnum());
      msg.setAddresstype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.NewaddrRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.NewaddrRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.NewaddrRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.NewaddrRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.cln.NewaddrRequest.NewaddrAddresstype} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.NewaddrRequest.NewaddrAddresstype = {
  BECH32: 0,
  P2TR: 3,
  ALL: 2
};

/**
 * optional NewaddrAddresstype addresstype = 1;
 * @return {!proto.cln.NewaddrRequest.NewaddrAddresstype}
 */
proto.cln.NewaddrRequest.prototype.getAddresstype = function() {
  return /** @type {!proto.cln.NewaddrRequest.NewaddrAddresstype} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.NewaddrRequest.NewaddrAddresstype} value
 * @return {!proto.cln.NewaddrRequest} returns this
 */
proto.cln.NewaddrRequest.prototype.setAddresstype = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.NewaddrRequest} returns this
 */
proto.cln.NewaddrRequest.prototype.clearAddresstype = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.NewaddrRequest.prototype.hasAddresstype = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.NewaddrResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.NewaddrResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.NewaddrResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.NewaddrResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    p2tr: jspb.Message.getFieldWithDefault(msg, 3, ""),
    bech32: jspb.Message.getFieldWithDefault(msg, 1, ""),
    p2shSegwit: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.NewaddrResponse}
 */
proto.cln.NewaddrResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.NewaddrResponse;
  return proto.cln.NewaddrResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.NewaddrResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.NewaddrResponse}
 */
proto.cln.NewaddrResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setP2tr(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBech32(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setP2shSegwit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.NewaddrResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.NewaddrResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.NewaddrResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.NewaddrResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string p2tr = 3;
 * @return {string}
 */
proto.cln.NewaddrResponse.prototype.getP2tr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.NewaddrResponse} returns this
 */
proto.cln.NewaddrResponse.prototype.setP2tr = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.NewaddrResponse} returns this
 */
proto.cln.NewaddrResponse.prototype.clearP2tr = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.NewaddrResponse.prototype.hasP2tr = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string bech32 = 1;
 * @return {string}
 */
proto.cln.NewaddrResponse.prototype.getBech32 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.NewaddrResponse} returns this
 */
proto.cln.NewaddrResponse.prototype.setBech32 = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.NewaddrResponse} returns this
 */
proto.cln.NewaddrResponse.prototype.clearBech32 = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.NewaddrResponse.prototype.hasBech32 = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string p2sh_segwit = 2;
 * @return {string}
 */
proto.cln.NewaddrResponse.prototype.getP2shSegwit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.NewaddrResponse} returns this
 */
proto.cln.NewaddrResponse.prototype.setP2shSegwit = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.NewaddrResponse} returns this
 */
proto.cln.NewaddrResponse.prototype.clearP2shSegwit = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.NewaddrResponse.prototype.hasP2shSegwit = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.WithdrawRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.WithdrawRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.WithdrawRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.WithdrawRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WithdrawRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    destination: jspb.Message.getFieldWithDefault(msg, 1, ""),
    satoshi: (f = msg.getSatoshi()) && cln_primitives_pb.AmountOrAll.toObject(includeInstance, f),
    feerate: (f = msg.getFeerate()) && cln_primitives_pb.Feerate.toObject(includeInstance, f),
    minconf: jspb.Message.getFieldWithDefault(msg, 3, 0),
    utxosList: jspb.Message.toObjectList(msg.getUtxosList(),
    cln_primitives_pb.Outpoint.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.WithdrawRequest}
 */
proto.cln.WithdrawRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.WithdrawRequest;
  return proto.cln.WithdrawRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.WithdrawRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.WithdrawRequest}
 */
proto.cln.WithdrawRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestination(value);
      break;
    case 2:
      var value = new cln_primitives_pb.AmountOrAll;
      reader.readMessage(value,cln_primitives_pb.AmountOrAll.deserializeBinaryFromReader);
      msg.setSatoshi(value);
      break;
    case 5:
      var value = new cln_primitives_pb.Feerate;
      reader.readMessage(value,cln_primitives_pb.Feerate.deserializeBinaryFromReader);
      msg.setFeerate(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinconf(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Outpoint;
      reader.readMessage(value,cln_primitives_pb.Outpoint.deserializeBinaryFromReader);
      msg.addUtxos(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.WithdrawRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.WithdrawRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.WithdrawRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WithdrawRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDestination();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSatoshi();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cln_primitives_pb.AmountOrAll.serializeBinaryToWriter
    );
  }
  f = message.getFeerate();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cln_primitives_pb.Feerate.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getUtxosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      cln_primitives_pb.Outpoint.serializeBinaryToWriter
    );
  }
};


/**
 * optional string destination = 1;
 * @return {string}
 */
proto.cln.WithdrawRequest.prototype.getDestination = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.WithdrawRequest} returns this
 */
proto.cln.WithdrawRequest.prototype.setDestination = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional AmountOrAll satoshi = 2;
 * @return {?proto.cln.AmountOrAll}
 */
proto.cln.WithdrawRequest.prototype.getSatoshi = function() {
  return /** @type{?proto.cln.AmountOrAll} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.AmountOrAll, 2));
};


/**
 * @param {?proto.cln.AmountOrAll|undefined} value
 * @return {!proto.cln.WithdrawRequest} returns this
*/
proto.cln.WithdrawRequest.prototype.setSatoshi = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.WithdrawRequest} returns this
 */
proto.cln.WithdrawRequest.prototype.clearSatoshi = function() {
  return this.setSatoshi(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WithdrawRequest.prototype.hasSatoshi = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Feerate feerate = 5;
 * @return {?proto.cln.Feerate}
 */
proto.cln.WithdrawRequest.prototype.getFeerate = function() {
  return /** @type{?proto.cln.Feerate} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Feerate, 5));
};


/**
 * @param {?proto.cln.Feerate|undefined} value
 * @return {!proto.cln.WithdrawRequest} returns this
*/
proto.cln.WithdrawRequest.prototype.setFeerate = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.WithdrawRequest} returns this
 */
proto.cln.WithdrawRequest.prototype.clearFeerate = function() {
  return this.setFeerate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WithdrawRequest.prototype.hasFeerate = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 minconf = 3;
 * @return {number}
 */
proto.cln.WithdrawRequest.prototype.getMinconf = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WithdrawRequest} returns this
 */
proto.cln.WithdrawRequest.prototype.setMinconf = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WithdrawRequest} returns this
 */
proto.cln.WithdrawRequest.prototype.clearMinconf = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WithdrawRequest.prototype.hasMinconf = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Outpoint utxos = 4;
 * @return {!Array<!proto.cln.Outpoint>}
 */
proto.cln.WithdrawRequest.prototype.getUtxosList = function() {
  return /** @type{!Array<!proto.cln.Outpoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, cln_primitives_pb.Outpoint, 4));
};


/**
 * @param {!Array<!proto.cln.Outpoint>} value
 * @return {!proto.cln.WithdrawRequest} returns this
*/
proto.cln.WithdrawRequest.prototype.setUtxosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.cln.Outpoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.Outpoint}
 */
proto.cln.WithdrawRequest.prototype.addUtxos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.cln.Outpoint, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.WithdrawRequest} returns this
 */
proto.cln.WithdrawRequest.prototype.clearUtxosList = function() {
  return this.setUtxosList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.WithdrawResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.WithdrawResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.WithdrawResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WithdrawResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    tx: msg.getTx_asB64(),
    txid: msg.getTxid_asB64(),
    psbt: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.WithdrawResponse}
 */
proto.cln.WithdrawResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.WithdrawResponse;
  return proto.cln.WithdrawResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.WithdrawResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.WithdrawResponse}
 */
proto.cln.WithdrawResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTx(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPsbt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.WithdrawResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.WithdrawResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.WithdrawResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WithdrawResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTx_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getPsbt();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional bytes tx = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.WithdrawResponse.prototype.getTx = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes tx = 1;
 * This is a type-conversion wrapper around `getTx()`
 * @return {string}
 */
proto.cln.WithdrawResponse.prototype.getTx_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTx()));
};


/**
 * optional bytes tx = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTx()`
 * @return {!Uint8Array}
 */
proto.cln.WithdrawResponse.prototype.getTx_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTx()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.WithdrawResponse} returns this
 */
proto.cln.WithdrawResponse.prototype.setTx = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes txid = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.WithdrawResponse.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes txid = 2;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.WithdrawResponse.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.WithdrawResponse.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.WithdrawResponse} returns this
 */
proto.cln.WithdrawResponse.prototype.setTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string psbt = 3;
 * @return {string}
 */
proto.cln.WithdrawResponse.prototype.getPsbt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.WithdrawResponse} returns this
 */
proto.cln.WithdrawResponse.prototype.setPsbt = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.KeysendRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.KeysendRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.KeysendRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.KeysendRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    destination: msg.getDestination_asB64(),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    label: jspb.Message.getFieldWithDefault(msg, 3, ""),
    maxfeepercent: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    retryFor: jspb.Message.getFieldWithDefault(msg, 5, 0),
    maxdelay: jspb.Message.getFieldWithDefault(msg, 6, 0),
    exemptfee: (f = msg.getExemptfee()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    routehints: (f = msg.getRoutehints()) && cln_primitives_pb.RoutehintList.toObject(includeInstance, f),
    extratlvs: (f = msg.getExtratlvs()) && cln_primitives_pb.TlvStream.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.KeysendRequest}
 */
proto.cln.KeysendRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.KeysendRequest;
  return proto.cln.KeysendRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.KeysendRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.KeysendRequest}
 */
proto.cln.KeysendRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDestination(value);
      break;
    case 10:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaxfeepercent(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRetryFor(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxdelay(value);
      break;
    case 7:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setExemptfee(value);
      break;
    case 8:
      var value = new cln_primitives_pb.RoutehintList;
      reader.readMessage(value,cln_primitives_pb.RoutehintList.deserializeBinaryFromReader);
      msg.setRoutehints(value);
      break;
    case 9:
      var value = new cln_primitives_pb.TlvStream;
      reader.readMessage(value,cln_primitives_pb.TlvStream.deserializeBinaryFromReader);
      msg.setExtratlvs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.KeysendRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.KeysendRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.KeysendRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.KeysendRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDestination_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getExemptfee();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getRoutehints();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      cln_primitives_pb.RoutehintList.serializeBinaryToWriter
    );
  }
  f = message.getExtratlvs();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      cln_primitives_pb.TlvStream.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes destination = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.KeysendRequest.prototype.getDestination = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes destination = 1;
 * This is a type-conversion wrapper around `getDestination()`
 * @return {string}
 */
proto.cln.KeysendRequest.prototype.getDestination_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDestination()));
};


/**
 * optional bytes destination = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDestination()`
 * @return {!Uint8Array}
 */
proto.cln.KeysendRequest.prototype.getDestination_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDestination()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.KeysendRequest} returns this
 */
proto.cln.KeysendRequest.prototype.setDestination = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional Amount amount_msat = 10;
 * @return {?proto.cln.Amount}
 */
proto.cln.KeysendRequest.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 10));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.KeysendRequest} returns this
*/
proto.cln.KeysendRequest.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.KeysendRequest} returns this
 */
proto.cln.KeysendRequest.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.KeysendRequest.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string label = 3;
 * @return {string}
 */
proto.cln.KeysendRequest.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.KeysendRequest} returns this
 */
proto.cln.KeysendRequest.prototype.setLabel = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.KeysendRequest} returns this
 */
proto.cln.KeysendRequest.prototype.clearLabel = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.KeysendRequest.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double maxfeepercent = 4;
 * @return {number}
 */
proto.cln.KeysendRequest.prototype.getMaxfeepercent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.cln.KeysendRequest} returns this
 */
proto.cln.KeysendRequest.prototype.setMaxfeepercent = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.KeysendRequest} returns this
 */
proto.cln.KeysendRequest.prototype.clearMaxfeepercent = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.KeysendRequest.prototype.hasMaxfeepercent = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 retry_for = 5;
 * @return {number}
 */
proto.cln.KeysendRequest.prototype.getRetryFor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.KeysendRequest} returns this
 */
proto.cln.KeysendRequest.prototype.setRetryFor = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.KeysendRequest} returns this
 */
proto.cln.KeysendRequest.prototype.clearRetryFor = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.KeysendRequest.prototype.hasRetryFor = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 maxdelay = 6;
 * @return {number}
 */
proto.cln.KeysendRequest.prototype.getMaxdelay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.KeysendRequest} returns this
 */
proto.cln.KeysendRequest.prototype.setMaxdelay = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.KeysendRequest} returns this
 */
proto.cln.KeysendRequest.prototype.clearMaxdelay = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.KeysendRequest.prototype.hasMaxdelay = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Amount exemptfee = 7;
 * @return {?proto.cln.Amount}
 */
proto.cln.KeysendRequest.prototype.getExemptfee = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 7));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.KeysendRequest} returns this
*/
proto.cln.KeysendRequest.prototype.setExemptfee = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.KeysendRequest} returns this
 */
proto.cln.KeysendRequest.prototype.clearExemptfee = function() {
  return this.setExemptfee(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.KeysendRequest.prototype.hasExemptfee = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional RoutehintList routehints = 8;
 * @return {?proto.cln.RoutehintList}
 */
proto.cln.KeysendRequest.prototype.getRoutehints = function() {
  return /** @type{?proto.cln.RoutehintList} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.RoutehintList, 8));
};


/**
 * @param {?proto.cln.RoutehintList|undefined} value
 * @return {!proto.cln.KeysendRequest} returns this
*/
proto.cln.KeysendRequest.prototype.setRoutehints = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.KeysendRequest} returns this
 */
proto.cln.KeysendRequest.prototype.clearRoutehints = function() {
  return this.setRoutehints(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.KeysendRequest.prototype.hasRoutehints = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional TlvStream extratlvs = 9;
 * @return {?proto.cln.TlvStream}
 */
proto.cln.KeysendRequest.prototype.getExtratlvs = function() {
  return /** @type{?proto.cln.TlvStream} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.TlvStream, 9));
};


/**
 * @param {?proto.cln.TlvStream|undefined} value
 * @return {!proto.cln.KeysendRequest} returns this
*/
proto.cln.KeysendRequest.prototype.setExtratlvs = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.KeysendRequest} returns this
 */
proto.cln.KeysendRequest.prototype.clearExtratlvs = function() {
  return this.setExtratlvs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.KeysendRequest.prototype.hasExtratlvs = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.KeysendResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.KeysendResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.KeysendResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.KeysendResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentPreimage: msg.getPaymentPreimage_asB64(),
    destination: msg.getDestination_asB64(),
    paymentHash: msg.getPaymentHash_asB64(),
    createdAt: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    parts: jspb.Message.getFieldWithDefault(msg, 5, 0),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    amountSentMsat: (f = msg.getAmountSentMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    warningPartialCompletion: jspb.Message.getFieldWithDefault(msg, 8, ""),
    status: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.KeysendResponse}
 */
proto.cln.KeysendResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.KeysendResponse;
  return proto.cln.KeysendResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.KeysendResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.KeysendResponse}
 */
proto.cln.KeysendResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentPreimage(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDestination(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCreatedAt(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setParts(value);
      break;
    case 6:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 7:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountSentMsat(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningPartialCompletion(value);
      break;
    case 9:
      var value = /** @type {!proto.cln.KeysendResponse.KeysendStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.KeysendResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.KeysendResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.KeysendResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.KeysendResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentPreimage_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getParts();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getAmountSentMsat();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.KeysendResponse.KeysendStatus = {
  COMPLETE: 0
};

/**
 * optional bytes payment_preimage = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.KeysendResponse.prototype.getPaymentPreimage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes payment_preimage = 1;
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {string}
 */
proto.cln.KeysendResponse.prototype.getPaymentPreimage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentPreimage()));
};


/**
 * optional bytes payment_preimage = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentPreimage()`
 * @return {!Uint8Array}
 */
proto.cln.KeysendResponse.prototype.getPaymentPreimage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentPreimage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.KeysendResponse} returns this
 */
proto.cln.KeysendResponse.prototype.setPaymentPreimage = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes destination = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.KeysendResponse.prototype.getDestination = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes destination = 2;
 * This is a type-conversion wrapper around `getDestination()`
 * @return {string}
 */
proto.cln.KeysendResponse.prototype.getDestination_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDestination()));
};


/**
 * optional bytes destination = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDestination()`
 * @return {!Uint8Array}
 */
proto.cln.KeysendResponse.prototype.getDestination_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDestination()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.KeysendResponse} returns this
 */
proto.cln.KeysendResponse.prototype.setDestination = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.KeysendResponse} returns this
 */
proto.cln.KeysendResponse.prototype.clearDestination = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.KeysendResponse.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes payment_hash = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.KeysendResponse.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes payment_hash = 3;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.KeysendResponse.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.KeysendResponse.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.KeysendResponse} returns this
 */
proto.cln.KeysendResponse.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional double created_at = 4;
 * @return {number}
 */
proto.cln.KeysendResponse.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.cln.KeysendResponse} returns this
 */
proto.cln.KeysendResponse.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional uint32 parts = 5;
 * @return {number}
 */
proto.cln.KeysendResponse.prototype.getParts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.KeysendResponse} returns this
 */
proto.cln.KeysendResponse.prototype.setParts = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional Amount amount_msat = 6;
 * @return {?proto.cln.Amount}
 */
proto.cln.KeysendResponse.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 6));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.KeysendResponse} returns this
*/
proto.cln.KeysendResponse.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.KeysendResponse} returns this
 */
proto.cln.KeysendResponse.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.KeysendResponse.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Amount amount_sent_msat = 7;
 * @return {?proto.cln.Amount}
 */
proto.cln.KeysendResponse.prototype.getAmountSentMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 7));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.KeysendResponse} returns this
*/
proto.cln.KeysendResponse.prototype.setAmountSentMsat = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.KeysendResponse} returns this
 */
proto.cln.KeysendResponse.prototype.clearAmountSentMsat = function() {
  return this.setAmountSentMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.KeysendResponse.prototype.hasAmountSentMsat = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string warning_partial_completion = 8;
 * @return {string}
 */
proto.cln.KeysendResponse.prototype.getWarningPartialCompletion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.KeysendResponse} returns this
 */
proto.cln.KeysendResponse.prototype.setWarningPartialCompletion = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.KeysendResponse} returns this
 */
proto.cln.KeysendResponse.prototype.clearWarningPartialCompletion = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.KeysendResponse.prototype.hasWarningPartialCompletion = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional KeysendStatus status = 9;
 * @return {!proto.cln.KeysendResponse.KeysendStatus}
 */
proto.cln.KeysendResponse.prototype.getStatus = function() {
  return /** @type {!proto.cln.KeysendResponse.KeysendStatus} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.cln.KeysendResponse.KeysendStatus} value
 * @return {!proto.cln.KeysendResponse} returns this
 */
proto.cln.KeysendResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.FundpsbtRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.FundpsbtRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.FundpsbtRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FundpsbtRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    satoshi: (f = msg.getSatoshi()) && cln_primitives_pb.AmountOrAll.toObject(includeInstance, f),
    feerate: (f = msg.getFeerate()) && cln_primitives_pb.Feerate.toObject(includeInstance, f),
    startweight: jspb.Message.getFieldWithDefault(msg, 3, 0),
    minconf: jspb.Message.getFieldWithDefault(msg, 4, 0),
    reserve: jspb.Message.getFieldWithDefault(msg, 5, 0),
    locktime: jspb.Message.getFieldWithDefault(msg, 6, 0),
    minWitnessWeight: jspb.Message.getFieldWithDefault(msg, 7, 0),
    excessAsChange: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    nonwrapped: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    openingAnchorChannel: jspb.Message.getBooleanFieldWithDefault(msg, 10, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.FundpsbtRequest}
 */
proto.cln.FundpsbtRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.FundpsbtRequest;
  return proto.cln.FundpsbtRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.FundpsbtRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.FundpsbtRequest}
 */
proto.cln.FundpsbtRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cln_primitives_pb.AmountOrAll;
      reader.readMessage(value,cln_primitives_pb.AmountOrAll.deserializeBinaryFromReader);
      msg.setSatoshi(value);
      break;
    case 2:
      var value = new cln_primitives_pb.Feerate;
      reader.readMessage(value,cln_primitives_pb.Feerate.deserializeBinaryFromReader);
      msg.setFeerate(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStartweight(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinconf(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setReserve(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLocktime(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinWitnessWeight(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExcessAsChange(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNonwrapped(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOpeningAnchorChannel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.FundpsbtRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.FundpsbtRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.FundpsbtRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FundpsbtRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSatoshi();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cln_primitives_pb.AmountOrAll.serializeBinaryToWriter
    );
  }
  f = message.getFeerate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cln_primitives_pb.Feerate.serializeBinaryToWriter
    );
  }
  f = message.getStartweight();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
};


/**
 * optional AmountOrAll satoshi = 1;
 * @return {?proto.cln.AmountOrAll}
 */
proto.cln.FundpsbtRequest.prototype.getSatoshi = function() {
  return /** @type{?proto.cln.AmountOrAll} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.AmountOrAll, 1));
};


/**
 * @param {?proto.cln.AmountOrAll|undefined} value
 * @return {!proto.cln.FundpsbtRequest} returns this
*/
proto.cln.FundpsbtRequest.prototype.setSatoshi = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FundpsbtRequest} returns this
 */
proto.cln.FundpsbtRequest.prototype.clearSatoshi = function() {
  return this.setSatoshi(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundpsbtRequest.prototype.hasSatoshi = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Feerate feerate = 2;
 * @return {?proto.cln.Feerate}
 */
proto.cln.FundpsbtRequest.prototype.getFeerate = function() {
  return /** @type{?proto.cln.Feerate} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Feerate, 2));
};


/**
 * @param {?proto.cln.Feerate|undefined} value
 * @return {!proto.cln.FundpsbtRequest} returns this
*/
proto.cln.FundpsbtRequest.prototype.setFeerate = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FundpsbtRequest} returns this
 */
proto.cln.FundpsbtRequest.prototype.clearFeerate = function() {
  return this.setFeerate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundpsbtRequest.prototype.hasFeerate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 startweight = 3;
 * @return {number}
 */
proto.cln.FundpsbtRequest.prototype.getStartweight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FundpsbtRequest} returns this
 */
proto.cln.FundpsbtRequest.prototype.setStartweight = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 minconf = 4;
 * @return {number}
 */
proto.cln.FundpsbtRequest.prototype.getMinconf = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FundpsbtRequest} returns this
 */
proto.cln.FundpsbtRequest.prototype.setMinconf = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FundpsbtRequest} returns this
 */
proto.cln.FundpsbtRequest.prototype.clearMinconf = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundpsbtRequest.prototype.hasMinconf = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 reserve = 5;
 * @return {number}
 */
proto.cln.FundpsbtRequest.prototype.getReserve = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FundpsbtRequest} returns this
 */
proto.cln.FundpsbtRequest.prototype.setReserve = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FundpsbtRequest} returns this
 */
proto.cln.FundpsbtRequest.prototype.clearReserve = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundpsbtRequest.prototype.hasReserve = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 locktime = 6;
 * @return {number}
 */
proto.cln.FundpsbtRequest.prototype.getLocktime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FundpsbtRequest} returns this
 */
proto.cln.FundpsbtRequest.prototype.setLocktime = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FundpsbtRequest} returns this
 */
proto.cln.FundpsbtRequest.prototype.clearLocktime = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundpsbtRequest.prototype.hasLocktime = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 min_witness_weight = 7;
 * @return {number}
 */
proto.cln.FundpsbtRequest.prototype.getMinWitnessWeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FundpsbtRequest} returns this
 */
proto.cln.FundpsbtRequest.prototype.setMinWitnessWeight = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FundpsbtRequest} returns this
 */
proto.cln.FundpsbtRequest.prototype.clearMinWitnessWeight = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundpsbtRequest.prototype.hasMinWitnessWeight = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool excess_as_change = 8;
 * @return {boolean}
 */
proto.cln.FundpsbtRequest.prototype.getExcessAsChange = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.FundpsbtRequest} returns this
 */
proto.cln.FundpsbtRequest.prototype.setExcessAsChange = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FundpsbtRequest} returns this
 */
proto.cln.FundpsbtRequest.prototype.clearExcessAsChange = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundpsbtRequest.prototype.hasExcessAsChange = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool nonwrapped = 9;
 * @return {boolean}
 */
proto.cln.FundpsbtRequest.prototype.getNonwrapped = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.FundpsbtRequest} returns this
 */
proto.cln.FundpsbtRequest.prototype.setNonwrapped = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FundpsbtRequest} returns this
 */
proto.cln.FundpsbtRequest.prototype.clearNonwrapped = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundpsbtRequest.prototype.hasNonwrapped = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool opening_anchor_channel = 10;
 * @return {boolean}
 */
proto.cln.FundpsbtRequest.prototype.getOpeningAnchorChannel = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.FundpsbtRequest} returns this
 */
proto.cln.FundpsbtRequest.prototype.setOpeningAnchorChannel = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FundpsbtRequest} returns this
 */
proto.cln.FundpsbtRequest.prototype.clearOpeningAnchorChannel = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundpsbtRequest.prototype.hasOpeningAnchorChannel = function() {
  return jspb.Message.getField(this, 10) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.FundpsbtResponse.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.FundpsbtResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.FundpsbtResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.FundpsbtResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FundpsbtResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    psbt: jspb.Message.getFieldWithDefault(msg, 1, ""),
    feeratePerKw: jspb.Message.getFieldWithDefault(msg, 2, 0),
    estimatedFinalWeight: jspb.Message.getFieldWithDefault(msg, 3, 0),
    excessMsat: (f = msg.getExcessMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    changeOutnum: jspb.Message.getFieldWithDefault(msg, 5, 0),
    reservationsList: jspb.Message.toObjectList(msg.getReservationsList(),
    proto.cln.FundpsbtReservations.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.FundpsbtResponse}
 */
proto.cln.FundpsbtResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.FundpsbtResponse;
  return proto.cln.FundpsbtResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.FundpsbtResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.FundpsbtResponse}
 */
proto.cln.FundpsbtResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPsbt(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFeeratePerKw(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setEstimatedFinalWeight(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setExcessMsat(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setChangeOutnum(value);
      break;
    case 6:
      var value = new proto.cln.FundpsbtReservations;
      reader.readMessage(value,proto.cln.FundpsbtReservations.deserializeBinaryFromReader);
      msg.addReservations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.FundpsbtResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.FundpsbtResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.FundpsbtResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FundpsbtResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPsbt();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFeeratePerKw();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getEstimatedFinalWeight();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getExcessMsat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getReservationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.cln.FundpsbtReservations.serializeBinaryToWriter
    );
  }
};


/**
 * optional string psbt = 1;
 * @return {string}
 */
proto.cln.FundpsbtResponse.prototype.getPsbt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.FundpsbtResponse} returns this
 */
proto.cln.FundpsbtResponse.prototype.setPsbt = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 feerate_per_kw = 2;
 * @return {number}
 */
proto.cln.FundpsbtResponse.prototype.getFeeratePerKw = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FundpsbtResponse} returns this
 */
proto.cln.FundpsbtResponse.prototype.setFeeratePerKw = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 estimated_final_weight = 3;
 * @return {number}
 */
proto.cln.FundpsbtResponse.prototype.getEstimatedFinalWeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FundpsbtResponse} returns this
 */
proto.cln.FundpsbtResponse.prototype.setEstimatedFinalWeight = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional Amount excess_msat = 4;
 * @return {?proto.cln.Amount}
 */
proto.cln.FundpsbtResponse.prototype.getExcessMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 4));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.FundpsbtResponse} returns this
*/
proto.cln.FundpsbtResponse.prototype.setExcessMsat = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FundpsbtResponse} returns this
 */
proto.cln.FundpsbtResponse.prototype.clearExcessMsat = function() {
  return this.setExcessMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundpsbtResponse.prototype.hasExcessMsat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 change_outnum = 5;
 * @return {number}
 */
proto.cln.FundpsbtResponse.prototype.getChangeOutnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FundpsbtResponse} returns this
 */
proto.cln.FundpsbtResponse.prototype.setChangeOutnum = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FundpsbtResponse} returns this
 */
proto.cln.FundpsbtResponse.prototype.clearChangeOutnum = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundpsbtResponse.prototype.hasChangeOutnum = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated FundpsbtReservations reservations = 6;
 * @return {!Array<!proto.cln.FundpsbtReservations>}
 */
proto.cln.FundpsbtResponse.prototype.getReservationsList = function() {
  return /** @type{!Array<!proto.cln.FundpsbtReservations>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.FundpsbtReservations, 6));
};


/**
 * @param {!Array<!proto.cln.FundpsbtReservations>} value
 * @return {!proto.cln.FundpsbtResponse} returns this
*/
proto.cln.FundpsbtResponse.prototype.setReservationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.cln.FundpsbtReservations=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.FundpsbtReservations}
 */
proto.cln.FundpsbtResponse.prototype.addReservations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.cln.FundpsbtReservations, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.FundpsbtResponse} returns this
 */
proto.cln.FundpsbtResponse.prototype.clearReservationsList = function() {
  return this.setReservationsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.FundpsbtReservations.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.FundpsbtReservations.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.FundpsbtReservations} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FundpsbtReservations.toObject = function(includeInstance, msg) {
  var f, obj = {
    txid: msg.getTxid_asB64(),
    vout: jspb.Message.getFieldWithDefault(msg, 2, 0),
    wasReserved: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    reserved: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    reservedToBlock: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.FundpsbtReservations}
 */
proto.cln.FundpsbtReservations.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.FundpsbtReservations;
  return proto.cln.FundpsbtReservations.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.FundpsbtReservations} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.FundpsbtReservations}
 */
proto.cln.FundpsbtReservations.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVout(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWasReserved(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReserved(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setReservedToBlock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.FundpsbtReservations.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.FundpsbtReservations.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.FundpsbtReservations} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FundpsbtReservations.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getVout();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getWasReserved();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getReserved();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getReservedToBlock();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * optional bytes txid = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.FundpsbtReservations.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes txid = 1;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.FundpsbtReservations.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.FundpsbtReservations.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.FundpsbtReservations} returns this
 */
proto.cln.FundpsbtReservations.prototype.setTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint32 vout = 2;
 * @return {number}
 */
proto.cln.FundpsbtReservations.prototype.getVout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FundpsbtReservations} returns this
 */
proto.cln.FundpsbtReservations.prototype.setVout = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool was_reserved = 3;
 * @return {boolean}
 */
proto.cln.FundpsbtReservations.prototype.getWasReserved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.FundpsbtReservations} returns this
 */
proto.cln.FundpsbtReservations.prototype.setWasReserved = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool reserved = 4;
 * @return {boolean}
 */
proto.cln.FundpsbtReservations.prototype.getReserved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.FundpsbtReservations} returns this
 */
proto.cln.FundpsbtReservations.prototype.setReserved = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional uint32 reserved_to_block = 5;
 * @return {number}
 */
proto.cln.FundpsbtReservations.prototype.getReservedToBlock = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FundpsbtReservations} returns this
 */
proto.cln.FundpsbtReservations.prototype.setReservedToBlock = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SendpsbtRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SendpsbtRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SendpsbtRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendpsbtRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    psbt: jspb.Message.getFieldWithDefault(msg, 1, ""),
    reserve: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SendpsbtRequest}
 */
proto.cln.SendpsbtRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SendpsbtRequest;
  return proto.cln.SendpsbtRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SendpsbtRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SendpsbtRequest}
 */
proto.cln.SendpsbtRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPsbt(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReserve(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SendpsbtRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SendpsbtRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SendpsbtRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendpsbtRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPsbt();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string psbt = 1;
 * @return {string}
 */
proto.cln.SendpsbtRequest.prototype.getPsbt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SendpsbtRequest} returns this
 */
proto.cln.SendpsbtRequest.prototype.setPsbt = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool reserve = 2;
 * @return {boolean}
 */
proto.cln.SendpsbtRequest.prototype.getReserve = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.SendpsbtRequest} returns this
 */
proto.cln.SendpsbtRequest.prototype.setReserve = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SendpsbtRequest} returns this
 */
proto.cln.SendpsbtRequest.prototype.clearReserve = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SendpsbtRequest.prototype.hasReserve = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SendpsbtResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SendpsbtResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SendpsbtResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendpsbtResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    tx: msg.getTx_asB64(),
    txid: msg.getTxid_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SendpsbtResponse}
 */
proto.cln.SendpsbtResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SendpsbtResponse;
  return proto.cln.SendpsbtResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SendpsbtResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SendpsbtResponse}
 */
proto.cln.SendpsbtResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTx(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SendpsbtResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SendpsbtResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SendpsbtResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendpsbtResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTx_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional bytes tx = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendpsbtResponse.prototype.getTx = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes tx = 1;
 * This is a type-conversion wrapper around `getTx()`
 * @return {string}
 */
proto.cln.SendpsbtResponse.prototype.getTx_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTx()));
};


/**
 * optional bytes tx = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTx()`
 * @return {!Uint8Array}
 */
proto.cln.SendpsbtResponse.prototype.getTx_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTx()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendpsbtResponse} returns this
 */
proto.cln.SendpsbtResponse.prototype.setTx = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes txid = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendpsbtResponse.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes txid = 2;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.SendpsbtResponse.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.SendpsbtResponse.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendpsbtResponse} returns this
 */
proto.cln.SendpsbtResponse.prototype.setTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.SignpsbtRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SignpsbtRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SignpsbtRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SignpsbtRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SignpsbtRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    psbt: jspb.Message.getFieldWithDefault(msg, 1, ""),
    signonlyList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SignpsbtRequest}
 */
proto.cln.SignpsbtRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SignpsbtRequest;
  return proto.cln.SignpsbtRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SignpsbtRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SignpsbtRequest}
 */
proto.cln.SignpsbtRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPsbt(value);
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSignonly(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SignpsbtRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SignpsbtRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SignpsbtRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SignpsbtRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPsbt();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSignonlyList();
  if (f.length > 0) {
    writer.writePackedUint32(
      2,
      f
    );
  }
};


/**
 * optional string psbt = 1;
 * @return {string}
 */
proto.cln.SignpsbtRequest.prototype.getPsbt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SignpsbtRequest} returns this
 */
proto.cln.SignpsbtRequest.prototype.setPsbt = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated uint32 signonly = 2;
 * @return {!Array<number>}
 */
proto.cln.SignpsbtRequest.prototype.getSignonlyList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.cln.SignpsbtRequest} returns this
 */
proto.cln.SignpsbtRequest.prototype.setSignonlyList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.cln.SignpsbtRequest} returns this
 */
proto.cln.SignpsbtRequest.prototype.addSignonly = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.SignpsbtRequest} returns this
 */
proto.cln.SignpsbtRequest.prototype.clearSignonlyList = function() {
  return this.setSignonlyList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SignpsbtResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SignpsbtResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SignpsbtResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SignpsbtResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    signedPsbt: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SignpsbtResponse}
 */
proto.cln.SignpsbtResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SignpsbtResponse;
  return proto.cln.SignpsbtResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SignpsbtResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SignpsbtResponse}
 */
proto.cln.SignpsbtResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignedPsbt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SignpsbtResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SignpsbtResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SignpsbtResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SignpsbtResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSignedPsbt();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string signed_psbt = 1;
 * @return {string}
 */
proto.cln.SignpsbtResponse.prototype.getSignedPsbt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SignpsbtResponse} returns this
 */
proto.cln.SignpsbtResponse.prototype.setSignedPsbt = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.UtxopsbtRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.UtxopsbtRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.UtxopsbtRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.UtxopsbtRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.UtxopsbtRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    satoshi: (f = msg.getSatoshi()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    feerate: (f = msg.getFeerate()) && cln_primitives_pb.Feerate.toObject(includeInstance, f),
    startweight: jspb.Message.getFieldWithDefault(msg, 3, 0),
    utxosList: jspb.Message.toObjectList(msg.getUtxosList(),
    cln_primitives_pb.Outpoint.toObject, includeInstance),
    reserve: jspb.Message.getFieldWithDefault(msg, 5, 0),
    reservedok: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    locktime: jspb.Message.getFieldWithDefault(msg, 6, 0),
    minWitnessWeight: jspb.Message.getFieldWithDefault(msg, 7, 0),
    excessAsChange: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    openingAnchorChannel: jspb.Message.getBooleanFieldWithDefault(msg, 10, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.UtxopsbtRequest}
 */
proto.cln.UtxopsbtRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.UtxopsbtRequest;
  return proto.cln.UtxopsbtRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.UtxopsbtRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.UtxopsbtRequest}
 */
proto.cln.UtxopsbtRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setSatoshi(value);
      break;
    case 2:
      var value = new cln_primitives_pb.Feerate;
      reader.readMessage(value,cln_primitives_pb.Feerate.deserializeBinaryFromReader);
      msg.setFeerate(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStartweight(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Outpoint;
      reader.readMessage(value,cln_primitives_pb.Outpoint.deserializeBinaryFromReader);
      msg.addUtxos(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setReserve(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReservedok(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLocktime(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinWitnessWeight(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExcessAsChange(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOpeningAnchorChannel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.UtxopsbtRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.UtxopsbtRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.UtxopsbtRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.UtxopsbtRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSatoshi();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getFeerate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cln_primitives_pb.Feerate.serializeBinaryToWriter
    );
  }
  f = message.getStartweight();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getUtxosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      cln_primitives_pb.Outpoint.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
};


/**
 * optional Amount satoshi = 1;
 * @return {?proto.cln.Amount}
 */
proto.cln.UtxopsbtRequest.prototype.getSatoshi = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 1));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.UtxopsbtRequest} returns this
*/
proto.cln.UtxopsbtRequest.prototype.setSatoshi = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.UtxopsbtRequest} returns this
 */
proto.cln.UtxopsbtRequest.prototype.clearSatoshi = function() {
  return this.setSatoshi(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.UtxopsbtRequest.prototype.hasSatoshi = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Feerate feerate = 2;
 * @return {?proto.cln.Feerate}
 */
proto.cln.UtxopsbtRequest.prototype.getFeerate = function() {
  return /** @type{?proto.cln.Feerate} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Feerate, 2));
};


/**
 * @param {?proto.cln.Feerate|undefined} value
 * @return {!proto.cln.UtxopsbtRequest} returns this
*/
proto.cln.UtxopsbtRequest.prototype.setFeerate = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.UtxopsbtRequest} returns this
 */
proto.cln.UtxopsbtRequest.prototype.clearFeerate = function() {
  return this.setFeerate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.UtxopsbtRequest.prototype.hasFeerate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 startweight = 3;
 * @return {number}
 */
proto.cln.UtxopsbtRequest.prototype.getStartweight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.UtxopsbtRequest} returns this
 */
proto.cln.UtxopsbtRequest.prototype.setStartweight = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated Outpoint utxos = 4;
 * @return {!Array<!proto.cln.Outpoint>}
 */
proto.cln.UtxopsbtRequest.prototype.getUtxosList = function() {
  return /** @type{!Array<!proto.cln.Outpoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, cln_primitives_pb.Outpoint, 4));
};


/**
 * @param {!Array<!proto.cln.Outpoint>} value
 * @return {!proto.cln.UtxopsbtRequest} returns this
*/
proto.cln.UtxopsbtRequest.prototype.setUtxosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.cln.Outpoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.Outpoint}
 */
proto.cln.UtxopsbtRequest.prototype.addUtxos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.cln.Outpoint, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.UtxopsbtRequest} returns this
 */
proto.cln.UtxopsbtRequest.prototype.clearUtxosList = function() {
  return this.setUtxosList([]);
};


/**
 * optional uint32 reserve = 5;
 * @return {number}
 */
proto.cln.UtxopsbtRequest.prototype.getReserve = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.UtxopsbtRequest} returns this
 */
proto.cln.UtxopsbtRequest.prototype.setReserve = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.UtxopsbtRequest} returns this
 */
proto.cln.UtxopsbtRequest.prototype.clearReserve = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.UtxopsbtRequest.prototype.hasReserve = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool reservedok = 8;
 * @return {boolean}
 */
proto.cln.UtxopsbtRequest.prototype.getReservedok = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.UtxopsbtRequest} returns this
 */
proto.cln.UtxopsbtRequest.prototype.setReservedok = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.UtxopsbtRequest} returns this
 */
proto.cln.UtxopsbtRequest.prototype.clearReservedok = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.UtxopsbtRequest.prototype.hasReservedok = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 locktime = 6;
 * @return {number}
 */
proto.cln.UtxopsbtRequest.prototype.getLocktime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.UtxopsbtRequest} returns this
 */
proto.cln.UtxopsbtRequest.prototype.setLocktime = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.UtxopsbtRequest} returns this
 */
proto.cln.UtxopsbtRequest.prototype.clearLocktime = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.UtxopsbtRequest.prototype.hasLocktime = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 min_witness_weight = 7;
 * @return {number}
 */
proto.cln.UtxopsbtRequest.prototype.getMinWitnessWeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.UtxopsbtRequest} returns this
 */
proto.cln.UtxopsbtRequest.prototype.setMinWitnessWeight = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.UtxopsbtRequest} returns this
 */
proto.cln.UtxopsbtRequest.prototype.clearMinWitnessWeight = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.UtxopsbtRequest.prototype.hasMinWitnessWeight = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool excess_as_change = 9;
 * @return {boolean}
 */
proto.cln.UtxopsbtRequest.prototype.getExcessAsChange = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.UtxopsbtRequest} returns this
 */
proto.cln.UtxopsbtRequest.prototype.setExcessAsChange = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.UtxopsbtRequest} returns this
 */
proto.cln.UtxopsbtRequest.prototype.clearExcessAsChange = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.UtxopsbtRequest.prototype.hasExcessAsChange = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool opening_anchor_channel = 10;
 * @return {boolean}
 */
proto.cln.UtxopsbtRequest.prototype.getOpeningAnchorChannel = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.UtxopsbtRequest} returns this
 */
proto.cln.UtxopsbtRequest.prototype.setOpeningAnchorChannel = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.UtxopsbtRequest} returns this
 */
proto.cln.UtxopsbtRequest.prototype.clearOpeningAnchorChannel = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.UtxopsbtRequest.prototype.hasOpeningAnchorChannel = function() {
  return jspb.Message.getField(this, 10) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.UtxopsbtResponse.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.UtxopsbtResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.UtxopsbtResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.UtxopsbtResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.UtxopsbtResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    psbt: jspb.Message.getFieldWithDefault(msg, 1, ""),
    feeratePerKw: jspb.Message.getFieldWithDefault(msg, 2, 0),
    estimatedFinalWeight: jspb.Message.getFieldWithDefault(msg, 3, 0),
    excessMsat: (f = msg.getExcessMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    changeOutnum: jspb.Message.getFieldWithDefault(msg, 5, 0),
    reservationsList: jspb.Message.toObjectList(msg.getReservationsList(),
    proto.cln.UtxopsbtReservations.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.UtxopsbtResponse}
 */
proto.cln.UtxopsbtResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.UtxopsbtResponse;
  return proto.cln.UtxopsbtResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.UtxopsbtResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.UtxopsbtResponse}
 */
proto.cln.UtxopsbtResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPsbt(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFeeratePerKw(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setEstimatedFinalWeight(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setExcessMsat(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setChangeOutnum(value);
      break;
    case 6:
      var value = new proto.cln.UtxopsbtReservations;
      reader.readMessage(value,proto.cln.UtxopsbtReservations.deserializeBinaryFromReader);
      msg.addReservations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.UtxopsbtResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.UtxopsbtResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.UtxopsbtResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.UtxopsbtResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPsbt();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFeeratePerKw();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getEstimatedFinalWeight();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getExcessMsat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getReservationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.cln.UtxopsbtReservations.serializeBinaryToWriter
    );
  }
};


/**
 * optional string psbt = 1;
 * @return {string}
 */
proto.cln.UtxopsbtResponse.prototype.getPsbt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.UtxopsbtResponse} returns this
 */
proto.cln.UtxopsbtResponse.prototype.setPsbt = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 feerate_per_kw = 2;
 * @return {number}
 */
proto.cln.UtxopsbtResponse.prototype.getFeeratePerKw = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.UtxopsbtResponse} returns this
 */
proto.cln.UtxopsbtResponse.prototype.setFeeratePerKw = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 estimated_final_weight = 3;
 * @return {number}
 */
proto.cln.UtxopsbtResponse.prototype.getEstimatedFinalWeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.UtxopsbtResponse} returns this
 */
proto.cln.UtxopsbtResponse.prototype.setEstimatedFinalWeight = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional Amount excess_msat = 4;
 * @return {?proto.cln.Amount}
 */
proto.cln.UtxopsbtResponse.prototype.getExcessMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 4));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.UtxopsbtResponse} returns this
*/
proto.cln.UtxopsbtResponse.prototype.setExcessMsat = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.UtxopsbtResponse} returns this
 */
proto.cln.UtxopsbtResponse.prototype.clearExcessMsat = function() {
  return this.setExcessMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.UtxopsbtResponse.prototype.hasExcessMsat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 change_outnum = 5;
 * @return {number}
 */
proto.cln.UtxopsbtResponse.prototype.getChangeOutnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.UtxopsbtResponse} returns this
 */
proto.cln.UtxopsbtResponse.prototype.setChangeOutnum = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.UtxopsbtResponse} returns this
 */
proto.cln.UtxopsbtResponse.prototype.clearChangeOutnum = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.UtxopsbtResponse.prototype.hasChangeOutnum = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated UtxopsbtReservations reservations = 6;
 * @return {!Array<!proto.cln.UtxopsbtReservations>}
 */
proto.cln.UtxopsbtResponse.prototype.getReservationsList = function() {
  return /** @type{!Array<!proto.cln.UtxopsbtReservations>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.UtxopsbtReservations, 6));
};


/**
 * @param {!Array<!proto.cln.UtxopsbtReservations>} value
 * @return {!proto.cln.UtxopsbtResponse} returns this
*/
proto.cln.UtxopsbtResponse.prototype.setReservationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.cln.UtxopsbtReservations=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.UtxopsbtReservations}
 */
proto.cln.UtxopsbtResponse.prototype.addReservations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.cln.UtxopsbtReservations, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.UtxopsbtResponse} returns this
 */
proto.cln.UtxopsbtResponse.prototype.clearReservationsList = function() {
  return this.setReservationsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.UtxopsbtReservations.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.UtxopsbtReservations.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.UtxopsbtReservations} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.UtxopsbtReservations.toObject = function(includeInstance, msg) {
  var f, obj = {
    txid: msg.getTxid_asB64(),
    vout: jspb.Message.getFieldWithDefault(msg, 2, 0),
    wasReserved: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    reserved: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    reservedToBlock: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.UtxopsbtReservations}
 */
proto.cln.UtxopsbtReservations.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.UtxopsbtReservations;
  return proto.cln.UtxopsbtReservations.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.UtxopsbtReservations} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.UtxopsbtReservations}
 */
proto.cln.UtxopsbtReservations.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVout(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWasReserved(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReserved(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setReservedToBlock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.UtxopsbtReservations.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.UtxopsbtReservations.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.UtxopsbtReservations} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.UtxopsbtReservations.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getVout();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getWasReserved();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getReserved();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getReservedToBlock();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * optional bytes txid = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.UtxopsbtReservations.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes txid = 1;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.UtxopsbtReservations.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.UtxopsbtReservations.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.UtxopsbtReservations} returns this
 */
proto.cln.UtxopsbtReservations.prototype.setTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint32 vout = 2;
 * @return {number}
 */
proto.cln.UtxopsbtReservations.prototype.getVout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.UtxopsbtReservations} returns this
 */
proto.cln.UtxopsbtReservations.prototype.setVout = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool was_reserved = 3;
 * @return {boolean}
 */
proto.cln.UtxopsbtReservations.prototype.getWasReserved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.UtxopsbtReservations} returns this
 */
proto.cln.UtxopsbtReservations.prototype.setWasReserved = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool reserved = 4;
 * @return {boolean}
 */
proto.cln.UtxopsbtReservations.prototype.getReserved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.UtxopsbtReservations} returns this
 */
proto.cln.UtxopsbtReservations.prototype.setReserved = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional uint32 reserved_to_block = 5;
 * @return {number}
 */
proto.cln.UtxopsbtReservations.prototype.getReservedToBlock = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.UtxopsbtReservations} returns this
 */
proto.cln.UtxopsbtReservations.prototype.setReservedToBlock = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.TxdiscardRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.TxdiscardRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.TxdiscardRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.TxdiscardRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    txid: msg.getTxid_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.TxdiscardRequest}
 */
proto.cln.TxdiscardRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.TxdiscardRequest;
  return proto.cln.TxdiscardRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.TxdiscardRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.TxdiscardRequest}
 */
proto.cln.TxdiscardRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.TxdiscardRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.TxdiscardRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.TxdiscardRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.TxdiscardRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes txid = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.TxdiscardRequest.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes txid = 1;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.TxdiscardRequest.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.TxdiscardRequest.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.TxdiscardRequest} returns this
 */
proto.cln.TxdiscardRequest.prototype.setTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.TxdiscardResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.TxdiscardResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.TxdiscardResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.TxdiscardResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    unsignedTx: msg.getUnsignedTx_asB64(),
    txid: msg.getTxid_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.TxdiscardResponse}
 */
proto.cln.TxdiscardResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.TxdiscardResponse;
  return proto.cln.TxdiscardResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.TxdiscardResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.TxdiscardResponse}
 */
proto.cln.TxdiscardResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setUnsignedTx(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.TxdiscardResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.TxdiscardResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.TxdiscardResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.TxdiscardResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUnsignedTx_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional bytes unsigned_tx = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.TxdiscardResponse.prototype.getUnsignedTx = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes unsigned_tx = 1;
 * This is a type-conversion wrapper around `getUnsignedTx()`
 * @return {string}
 */
proto.cln.TxdiscardResponse.prototype.getUnsignedTx_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getUnsignedTx()));
};


/**
 * optional bytes unsigned_tx = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getUnsignedTx()`
 * @return {!Uint8Array}
 */
proto.cln.TxdiscardResponse.prototype.getUnsignedTx_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getUnsignedTx()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.TxdiscardResponse} returns this
 */
proto.cln.TxdiscardResponse.prototype.setUnsignedTx = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes txid = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.TxdiscardResponse.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes txid = 2;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.TxdiscardResponse.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.TxdiscardResponse.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.TxdiscardResponse} returns this
 */
proto.cln.TxdiscardResponse.prototype.setTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.TxprepareRequest.repeatedFields_ = [5,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.TxprepareRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.TxprepareRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.TxprepareRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.TxprepareRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    outputsList: jspb.Message.toObjectList(msg.getOutputsList(),
    cln_primitives_pb.OutputDesc.toObject, includeInstance),
    feerate: (f = msg.getFeerate()) && cln_primitives_pb.Feerate.toObject(includeInstance, f),
    minconf: jspb.Message.getFieldWithDefault(msg, 3, 0),
    utxosList: jspb.Message.toObjectList(msg.getUtxosList(),
    cln_primitives_pb.Outpoint.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.TxprepareRequest}
 */
proto.cln.TxprepareRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.TxprepareRequest;
  return proto.cln.TxprepareRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.TxprepareRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.TxprepareRequest}
 */
proto.cln.TxprepareRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 5:
      var value = new cln_primitives_pb.OutputDesc;
      reader.readMessage(value,cln_primitives_pb.OutputDesc.deserializeBinaryFromReader);
      msg.addOutputs(value);
      break;
    case 2:
      var value = new cln_primitives_pb.Feerate;
      reader.readMessage(value,cln_primitives_pb.Feerate.deserializeBinaryFromReader);
      msg.setFeerate(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinconf(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Outpoint;
      reader.readMessage(value,cln_primitives_pb.Outpoint.deserializeBinaryFromReader);
      msg.addUtxos(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.TxprepareRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.TxprepareRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.TxprepareRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.TxprepareRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOutputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      cln_primitives_pb.OutputDesc.serializeBinaryToWriter
    );
  }
  f = message.getFeerate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cln_primitives_pb.Feerate.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getUtxosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      cln_primitives_pb.Outpoint.serializeBinaryToWriter
    );
  }
};


/**
 * repeated OutputDesc outputs = 5;
 * @return {!Array<!proto.cln.OutputDesc>}
 */
proto.cln.TxprepareRequest.prototype.getOutputsList = function() {
  return /** @type{!Array<!proto.cln.OutputDesc>} */ (
    jspb.Message.getRepeatedWrapperField(this, cln_primitives_pb.OutputDesc, 5));
};


/**
 * @param {!Array<!proto.cln.OutputDesc>} value
 * @return {!proto.cln.TxprepareRequest} returns this
*/
proto.cln.TxprepareRequest.prototype.setOutputsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.cln.OutputDesc=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.OutputDesc}
 */
proto.cln.TxprepareRequest.prototype.addOutputs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.cln.OutputDesc, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.TxprepareRequest} returns this
 */
proto.cln.TxprepareRequest.prototype.clearOutputsList = function() {
  return this.setOutputsList([]);
};


/**
 * optional Feerate feerate = 2;
 * @return {?proto.cln.Feerate}
 */
proto.cln.TxprepareRequest.prototype.getFeerate = function() {
  return /** @type{?proto.cln.Feerate} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Feerate, 2));
};


/**
 * @param {?proto.cln.Feerate|undefined} value
 * @return {!proto.cln.TxprepareRequest} returns this
*/
proto.cln.TxprepareRequest.prototype.setFeerate = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.TxprepareRequest} returns this
 */
proto.cln.TxprepareRequest.prototype.clearFeerate = function() {
  return this.setFeerate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.TxprepareRequest.prototype.hasFeerate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 minconf = 3;
 * @return {number}
 */
proto.cln.TxprepareRequest.prototype.getMinconf = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.TxprepareRequest} returns this
 */
proto.cln.TxprepareRequest.prototype.setMinconf = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.TxprepareRequest} returns this
 */
proto.cln.TxprepareRequest.prototype.clearMinconf = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.TxprepareRequest.prototype.hasMinconf = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Outpoint utxos = 4;
 * @return {!Array<!proto.cln.Outpoint>}
 */
proto.cln.TxprepareRequest.prototype.getUtxosList = function() {
  return /** @type{!Array<!proto.cln.Outpoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, cln_primitives_pb.Outpoint, 4));
};


/**
 * @param {!Array<!proto.cln.Outpoint>} value
 * @return {!proto.cln.TxprepareRequest} returns this
*/
proto.cln.TxprepareRequest.prototype.setUtxosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.cln.Outpoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.Outpoint}
 */
proto.cln.TxprepareRequest.prototype.addUtxos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.cln.Outpoint, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.TxprepareRequest} returns this
 */
proto.cln.TxprepareRequest.prototype.clearUtxosList = function() {
  return this.setUtxosList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.TxprepareResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.TxprepareResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.TxprepareResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.TxprepareResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    psbt: jspb.Message.getFieldWithDefault(msg, 1, ""),
    unsignedTx: msg.getUnsignedTx_asB64(),
    txid: msg.getTxid_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.TxprepareResponse}
 */
proto.cln.TxprepareResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.TxprepareResponse;
  return proto.cln.TxprepareResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.TxprepareResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.TxprepareResponse}
 */
proto.cln.TxprepareResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPsbt(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setUnsignedTx(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.TxprepareResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.TxprepareResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.TxprepareResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.TxprepareResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPsbt();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUnsignedTx_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional string psbt = 1;
 * @return {string}
 */
proto.cln.TxprepareResponse.prototype.getPsbt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.TxprepareResponse} returns this
 */
proto.cln.TxprepareResponse.prototype.setPsbt = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes unsigned_tx = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.TxprepareResponse.prototype.getUnsignedTx = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes unsigned_tx = 2;
 * This is a type-conversion wrapper around `getUnsignedTx()`
 * @return {string}
 */
proto.cln.TxprepareResponse.prototype.getUnsignedTx_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getUnsignedTx()));
};


/**
 * optional bytes unsigned_tx = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getUnsignedTx()`
 * @return {!Uint8Array}
 */
proto.cln.TxprepareResponse.prototype.getUnsignedTx_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getUnsignedTx()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.TxprepareResponse} returns this
 */
proto.cln.TxprepareResponse.prototype.setUnsignedTx = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes txid = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.TxprepareResponse.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes txid = 3;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.TxprepareResponse.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.TxprepareResponse.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.TxprepareResponse} returns this
 */
proto.cln.TxprepareResponse.prototype.setTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.TxsendRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.TxsendRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.TxsendRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.TxsendRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    txid: msg.getTxid_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.TxsendRequest}
 */
proto.cln.TxsendRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.TxsendRequest;
  return proto.cln.TxsendRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.TxsendRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.TxsendRequest}
 */
proto.cln.TxsendRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.TxsendRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.TxsendRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.TxsendRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.TxsendRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes txid = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.TxsendRequest.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes txid = 1;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.TxsendRequest.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.TxsendRequest.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.TxsendRequest} returns this
 */
proto.cln.TxsendRequest.prototype.setTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.TxsendResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.TxsendResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.TxsendResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.TxsendResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    psbt: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tx: msg.getTx_asB64(),
    txid: msg.getTxid_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.TxsendResponse}
 */
proto.cln.TxsendResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.TxsendResponse;
  return proto.cln.TxsendResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.TxsendResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.TxsendResponse}
 */
proto.cln.TxsendResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPsbt(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTx(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.TxsendResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.TxsendResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.TxsendResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.TxsendResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPsbt();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTx_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional string psbt = 1;
 * @return {string}
 */
proto.cln.TxsendResponse.prototype.getPsbt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.TxsendResponse} returns this
 */
proto.cln.TxsendResponse.prototype.setPsbt = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes tx = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.TxsendResponse.prototype.getTx = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes tx = 2;
 * This is a type-conversion wrapper around `getTx()`
 * @return {string}
 */
proto.cln.TxsendResponse.prototype.getTx_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTx()));
};


/**
 * optional bytes tx = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTx()`
 * @return {!Uint8Array}
 */
proto.cln.TxsendResponse.prototype.getTx_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTx()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.TxsendResponse} returns this
 */
proto.cln.TxsendResponse.prototype.setTx = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes txid = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.TxsendResponse.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes txid = 3;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.TxsendResponse.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.TxsendResponse.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.TxsendResponse} returns this
 */
proto.cln.TxsendResponse.prototype.setTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpeerchannelsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpeerchannelsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpeerchannelsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpeerchannelsRequest}
 */
proto.cln.ListpeerchannelsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpeerchannelsRequest;
  return proto.cln.ListpeerchannelsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpeerchannelsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpeerchannelsRequest}
 */
proto.cln.ListpeerchannelsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpeerchannelsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpeerchannelsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpeerchannelsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpeerchannelsRequest.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes id = 1;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.cln.ListpeerchannelsRequest.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.cln.ListpeerchannelsRequest.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpeerchannelsRequest} returns this
 */
proto.cln.ListpeerchannelsRequest.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsRequest} returns this
 */
proto.cln.ListpeerchannelsRequest.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListpeerchannelsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpeerchannelsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpeerchannelsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpeerchannelsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelsList: jspb.Message.toObjectList(msg.getChannelsList(),
    proto.cln.ListpeerchannelsChannels.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpeerchannelsResponse}
 */
proto.cln.ListpeerchannelsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpeerchannelsResponse;
  return proto.cln.ListpeerchannelsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpeerchannelsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpeerchannelsResponse}
 */
proto.cln.ListpeerchannelsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.ListpeerchannelsChannels;
      reader.readMessage(value,proto.cln.ListpeerchannelsChannels.deserializeBinaryFromReader);
      msg.addChannels(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpeerchannelsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpeerchannelsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpeerchannelsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.ListpeerchannelsChannels.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ListpeerchannelsChannels channels = 1;
 * @return {!Array<!proto.cln.ListpeerchannelsChannels>}
 */
proto.cln.ListpeerchannelsResponse.prototype.getChannelsList = function() {
  return /** @type{!Array<!proto.cln.ListpeerchannelsChannels>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListpeerchannelsChannels, 1));
};


/**
 * @param {!Array<!proto.cln.ListpeerchannelsChannels>} value
 * @return {!proto.cln.ListpeerchannelsResponse} returns this
*/
proto.cln.ListpeerchannelsResponse.prototype.setChannelsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.ListpeerchannelsChannels=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListpeerchannelsChannels}
 */
proto.cln.ListpeerchannelsResponse.prototype.addChannels = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.ListpeerchannelsChannels, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListpeerchannelsResponse} returns this
 */
proto.cln.ListpeerchannelsResponse.prototype.clearChannelsList = function() {
  return this.setChannelsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListpeerchannelsChannels.repeatedFields_ = [16,43,52];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpeerchannelsChannels.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpeerchannelsChannels.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpeerchannelsChannels} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsChannels.toObject = function(includeInstance, msg) {
  var f, obj = {
    peerId: msg.getPeerId_asB64(),
    peerConnected: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    state: jspb.Message.getFieldWithDefault(msg, 3, 0),
    scratchTxid: msg.getScratchTxid_asB64(),
    ignoreFeeLimits: jspb.Message.getBooleanFieldWithDefault(msg, 54, false),
    feerate: (f = msg.getFeerate()) && proto.cln.ListpeerchannelsChannelsFeerate.toObject(includeInstance, f),
    owner: jspb.Message.getFieldWithDefault(msg, 7, ""),
    shortChannelId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    channelId: msg.getChannelId_asB64(),
    fundingTxid: msg.getFundingTxid_asB64(),
    fundingOutnum: jspb.Message.getFieldWithDefault(msg, 11, 0),
    initialFeerate: jspb.Message.getFieldWithDefault(msg, 12, ""),
    lastFeerate: jspb.Message.getFieldWithDefault(msg, 13, ""),
    nextFeerate: jspb.Message.getFieldWithDefault(msg, 14, ""),
    nextFeeStep: jspb.Message.getFieldWithDefault(msg, 15, 0),
    inflightList: jspb.Message.toObjectList(msg.getInflightList(),
    proto.cln.ListpeerchannelsChannelsInflight.toObject, includeInstance),
    closeTo: msg.getCloseTo_asB64(),
    pb_private: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
    opener: jspb.Message.getFieldWithDefault(msg, 19, 0),
    closer: jspb.Message.getFieldWithDefault(msg, 20, 0),
    funding: (f = msg.getFunding()) && proto.cln.ListpeerchannelsChannelsFunding.toObject(includeInstance, f),
    toUsMsat: (f = msg.getToUsMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    minToUsMsat: (f = msg.getMinToUsMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    maxToUsMsat: (f = msg.getMaxToUsMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    totalMsat: (f = msg.getTotalMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    feeBaseMsat: (f = msg.getFeeBaseMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    feeProportionalMillionths: jspb.Message.getFieldWithDefault(msg, 28, 0),
    dustLimitMsat: (f = msg.getDustLimitMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    maxTotalHtlcInMsat: (f = msg.getMaxTotalHtlcInMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    theirReserveMsat: (f = msg.getTheirReserveMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    ourReserveMsat: (f = msg.getOurReserveMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    spendableMsat: (f = msg.getSpendableMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    receivableMsat: (f = msg.getReceivableMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    minimumHtlcInMsat: (f = msg.getMinimumHtlcInMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    minimumHtlcOutMsat: (f = msg.getMinimumHtlcOutMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    maximumHtlcOutMsat: (f = msg.getMaximumHtlcOutMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    theirToSelfDelay: jspb.Message.getFieldWithDefault(msg, 38, 0),
    ourToSelfDelay: jspb.Message.getFieldWithDefault(msg, 39, 0),
    maxAcceptedHtlcs: jspb.Message.getFieldWithDefault(msg, 40, 0),
    alias: (f = msg.getAlias()) && proto.cln.ListpeerchannelsChannelsAlias.toObject(includeInstance, f),
    statusList: (f = jspb.Message.getRepeatedField(msg, 43)) == null ? undefined : f,
    inPaymentsOffered: jspb.Message.getFieldWithDefault(msg, 44, 0),
    inOfferedMsat: (f = msg.getInOfferedMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    inPaymentsFulfilled: jspb.Message.getFieldWithDefault(msg, 46, 0),
    inFulfilledMsat: (f = msg.getInFulfilledMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    outPaymentsOffered: jspb.Message.getFieldWithDefault(msg, 48, 0),
    outOfferedMsat: (f = msg.getOutOfferedMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    outPaymentsFulfilled: jspb.Message.getFieldWithDefault(msg, 50, 0),
    outFulfilledMsat: (f = msg.getOutFulfilledMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    htlcsList: jspb.Message.toObjectList(msg.getHtlcsList(),
    proto.cln.ListpeerchannelsChannelsHtlcs.toObject, includeInstance),
    closeToAddr: jspb.Message.getFieldWithDefault(msg, 53, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpeerchannelsChannels}
 */
proto.cln.ListpeerchannelsChannels.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpeerchannelsChannels;
  return proto.cln.ListpeerchannelsChannels.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpeerchannelsChannels} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpeerchannelsChannels}
 */
proto.cln.ListpeerchannelsChannels.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPeerId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPeerConnected(value);
      break;
    case 3:
      var value = /** @type {!proto.cln.ListpeerchannelsChannels.ListpeerchannelsChannelsState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setScratchTxid(value);
      break;
    case 54:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIgnoreFeeLimits(value);
      break;
    case 6:
      var value = new proto.cln.ListpeerchannelsChannelsFeerate;
      reader.readMessage(value,proto.cln.ListpeerchannelsChannelsFeerate.deserializeBinaryFromReader);
      msg.setFeerate(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setShortChannelId(value);
      break;
    case 9:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChannelId(value);
      break;
    case 10:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFundingTxid(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFundingOutnum(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setInitialFeerate(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastFeerate(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextFeerate(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNextFeeStep(value);
      break;
    case 16:
      var value = new proto.cln.ListpeerchannelsChannelsInflight;
      reader.readMessage(value,proto.cln.ListpeerchannelsChannelsInflight.deserializeBinaryFromReader);
      msg.addInflight(value);
      break;
    case 17:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setCloseTo(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPrivate(value);
      break;
    case 19:
      var value = /** @type {!proto.cln.ChannelSide} */ (reader.readEnum());
      msg.setOpener(value);
      break;
    case 20:
      var value = /** @type {!proto.cln.ChannelSide} */ (reader.readEnum());
      msg.setCloser(value);
      break;
    case 22:
      var value = new proto.cln.ListpeerchannelsChannelsFunding;
      reader.readMessage(value,proto.cln.ListpeerchannelsChannelsFunding.deserializeBinaryFromReader);
      msg.setFunding(value);
      break;
    case 23:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setToUsMsat(value);
      break;
    case 24:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setMinToUsMsat(value);
      break;
    case 25:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setMaxToUsMsat(value);
      break;
    case 26:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setTotalMsat(value);
      break;
    case 27:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setFeeBaseMsat(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFeeProportionalMillionths(value);
      break;
    case 29:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setDustLimitMsat(value);
      break;
    case 30:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setMaxTotalHtlcInMsat(value);
      break;
    case 31:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setTheirReserveMsat(value);
      break;
    case 32:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setOurReserveMsat(value);
      break;
    case 33:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setSpendableMsat(value);
      break;
    case 34:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setReceivableMsat(value);
      break;
    case 35:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setMinimumHtlcInMsat(value);
      break;
    case 36:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setMinimumHtlcOutMsat(value);
      break;
    case 37:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setMaximumHtlcOutMsat(value);
      break;
    case 38:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTheirToSelfDelay(value);
      break;
    case 39:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOurToSelfDelay(value);
      break;
    case 40:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxAcceptedHtlcs(value);
      break;
    case 41:
      var value = new proto.cln.ListpeerchannelsChannelsAlias;
      reader.readMessage(value,proto.cln.ListpeerchannelsChannelsAlias.deserializeBinaryFromReader);
      msg.setAlias(value);
      break;
    case 43:
      var value = /** @type {string} */ (reader.readString());
      msg.addStatus(value);
      break;
    case 44:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInPaymentsOffered(value);
      break;
    case 45:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setInOfferedMsat(value);
      break;
    case 46:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInPaymentsFulfilled(value);
      break;
    case 47:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setInFulfilledMsat(value);
      break;
    case 48:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOutPaymentsOffered(value);
      break;
    case 49:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setOutOfferedMsat(value);
      break;
    case 50:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOutPaymentsFulfilled(value);
      break;
    case 51:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setOutFulfilledMsat(value);
      break;
    case 52:
      var value = new proto.cln.ListpeerchannelsChannelsHtlcs;
      reader.readMessage(value,proto.cln.ListpeerchannelsChannelsHtlcs.deserializeBinaryFromReader);
      msg.addHtlcs(value);
      break;
    case 53:
      var value = /** @type {string} */ (reader.readString());
      msg.setCloseToAddr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpeerchannelsChannels.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpeerchannelsChannels.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpeerchannelsChannels} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsChannels.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {!proto.cln.ListpeerchannelsChannels.ListpeerchannelsChannelsState} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 54));
  if (f != null) {
    writer.writeBool(
      54,
      f
    );
  }
  f = message.getFeerate();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.cln.ListpeerchannelsChannelsFeerate.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBytes(
      9,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBytes(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint32(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint32(
      15,
      f
    );
  }
  f = message.getInflightList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      16,
      f,
      proto.cln.ListpeerchannelsChannelsInflight.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeBytes(
      17,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeBool(
      18,
      f
    );
  }
  f = /** @type {!proto.cln.ChannelSide} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeEnum(
      19,
      f
    );
  }
  f = /** @type {!proto.cln.ChannelSide} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeEnum(
      20,
      f
    );
  }
  f = message.getFunding();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.cln.ListpeerchannelsChannelsFunding.serializeBinaryToWriter
    );
  }
  f = message.getToUsMsat();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getMinToUsMsat();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getMaxToUsMsat();
  if (f != null) {
    writer.writeMessage(
      25,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getTotalMsat();
  if (f != null) {
    writer.writeMessage(
      26,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getFeeBaseMsat();
  if (f != null) {
    writer.writeMessage(
      27,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 28));
  if (f != null) {
    writer.writeUint32(
      28,
      f
    );
  }
  f = message.getDustLimitMsat();
  if (f != null) {
    writer.writeMessage(
      29,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getMaxTotalHtlcInMsat();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getTheirReserveMsat();
  if (f != null) {
    writer.writeMessage(
      31,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getOurReserveMsat();
  if (f != null) {
    writer.writeMessage(
      32,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getSpendableMsat();
  if (f != null) {
    writer.writeMessage(
      33,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getReceivableMsat();
  if (f != null) {
    writer.writeMessage(
      34,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getMinimumHtlcInMsat();
  if (f != null) {
    writer.writeMessage(
      35,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getMinimumHtlcOutMsat();
  if (f != null) {
    writer.writeMessage(
      36,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getMaximumHtlcOutMsat();
  if (f != null) {
    writer.writeMessage(
      37,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 38));
  if (f != null) {
    writer.writeUint32(
      38,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 39));
  if (f != null) {
    writer.writeUint32(
      39,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 40));
  if (f != null) {
    writer.writeUint32(
      40,
      f
    );
  }
  f = message.getAlias();
  if (f != null) {
    writer.writeMessage(
      41,
      f,
      proto.cln.ListpeerchannelsChannelsAlias.serializeBinaryToWriter
    );
  }
  f = message.getStatusList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      43,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 44));
  if (f != null) {
    writer.writeUint64(
      44,
      f
    );
  }
  f = message.getInOfferedMsat();
  if (f != null) {
    writer.writeMessage(
      45,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 46));
  if (f != null) {
    writer.writeUint64(
      46,
      f
    );
  }
  f = message.getInFulfilledMsat();
  if (f != null) {
    writer.writeMessage(
      47,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 48));
  if (f != null) {
    writer.writeUint64(
      48,
      f
    );
  }
  f = message.getOutOfferedMsat();
  if (f != null) {
    writer.writeMessage(
      49,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 50));
  if (f != null) {
    writer.writeUint64(
      50,
      f
    );
  }
  f = message.getOutFulfilledMsat();
  if (f != null) {
    writer.writeMessage(
      51,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getHtlcsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      52,
      f,
      proto.cln.ListpeerchannelsChannelsHtlcs.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 53));
  if (f != null) {
    writer.writeString(
      53,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ListpeerchannelsChannels.ListpeerchannelsChannelsState = {
  OPENINGD: 0,
  CHANNELD_AWAITING_LOCKIN: 1,
  CHANNELD_NORMAL: 2,
  CHANNELD_SHUTTING_DOWN: 3,
  CLOSINGD_SIGEXCHANGE: 4,
  CLOSINGD_COMPLETE: 5,
  AWAITING_UNILATERAL: 6,
  FUNDING_SPEND_SEEN: 7,
  ONCHAIN: 8,
  DUALOPEND_OPEN_INIT: 9,
  DUALOPEND_AWAITING_LOCKIN: 10,
  CHANNELD_AWAITING_SPLICE: 11,
  DUALOPEND_OPEN_COMMITTED: 12,
  DUALOPEND_OPEN_COMMIT_READY: 13
};

/**
 * optional bytes peer_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpeerchannelsChannels.prototype.getPeerId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes peer_id = 1;
 * This is a type-conversion wrapper around `getPeerId()`
 * @return {string}
 */
proto.cln.ListpeerchannelsChannels.prototype.getPeerId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPeerId()));
};


/**
 * optional bytes peer_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPeerId()`
 * @return {!Uint8Array}
 */
proto.cln.ListpeerchannelsChannels.prototype.getPeerId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPeerId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setPeerId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearPeerId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasPeerId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool peer_connected = 2;
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.getPeerConnected = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setPeerConnected = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearPeerConnected = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasPeerConnected = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ListpeerchannelsChannelsState state = 3;
 * @return {!proto.cln.ListpeerchannelsChannels.ListpeerchannelsChannelsState}
 */
proto.cln.ListpeerchannelsChannels.prototype.getState = function() {
  return /** @type {!proto.cln.ListpeerchannelsChannels.ListpeerchannelsChannelsState} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.cln.ListpeerchannelsChannels.ListpeerchannelsChannelsState} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setState = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearState = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasState = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bytes scratch_txid = 4;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpeerchannelsChannels.prototype.getScratchTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes scratch_txid = 4;
 * This is a type-conversion wrapper around `getScratchTxid()`
 * @return {string}
 */
proto.cln.ListpeerchannelsChannels.prototype.getScratchTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getScratchTxid()));
};


/**
 * optional bytes scratch_txid = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getScratchTxid()`
 * @return {!Uint8Array}
 */
proto.cln.ListpeerchannelsChannels.prototype.getScratchTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getScratchTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setScratchTxid = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearScratchTxid = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasScratchTxid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool ignore_fee_limits = 54;
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.getIgnoreFeeLimits = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 54, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setIgnoreFeeLimits = function(value) {
  return jspb.Message.setField(this, 54, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearIgnoreFeeLimits = function() {
  return jspb.Message.setField(this, 54, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasIgnoreFeeLimits = function() {
  return jspb.Message.getField(this, 54) != null;
};


/**
 * optional ListpeerchannelsChannelsFeerate feerate = 6;
 * @return {?proto.cln.ListpeerchannelsChannelsFeerate}
 */
proto.cln.ListpeerchannelsChannels.prototype.getFeerate = function() {
  return /** @type{?proto.cln.ListpeerchannelsChannelsFeerate} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListpeerchannelsChannelsFeerate, 6));
};


/**
 * @param {?proto.cln.ListpeerchannelsChannelsFeerate|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setFeerate = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearFeerate = function() {
  return this.setFeerate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasFeerate = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string owner = 7;
 * @return {string}
 */
proto.cln.ListpeerchannelsChannels.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setOwner = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearOwner = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasOwner = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string short_channel_id = 8;
 * @return {string}
 */
proto.cln.ListpeerchannelsChannels.prototype.getShortChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setShortChannelId = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearShortChannelId = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasShortChannelId = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bytes channel_id = 9;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpeerchannelsChannels.prototype.getChannelId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * optional bytes channel_id = 9;
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {string}
 */
proto.cln.ListpeerchannelsChannels.prototype.getChannelId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChannelId()));
};


/**
 * optional bytes channel_id = 9;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {!Uint8Array}
 */
proto.cln.ListpeerchannelsChannels.prototype.getChannelId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChannelId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setChannelId = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearChannelId = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasChannelId = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bytes funding_txid = 10;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpeerchannelsChannels.prototype.getFundingTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * optional bytes funding_txid = 10;
 * This is a type-conversion wrapper around `getFundingTxid()`
 * @return {string}
 */
proto.cln.ListpeerchannelsChannels.prototype.getFundingTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFundingTxid()));
};


/**
 * optional bytes funding_txid = 10;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFundingTxid()`
 * @return {!Uint8Array}
 */
proto.cln.ListpeerchannelsChannels.prototype.getFundingTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFundingTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setFundingTxid = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearFundingTxid = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasFundingTxid = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint32 funding_outnum = 11;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannels.prototype.getFundingOutnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setFundingOutnum = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearFundingOutnum = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasFundingOutnum = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string initial_feerate = 12;
 * @return {string}
 */
proto.cln.ListpeerchannelsChannels.prototype.getInitialFeerate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setInitialFeerate = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearInitialFeerate = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasInitialFeerate = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string last_feerate = 13;
 * @return {string}
 */
proto.cln.ListpeerchannelsChannels.prototype.getLastFeerate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setLastFeerate = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearLastFeerate = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasLastFeerate = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string next_feerate = 14;
 * @return {string}
 */
proto.cln.ListpeerchannelsChannels.prototype.getNextFeerate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setNextFeerate = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearNextFeerate = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasNextFeerate = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional uint32 next_fee_step = 15;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannels.prototype.getNextFeeStep = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setNextFeeStep = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearNextFeeStep = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasNextFeeStep = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * repeated ListpeerchannelsChannelsInflight inflight = 16;
 * @return {!Array<!proto.cln.ListpeerchannelsChannelsInflight>}
 */
proto.cln.ListpeerchannelsChannels.prototype.getInflightList = function() {
  return /** @type{!Array<!proto.cln.ListpeerchannelsChannelsInflight>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListpeerchannelsChannelsInflight, 16));
};


/**
 * @param {!Array<!proto.cln.ListpeerchannelsChannelsInflight>} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setInflightList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 16, value);
};


/**
 * @param {!proto.cln.ListpeerchannelsChannelsInflight=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListpeerchannelsChannelsInflight}
 */
proto.cln.ListpeerchannelsChannels.prototype.addInflight = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.cln.ListpeerchannelsChannelsInflight, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearInflightList = function() {
  return this.setInflightList([]);
};


/**
 * optional bytes close_to = 17;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpeerchannelsChannels.prototype.getCloseTo = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * optional bytes close_to = 17;
 * This is a type-conversion wrapper around `getCloseTo()`
 * @return {string}
 */
proto.cln.ListpeerchannelsChannels.prototype.getCloseTo_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getCloseTo()));
};


/**
 * optional bytes close_to = 17;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCloseTo()`
 * @return {!Uint8Array}
 */
proto.cln.ListpeerchannelsChannels.prototype.getCloseTo_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getCloseTo()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setCloseTo = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearCloseTo = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasCloseTo = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional bool private = 18;
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.getPrivate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setPrivate = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearPrivate = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasPrivate = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional ChannelSide opener = 19;
 * @return {!proto.cln.ChannelSide}
 */
proto.cln.ListpeerchannelsChannels.prototype.getOpener = function() {
  return /** @type {!proto.cln.ChannelSide} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {!proto.cln.ChannelSide} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setOpener = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearOpener = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasOpener = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional ChannelSide closer = 20;
 * @return {!proto.cln.ChannelSide}
 */
proto.cln.ListpeerchannelsChannels.prototype.getCloser = function() {
  return /** @type {!proto.cln.ChannelSide} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {!proto.cln.ChannelSide} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setCloser = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearCloser = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasCloser = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional ListpeerchannelsChannelsFunding funding = 22;
 * @return {?proto.cln.ListpeerchannelsChannelsFunding}
 */
proto.cln.ListpeerchannelsChannels.prototype.getFunding = function() {
  return /** @type{?proto.cln.ListpeerchannelsChannelsFunding} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListpeerchannelsChannelsFunding, 22));
};


/**
 * @param {?proto.cln.ListpeerchannelsChannelsFunding|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setFunding = function(value) {
  return jspb.Message.setWrapperField(this, 22, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearFunding = function() {
  return this.setFunding(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasFunding = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional Amount to_us_msat = 23;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannels.prototype.getToUsMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 23));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setToUsMsat = function(value) {
  return jspb.Message.setWrapperField(this, 23, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearToUsMsat = function() {
  return this.setToUsMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasToUsMsat = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional Amount min_to_us_msat = 24;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannels.prototype.getMinToUsMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 24));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setMinToUsMsat = function(value) {
  return jspb.Message.setWrapperField(this, 24, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearMinToUsMsat = function() {
  return this.setMinToUsMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasMinToUsMsat = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional Amount max_to_us_msat = 25;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannels.prototype.getMaxToUsMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 25));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setMaxToUsMsat = function(value) {
  return jspb.Message.setWrapperField(this, 25, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearMaxToUsMsat = function() {
  return this.setMaxToUsMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasMaxToUsMsat = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional Amount total_msat = 26;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannels.prototype.getTotalMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 26));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setTotalMsat = function(value) {
  return jspb.Message.setWrapperField(this, 26, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearTotalMsat = function() {
  return this.setTotalMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasTotalMsat = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional Amount fee_base_msat = 27;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannels.prototype.getFeeBaseMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 27));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setFeeBaseMsat = function(value) {
  return jspb.Message.setWrapperField(this, 27, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearFeeBaseMsat = function() {
  return this.setFeeBaseMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasFeeBaseMsat = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional uint32 fee_proportional_millionths = 28;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannels.prototype.getFeeProportionalMillionths = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 28, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setFeeProportionalMillionths = function(value) {
  return jspb.Message.setField(this, 28, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearFeeProportionalMillionths = function() {
  return jspb.Message.setField(this, 28, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasFeeProportionalMillionths = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional Amount dust_limit_msat = 29;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannels.prototype.getDustLimitMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 29));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setDustLimitMsat = function(value) {
  return jspb.Message.setWrapperField(this, 29, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearDustLimitMsat = function() {
  return this.setDustLimitMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasDustLimitMsat = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional Amount max_total_htlc_in_msat = 30;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannels.prototype.getMaxTotalHtlcInMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 30));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setMaxTotalHtlcInMsat = function(value) {
  return jspb.Message.setWrapperField(this, 30, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearMaxTotalHtlcInMsat = function() {
  return this.setMaxTotalHtlcInMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasMaxTotalHtlcInMsat = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional Amount their_reserve_msat = 31;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannels.prototype.getTheirReserveMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 31));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setTheirReserveMsat = function(value) {
  return jspb.Message.setWrapperField(this, 31, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearTheirReserveMsat = function() {
  return this.setTheirReserveMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasTheirReserveMsat = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional Amount our_reserve_msat = 32;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannels.prototype.getOurReserveMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 32));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setOurReserveMsat = function(value) {
  return jspb.Message.setWrapperField(this, 32, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearOurReserveMsat = function() {
  return this.setOurReserveMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasOurReserveMsat = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional Amount spendable_msat = 33;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannels.prototype.getSpendableMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 33));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setSpendableMsat = function(value) {
  return jspb.Message.setWrapperField(this, 33, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearSpendableMsat = function() {
  return this.setSpendableMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasSpendableMsat = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * optional Amount receivable_msat = 34;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannels.prototype.getReceivableMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 34));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setReceivableMsat = function(value) {
  return jspb.Message.setWrapperField(this, 34, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearReceivableMsat = function() {
  return this.setReceivableMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasReceivableMsat = function() {
  return jspb.Message.getField(this, 34) != null;
};


/**
 * optional Amount minimum_htlc_in_msat = 35;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannels.prototype.getMinimumHtlcInMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 35));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setMinimumHtlcInMsat = function(value) {
  return jspb.Message.setWrapperField(this, 35, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearMinimumHtlcInMsat = function() {
  return this.setMinimumHtlcInMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasMinimumHtlcInMsat = function() {
  return jspb.Message.getField(this, 35) != null;
};


/**
 * optional Amount minimum_htlc_out_msat = 36;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannels.prototype.getMinimumHtlcOutMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 36));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setMinimumHtlcOutMsat = function(value) {
  return jspb.Message.setWrapperField(this, 36, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearMinimumHtlcOutMsat = function() {
  return this.setMinimumHtlcOutMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasMinimumHtlcOutMsat = function() {
  return jspb.Message.getField(this, 36) != null;
};


/**
 * optional Amount maximum_htlc_out_msat = 37;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannels.prototype.getMaximumHtlcOutMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 37));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setMaximumHtlcOutMsat = function(value) {
  return jspb.Message.setWrapperField(this, 37, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearMaximumHtlcOutMsat = function() {
  return this.setMaximumHtlcOutMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasMaximumHtlcOutMsat = function() {
  return jspb.Message.getField(this, 37) != null;
};


/**
 * optional uint32 their_to_self_delay = 38;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannels.prototype.getTheirToSelfDelay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 38, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setTheirToSelfDelay = function(value) {
  return jspb.Message.setField(this, 38, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearTheirToSelfDelay = function() {
  return jspb.Message.setField(this, 38, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasTheirToSelfDelay = function() {
  return jspb.Message.getField(this, 38) != null;
};


/**
 * optional uint32 our_to_self_delay = 39;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannels.prototype.getOurToSelfDelay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 39, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setOurToSelfDelay = function(value) {
  return jspb.Message.setField(this, 39, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearOurToSelfDelay = function() {
  return jspb.Message.setField(this, 39, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasOurToSelfDelay = function() {
  return jspb.Message.getField(this, 39) != null;
};


/**
 * optional uint32 max_accepted_htlcs = 40;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannels.prototype.getMaxAcceptedHtlcs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 40, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setMaxAcceptedHtlcs = function(value) {
  return jspb.Message.setField(this, 40, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearMaxAcceptedHtlcs = function() {
  return jspb.Message.setField(this, 40, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasMaxAcceptedHtlcs = function() {
  return jspb.Message.getField(this, 40) != null;
};


/**
 * optional ListpeerchannelsChannelsAlias alias = 41;
 * @return {?proto.cln.ListpeerchannelsChannelsAlias}
 */
proto.cln.ListpeerchannelsChannels.prototype.getAlias = function() {
  return /** @type{?proto.cln.ListpeerchannelsChannelsAlias} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListpeerchannelsChannelsAlias, 41));
};


/**
 * @param {?proto.cln.ListpeerchannelsChannelsAlias|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setAlias = function(value) {
  return jspb.Message.setWrapperField(this, 41, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearAlias = function() {
  return this.setAlias(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasAlias = function() {
  return jspb.Message.getField(this, 41) != null;
};


/**
 * repeated string status = 43;
 * @return {!Array<string>}
 */
proto.cln.ListpeerchannelsChannels.prototype.getStatusList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 43));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setStatusList = function(value) {
  return jspb.Message.setField(this, 43, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.addStatus = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 43, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearStatusList = function() {
  return this.setStatusList([]);
};


/**
 * optional uint64 in_payments_offered = 44;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannels.prototype.getInPaymentsOffered = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 44, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setInPaymentsOffered = function(value) {
  return jspb.Message.setField(this, 44, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearInPaymentsOffered = function() {
  return jspb.Message.setField(this, 44, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasInPaymentsOffered = function() {
  return jspb.Message.getField(this, 44) != null;
};


/**
 * optional Amount in_offered_msat = 45;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannels.prototype.getInOfferedMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 45));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setInOfferedMsat = function(value) {
  return jspb.Message.setWrapperField(this, 45, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearInOfferedMsat = function() {
  return this.setInOfferedMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasInOfferedMsat = function() {
  return jspb.Message.getField(this, 45) != null;
};


/**
 * optional uint64 in_payments_fulfilled = 46;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannels.prototype.getInPaymentsFulfilled = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 46, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setInPaymentsFulfilled = function(value) {
  return jspb.Message.setField(this, 46, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearInPaymentsFulfilled = function() {
  return jspb.Message.setField(this, 46, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasInPaymentsFulfilled = function() {
  return jspb.Message.getField(this, 46) != null;
};


/**
 * optional Amount in_fulfilled_msat = 47;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannels.prototype.getInFulfilledMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 47));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setInFulfilledMsat = function(value) {
  return jspb.Message.setWrapperField(this, 47, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearInFulfilledMsat = function() {
  return this.setInFulfilledMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasInFulfilledMsat = function() {
  return jspb.Message.getField(this, 47) != null;
};


/**
 * optional uint64 out_payments_offered = 48;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannels.prototype.getOutPaymentsOffered = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 48, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setOutPaymentsOffered = function(value) {
  return jspb.Message.setField(this, 48, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearOutPaymentsOffered = function() {
  return jspb.Message.setField(this, 48, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasOutPaymentsOffered = function() {
  return jspb.Message.getField(this, 48) != null;
};


/**
 * optional Amount out_offered_msat = 49;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannels.prototype.getOutOfferedMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 49));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setOutOfferedMsat = function(value) {
  return jspb.Message.setWrapperField(this, 49, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearOutOfferedMsat = function() {
  return this.setOutOfferedMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasOutOfferedMsat = function() {
  return jspb.Message.getField(this, 49) != null;
};


/**
 * optional uint64 out_payments_fulfilled = 50;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannels.prototype.getOutPaymentsFulfilled = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 50, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setOutPaymentsFulfilled = function(value) {
  return jspb.Message.setField(this, 50, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearOutPaymentsFulfilled = function() {
  return jspb.Message.setField(this, 50, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasOutPaymentsFulfilled = function() {
  return jspb.Message.getField(this, 50) != null;
};


/**
 * optional Amount out_fulfilled_msat = 51;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannels.prototype.getOutFulfilledMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 51));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setOutFulfilledMsat = function(value) {
  return jspb.Message.setWrapperField(this, 51, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearOutFulfilledMsat = function() {
  return this.setOutFulfilledMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasOutFulfilledMsat = function() {
  return jspb.Message.getField(this, 51) != null;
};


/**
 * repeated ListpeerchannelsChannelsHtlcs htlcs = 52;
 * @return {!Array<!proto.cln.ListpeerchannelsChannelsHtlcs>}
 */
proto.cln.ListpeerchannelsChannels.prototype.getHtlcsList = function() {
  return /** @type{!Array<!proto.cln.ListpeerchannelsChannelsHtlcs>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListpeerchannelsChannelsHtlcs, 52));
};


/**
 * @param {!Array<!proto.cln.ListpeerchannelsChannelsHtlcs>} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
*/
proto.cln.ListpeerchannelsChannels.prototype.setHtlcsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 52, value);
};


/**
 * @param {!proto.cln.ListpeerchannelsChannelsHtlcs=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListpeerchannelsChannelsHtlcs}
 */
proto.cln.ListpeerchannelsChannels.prototype.addHtlcs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 52, opt_value, proto.cln.ListpeerchannelsChannelsHtlcs, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearHtlcsList = function() {
  return this.setHtlcsList([]);
};


/**
 * optional string close_to_addr = 53;
 * @return {string}
 */
proto.cln.ListpeerchannelsChannels.prototype.getCloseToAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 53, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.setCloseToAddr = function(value) {
  return jspb.Message.setField(this, 53, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannels} returns this
 */
proto.cln.ListpeerchannelsChannels.prototype.clearCloseToAddr = function() {
  return jspb.Message.setField(this, 53, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannels.prototype.hasCloseToAddr = function() {
  return jspb.Message.getField(this, 53) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpeerchannelsChannelsFeerate.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpeerchannelsChannelsFeerate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpeerchannelsChannelsFeerate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsChannelsFeerate.toObject = function(includeInstance, msg) {
  var f, obj = {
    perkw: jspb.Message.getFieldWithDefault(msg, 1, 0),
    perkb: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpeerchannelsChannelsFeerate}
 */
proto.cln.ListpeerchannelsChannelsFeerate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpeerchannelsChannelsFeerate;
  return proto.cln.ListpeerchannelsChannelsFeerate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpeerchannelsChannelsFeerate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpeerchannelsChannelsFeerate}
 */
proto.cln.ListpeerchannelsChannelsFeerate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPerkw(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPerkb(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpeerchannelsChannelsFeerate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpeerchannelsChannelsFeerate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpeerchannelsChannelsFeerate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsChannelsFeerate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 perkw = 1;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannelsFeerate.prototype.getPerkw = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannelsFeerate} returns this
 */
proto.cln.ListpeerchannelsChannelsFeerate.prototype.setPerkw = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsFeerate} returns this
 */
proto.cln.ListpeerchannelsChannelsFeerate.prototype.clearPerkw = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsFeerate.prototype.hasPerkw = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 perkb = 2;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannelsFeerate.prototype.getPerkb = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannelsFeerate} returns this
 */
proto.cln.ListpeerchannelsChannelsFeerate.prototype.setPerkb = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsFeerate} returns this
 */
proto.cln.ListpeerchannelsChannelsFeerate.prototype.clearPerkb = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsFeerate.prototype.hasPerkb = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpeerchannelsChannelsInflight.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpeerchannelsChannelsInflight} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsChannelsInflight.toObject = function(includeInstance, msg) {
  var f, obj = {
    fundingTxid: msg.getFundingTxid_asB64(),
    fundingOutnum: jspb.Message.getFieldWithDefault(msg, 2, 0),
    feerate: jspb.Message.getFieldWithDefault(msg, 3, ""),
    totalFundingMsat: (f = msg.getTotalFundingMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    spliceAmount: jspb.Message.getFieldWithDefault(msg, 7, 0),
    ourFundingMsat: (f = msg.getOurFundingMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    scratchTxid: msg.getScratchTxid_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpeerchannelsChannelsInflight}
 */
proto.cln.ListpeerchannelsChannelsInflight.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpeerchannelsChannelsInflight;
  return proto.cln.ListpeerchannelsChannelsInflight.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpeerchannelsChannelsInflight} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpeerchannelsChannelsInflight}
 */
proto.cln.ListpeerchannelsChannelsInflight.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFundingTxid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFundingOutnum(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeerate(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setTotalFundingMsat(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setSpliceAmount(value);
      break;
    case 5:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setOurFundingMsat(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setScratchTxid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpeerchannelsChannelsInflight.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpeerchannelsChannelsInflight} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsChannelsInflight.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTotalFundingMsat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeSint64(
      7,
      f
    );
  }
  f = message.getOurFundingMsat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBytes(
      6,
      f
    );
  }
};


/**
 * optional bytes funding_txid = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.getFundingTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes funding_txid = 1;
 * This is a type-conversion wrapper around `getFundingTxid()`
 * @return {string}
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.getFundingTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFundingTxid()));
};


/**
 * optional bytes funding_txid = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFundingTxid()`
 * @return {!Uint8Array}
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.getFundingTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFundingTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpeerchannelsChannelsInflight} returns this
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.setFundingTxid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsInflight} returns this
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.clearFundingTxid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.hasFundingTxid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 funding_outnum = 2;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.getFundingOutnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannelsInflight} returns this
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.setFundingOutnum = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsInflight} returns this
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.clearFundingOutnum = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.hasFundingOutnum = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string feerate = 3;
 * @return {string}
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.getFeerate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeerchannelsChannelsInflight} returns this
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.setFeerate = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsInflight} returns this
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.clearFeerate = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.hasFeerate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Amount total_funding_msat = 4;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.getTotalFundingMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 4));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannelsInflight} returns this
*/
proto.cln.ListpeerchannelsChannelsInflight.prototype.setTotalFundingMsat = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsInflight} returns this
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.clearTotalFundingMsat = function() {
  return this.setTotalFundingMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.hasTotalFundingMsat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional sint64 splice_amount = 7;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.getSpliceAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannelsInflight} returns this
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.setSpliceAmount = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsInflight} returns this
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.clearSpliceAmount = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.hasSpliceAmount = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Amount our_funding_msat = 5;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.getOurFundingMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 5));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannelsInflight} returns this
*/
proto.cln.ListpeerchannelsChannelsInflight.prototype.setOurFundingMsat = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsInflight} returns this
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.clearOurFundingMsat = function() {
  return this.setOurFundingMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.hasOurFundingMsat = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bytes scratch_txid = 6;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.getScratchTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes scratch_txid = 6;
 * This is a type-conversion wrapper around `getScratchTxid()`
 * @return {string}
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.getScratchTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getScratchTxid()));
};


/**
 * optional bytes scratch_txid = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getScratchTxid()`
 * @return {!Uint8Array}
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.getScratchTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getScratchTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpeerchannelsChannelsInflight} returns this
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.setScratchTxid = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsInflight} returns this
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.clearScratchTxid = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsInflight.prototype.hasScratchTxid = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpeerchannelsChannelsFunding.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpeerchannelsChannelsFunding.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpeerchannelsChannelsFunding} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsChannelsFunding.toObject = function(includeInstance, msg) {
  var f, obj = {
    pushedMsat: (f = msg.getPushedMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    localFundsMsat: (f = msg.getLocalFundsMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    remoteFundsMsat: (f = msg.getRemoteFundsMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    feePaidMsat: (f = msg.getFeePaidMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    feeRcvdMsat: (f = msg.getFeeRcvdMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpeerchannelsChannelsFunding}
 */
proto.cln.ListpeerchannelsChannelsFunding.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpeerchannelsChannelsFunding;
  return proto.cln.ListpeerchannelsChannelsFunding.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpeerchannelsChannelsFunding} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpeerchannelsChannelsFunding}
 */
proto.cln.ListpeerchannelsChannelsFunding.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setPushedMsat(value);
      break;
    case 2:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setLocalFundsMsat(value);
      break;
    case 3:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setRemoteFundsMsat(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setFeePaidMsat(value);
      break;
    case 5:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setFeeRcvdMsat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpeerchannelsChannelsFunding.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpeerchannelsChannelsFunding.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpeerchannelsChannelsFunding} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsChannelsFunding.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPushedMsat();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getLocalFundsMsat();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getRemoteFundsMsat();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getFeePaidMsat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getFeeRcvdMsat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
};


/**
 * optional Amount pushed_msat = 1;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannelsFunding.prototype.getPushedMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 1));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannelsFunding} returns this
*/
proto.cln.ListpeerchannelsChannelsFunding.prototype.setPushedMsat = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsFunding} returns this
 */
proto.cln.ListpeerchannelsChannelsFunding.prototype.clearPushedMsat = function() {
  return this.setPushedMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsFunding.prototype.hasPushedMsat = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Amount local_funds_msat = 2;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannelsFunding.prototype.getLocalFundsMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 2));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannelsFunding} returns this
*/
proto.cln.ListpeerchannelsChannelsFunding.prototype.setLocalFundsMsat = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsFunding} returns this
 */
proto.cln.ListpeerchannelsChannelsFunding.prototype.clearLocalFundsMsat = function() {
  return this.setLocalFundsMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsFunding.prototype.hasLocalFundsMsat = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Amount remote_funds_msat = 3;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannelsFunding.prototype.getRemoteFundsMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 3));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannelsFunding} returns this
*/
proto.cln.ListpeerchannelsChannelsFunding.prototype.setRemoteFundsMsat = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsFunding} returns this
 */
proto.cln.ListpeerchannelsChannelsFunding.prototype.clearRemoteFundsMsat = function() {
  return this.setRemoteFundsMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsFunding.prototype.hasRemoteFundsMsat = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Amount fee_paid_msat = 4;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannelsFunding.prototype.getFeePaidMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 4));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannelsFunding} returns this
*/
proto.cln.ListpeerchannelsChannelsFunding.prototype.setFeePaidMsat = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsFunding} returns this
 */
proto.cln.ListpeerchannelsChannelsFunding.prototype.clearFeePaidMsat = function() {
  return this.setFeePaidMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsFunding.prototype.hasFeePaidMsat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Amount fee_rcvd_msat = 5;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannelsFunding.prototype.getFeeRcvdMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 5));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannelsFunding} returns this
*/
proto.cln.ListpeerchannelsChannelsFunding.prototype.setFeeRcvdMsat = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsFunding} returns this
 */
proto.cln.ListpeerchannelsChannelsFunding.prototype.clearFeeRcvdMsat = function() {
  return this.setFeeRcvdMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsFunding.prototype.hasFeeRcvdMsat = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpeerchannelsChannelsAlias.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpeerchannelsChannelsAlias.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpeerchannelsChannelsAlias} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsChannelsAlias.toObject = function(includeInstance, msg) {
  var f, obj = {
    local: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remote: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpeerchannelsChannelsAlias}
 */
proto.cln.ListpeerchannelsChannelsAlias.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpeerchannelsChannelsAlias;
  return proto.cln.ListpeerchannelsChannelsAlias.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpeerchannelsChannelsAlias} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpeerchannelsChannelsAlias}
 */
proto.cln.ListpeerchannelsChannelsAlias.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocal(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpeerchannelsChannelsAlias.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpeerchannelsChannelsAlias.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpeerchannelsChannelsAlias} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsChannelsAlias.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string local = 1;
 * @return {string}
 */
proto.cln.ListpeerchannelsChannelsAlias.prototype.getLocal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeerchannelsChannelsAlias} returns this
 */
proto.cln.ListpeerchannelsChannelsAlias.prototype.setLocal = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsAlias} returns this
 */
proto.cln.ListpeerchannelsChannelsAlias.prototype.clearLocal = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsAlias.prototype.hasLocal = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string remote = 2;
 * @return {string}
 */
proto.cln.ListpeerchannelsChannelsAlias.prototype.getRemote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeerchannelsChannelsAlias} returns this
 */
proto.cln.ListpeerchannelsChannelsAlias.prototype.setRemote = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsAlias} returns this
 */
proto.cln.ListpeerchannelsChannelsAlias.prototype.clearRemote = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsAlias.prototype.hasRemote = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpeerchannelsChannelsHtlcs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpeerchannelsChannelsHtlcs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsChannelsHtlcs.toObject = function(includeInstance, msg) {
  var f, obj = {
    direction: jspb.Message.getFieldWithDefault(msg, 1, 0),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    expiry: jspb.Message.getFieldWithDefault(msg, 4, 0),
    paymentHash: msg.getPaymentHash_asB64(),
    localTrimmed: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    status: jspb.Message.getFieldWithDefault(msg, 7, ""),
    state: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpeerchannelsChannelsHtlcs}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpeerchannelsChannelsHtlcs;
  return proto.cln.ListpeerchannelsChannelsHtlcs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpeerchannelsChannelsHtlcs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpeerchannelsChannelsHtlcs}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.ListpeerchannelsChannelsHtlcs.ListpeerchannelsChannelsHtlcsDirection} */ (reader.readEnum());
      msg.setDirection(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 3:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setExpiry(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLocalTrimmed(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 8:
      var value = /** @type {!proto.cln.HtlcState} */ (reader.readEnum());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpeerchannelsChannelsHtlcs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpeerchannelsChannelsHtlcs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpeerchannelsChannelsHtlcs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.cln.ListpeerchannelsChannelsHtlcs.ListpeerchannelsChannelsHtlcsDirection} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {!proto.cln.HtlcState} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeEnum(
      8,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.ListpeerchannelsChannelsHtlcsDirection = {
  IN: 0,
  OUT: 1
};

/**
 * optional ListpeerchannelsChannelsHtlcsDirection direction = 1;
 * @return {!proto.cln.ListpeerchannelsChannelsHtlcs.ListpeerchannelsChannelsHtlcsDirection}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.getDirection = function() {
  return /** @type {!proto.cln.ListpeerchannelsChannelsHtlcs.ListpeerchannelsChannelsHtlcsDirection} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.ListpeerchannelsChannelsHtlcs.ListpeerchannelsChannelsHtlcsDirection} value
 * @return {!proto.cln.ListpeerchannelsChannelsHtlcs} returns this
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.setDirection = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsHtlcs} returns this
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.clearDirection = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.hasDirection = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 id = 2;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannelsHtlcs} returns this
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.setId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsHtlcs} returns this
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.clearId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.hasId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Amount amount_msat = 3;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 3));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpeerchannelsChannelsHtlcs} returns this
*/
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsHtlcs} returns this
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 expiry = 4;
 * @return {number}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.getExpiry = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpeerchannelsChannelsHtlcs} returns this
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.setExpiry = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsHtlcs} returns this
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.clearExpiry = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.hasExpiry = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bytes payment_hash = 5;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes payment_hash = 5;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpeerchannelsChannelsHtlcs} returns this
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.setPaymentHash = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsHtlcs} returns this
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.clearPaymentHash = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.hasPaymentHash = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool local_trimmed = 6;
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.getLocalTrimmed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListpeerchannelsChannelsHtlcs} returns this
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.setLocalTrimmed = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsHtlcs} returns this
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.clearLocalTrimmed = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.hasLocalTrimmed = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string status = 7;
 * @return {string}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpeerchannelsChannelsHtlcs} returns this
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.setStatus = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsHtlcs} returns this
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.clearStatus = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional HtlcState state = 8;
 * @return {!proto.cln.HtlcState}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.getState = function() {
  return /** @type {!proto.cln.HtlcState} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.cln.HtlcState} value
 * @return {!proto.cln.ListpeerchannelsChannelsHtlcs} returns this
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.setState = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpeerchannelsChannelsHtlcs} returns this
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.clearState = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpeerchannelsChannelsHtlcs.prototype.hasState = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListclosedchannelsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListclosedchannelsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListclosedchannelsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListclosedchannelsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListclosedchannelsRequest}
 */
proto.cln.ListclosedchannelsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListclosedchannelsRequest;
  return proto.cln.ListclosedchannelsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListclosedchannelsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListclosedchannelsRequest}
 */
proto.cln.ListclosedchannelsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListclosedchannelsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListclosedchannelsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListclosedchannelsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListclosedchannelsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListclosedchannelsRequest.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes id = 1;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.cln.ListclosedchannelsRequest.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.cln.ListclosedchannelsRequest.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListclosedchannelsRequest} returns this
 */
proto.cln.ListclosedchannelsRequest.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListclosedchannelsRequest} returns this
 */
proto.cln.ListclosedchannelsRequest.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListclosedchannelsRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListclosedchannelsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListclosedchannelsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListclosedchannelsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListclosedchannelsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListclosedchannelsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    closedchannelsList: jspb.Message.toObjectList(msg.getClosedchannelsList(),
    proto.cln.ListclosedchannelsClosedchannels.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListclosedchannelsResponse}
 */
proto.cln.ListclosedchannelsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListclosedchannelsResponse;
  return proto.cln.ListclosedchannelsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListclosedchannelsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListclosedchannelsResponse}
 */
proto.cln.ListclosedchannelsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.ListclosedchannelsClosedchannels;
      reader.readMessage(value,proto.cln.ListclosedchannelsClosedchannels.deserializeBinaryFromReader);
      msg.addClosedchannels(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListclosedchannelsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListclosedchannelsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListclosedchannelsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListclosedchannelsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClosedchannelsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.ListclosedchannelsClosedchannels.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ListclosedchannelsClosedchannels closedchannels = 1;
 * @return {!Array<!proto.cln.ListclosedchannelsClosedchannels>}
 */
proto.cln.ListclosedchannelsResponse.prototype.getClosedchannelsList = function() {
  return /** @type{!Array<!proto.cln.ListclosedchannelsClosedchannels>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListclosedchannelsClosedchannels, 1));
};


/**
 * @param {!Array<!proto.cln.ListclosedchannelsClosedchannels>} value
 * @return {!proto.cln.ListclosedchannelsResponse} returns this
*/
proto.cln.ListclosedchannelsResponse.prototype.setClosedchannelsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.ListclosedchannelsClosedchannels=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListclosedchannelsClosedchannels}
 */
proto.cln.ListclosedchannelsResponse.prototype.addClosedchannels = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.ListclosedchannelsClosedchannels, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListclosedchannelsResponse} returns this
 */
proto.cln.ListclosedchannelsResponse.prototype.clearClosedchannelsList = function() {
  return this.setClosedchannelsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListclosedchannelsClosedchannels.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListclosedchannelsClosedchannels} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListclosedchannelsClosedchannels.toObject = function(includeInstance, msg) {
  var f, obj = {
    peerId: msg.getPeerId_asB64(),
    channelId: msg.getChannelId_asB64(),
    shortChannelId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    alias: (f = msg.getAlias()) && proto.cln.ListclosedchannelsClosedchannelsAlias.toObject(includeInstance, f),
    opener: jspb.Message.getFieldWithDefault(msg, 5, 0),
    closer: jspb.Message.getFieldWithDefault(msg, 6, 0),
    pb_private: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    totalLocalCommitments: jspb.Message.getFieldWithDefault(msg, 9, 0),
    totalRemoteCommitments: jspb.Message.getFieldWithDefault(msg, 10, 0),
    totalHtlcsSent: jspb.Message.getFieldWithDefault(msg, 11, 0),
    fundingTxid: msg.getFundingTxid_asB64(),
    fundingOutnum: jspb.Message.getFieldWithDefault(msg, 13, 0),
    leased: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    fundingFeePaidMsat: (f = msg.getFundingFeePaidMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    fundingFeeRcvdMsat: (f = msg.getFundingFeeRcvdMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    fundingPushedMsat: (f = msg.getFundingPushedMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    totalMsat: (f = msg.getTotalMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    finalToUsMsat: (f = msg.getFinalToUsMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    minToUsMsat: (f = msg.getMinToUsMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    maxToUsMsat: (f = msg.getMaxToUsMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    lastCommitmentTxid: msg.getLastCommitmentTxid_asB64(),
    lastCommitmentFeeMsat: (f = msg.getLastCommitmentFeeMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    closeCause: jspb.Message.getFieldWithDefault(msg, 24, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListclosedchannelsClosedchannels}
 */
proto.cln.ListclosedchannelsClosedchannels.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListclosedchannelsClosedchannels;
  return proto.cln.ListclosedchannelsClosedchannels.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListclosedchannelsClosedchannels} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListclosedchannelsClosedchannels}
 */
proto.cln.ListclosedchannelsClosedchannels.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPeerId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChannelId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setShortChannelId(value);
      break;
    case 4:
      var value = new proto.cln.ListclosedchannelsClosedchannelsAlias;
      reader.readMessage(value,proto.cln.ListclosedchannelsClosedchannelsAlias.deserializeBinaryFromReader);
      msg.setAlias(value);
      break;
    case 5:
      var value = /** @type {!proto.cln.ChannelSide} */ (reader.readEnum());
      msg.setOpener(value);
      break;
    case 6:
      var value = /** @type {!proto.cln.ChannelSide} */ (reader.readEnum());
      msg.setCloser(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPrivate(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalLocalCommitments(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalRemoteCommitments(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalHtlcsSent(value);
      break;
    case 12:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFundingTxid(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFundingOutnum(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLeased(value);
      break;
    case 15:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setFundingFeePaidMsat(value);
      break;
    case 16:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setFundingFeeRcvdMsat(value);
      break;
    case 17:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setFundingPushedMsat(value);
      break;
    case 18:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setTotalMsat(value);
      break;
    case 19:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setFinalToUsMsat(value);
      break;
    case 20:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setMinToUsMsat(value);
      break;
    case 21:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setMaxToUsMsat(value);
      break;
    case 22:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setLastCommitmentTxid(value);
      break;
    case 23:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setLastCommitmentFeeMsat(value);
      break;
    case 24:
      var value = /** @type {!proto.cln.ListclosedchannelsClosedchannels.ListclosedchannelsClosedchannelsClose_cause} */ (reader.readEnum());
      msg.setCloseCause(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListclosedchannelsClosedchannels.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListclosedchannelsClosedchannels} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListclosedchannelsClosedchannels.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getChannelId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAlias();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.cln.ListclosedchannelsClosedchannelsAlias.serializeBinaryToWriter
    );
  }
  f = message.getOpener();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = /** @type {!proto.cln.ChannelSide} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getPrivate();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getTotalLocalCommitments();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getTotalRemoteCommitments();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getTotalHtlcsSent();
  if (f !== 0) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = message.getFundingTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      12,
      f
    );
  }
  f = message.getFundingOutnum();
  if (f !== 0) {
    writer.writeUint32(
      13,
      f
    );
  }
  f = message.getLeased();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getFundingFeePaidMsat();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getFundingFeeRcvdMsat();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getFundingPushedMsat();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getTotalMsat();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getFinalToUsMsat();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getMinToUsMsat();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getMaxToUsMsat();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeBytes(
      22,
      f
    );
  }
  f = message.getLastCommitmentFeeMsat();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getCloseCause();
  if (f !== 0.0) {
    writer.writeEnum(
      24,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ListclosedchannelsClosedchannels.ListclosedchannelsClosedchannelsClose_cause = {
  UNKNOWN: 0,
  LOCAL: 1,
  USER: 2,
  REMOTE: 3,
  PROTOCOL: 4,
  ONCHAIN: 5
};

/**
 * optional bytes peer_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getPeerId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes peer_id = 1;
 * This is a type-conversion wrapper around `getPeerId()`
 * @return {string}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getPeerId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPeerId()));
};


/**
 * optional bytes peer_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPeerId()`
 * @return {!Uint8Array}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getPeerId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPeerId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.setPeerId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.clearPeerId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.hasPeerId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes channel_id = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getChannelId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes channel_id = 2;
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {string}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getChannelId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChannelId()));
};


/**
 * optional bytes channel_id = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {!Uint8Array}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getChannelId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChannelId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string short_channel_id = 3;
 * @return {string}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getShortChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.setShortChannelId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.clearShortChannelId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.hasShortChannelId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ListclosedchannelsClosedchannelsAlias alias = 4;
 * @return {?proto.cln.ListclosedchannelsClosedchannelsAlias}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getAlias = function() {
  return /** @type{?proto.cln.ListclosedchannelsClosedchannelsAlias} */ (
    jspb.Message.getWrapperField(this, proto.cln.ListclosedchannelsClosedchannelsAlias, 4));
};


/**
 * @param {?proto.cln.ListclosedchannelsClosedchannelsAlias|undefined} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
*/
proto.cln.ListclosedchannelsClosedchannels.prototype.setAlias = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.clearAlias = function() {
  return this.setAlias(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.hasAlias = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ChannelSide opener = 5;
 * @return {!proto.cln.ChannelSide}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getOpener = function() {
  return /** @type {!proto.cln.ChannelSide} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.cln.ChannelSide} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.setOpener = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional ChannelSide closer = 6;
 * @return {!proto.cln.ChannelSide}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getCloser = function() {
  return /** @type {!proto.cln.ChannelSide} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.cln.ChannelSide} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.setCloser = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.clearCloser = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.hasCloser = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool private = 7;
 * @return {boolean}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getPrivate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.setPrivate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional uint64 total_local_commitments = 9;
 * @return {number}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getTotalLocalCommitments = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.setTotalLocalCommitments = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional uint64 total_remote_commitments = 10;
 * @return {number}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getTotalRemoteCommitments = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.setTotalRemoteCommitments = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional uint64 total_htlcs_sent = 11;
 * @return {number}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getTotalHtlcsSent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.setTotalHtlcsSent = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional bytes funding_txid = 12;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getFundingTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * optional bytes funding_txid = 12;
 * This is a type-conversion wrapper around `getFundingTxid()`
 * @return {string}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getFundingTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFundingTxid()));
};


/**
 * optional bytes funding_txid = 12;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFundingTxid()`
 * @return {!Uint8Array}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getFundingTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFundingTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.setFundingTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 12, value);
};


/**
 * optional uint32 funding_outnum = 13;
 * @return {number}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getFundingOutnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.setFundingOutnum = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional bool leased = 14;
 * @return {boolean}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getLeased = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.setLeased = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional Amount funding_fee_paid_msat = 15;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getFundingFeePaidMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 15));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
*/
proto.cln.ListclosedchannelsClosedchannels.prototype.setFundingFeePaidMsat = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.clearFundingFeePaidMsat = function() {
  return this.setFundingFeePaidMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.hasFundingFeePaidMsat = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional Amount funding_fee_rcvd_msat = 16;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getFundingFeeRcvdMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 16));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
*/
proto.cln.ListclosedchannelsClosedchannels.prototype.setFundingFeeRcvdMsat = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.clearFundingFeeRcvdMsat = function() {
  return this.setFundingFeeRcvdMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.hasFundingFeeRcvdMsat = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional Amount funding_pushed_msat = 17;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getFundingPushedMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 17));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
*/
proto.cln.ListclosedchannelsClosedchannels.prototype.setFundingPushedMsat = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.clearFundingPushedMsat = function() {
  return this.setFundingPushedMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.hasFundingPushedMsat = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional Amount total_msat = 18;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getTotalMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 18));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
*/
proto.cln.ListclosedchannelsClosedchannels.prototype.setTotalMsat = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.clearTotalMsat = function() {
  return this.setTotalMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.hasTotalMsat = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional Amount final_to_us_msat = 19;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getFinalToUsMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 19));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
*/
proto.cln.ListclosedchannelsClosedchannels.prototype.setFinalToUsMsat = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.clearFinalToUsMsat = function() {
  return this.setFinalToUsMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.hasFinalToUsMsat = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional Amount min_to_us_msat = 20;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getMinToUsMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 20));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
*/
proto.cln.ListclosedchannelsClosedchannels.prototype.setMinToUsMsat = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.clearMinToUsMsat = function() {
  return this.setMinToUsMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.hasMinToUsMsat = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional Amount max_to_us_msat = 21;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getMaxToUsMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 21));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
*/
proto.cln.ListclosedchannelsClosedchannels.prototype.setMaxToUsMsat = function(value) {
  return jspb.Message.setWrapperField(this, 21, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.clearMaxToUsMsat = function() {
  return this.setMaxToUsMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.hasMaxToUsMsat = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional bytes last_commitment_txid = 22;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getLastCommitmentTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * optional bytes last_commitment_txid = 22;
 * This is a type-conversion wrapper around `getLastCommitmentTxid()`
 * @return {string}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getLastCommitmentTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getLastCommitmentTxid()));
};


/**
 * optional bytes last_commitment_txid = 22;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getLastCommitmentTxid()`
 * @return {!Uint8Array}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getLastCommitmentTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getLastCommitmentTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.setLastCommitmentTxid = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.clearLastCommitmentTxid = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.hasLastCommitmentTxid = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional Amount last_commitment_fee_msat = 23;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getLastCommitmentFeeMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 23));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
*/
proto.cln.ListclosedchannelsClosedchannels.prototype.setLastCommitmentFeeMsat = function(value) {
  return jspb.Message.setWrapperField(this, 23, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.clearLastCommitmentFeeMsat = function() {
  return this.setLastCommitmentFeeMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.hasLastCommitmentFeeMsat = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional ListclosedchannelsClosedchannelsClose_cause close_cause = 24;
 * @return {!proto.cln.ListclosedchannelsClosedchannels.ListclosedchannelsClosedchannelsClose_cause}
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.getCloseCause = function() {
  return /** @type {!proto.cln.ListclosedchannelsClosedchannels.ListclosedchannelsClosedchannelsClose_cause} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/**
 * @param {!proto.cln.ListclosedchannelsClosedchannels.ListclosedchannelsClosedchannelsClose_cause} value
 * @return {!proto.cln.ListclosedchannelsClosedchannels} returns this
 */
proto.cln.ListclosedchannelsClosedchannels.prototype.setCloseCause = function(value) {
  return jspb.Message.setProto3EnumField(this, 24, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListclosedchannelsClosedchannelsAlias.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListclosedchannelsClosedchannelsAlias.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListclosedchannelsClosedchannelsAlias} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListclosedchannelsClosedchannelsAlias.toObject = function(includeInstance, msg) {
  var f, obj = {
    local: jspb.Message.getFieldWithDefault(msg, 1, ""),
    remote: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListclosedchannelsClosedchannelsAlias}
 */
proto.cln.ListclosedchannelsClosedchannelsAlias.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListclosedchannelsClosedchannelsAlias;
  return proto.cln.ListclosedchannelsClosedchannelsAlias.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListclosedchannelsClosedchannelsAlias} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListclosedchannelsClosedchannelsAlias}
 */
proto.cln.ListclosedchannelsClosedchannelsAlias.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocal(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListclosedchannelsClosedchannelsAlias.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListclosedchannelsClosedchannelsAlias.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListclosedchannelsClosedchannelsAlias} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListclosedchannelsClosedchannelsAlias.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string local = 1;
 * @return {string}
 */
proto.cln.ListclosedchannelsClosedchannelsAlias.prototype.getLocal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListclosedchannelsClosedchannelsAlias} returns this
 */
proto.cln.ListclosedchannelsClosedchannelsAlias.prototype.setLocal = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListclosedchannelsClosedchannelsAlias} returns this
 */
proto.cln.ListclosedchannelsClosedchannelsAlias.prototype.clearLocal = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListclosedchannelsClosedchannelsAlias.prototype.hasLocal = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string remote = 2;
 * @return {string}
 */
proto.cln.ListclosedchannelsClosedchannelsAlias.prototype.getRemote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListclosedchannelsClosedchannelsAlias} returns this
 */
proto.cln.ListclosedchannelsClosedchannelsAlias.prototype.setRemote = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListclosedchannelsClosedchannelsAlias} returns this
 */
proto.cln.ListclosedchannelsClosedchannelsAlias.prototype.clearRemote = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListclosedchannelsClosedchannelsAlias.prototype.hasRemote = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DecodepayRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DecodepayRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DecodepayRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodepayRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    bolt11: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DecodepayRequest}
 */
proto.cln.DecodepayRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DecodepayRequest;
  return proto.cln.DecodepayRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DecodepayRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DecodepayRequest}
 */
proto.cln.DecodepayRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DecodepayRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DecodepayRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DecodepayRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodepayRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBolt11();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string bolt11 = 1;
 * @return {string}
 */
proto.cln.DecodepayRequest.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodepayRequest} returns this
 */
proto.cln.DecodepayRequest.prototype.setBolt11 = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.cln.DecodepayRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodepayRequest} returns this
 */
proto.cln.DecodepayRequest.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodepayRequest} returns this
 */
proto.cln.DecodepayRequest.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodepayRequest.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.DecodepayResponse.repeatedFields_ = [14,16];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DecodepayResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DecodepayResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DecodepayResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodepayResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    currency: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    expiry: jspb.Message.getFieldWithDefault(msg, 3, 0),
    payee: msg.getPayee_asB64(),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    paymentHash: msg.getPaymentHash_asB64(),
    signature: jspb.Message.getFieldWithDefault(msg, 7, ""),
    description: jspb.Message.getFieldWithDefault(msg, 8, ""),
    descriptionHash: msg.getDescriptionHash_asB64(),
    minFinalCltvExpiry: jspb.Message.getFieldWithDefault(msg, 10, 0),
    paymentSecret: msg.getPaymentSecret_asB64(),
    features: msg.getFeatures_asB64(),
    paymentMetadata: msg.getPaymentMetadata_asB64(),
    fallbacksList: jspb.Message.toObjectList(msg.getFallbacksList(),
    proto.cln.DecodepayFallbacks.toObject, includeInstance),
    extraList: jspb.Message.toObjectList(msg.getExtraList(),
    proto.cln.DecodepayExtra.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DecodepayResponse}
 */
proto.cln.DecodepayResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DecodepayResponse;
  return proto.cln.DecodepayResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DecodepayResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DecodepayResponse}
 */
proto.cln.DecodepayResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedAt(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExpiry(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPayee(value);
      break;
    case 5:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignature(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 9:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDescriptionHash(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinFinalCltvExpiry(value);
      break;
    case 11:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentSecret(value);
      break;
    case 12:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFeatures(value);
      break;
    case 13:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentMetadata(value);
      break;
    case 14:
      var value = new proto.cln.DecodepayFallbacks;
      reader.readMessage(value,proto.cln.DecodepayFallbacks.deserializeBinaryFromReader);
      msg.addFallbacks(value);
      break;
    case 16:
      var value = new proto.cln.DecodepayExtra;
      reader.readMessage(value,proto.cln.DecodepayExtra.deserializeBinaryFromReader);
      msg.addExtra(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DecodepayResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DecodepayResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DecodepayResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodepayResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getExpiry();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getPayee_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getSignature();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBytes(
      9,
      f
    );
  }
  f = message.getMinFinalCltvExpiry();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeBytes(
      11,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBytes(
      12,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBytes(
      13,
      f
    );
  }
  f = message.getFallbacksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      14,
      f,
      proto.cln.DecodepayFallbacks.serializeBinaryToWriter
    );
  }
  f = message.getExtraList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      16,
      f,
      proto.cln.DecodepayExtra.serializeBinaryToWriter
    );
  }
};


/**
 * optional string currency = 1;
 * @return {string}
 */
proto.cln.DecodepayResponse.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 created_at = 2;
 * @return {number}
 */
proto.cln.DecodepayResponse.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 expiry = 3;
 * @return {number}
 */
proto.cln.DecodepayResponse.prototype.getExpiry = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.setExpiry = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bytes payee = 4;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodepayResponse.prototype.getPayee = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes payee = 4;
 * This is a type-conversion wrapper around `getPayee()`
 * @return {string}
 */
proto.cln.DecodepayResponse.prototype.getPayee_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPayee()));
};


/**
 * optional bytes payee = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPayee()`
 * @return {!Uint8Array}
 */
proto.cln.DecodepayResponse.prototype.getPayee_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPayee()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.setPayee = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional Amount amount_msat = 5;
 * @return {?proto.cln.Amount}
 */
proto.cln.DecodepayResponse.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 5));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.DecodepayResponse} returns this
*/
proto.cln.DecodepayResponse.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodepayResponse.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bytes payment_hash = 6;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodepayResponse.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes payment_hash = 6;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.DecodepayResponse.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.DecodepayResponse.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional string signature = 7;
 * @return {string}
 */
proto.cln.DecodepayResponse.prototype.getSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.setSignature = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string description = 8;
 * @return {string}
 */
proto.cln.DecodepayResponse.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodepayResponse.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bytes description_hash = 9;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodepayResponse.prototype.getDescriptionHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * optional bytes description_hash = 9;
 * This is a type-conversion wrapper around `getDescriptionHash()`
 * @return {string}
 */
proto.cln.DecodepayResponse.prototype.getDescriptionHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDescriptionHash()));
};


/**
 * optional bytes description_hash = 9;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDescriptionHash()`
 * @return {!Uint8Array}
 */
proto.cln.DecodepayResponse.prototype.getDescriptionHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDescriptionHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.setDescriptionHash = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.clearDescriptionHash = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodepayResponse.prototype.hasDescriptionHash = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint32 min_final_cltv_expiry = 10;
 * @return {number}
 */
proto.cln.DecodepayResponse.prototype.getMinFinalCltvExpiry = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.setMinFinalCltvExpiry = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional bytes payment_secret = 11;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodepayResponse.prototype.getPaymentSecret = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * optional bytes payment_secret = 11;
 * This is a type-conversion wrapper around `getPaymentSecret()`
 * @return {string}
 */
proto.cln.DecodepayResponse.prototype.getPaymentSecret_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentSecret()));
};


/**
 * optional bytes payment_secret = 11;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentSecret()`
 * @return {!Uint8Array}
 */
proto.cln.DecodepayResponse.prototype.getPaymentSecret_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentSecret()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.setPaymentSecret = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.clearPaymentSecret = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodepayResponse.prototype.hasPaymentSecret = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bytes features = 12;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodepayResponse.prototype.getFeatures = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * optional bytes features = 12;
 * This is a type-conversion wrapper around `getFeatures()`
 * @return {string}
 */
proto.cln.DecodepayResponse.prototype.getFeatures_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFeatures()));
};


/**
 * optional bytes features = 12;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFeatures()`
 * @return {!Uint8Array}
 */
proto.cln.DecodepayResponse.prototype.getFeatures_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFeatures()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.setFeatures = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.clearFeatures = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodepayResponse.prototype.hasFeatures = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bytes payment_metadata = 13;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodepayResponse.prototype.getPaymentMetadata = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * optional bytes payment_metadata = 13;
 * This is a type-conversion wrapper around `getPaymentMetadata()`
 * @return {string}
 */
proto.cln.DecodepayResponse.prototype.getPaymentMetadata_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentMetadata()));
};


/**
 * optional bytes payment_metadata = 13;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentMetadata()`
 * @return {!Uint8Array}
 */
proto.cln.DecodepayResponse.prototype.getPaymentMetadata_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentMetadata()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.setPaymentMetadata = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.clearPaymentMetadata = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodepayResponse.prototype.hasPaymentMetadata = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * repeated DecodepayFallbacks fallbacks = 14;
 * @return {!Array<!proto.cln.DecodepayFallbacks>}
 */
proto.cln.DecodepayResponse.prototype.getFallbacksList = function() {
  return /** @type{!Array<!proto.cln.DecodepayFallbacks>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.DecodepayFallbacks, 14));
};


/**
 * @param {!Array<!proto.cln.DecodepayFallbacks>} value
 * @return {!proto.cln.DecodepayResponse} returns this
*/
proto.cln.DecodepayResponse.prototype.setFallbacksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 14, value);
};


/**
 * @param {!proto.cln.DecodepayFallbacks=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.DecodepayFallbacks}
 */
proto.cln.DecodepayResponse.prototype.addFallbacks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 14, opt_value, proto.cln.DecodepayFallbacks, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.clearFallbacksList = function() {
  return this.setFallbacksList([]);
};


/**
 * repeated DecodepayExtra extra = 16;
 * @return {!Array<!proto.cln.DecodepayExtra>}
 */
proto.cln.DecodepayResponse.prototype.getExtraList = function() {
  return /** @type{!Array<!proto.cln.DecodepayExtra>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.DecodepayExtra, 16));
};


/**
 * @param {!Array<!proto.cln.DecodepayExtra>} value
 * @return {!proto.cln.DecodepayResponse} returns this
*/
proto.cln.DecodepayResponse.prototype.setExtraList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 16, value);
};


/**
 * @param {!proto.cln.DecodepayExtra=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.DecodepayExtra}
 */
proto.cln.DecodepayResponse.prototype.addExtra = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.cln.DecodepayExtra, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.DecodepayResponse} returns this
 */
proto.cln.DecodepayResponse.prototype.clearExtraList = function() {
  return this.setExtraList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DecodepayFallbacks.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DecodepayFallbacks.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DecodepayFallbacks} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodepayFallbacks.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    addr: jspb.Message.getFieldWithDefault(msg, 2, ""),
    hex: msg.getHex_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DecodepayFallbacks}
 */
proto.cln.DecodepayFallbacks.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DecodepayFallbacks;
  return proto.cln.DecodepayFallbacks.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DecodepayFallbacks} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DecodepayFallbacks}
 */
proto.cln.DecodepayFallbacks.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.DecodepayFallbacks.DecodepayFallbacksType} */ (reader.readEnum());
      msg.setItemType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddr(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DecodepayFallbacks.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DecodepayFallbacks.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DecodepayFallbacks} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodepayFallbacks.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHex_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.DecodepayFallbacks.DecodepayFallbacksType = {
  P2PKH: 0,
  P2SH: 1,
  P2WPKH: 2,
  P2WSH: 3,
  P2TR: 4
};

/**
 * optional DecodepayFallbacksType item_type = 1;
 * @return {!proto.cln.DecodepayFallbacks.DecodepayFallbacksType}
 */
proto.cln.DecodepayFallbacks.prototype.getItemType = function() {
  return /** @type {!proto.cln.DecodepayFallbacks.DecodepayFallbacksType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.DecodepayFallbacks.DecodepayFallbacksType} value
 * @return {!proto.cln.DecodepayFallbacks} returns this
 */
proto.cln.DecodepayFallbacks.prototype.setItemType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string addr = 2;
 * @return {string}
 */
proto.cln.DecodepayFallbacks.prototype.getAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodepayFallbacks} returns this
 */
proto.cln.DecodepayFallbacks.prototype.setAddr = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodepayFallbacks} returns this
 */
proto.cln.DecodepayFallbacks.prototype.clearAddr = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodepayFallbacks.prototype.hasAddr = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes hex = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodepayFallbacks.prototype.getHex = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes hex = 3;
 * This is a type-conversion wrapper around `getHex()`
 * @return {string}
 */
proto.cln.DecodepayFallbacks.prototype.getHex_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHex()));
};


/**
 * optional bytes hex = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHex()`
 * @return {!Uint8Array}
 */
proto.cln.DecodepayFallbacks.prototype.getHex_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHex()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodepayFallbacks} returns this
 */
proto.cln.DecodepayFallbacks.prototype.setHex = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DecodepayExtra.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DecodepayExtra.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DecodepayExtra} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodepayExtra.toObject = function(includeInstance, msg) {
  var f, obj = {
    tag: jspb.Message.getFieldWithDefault(msg, 1, ""),
    data: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DecodepayExtra}
 */
proto.cln.DecodepayExtra.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DecodepayExtra;
  return proto.cln.DecodepayExtra.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DecodepayExtra} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DecodepayExtra}
 */
proto.cln.DecodepayExtra.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTag(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DecodepayExtra.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DecodepayExtra.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DecodepayExtra} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodepayExtra.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTag();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getData();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string tag = 1;
 * @return {string}
 */
proto.cln.DecodepayExtra.prototype.getTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodepayExtra} returns this
 */
proto.cln.DecodepayExtra.prototype.setTag = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string data = 2;
 * @return {string}
 */
proto.cln.DecodepayExtra.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodepayExtra} returns this
 */
proto.cln.DecodepayExtra.prototype.setData = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DecodeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DecodeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DecodeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    string: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DecodeRequest}
 */
proto.cln.DecodeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DecodeRequest;
  return proto.cln.DecodeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DecodeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DecodeRequest}
 */
proto.cln.DecodeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setString(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DecodeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DecodeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DecodeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getString();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string string = 1;
 * @return {string}
 */
proto.cln.DecodeRequest.prototype.getString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeRequest} returns this
 */
proto.cln.DecodeRequest.prototype.setString = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.DecodeResponse.repeatedFields_ = [4,16,45,59,69,73];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DecodeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DecodeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DecodeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    valid: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    offerId: msg.getOfferId_asB64(),
    offerChainsList: msg.getOfferChainsList_asB64(),
    offerMetadata: msg.getOfferMetadata_asB64(),
    offerCurrency: jspb.Message.getFieldWithDefault(msg, 6, ""),
    warningUnknownOfferCurrency: jspb.Message.getFieldWithDefault(msg, 7, ""),
    currencyMinorUnit: jspb.Message.getFieldWithDefault(msg, 8, 0),
    offerAmount: jspb.Message.getFieldWithDefault(msg, 9, 0),
    offerAmountMsat: (f = msg.getOfferAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    offerDescription: jspb.Message.getFieldWithDefault(msg, 11, ""),
    offerIssuer: jspb.Message.getFieldWithDefault(msg, 12, ""),
    offerFeatures: msg.getOfferFeatures_asB64(),
    offerAbsoluteExpiry: jspb.Message.getFieldWithDefault(msg, 14, 0),
    offerQuantityMax: jspb.Message.getFieldWithDefault(msg, 15, 0),
    offerPathsList: jspb.Message.toObjectList(msg.getOfferPathsList(),
    proto.cln.DecodeOffer_paths.toObject, includeInstance),
    offerNodeId: msg.getOfferNodeId_asB64(),
    warningMissingOfferNodeId: jspb.Message.getFieldWithDefault(msg, 20, ""),
    warningInvalidOfferDescription: jspb.Message.getFieldWithDefault(msg, 21, ""),
    warningMissingOfferDescription: jspb.Message.getFieldWithDefault(msg, 22, ""),
    warningInvalidOfferCurrency: jspb.Message.getFieldWithDefault(msg, 23, ""),
    warningInvalidOfferIssuer: jspb.Message.getFieldWithDefault(msg, 24, ""),
    invreqMetadata: msg.getInvreqMetadata_asB64(),
    invreqPayerId: msg.getInvreqPayerId_asB64(),
    invreqChain: msg.getInvreqChain_asB64(),
    invreqAmountMsat: (f = msg.getInvreqAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    invreqFeatures: msg.getInvreqFeatures_asB64(),
    invreqQuantity: jspb.Message.getFieldWithDefault(msg, 30, 0),
    invreqPayerNote: jspb.Message.getFieldWithDefault(msg, 31, ""),
    invreqRecurrenceCounter: jspb.Message.getFieldWithDefault(msg, 32, 0),
    invreqRecurrenceStart: jspb.Message.getFieldWithDefault(msg, 33, 0),
    warningMissingInvreqMetadata: jspb.Message.getFieldWithDefault(msg, 35, ""),
    warningMissingInvreqPayerId: jspb.Message.getFieldWithDefault(msg, 36, ""),
    warningInvalidInvreqPayerNote: jspb.Message.getFieldWithDefault(msg, 37, ""),
    warningMissingInvoiceRequestSignature: jspb.Message.getFieldWithDefault(msg, 38, ""),
    warningInvalidInvoiceRequestSignature: jspb.Message.getFieldWithDefault(msg, 39, ""),
    invoiceCreatedAt: jspb.Message.getFieldWithDefault(msg, 41, 0),
    invoiceRelativeExpiry: jspb.Message.getFieldWithDefault(msg, 42, 0),
    invoicePaymentHash: msg.getInvoicePaymentHash_asB64(),
    invoiceAmountMsat: (f = msg.getInvoiceAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    invoiceFallbacksList: jspb.Message.toObjectList(msg.getInvoiceFallbacksList(),
    proto.cln.DecodeInvoice_fallbacks.toObject, includeInstance),
    invoiceFeatures: msg.getInvoiceFeatures_asB64(),
    invoiceNodeId: msg.getInvoiceNodeId_asB64(),
    invoiceRecurrenceBasetime: jspb.Message.getFieldWithDefault(msg, 48, 0),
    warningMissingInvoicePaths: jspb.Message.getFieldWithDefault(msg, 50, ""),
    warningMissingInvoiceBlindedpay: jspb.Message.getFieldWithDefault(msg, 51, ""),
    warningMissingInvoiceCreatedAt: jspb.Message.getFieldWithDefault(msg, 52, ""),
    warningMissingInvoicePaymentHash: jspb.Message.getFieldWithDefault(msg, 53, ""),
    warningMissingInvoiceAmount: jspb.Message.getFieldWithDefault(msg, 54, ""),
    warningMissingInvoiceRecurrenceBasetime: jspb.Message.getFieldWithDefault(msg, 55, ""),
    warningMissingInvoiceNodeId: jspb.Message.getFieldWithDefault(msg, 56, ""),
    warningMissingInvoiceSignature: jspb.Message.getFieldWithDefault(msg, 57, ""),
    warningInvalidInvoiceSignature: jspb.Message.getFieldWithDefault(msg, 58, ""),
    fallbacksList: jspb.Message.toObjectList(msg.getFallbacksList(),
    proto.cln.DecodeFallbacks.toObject, includeInstance),
    createdAt: jspb.Message.getFieldWithDefault(msg, 60, 0),
    expiry: jspb.Message.getFieldWithDefault(msg, 61, 0),
    payee: msg.getPayee_asB64(),
    paymentHash: msg.getPaymentHash_asB64(),
    descriptionHash: msg.getDescriptionHash_asB64(),
    minFinalCltvExpiry: jspb.Message.getFieldWithDefault(msg, 65, 0),
    paymentSecret: msg.getPaymentSecret_asB64(),
    paymentMetadata: msg.getPaymentMetadata_asB64(),
    extraList: jspb.Message.toObjectList(msg.getExtraList(),
    proto.cln.DecodeExtra.toObject, includeInstance),
    uniqueId: jspb.Message.getFieldWithDefault(msg, 70, ""),
    version: jspb.Message.getFieldWithDefault(msg, 71, ""),
    string: jspb.Message.getFieldWithDefault(msg, 72, ""),
    restrictionsList: jspb.Message.toObjectList(msg.getRestrictionsList(),
    proto.cln.DecodeRestrictions.toObject, includeInstance),
    warningRuneInvalidUtf8: jspb.Message.getFieldWithDefault(msg, 74, ""),
    hex: msg.getHex_asB64(),
    decrypted: msg.getDecrypted_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DecodeResponse}
 */
proto.cln.DecodeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DecodeResponse;
  return proto.cln.DecodeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DecodeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DecodeResponse}
 */
proto.cln.DecodeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.DecodeResponse.DecodeType} */ (reader.readEnum());
      msg.setItemType(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setValid(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOfferId(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addOfferChains(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOfferMetadata(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setOfferCurrency(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningUnknownOfferCurrency(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCurrencyMinorUnit(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOfferAmount(value);
      break;
    case 10:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setOfferAmountMsat(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setOfferDescription(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setOfferIssuer(value);
      break;
    case 13:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOfferFeatures(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOfferAbsoluteExpiry(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOfferQuantityMax(value);
      break;
    case 16:
      var value = new proto.cln.DecodeOffer_paths;
      reader.readMessage(value,proto.cln.DecodeOffer_paths.deserializeBinaryFromReader);
      msg.addOfferPaths(value);
      break;
    case 17:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOfferNodeId(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningMissingOfferNodeId(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningInvalidOfferDescription(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningMissingOfferDescription(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningInvalidOfferCurrency(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningInvalidOfferIssuer(value);
      break;
    case 25:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInvreqMetadata(value);
      break;
    case 26:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInvreqPayerId(value);
      break;
    case 27:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInvreqChain(value);
      break;
    case 28:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setInvreqAmountMsat(value);
      break;
    case 29:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInvreqFeatures(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInvreqQuantity(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvreqPayerNote(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setInvreqRecurrenceCounter(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setInvreqRecurrenceStart(value);
      break;
    case 35:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningMissingInvreqMetadata(value);
      break;
    case 36:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningMissingInvreqPayerId(value);
      break;
    case 37:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningInvalidInvreqPayerNote(value);
      break;
    case 38:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningMissingInvoiceRequestSignature(value);
      break;
    case 39:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningInvalidInvoiceRequestSignature(value);
      break;
    case 41:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInvoiceCreatedAt(value);
      break;
    case 42:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setInvoiceRelativeExpiry(value);
      break;
    case 43:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInvoicePaymentHash(value);
      break;
    case 44:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setInvoiceAmountMsat(value);
      break;
    case 45:
      var value = new proto.cln.DecodeInvoice_fallbacks;
      reader.readMessage(value,proto.cln.DecodeInvoice_fallbacks.deserializeBinaryFromReader);
      msg.addInvoiceFallbacks(value);
      break;
    case 46:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInvoiceFeatures(value);
      break;
    case 47:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInvoiceNodeId(value);
      break;
    case 48:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInvoiceRecurrenceBasetime(value);
      break;
    case 50:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningMissingInvoicePaths(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningMissingInvoiceBlindedpay(value);
      break;
    case 52:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningMissingInvoiceCreatedAt(value);
      break;
    case 53:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningMissingInvoicePaymentHash(value);
      break;
    case 54:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningMissingInvoiceAmount(value);
      break;
    case 55:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningMissingInvoiceRecurrenceBasetime(value);
      break;
    case 56:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningMissingInvoiceNodeId(value);
      break;
    case 57:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningMissingInvoiceSignature(value);
      break;
    case 58:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningInvalidInvoiceSignature(value);
      break;
    case 59:
      var value = new proto.cln.DecodeFallbacks;
      reader.readMessage(value,proto.cln.DecodeFallbacks.deserializeBinaryFromReader);
      msg.addFallbacks(value);
      break;
    case 60:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedAt(value);
      break;
    case 61:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExpiry(value);
      break;
    case 62:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPayee(value);
      break;
    case 63:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 64:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDescriptionHash(value);
      break;
    case 65:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinFinalCltvExpiry(value);
      break;
    case 66:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentSecret(value);
      break;
    case 67:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentMetadata(value);
      break;
    case 69:
      var value = new proto.cln.DecodeExtra;
      reader.readMessage(value,proto.cln.DecodeExtra.deserializeBinaryFromReader);
      msg.addExtra(value);
      break;
    case 70:
      var value = /** @type {string} */ (reader.readString());
      msg.setUniqueId(value);
      break;
    case 71:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 72:
      var value = /** @type {string} */ (reader.readString());
      msg.setString(value);
      break;
    case 73:
      var value = new proto.cln.DecodeRestrictions;
      reader.readMessage(value,proto.cln.DecodeRestrictions.deserializeBinaryFromReader);
      msg.addRestrictions(value);
      break;
    case 74:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningRuneInvalidUtf8(value);
      break;
    case 75:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHex(value);
      break;
    case 76:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDecrypted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DecodeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DecodeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getValid();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getOfferChainsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      4,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getOfferAmountMsat();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBytes(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeUint64(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint64(
      15,
      f
    );
  }
  f = message.getOfferPathsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      16,
      f,
      proto.cln.DecodeOffer_paths.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeBytes(
      17,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeString(
      20,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeString(
      21,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeString(
      22,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeString(
      23,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeString(
      24,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeBytes(
      25,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeBytes(
      26,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 27));
  if (f != null) {
    writer.writeBytes(
      27,
      f
    );
  }
  f = message.getInvreqAmountMsat();
  if (f != null) {
    writer.writeMessage(
      28,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 29));
  if (f != null) {
    writer.writeBytes(
      29,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 30));
  if (f != null) {
    writer.writeUint64(
      30,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 31));
  if (f != null) {
    writer.writeString(
      31,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 32));
  if (f != null) {
    writer.writeUint32(
      32,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 33));
  if (f != null) {
    writer.writeUint32(
      33,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 35));
  if (f != null) {
    writer.writeString(
      35,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 36));
  if (f != null) {
    writer.writeString(
      36,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 37));
  if (f != null) {
    writer.writeString(
      37,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 38));
  if (f != null) {
    writer.writeString(
      38,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 39));
  if (f != null) {
    writer.writeString(
      39,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 41));
  if (f != null) {
    writer.writeUint64(
      41,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 42));
  if (f != null) {
    writer.writeUint32(
      42,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 43));
  if (f != null) {
    writer.writeBytes(
      43,
      f
    );
  }
  f = message.getInvoiceAmountMsat();
  if (f != null) {
    writer.writeMessage(
      44,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getInvoiceFallbacksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      45,
      f,
      proto.cln.DecodeInvoice_fallbacks.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 46));
  if (f != null) {
    writer.writeBytes(
      46,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 47));
  if (f != null) {
    writer.writeBytes(
      47,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 48));
  if (f != null) {
    writer.writeUint64(
      48,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 50));
  if (f != null) {
    writer.writeString(
      50,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 51));
  if (f != null) {
    writer.writeString(
      51,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 52));
  if (f != null) {
    writer.writeString(
      52,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 53));
  if (f != null) {
    writer.writeString(
      53,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 54));
  if (f != null) {
    writer.writeString(
      54,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 55));
  if (f != null) {
    writer.writeString(
      55,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 56));
  if (f != null) {
    writer.writeString(
      56,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 57));
  if (f != null) {
    writer.writeString(
      57,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 58));
  if (f != null) {
    writer.writeString(
      58,
      f
    );
  }
  f = message.getFallbacksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      59,
      f,
      proto.cln.DecodeFallbacks.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 60));
  if (f != null) {
    writer.writeUint64(
      60,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 61));
  if (f != null) {
    writer.writeUint64(
      61,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 62));
  if (f != null) {
    writer.writeBytes(
      62,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 63));
  if (f != null) {
    writer.writeBytes(
      63,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 64));
  if (f != null) {
    writer.writeBytes(
      64,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 65));
  if (f != null) {
    writer.writeUint32(
      65,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 66));
  if (f != null) {
    writer.writeBytes(
      66,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 67));
  if (f != null) {
    writer.writeBytes(
      67,
      f
    );
  }
  f = message.getExtraList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      69,
      f,
      proto.cln.DecodeExtra.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 70));
  if (f != null) {
    writer.writeString(
      70,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 71));
  if (f != null) {
    writer.writeString(
      71,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 72));
  if (f != null) {
    writer.writeString(
      72,
      f
    );
  }
  f = message.getRestrictionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      73,
      f,
      proto.cln.DecodeRestrictions.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 74));
  if (f != null) {
    writer.writeString(
      74,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 75));
  if (f != null) {
    writer.writeBytes(
      75,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 76));
  if (f != null) {
    writer.writeBytes(
      76,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.DecodeResponse.DecodeType = {
  BOLT12_OFFER: 0,
  BOLT12_INVOICE: 1,
  BOLT12_INVOICE_REQUEST: 2,
  BOLT11_INVOICE: 3,
  RUNE: 4,
  EMERGENCY_RECOVER: 5
};

/**
 * optional DecodeType item_type = 1;
 * @return {!proto.cln.DecodeResponse.DecodeType}
 */
proto.cln.DecodeResponse.prototype.getItemType = function() {
  return /** @type {!proto.cln.DecodeResponse.DecodeType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.DecodeResponse.DecodeType} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setItemType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional bool valid = 2;
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.getValid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setValid = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bytes offer_id = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeResponse.prototype.getOfferId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes offer_id = 3;
 * This is a type-conversion wrapper around `getOfferId()`
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getOfferId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOfferId()));
};


/**
 * optional bytes offer_id = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOfferId()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.getOfferId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOfferId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setOfferId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearOfferId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasOfferId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated bytes offer_chains = 4;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.cln.DecodeResponse.prototype.getOfferChainsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * repeated bytes offer_chains = 4;
 * This is a type-conversion wrapper around `getOfferChainsList()`
 * @return {!Array<string>}
 */
proto.cln.DecodeResponse.prototype.getOfferChainsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getOfferChainsList()));
};


/**
 * repeated bytes offer_chains = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOfferChainsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.cln.DecodeResponse.prototype.getOfferChainsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getOfferChainsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setOfferChainsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.addOfferChains = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearOfferChainsList = function() {
  return this.setOfferChainsList([]);
};


/**
 * optional bytes offer_metadata = 5;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeResponse.prototype.getOfferMetadata = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes offer_metadata = 5;
 * This is a type-conversion wrapper around `getOfferMetadata()`
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getOfferMetadata_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOfferMetadata()));
};


/**
 * optional bytes offer_metadata = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOfferMetadata()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.getOfferMetadata_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOfferMetadata()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setOfferMetadata = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearOfferMetadata = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasOfferMetadata = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string offer_currency = 6;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getOfferCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setOfferCurrency = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearOfferCurrency = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasOfferCurrency = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string warning_unknown_offer_currency = 7;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningUnknownOfferCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningUnknownOfferCurrency = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningUnknownOfferCurrency = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningUnknownOfferCurrency = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 currency_minor_unit = 8;
 * @return {number}
 */
proto.cln.DecodeResponse.prototype.getCurrencyMinorUnit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setCurrencyMinorUnit = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearCurrencyMinorUnit = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasCurrencyMinorUnit = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint64 offer_amount = 9;
 * @return {number}
 */
proto.cln.DecodeResponse.prototype.getOfferAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setOfferAmount = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearOfferAmount = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasOfferAmount = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Amount offer_amount_msat = 10;
 * @return {?proto.cln.Amount}
 */
proto.cln.DecodeResponse.prototype.getOfferAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 10));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.DecodeResponse} returns this
*/
proto.cln.DecodeResponse.prototype.setOfferAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearOfferAmountMsat = function() {
  return this.setOfferAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasOfferAmountMsat = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string offer_description = 11;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getOfferDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setOfferDescription = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearOfferDescription = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasOfferDescription = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string offer_issuer = 12;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getOfferIssuer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setOfferIssuer = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearOfferIssuer = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasOfferIssuer = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bytes offer_features = 13;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeResponse.prototype.getOfferFeatures = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * optional bytes offer_features = 13;
 * This is a type-conversion wrapper around `getOfferFeatures()`
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getOfferFeatures_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOfferFeatures()));
};


/**
 * optional bytes offer_features = 13;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOfferFeatures()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.getOfferFeatures_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOfferFeatures()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setOfferFeatures = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearOfferFeatures = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasOfferFeatures = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional uint64 offer_absolute_expiry = 14;
 * @return {number}
 */
proto.cln.DecodeResponse.prototype.getOfferAbsoluteExpiry = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setOfferAbsoluteExpiry = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearOfferAbsoluteExpiry = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasOfferAbsoluteExpiry = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional uint64 offer_quantity_max = 15;
 * @return {number}
 */
proto.cln.DecodeResponse.prototype.getOfferQuantityMax = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setOfferQuantityMax = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearOfferQuantityMax = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasOfferQuantityMax = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * repeated DecodeOffer_paths offer_paths = 16;
 * @return {!Array<!proto.cln.DecodeOffer_paths>}
 */
proto.cln.DecodeResponse.prototype.getOfferPathsList = function() {
  return /** @type{!Array<!proto.cln.DecodeOffer_paths>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.DecodeOffer_paths, 16));
};


/**
 * @param {!Array<!proto.cln.DecodeOffer_paths>} value
 * @return {!proto.cln.DecodeResponse} returns this
*/
proto.cln.DecodeResponse.prototype.setOfferPathsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 16, value);
};


/**
 * @param {!proto.cln.DecodeOffer_paths=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.DecodeOffer_paths}
 */
proto.cln.DecodeResponse.prototype.addOfferPaths = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.cln.DecodeOffer_paths, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearOfferPathsList = function() {
  return this.setOfferPathsList([]);
};


/**
 * optional bytes offer_node_id = 17;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeResponse.prototype.getOfferNodeId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * optional bytes offer_node_id = 17;
 * This is a type-conversion wrapper around `getOfferNodeId()`
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getOfferNodeId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOfferNodeId()));
};


/**
 * optional bytes offer_node_id = 17;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOfferNodeId()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.getOfferNodeId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOfferNodeId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setOfferNodeId = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearOfferNodeId = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasOfferNodeId = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional string warning_missing_offer_node_id = 20;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningMissingOfferNodeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningMissingOfferNodeId = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningMissingOfferNodeId = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningMissingOfferNodeId = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional string warning_invalid_offer_description = 21;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningInvalidOfferDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningInvalidOfferDescription = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningInvalidOfferDescription = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningInvalidOfferDescription = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional string warning_missing_offer_description = 22;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningMissingOfferDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningMissingOfferDescription = function(value) {
  return jspb.Message.setField(this, 22, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningMissingOfferDescription = function() {
  return jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningMissingOfferDescription = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional string warning_invalid_offer_currency = 23;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningInvalidOfferCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningInvalidOfferCurrency = function(value) {
  return jspb.Message.setField(this, 23, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningInvalidOfferCurrency = function() {
  return jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningInvalidOfferCurrency = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional string warning_invalid_offer_issuer = 24;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningInvalidOfferIssuer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningInvalidOfferIssuer = function(value) {
  return jspb.Message.setField(this, 24, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningInvalidOfferIssuer = function() {
  return jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningInvalidOfferIssuer = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional bytes invreq_metadata = 25;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeResponse.prototype.getInvreqMetadata = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * optional bytes invreq_metadata = 25;
 * This is a type-conversion wrapper around `getInvreqMetadata()`
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getInvreqMetadata_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInvreqMetadata()));
};


/**
 * optional bytes invreq_metadata = 25;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInvreqMetadata()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.getInvreqMetadata_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInvreqMetadata()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setInvreqMetadata = function(value) {
  return jspb.Message.setField(this, 25, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearInvreqMetadata = function() {
  return jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasInvreqMetadata = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional bytes invreq_payer_id = 26;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeResponse.prototype.getInvreqPayerId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * optional bytes invreq_payer_id = 26;
 * This is a type-conversion wrapper around `getInvreqPayerId()`
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getInvreqPayerId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInvreqPayerId()));
};


/**
 * optional bytes invreq_payer_id = 26;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInvreqPayerId()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.getInvreqPayerId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInvreqPayerId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setInvreqPayerId = function(value) {
  return jspb.Message.setField(this, 26, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearInvreqPayerId = function() {
  return jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasInvreqPayerId = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional bytes invreq_chain = 27;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeResponse.prototype.getInvreqChain = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * optional bytes invreq_chain = 27;
 * This is a type-conversion wrapper around `getInvreqChain()`
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getInvreqChain_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInvreqChain()));
};


/**
 * optional bytes invreq_chain = 27;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInvreqChain()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.getInvreqChain_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInvreqChain()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setInvreqChain = function(value) {
  return jspb.Message.setField(this, 27, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearInvreqChain = function() {
  return jspb.Message.setField(this, 27, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasInvreqChain = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional Amount invreq_amount_msat = 28;
 * @return {?proto.cln.Amount}
 */
proto.cln.DecodeResponse.prototype.getInvreqAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 28));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.DecodeResponse} returns this
*/
proto.cln.DecodeResponse.prototype.setInvreqAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 28, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearInvreqAmountMsat = function() {
  return this.setInvreqAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasInvreqAmountMsat = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional bytes invreq_features = 29;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeResponse.prototype.getInvreqFeatures = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 29, ""));
};


/**
 * optional bytes invreq_features = 29;
 * This is a type-conversion wrapper around `getInvreqFeatures()`
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getInvreqFeatures_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInvreqFeatures()));
};


/**
 * optional bytes invreq_features = 29;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInvreqFeatures()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.getInvreqFeatures_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInvreqFeatures()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setInvreqFeatures = function(value) {
  return jspb.Message.setField(this, 29, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearInvreqFeatures = function() {
  return jspb.Message.setField(this, 29, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasInvreqFeatures = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional uint64 invreq_quantity = 30;
 * @return {number}
 */
proto.cln.DecodeResponse.prototype.getInvreqQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 30, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setInvreqQuantity = function(value) {
  return jspb.Message.setField(this, 30, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearInvreqQuantity = function() {
  return jspb.Message.setField(this, 30, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasInvreqQuantity = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional string invreq_payer_note = 31;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getInvreqPayerNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setInvreqPayerNote = function(value) {
  return jspb.Message.setField(this, 31, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearInvreqPayerNote = function() {
  return jspb.Message.setField(this, 31, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasInvreqPayerNote = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional uint32 invreq_recurrence_counter = 32;
 * @return {number}
 */
proto.cln.DecodeResponse.prototype.getInvreqRecurrenceCounter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 32, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setInvreqRecurrenceCounter = function(value) {
  return jspb.Message.setField(this, 32, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearInvreqRecurrenceCounter = function() {
  return jspb.Message.setField(this, 32, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasInvreqRecurrenceCounter = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional uint32 invreq_recurrence_start = 33;
 * @return {number}
 */
proto.cln.DecodeResponse.prototype.getInvreqRecurrenceStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 33, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setInvreqRecurrenceStart = function(value) {
  return jspb.Message.setField(this, 33, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearInvreqRecurrenceStart = function() {
  return jspb.Message.setField(this, 33, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasInvreqRecurrenceStart = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * optional string warning_missing_invreq_metadata = 35;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningMissingInvreqMetadata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 35, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningMissingInvreqMetadata = function(value) {
  return jspb.Message.setField(this, 35, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningMissingInvreqMetadata = function() {
  return jspb.Message.setField(this, 35, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningMissingInvreqMetadata = function() {
  return jspb.Message.getField(this, 35) != null;
};


/**
 * optional string warning_missing_invreq_payer_id = 36;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningMissingInvreqPayerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 36, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningMissingInvreqPayerId = function(value) {
  return jspb.Message.setField(this, 36, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningMissingInvreqPayerId = function() {
  return jspb.Message.setField(this, 36, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningMissingInvreqPayerId = function() {
  return jspb.Message.getField(this, 36) != null;
};


/**
 * optional string warning_invalid_invreq_payer_note = 37;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningInvalidInvreqPayerNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 37, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningInvalidInvreqPayerNote = function(value) {
  return jspb.Message.setField(this, 37, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningInvalidInvreqPayerNote = function() {
  return jspb.Message.setField(this, 37, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningInvalidInvreqPayerNote = function() {
  return jspb.Message.getField(this, 37) != null;
};


/**
 * optional string warning_missing_invoice_request_signature = 38;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningMissingInvoiceRequestSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 38, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningMissingInvoiceRequestSignature = function(value) {
  return jspb.Message.setField(this, 38, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningMissingInvoiceRequestSignature = function() {
  return jspb.Message.setField(this, 38, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningMissingInvoiceRequestSignature = function() {
  return jspb.Message.getField(this, 38) != null;
};


/**
 * optional string warning_invalid_invoice_request_signature = 39;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningInvalidInvoiceRequestSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 39, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningInvalidInvoiceRequestSignature = function(value) {
  return jspb.Message.setField(this, 39, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningInvalidInvoiceRequestSignature = function() {
  return jspb.Message.setField(this, 39, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningInvalidInvoiceRequestSignature = function() {
  return jspb.Message.getField(this, 39) != null;
};


/**
 * optional uint64 invoice_created_at = 41;
 * @return {number}
 */
proto.cln.DecodeResponse.prototype.getInvoiceCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 41, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setInvoiceCreatedAt = function(value) {
  return jspb.Message.setField(this, 41, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearInvoiceCreatedAt = function() {
  return jspb.Message.setField(this, 41, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasInvoiceCreatedAt = function() {
  return jspb.Message.getField(this, 41) != null;
};


/**
 * optional uint32 invoice_relative_expiry = 42;
 * @return {number}
 */
proto.cln.DecodeResponse.prototype.getInvoiceRelativeExpiry = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 42, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setInvoiceRelativeExpiry = function(value) {
  return jspb.Message.setField(this, 42, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearInvoiceRelativeExpiry = function() {
  return jspb.Message.setField(this, 42, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasInvoiceRelativeExpiry = function() {
  return jspb.Message.getField(this, 42) != null;
};


/**
 * optional bytes invoice_payment_hash = 43;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeResponse.prototype.getInvoicePaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 43, ""));
};


/**
 * optional bytes invoice_payment_hash = 43;
 * This is a type-conversion wrapper around `getInvoicePaymentHash()`
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getInvoicePaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInvoicePaymentHash()));
};


/**
 * optional bytes invoice_payment_hash = 43;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInvoicePaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.getInvoicePaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInvoicePaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setInvoicePaymentHash = function(value) {
  return jspb.Message.setField(this, 43, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearInvoicePaymentHash = function() {
  return jspb.Message.setField(this, 43, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasInvoicePaymentHash = function() {
  return jspb.Message.getField(this, 43) != null;
};


/**
 * optional Amount invoice_amount_msat = 44;
 * @return {?proto.cln.Amount}
 */
proto.cln.DecodeResponse.prototype.getInvoiceAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 44));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.DecodeResponse} returns this
*/
proto.cln.DecodeResponse.prototype.setInvoiceAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 44, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearInvoiceAmountMsat = function() {
  return this.setInvoiceAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasInvoiceAmountMsat = function() {
  return jspb.Message.getField(this, 44) != null;
};


/**
 * repeated DecodeInvoice_fallbacks invoice_fallbacks = 45;
 * @return {!Array<!proto.cln.DecodeInvoice_fallbacks>}
 */
proto.cln.DecodeResponse.prototype.getInvoiceFallbacksList = function() {
  return /** @type{!Array<!proto.cln.DecodeInvoice_fallbacks>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.DecodeInvoice_fallbacks, 45));
};


/**
 * @param {!Array<!proto.cln.DecodeInvoice_fallbacks>} value
 * @return {!proto.cln.DecodeResponse} returns this
*/
proto.cln.DecodeResponse.prototype.setInvoiceFallbacksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 45, value);
};


/**
 * @param {!proto.cln.DecodeInvoice_fallbacks=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.DecodeInvoice_fallbacks}
 */
proto.cln.DecodeResponse.prototype.addInvoiceFallbacks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 45, opt_value, proto.cln.DecodeInvoice_fallbacks, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearInvoiceFallbacksList = function() {
  return this.setInvoiceFallbacksList([]);
};


/**
 * optional bytes invoice_features = 46;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeResponse.prototype.getInvoiceFeatures = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 46, ""));
};


/**
 * optional bytes invoice_features = 46;
 * This is a type-conversion wrapper around `getInvoiceFeatures()`
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getInvoiceFeatures_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInvoiceFeatures()));
};


/**
 * optional bytes invoice_features = 46;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInvoiceFeatures()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.getInvoiceFeatures_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInvoiceFeatures()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setInvoiceFeatures = function(value) {
  return jspb.Message.setField(this, 46, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearInvoiceFeatures = function() {
  return jspb.Message.setField(this, 46, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasInvoiceFeatures = function() {
  return jspb.Message.getField(this, 46) != null;
};


/**
 * optional bytes invoice_node_id = 47;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeResponse.prototype.getInvoiceNodeId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 47, ""));
};


/**
 * optional bytes invoice_node_id = 47;
 * This is a type-conversion wrapper around `getInvoiceNodeId()`
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getInvoiceNodeId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInvoiceNodeId()));
};


/**
 * optional bytes invoice_node_id = 47;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInvoiceNodeId()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.getInvoiceNodeId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInvoiceNodeId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setInvoiceNodeId = function(value) {
  return jspb.Message.setField(this, 47, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearInvoiceNodeId = function() {
  return jspb.Message.setField(this, 47, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasInvoiceNodeId = function() {
  return jspb.Message.getField(this, 47) != null;
};


/**
 * optional uint64 invoice_recurrence_basetime = 48;
 * @return {number}
 */
proto.cln.DecodeResponse.prototype.getInvoiceRecurrenceBasetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 48, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setInvoiceRecurrenceBasetime = function(value) {
  return jspb.Message.setField(this, 48, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearInvoiceRecurrenceBasetime = function() {
  return jspb.Message.setField(this, 48, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasInvoiceRecurrenceBasetime = function() {
  return jspb.Message.getField(this, 48) != null;
};


/**
 * optional string warning_missing_invoice_paths = 50;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningMissingInvoicePaths = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 50, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningMissingInvoicePaths = function(value) {
  return jspb.Message.setField(this, 50, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningMissingInvoicePaths = function() {
  return jspb.Message.setField(this, 50, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningMissingInvoicePaths = function() {
  return jspb.Message.getField(this, 50) != null;
};


/**
 * optional string warning_missing_invoice_blindedpay = 51;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningMissingInvoiceBlindedpay = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningMissingInvoiceBlindedpay = function(value) {
  return jspb.Message.setField(this, 51, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningMissingInvoiceBlindedpay = function() {
  return jspb.Message.setField(this, 51, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningMissingInvoiceBlindedpay = function() {
  return jspb.Message.getField(this, 51) != null;
};


/**
 * optional string warning_missing_invoice_created_at = 52;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningMissingInvoiceCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 52, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningMissingInvoiceCreatedAt = function(value) {
  return jspb.Message.setField(this, 52, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningMissingInvoiceCreatedAt = function() {
  return jspb.Message.setField(this, 52, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningMissingInvoiceCreatedAt = function() {
  return jspb.Message.getField(this, 52) != null;
};


/**
 * optional string warning_missing_invoice_payment_hash = 53;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningMissingInvoicePaymentHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 53, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningMissingInvoicePaymentHash = function(value) {
  return jspb.Message.setField(this, 53, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningMissingInvoicePaymentHash = function() {
  return jspb.Message.setField(this, 53, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningMissingInvoicePaymentHash = function() {
  return jspb.Message.getField(this, 53) != null;
};


/**
 * optional string warning_missing_invoice_amount = 54;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningMissingInvoiceAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 54, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningMissingInvoiceAmount = function(value) {
  return jspb.Message.setField(this, 54, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningMissingInvoiceAmount = function() {
  return jspb.Message.setField(this, 54, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningMissingInvoiceAmount = function() {
  return jspb.Message.getField(this, 54) != null;
};


/**
 * optional string warning_missing_invoice_recurrence_basetime = 55;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningMissingInvoiceRecurrenceBasetime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 55, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningMissingInvoiceRecurrenceBasetime = function(value) {
  return jspb.Message.setField(this, 55, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningMissingInvoiceRecurrenceBasetime = function() {
  return jspb.Message.setField(this, 55, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningMissingInvoiceRecurrenceBasetime = function() {
  return jspb.Message.getField(this, 55) != null;
};


/**
 * optional string warning_missing_invoice_node_id = 56;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningMissingInvoiceNodeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 56, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningMissingInvoiceNodeId = function(value) {
  return jspb.Message.setField(this, 56, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningMissingInvoiceNodeId = function() {
  return jspb.Message.setField(this, 56, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningMissingInvoiceNodeId = function() {
  return jspb.Message.getField(this, 56) != null;
};


/**
 * optional string warning_missing_invoice_signature = 57;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningMissingInvoiceSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 57, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningMissingInvoiceSignature = function(value) {
  return jspb.Message.setField(this, 57, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningMissingInvoiceSignature = function() {
  return jspb.Message.setField(this, 57, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningMissingInvoiceSignature = function() {
  return jspb.Message.getField(this, 57) != null;
};


/**
 * optional string warning_invalid_invoice_signature = 58;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningInvalidInvoiceSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 58, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningInvalidInvoiceSignature = function(value) {
  return jspb.Message.setField(this, 58, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningInvalidInvoiceSignature = function() {
  return jspb.Message.setField(this, 58, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningInvalidInvoiceSignature = function() {
  return jspb.Message.getField(this, 58) != null;
};


/**
 * repeated DecodeFallbacks fallbacks = 59;
 * @return {!Array<!proto.cln.DecodeFallbacks>}
 */
proto.cln.DecodeResponse.prototype.getFallbacksList = function() {
  return /** @type{!Array<!proto.cln.DecodeFallbacks>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.DecodeFallbacks, 59));
};


/**
 * @param {!Array<!proto.cln.DecodeFallbacks>} value
 * @return {!proto.cln.DecodeResponse} returns this
*/
proto.cln.DecodeResponse.prototype.setFallbacksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 59, value);
};


/**
 * @param {!proto.cln.DecodeFallbacks=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.DecodeFallbacks}
 */
proto.cln.DecodeResponse.prototype.addFallbacks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 59, opt_value, proto.cln.DecodeFallbacks, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearFallbacksList = function() {
  return this.setFallbacksList([]);
};


/**
 * optional uint64 created_at = 60;
 * @return {number}
 */
proto.cln.DecodeResponse.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 60, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setCreatedAt = function(value) {
  return jspb.Message.setField(this, 60, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearCreatedAt = function() {
  return jspb.Message.setField(this, 60, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 60) != null;
};


/**
 * optional uint64 expiry = 61;
 * @return {number}
 */
proto.cln.DecodeResponse.prototype.getExpiry = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 61, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setExpiry = function(value) {
  return jspb.Message.setField(this, 61, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearExpiry = function() {
  return jspb.Message.setField(this, 61, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasExpiry = function() {
  return jspb.Message.getField(this, 61) != null;
};


/**
 * optional bytes payee = 62;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeResponse.prototype.getPayee = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 62, ""));
};


/**
 * optional bytes payee = 62;
 * This is a type-conversion wrapper around `getPayee()`
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getPayee_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPayee()));
};


/**
 * optional bytes payee = 62;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPayee()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.getPayee_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPayee()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setPayee = function(value) {
  return jspb.Message.setField(this, 62, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearPayee = function() {
  return jspb.Message.setField(this, 62, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasPayee = function() {
  return jspb.Message.getField(this, 62) != null;
};


/**
 * optional bytes payment_hash = 63;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeResponse.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 63, ""));
};


/**
 * optional bytes payment_hash = 63;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 63;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setPaymentHash = function(value) {
  return jspb.Message.setField(this, 63, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearPaymentHash = function() {
  return jspb.Message.setField(this, 63, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasPaymentHash = function() {
  return jspb.Message.getField(this, 63) != null;
};


/**
 * optional bytes description_hash = 64;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeResponse.prototype.getDescriptionHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 64, ""));
};


/**
 * optional bytes description_hash = 64;
 * This is a type-conversion wrapper around `getDescriptionHash()`
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getDescriptionHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDescriptionHash()));
};


/**
 * optional bytes description_hash = 64;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDescriptionHash()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.getDescriptionHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDescriptionHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setDescriptionHash = function(value) {
  return jspb.Message.setField(this, 64, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearDescriptionHash = function() {
  return jspb.Message.setField(this, 64, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasDescriptionHash = function() {
  return jspb.Message.getField(this, 64) != null;
};


/**
 * optional uint32 min_final_cltv_expiry = 65;
 * @return {number}
 */
proto.cln.DecodeResponse.prototype.getMinFinalCltvExpiry = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 65, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setMinFinalCltvExpiry = function(value) {
  return jspb.Message.setField(this, 65, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearMinFinalCltvExpiry = function() {
  return jspb.Message.setField(this, 65, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasMinFinalCltvExpiry = function() {
  return jspb.Message.getField(this, 65) != null;
};


/**
 * optional bytes payment_secret = 66;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeResponse.prototype.getPaymentSecret = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 66, ""));
};


/**
 * optional bytes payment_secret = 66;
 * This is a type-conversion wrapper around `getPaymentSecret()`
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getPaymentSecret_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentSecret()));
};


/**
 * optional bytes payment_secret = 66;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentSecret()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.getPaymentSecret_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentSecret()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setPaymentSecret = function(value) {
  return jspb.Message.setField(this, 66, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearPaymentSecret = function() {
  return jspb.Message.setField(this, 66, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasPaymentSecret = function() {
  return jspb.Message.getField(this, 66) != null;
};


/**
 * optional bytes payment_metadata = 67;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeResponse.prototype.getPaymentMetadata = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 67, ""));
};


/**
 * optional bytes payment_metadata = 67;
 * This is a type-conversion wrapper around `getPaymentMetadata()`
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getPaymentMetadata_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentMetadata()));
};


/**
 * optional bytes payment_metadata = 67;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentMetadata()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.getPaymentMetadata_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentMetadata()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setPaymentMetadata = function(value) {
  return jspb.Message.setField(this, 67, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearPaymentMetadata = function() {
  return jspb.Message.setField(this, 67, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasPaymentMetadata = function() {
  return jspb.Message.getField(this, 67) != null;
};


/**
 * repeated DecodeExtra extra = 69;
 * @return {!Array<!proto.cln.DecodeExtra>}
 */
proto.cln.DecodeResponse.prototype.getExtraList = function() {
  return /** @type{!Array<!proto.cln.DecodeExtra>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.DecodeExtra, 69));
};


/**
 * @param {!Array<!proto.cln.DecodeExtra>} value
 * @return {!proto.cln.DecodeResponse} returns this
*/
proto.cln.DecodeResponse.prototype.setExtraList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 69, value);
};


/**
 * @param {!proto.cln.DecodeExtra=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.DecodeExtra}
 */
proto.cln.DecodeResponse.prototype.addExtra = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 69, opt_value, proto.cln.DecodeExtra, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearExtraList = function() {
  return this.setExtraList([]);
};


/**
 * optional string unique_id = 70;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getUniqueId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 70, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setUniqueId = function(value) {
  return jspb.Message.setField(this, 70, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearUniqueId = function() {
  return jspb.Message.setField(this, 70, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasUniqueId = function() {
  return jspb.Message.getField(this, 70) != null;
};


/**
 * optional string version = 71;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 71, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setVersion = function(value) {
  return jspb.Message.setField(this, 71, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearVersion = function() {
  return jspb.Message.setField(this, 71, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasVersion = function() {
  return jspb.Message.getField(this, 71) != null;
};


/**
 * optional string string = 72;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 72, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setString = function(value) {
  return jspb.Message.setField(this, 72, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearString = function() {
  return jspb.Message.setField(this, 72, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasString = function() {
  return jspb.Message.getField(this, 72) != null;
};


/**
 * repeated DecodeRestrictions restrictions = 73;
 * @return {!Array<!proto.cln.DecodeRestrictions>}
 */
proto.cln.DecodeResponse.prototype.getRestrictionsList = function() {
  return /** @type{!Array<!proto.cln.DecodeRestrictions>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.DecodeRestrictions, 73));
};


/**
 * @param {!Array<!proto.cln.DecodeRestrictions>} value
 * @return {!proto.cln.DecodeResponse} returns this
*/
proto.cln.DecodeResponse.prototype.setRestrictionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 73, value);
};


/**
 * @param {!proto.cln.DecodeRestrictions=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.DecodeRestrictions}
 */
proto.cln.DecodeResponse.prototype.addRestrictions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 73, opt_value, proto.cln.DecodeRestrictions, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearRestrictionsList = function() {
  return this.setRestrictionsList([]);
};


/**
 * optional string warning_rune_invalid_utf8 = 74;
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getWarningRuneInvalidUtf8 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 74, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setWarningRuneInvalidUtf8 = function(value) {
  return jspb.Message.setField(this, 74, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearWarningRuneInvalidUtf8 = function() {
  return jspb.Message.setField(this, 74, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasWarningRuneInvalidUtf8 = function() {
  return jspb.Message.getField(this, 74) != null;
};


/**
 * optional bytes hex = 75;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeResponse.prototype.getHex = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 75, ""));
};


/**
 * optional bytes hex = 75;
 * This is a type-conversion wrapper around `getHex()`
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getHex_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHex()));
};


/**
 * optional bytes hex = 75;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHex()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.getHex_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHex()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setHex = function(value) {
  return jspb.Message.setField(this, 75, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearHex = function() {
  return jspb.Message.setField(this, 75, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasHex = function() {
  return jspb.Message.getField(this, 75) != null;
};


/**
 * optional bytes decrypted = 76;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeResponse.prototype.getDecrypted = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 76, ""));
};


/**
 * optional bytes decrypted = 76;
 * This is a type-conversion wrapper around `getDecrypted()`
 * @return {string}
 */
proto.cln.DecodeResponse.prototype.getDecrypted_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDecrypted()));
};


/**
 * optional bytes decrypted = 76;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDecrypted()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeResponse.prototype.getDecrypted_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDecrypted()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.setDecrypted = function(value) {
  return jspb.Message.setField(this, 76, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeResponse} returns this
 */
proto.cln.DecodeResponse.prototype.clearDecrypted = function() {
  return jspb.Message.setField(this, 76, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeResponse.prototype.hasDecrypted = function() {
  return jspb.Message.getField(this, 76) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DecodeOffer_paths.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DecodeOffer_paths.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DecodeOffer_paths} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodeOffer_paths.toObject = function(includeInstance, msg) {
  var f, obj = {
    firstNodeId: msg.getFirstNodeId_asB64(),
    blinding: msg.getBlinding_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DecodeOffer_paths}
 */
proto.cln.DecodeOffer_paths.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DecodeOffer_paths;
  return proto.cln.DecodeOffer_paths.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DecodeOffer_paths} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DecodeOffer_paths}
 */
proto.cln.DecodeOffer_paths.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFirstNodeId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBlinding(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DecodeOffer_paths.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DecodeOffer_paths.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DecodeOffer_paths} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodeOffer_paths.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFirstNodeId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getBlinding_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional bytes first_node_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeOffer_paths.prototype.getFirstNodeId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes first_node_id = 1;
 * This is a type-conversion wrapper around `getFirstNodeId()`
 * @return {string}
 */
proto.cln.DecodeOffer_paths.prototype.getFirstNodeId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFirstNodeId()));
};


/**
 * optional bytes first_node_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFirstNodeId()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeOffer_paths.prototype.getFirstNodeId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFirstNodeId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeOffer_paths} returns this
 */
proto.cln.DecodeOffer_paths.prototype.setFirstNodeId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes blinding = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeOffer_paths.prototype.getBlinding = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes blinding = 2;
 * This is a type-conversion wrapper around `getBlinding()`
 * @return {string}
 */
proto.cln.DecodeOffer_paths.prototype.getBlinding_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBlinding()));
};


/**
 * optional bytes blinding = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBlinding()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeOffer_paths.prototype.getBlinding_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBlinding()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeOffer_paths} returns this
 */
proto.cln.DecodeOffer_paths.prototype.setBlinding = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DecodeOffer_recurrencePaywindow.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DecodeOffer_recurrencePaywindow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DecodeOffer_recurrencePaywindow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodeOffer_recurrencePaywindow.toObject = function(includeInstance, msg) {
  var f, obj = {
    secondsBefore: jspb.Message.getFieldWithDefault(msg, 1, 0),
    secondsAfter: jspb.Message.getFieldWithDefault(msg, 2, 0),
    proportionalAmount: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DecodeOffer_recurrencePaywindow}
 */
proto.cln.DecodeOffer_recurrencePaywindow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DecodeOffer_recurrencePaywindow;
  return proto.cln.DecodeOffer_recurrencePaywindow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DecodeOffer_recurrencePaywindow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DecodeOffer_recurrencePaywindow}
 */
proto.cln.DecodeOffer_recurrencePaywindow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSecondsBefore(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSecondsAfter(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setProportionalAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DecodeOffer_recurrencePaywindow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DecodeOffer_recurrencePaywindow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DecodeOffer_recurrencePaywindow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodeOffer_recurrencePaywindow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecondsBefore();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getSecondsAfter();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional uint32 seconds_before = 1;
 * @return {number}
 */
proto.cln.DecodeOffer_recurrencePaywindow.prototype.getSecondsBefore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodeOffer_recurrencePaywindow} returns this
 */
proto.cln.DecodeOffer_recurrencePaywindow.prototype.setSecondsBefore = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 seconds_after = 2;
 * @return {number}
 */
proto.cln.DecodeOffer_recurrencePaywindow.prototype.getSecondsAfter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodeOffer_recurrencePaywindow} returns this
 */
proto.cln.DecodeOffer_recurrencePaywindow.prototype.setSecondsAfter = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool proportional_amount = 3;
 * @return {boolean}
 */
proto.cln.DecodeOffer_recurrencePaywindow.prototype.getProportionalAmount = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.DecodeOffer_recurrencePaywindow} returns this
 */
proto.cln.DecodeOffer_recurrencePaywindow.prototype.setProportionalAmount = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeOffer_recurrencePaywindow} returns this
 */
proto.cln.DecodeOffer_recurrencePaywindow.prototype.clearProportionalAmount = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeOffer_recurrencePaywindow.prototype.hasProportionalAmount = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DecodeInvoice_pathsPath.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DecodeInvoice_pathsPath.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DecodeInvoice_pathsPath} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodeInvoice_pathsPath.toObject = function(includeInstance, msg) {
  var f, obj = {
    blindedNodeId: msg.getBlindedNodeId_asB64(),
    encryptedRecipientData: msg.getEncryptedRecipientData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DecodeInvoice_pathsPath}
 */
proto.cln.DecodeInvoice_pathsPath.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DecodeInvoice_pathsPath;
  return proto.cln.DecodeInvoice_pathsPath.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DecodeInvoice_pathsPath} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DecodeInvoice_pathsPath}
 */
proto.cln.DecodeInvoice_pathsPath.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBlindedNodeId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setEncryptedRecipientData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DecodeInvoice_pathsPath.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DecodeInvoice_pathsPath.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DecodeInvoice_pathsPath} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodeInvoice_pathsPath.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlindedNodeId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getEncryptedRecipientData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional bytes blinded_node_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeInvoice_pathsPath.prototype.getBlindedNodeId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes blinded_node_id = 1;
 * This is a type-conversion wrapper around `getBlindedNodeId()`
 * @return {string}
 */
proto.cln.DecodeInvoice_pathsPath.prototype.getBlindedNodeId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBlindedNodeId()));
};


/**
 * optional bytes blinded_node_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBlindedNodeId()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeInvoice_pathsPath.prototype.getBlindedNodeId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBlindedNodeId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeInvoice_pathsPath} returns this
 */
proto.cln.DecodeInvoice_pathsPath.prototype.setBlindedNodeId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes encrypted_recipient_data = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeInvoice_pathsPath.prototype.getEncryptedRecipientData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes encrypted_recipient_data = 2;
 * This is a type-conversion wrapper around `getEncryptedRecipientData()`
 * @return {string}
 */
proto.cln.DecodeInvoice_pathsPath.prototype.getEncryptedRecipientData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getEncryptedRecipientData()));
};


/**
 * optional bytes encrypted_recipient_data = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getEncryptedRecipientData()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeInvoice_pathsPath.prototype.getEncryptedRecipientData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getEncryptedRecipientData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeInvoice_pathsPath} returns this
 */
proto.cln.DecodeInvoice_pathsPath.prototype.setEncryptedRecipientData = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DecodeInvoice_fallbacks.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DecodeInvoice_fallbacks.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DecodeInvoice_fallbacks} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodeInvoice_fallbacks.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: jspb.Message.getFieldWithDefault(msg, 1, 0),
    hex: msg.getHex_asB64(),
    address: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DecodeInvoice_fallbacks}
 */
proto.cln.DecodeInvoice_fallbacks.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DecodeInvoice_fallbacks;
  return proto.cln.DecodeInvoice_fallbacks.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DecodeInvoice_fallbacks} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DecodeInvoice_fallbacks}
 */
proto.cln.DecodeInvoice_fallbacks.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVersion(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHex(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DecodeInvoice_fallbacks.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DecodeInvoice_fallbacks.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DecodeInvoice_fallbacks} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodeInvoice_fallbacks.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersion();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getHex_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional uint32 version = 1;
 * @return {number}
 */
proto.cln.DecodeInvoice_fallbacks.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.DecodeInvoice_fallbacks} returns this
 */
proto.cln.DecodeInvoice_fallbacks.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bytes hex = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DecodeInvoice_fallbacks.prototype.getHex = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes hex = 2;
 * This is a type-conversion wrapper around `getHex()`
 * @return {string}
 */
proto.cln.DecodeInvoice_fallbacks.prototype.getHex_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHex()));
};


/**
 * optional bytes hex = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHex()`
 * @return {!Uint8Array}
 */
proto.cln.DecodeInvoice_fallbacks.prototype.getHex_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHex()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DecodeInvoice_fallbacks} returns this
 */
proto.cln.DecodeInvoice_fallbacks.prototype.setHex = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string address = 3;
 * @return {string}
 */
proto.cln.DecodeInvoice_fallbacks.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeInvoice_fallbacks} returns this
 */
proto.cln.DecodeInvoice_fallbacks.prototype.setAddress = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeInvoice_fallbacks} returns this
 */
proto.cln.DecodeInvoice_fallbacks.prototype.clearAddress = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeInvoice_fallbacks.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DecodeFallbacks.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DecodeFallbacks.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DecodeFallbacks} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodeFallbacks.toObject = function(includeInstance, msg) {
  var f, obj = {
    warningInvoiceFallbacksVersionInvalid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DecodeFallbacks}
 */
proto.cln.DecodeFallbacks.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DecodeFallbacks;
  return proto.cln.DecodeFallbacks.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DecodeFallbacks} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DecodeFallbacks}
 */
proto.cln.DecodeFallbacks.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningInvoiceFallbacksVersionInvalid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DecodeFallbacks.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DecodeFallbacks.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DecodeFallbacks} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodeFallbacks.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string warning_invoice_fallbacks_version_invalid = 1;
 * @return {string}
 */
proto.cln.DecodeFallbacks.prototype.getWarningInvoiceFallbacksVersionInvalid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeFallbacks} returns this
 */
proto.cln.DecodeFallbacks.prototype.setWarningInvoiceFallbacksVersionInvalid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DecodeFallbacks} returns this
 */
proto.cln.DecodeFallbacks.prototype.clearWarningInvoiceFallbacksVersionInvalid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DecodeFallbacks.prototype.hasWarningInvoiceFallbacksVersionInvalid = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DecodeExtra.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DecodeExtra.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DecodeExtra} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodeExtra.toObject = function(includeInstance, msg) {
  var f, obj = {
    tag: jspb.Message.getFieldWithDefault(msg, 1, ""),
    data: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DecodeExtra}
 */
proto.cln.DecodeExtra.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DecodeExtra;
  return proto.cln.DecodeExtra.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DecodeExtra} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DecodeExtra}
 */
proto.cln.DecodeExtra.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTag(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DecodeExtra.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DecodeExtra.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DecodeExtra} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodeExtra.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTag();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getData();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string tag = 1;
 * @return {string}
 */
proto.cln.DecodeExtra.prototype.getTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeExtra} returns this
 */
proto.cln.DecodeExtra.prototype.setTag = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string data = 2;
 * @return {string}
 */
proto.cln.DecodeExtra.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeExtra} returns this
 */
proto.cln.DecodeExtra.prototype.setData = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.DecodeRestrictions.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DecodeRestrictions.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DecodeRestrictions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DecodeRestrictions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodeRestrictions.toObject = function(includeInstance, msg) {
  var f, obj = {
    alternativesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    summary: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DecodeRestrictions}
 */
proto.cln.DecodeRestrictions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DecodeRestrictions;
  return proto.cln.DecodeRestrictions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DecodeRestrictions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DecodeRestrictions}
 */
proto.cln.DecodeRestrictions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addAlternatives(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSummary(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DecodeRestrictions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DecodeRestrictions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DecodeRestrictions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DecodeRestrictions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAlternativesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getSummary();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated string alternatives = 1;
 * @return {!Array<string>}
 */
proto.cln.DecodeRestrictions.prototype.getAlternativesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.DecodeRestrictions} returns this
 */
proto.cln.DecodeRestrictions.prototype.setAlternativesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.DecodeRestrictions} returns this
 */
proto.cln.DecodeRestrictions.prototype.addAlternatives = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.DecodeRestrictions} returns this
 */
proto.cln.DecodeRestrictions.prototype.clearAlternativesList = function() {
  return this.setAlternativesList([]);
};


/**
 * optional string summary = 2;
 * @return {string}
 */
proto.cln.DecodeRestrictions.prototype.getSummary = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.DecodeRestrictions} returns this
 */
proto.cln.DecodeRestrictions.prototype.setSummary = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DisconnectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DisconnectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DisconnectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DisconnectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64(),
    force: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DisconnectRequest}
 */
proto.cln.DisconnectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DisconnectRequest;
  return proto.cln.DisconnectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DisconnectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DisconnectRequest}
 */
proto.cln.DisconnectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForce(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DisconnectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DisconnectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DisconnectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DisconnectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional bytes id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.DisconnectRequest.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes id = 1;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.cln.DisconnectRequest.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.cln.DisconnectRequest.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.DisconnectRequest} returns this
 */
proto.cln.DisconnectRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bool force = 2;
 * @return {boolean}
 */
proto.cln.DisconnectRequest.prototype.getForce = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.DisconnectRequest} returns this
 */
proto.cln.DisconnectRequest.prototype.setForce = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.DisconnectRequest} returns this
 */
proto.cln.DisconnectRequest.prototype.clearForce = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.DisconnectRequest.prototype.hasForce = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.DisconnectResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.DisconnectResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.DisconnectResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DisconnectResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.DisconnectResponse}
 */
proto.cln.DisconnectResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.DisconnectResponse;
  return proto.cln.DisconnectResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.DisconnectResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.DisconnectResponse}
 */
proto.cln.DisconnectResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.DisconnectResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.DisconnectResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.DisconnectResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.DisconnectResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.FeeratesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.FeeratesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.FeeratesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FeeratesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    style: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.FeeratesRequest}
 */
proto.cln.FeeratesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.FeeratesRequest;
  return proto.cln.FeeratesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.FeeratesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.FeeratesRequest}
 */
proto.cln.FeeratesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.FeeratesRequest.FeeratesStyle} */ (reader.readEnum());
      msg.setStyle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.FeeratesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.FeeratesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.FeeratesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FeeratesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStyle();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.FeeratesRequest.FeeratesStyle = {
  PERKB: 0,
  PERKW: 1
};

/**
 * optional FeeratesStyle style = 1;
 * @return {!proto.cln.FeeratesRequest.FeeratesStyle}
 */
proto.cln.FeeratesRequest.prototype.getStyle = function() {
  return /** @type {!proto.cln.FeeratesRequest.FeeratesStyle} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.FeeratesRequest.FeeratesStyle} value
 * @return {!proto.cln.FeeratesRequest} returns this
 */
proto.cln.FeeratesRequest.prototype.setStyle = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.FeeratesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.FeeratesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.FeeratesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FeeratesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    warningMissingFeerates: jspb.Message.getFieldWithDefault(msg, 1, ""),
    perkb: (f = msg.getPerkb()) && proto.cln.FeeratesPerkb.toObject(includeInstance, f),
    perkw: (f = msg.getPerkw()) && proto.cln.FeeratesPerkw.toObject(includeInstance, f),
    onchainFeeEstimates: (f = msg.getOnchainFeeEstimates()) && proto.cln.FeeratesOnchain_fee_estimates.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.FeeratesResponse}
 */
proto.cln.FeeratesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.FeeratesResponse;
  return proto.cln.FeeratesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.FeeratesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.FeeratesResponse}
 */
proto.cln.FeeratesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningMissingFeerates(value);
      break;
    case 2:
      var value = new proto.cln.FeeratesPerkb;
      reader.readMessage(value,proto.cln.FeeratesPerkb.deserializeBinaryFromReader);
      msg.setPerkb(value);
      break;
    case 3:
      var value = new proto.cln.FeeratesPerkw;
      reader.readMessage(value,proto.cln.FeeratesPerkw.deserializeBinaryFromReader);
      msg.setPerkw(value);
      break;
    case 4:
      var value = new proto.cln.FeeratesOnchain_fee_estimates;
      reader.readMessage(value,proto.cln.FeeratesOnchain_fee_estimates.deserializeBinaryFromReader);
      msg.setOnchainFeeEstimates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.FeeratesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.FeeratesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.FeeratesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FeeratesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPerkb();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cln.FeeratesPerkb.serializeBinaryToWriter
    );
  }
  f = message.getPerkw();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cln.FeeratesPerkw.serializeBinaryToWriter
    );
  }
  f = message.getOnchainFeeEstimates();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.cln.FeeratesOnchain_fee_estimates.serializeBinaryToWriter
    );
  }
};


/**
 * optional string warning_missing_feerates = 1;
 * @return {string}
 */
proto.cln.FeeratesResponse.prototype.getWarningMissingFeerates = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.FeeratesResponse} returns this
 */
proto.cln.FeeratesResponse.prototype.setWarningMissingFeerates = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesResponse} returns this
 */
proto.cln.FeeratesResponse.prototype.clearWarningMissingFeerates = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesResponse.prototype.hasWarningMissingFeerates = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional FeeratesPerkb perkb = 2;
 * @return {?proto.cln.FeeratesPerkb}
 */
proto.cln.FeeratesResponse.prototype.getPerkb = function() {
  return /** @type{?proto.cln.FeeratesPerkb} */ (
    jspb.Message.getWrapperField(this, proto.cln.FeeratesPerkb, 2));
};


/**
 * @param {?proto.cln.FeeratesPerkb|undefined} value
 * @return {!proto.cln.FeeratesResponse} returns this
*/
proto.cln.FeeratesResponse.prototype.setPerkb = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FeeratesResponse} returns this
 */
proto.cln.FeeratesResponse.prototype.clearPerkb = function() {
  return this.setPerkb(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesResponse.prototype.hasPerkb = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional FeeratesPerkw perkw = 3;
 * @return {?proto.cln.FeeratesPerkw}
 */
proto.cln.FeeratesResponse.prototype.getPerkw = function() {
  return /** @type{?proto.cln.FeeratesPerkw} */ (
    jspb.Message.getWrapperField(this, proto.cln.FeeratesPerkw, 3));
};


/**
 * @param {?proto.cln.FeeratesPerkw|undefined} value
 * @return {!proto.cln.FeeratesResponse} returns this
*/
proto.cln.FeeratesResponse.prototype.setPerkw = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FeeratesResponse} returns this
 */
proto.cln.FeeratesResponse.prototype.clearPerkw = function() {
  return this.setPerkw(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesResponse.prototype.hasPerkw = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional FeeratesOnchain_fee_estimates onchain_fee_estimates = 4;
 * @return {?proto.cln.FeeratesOnchain_fee_estimates}
 */
proto.cln.FeeratesResponse.prototype.getOnchainFeeEstimates = function() {
  return /** @type{?proto.cln.FeeratesOnchain_fee_estimates} */ (
    jspb.Message.getWrapperField(this, proto.cln.FeeratesOnchain_fee_estimates, 4));
};


/**
 * @param {?proto.cln.FeeratesOnchain_fee_estimates|undefined} value
 * @return {!proto.cln.FeeratesResponse} returns this
*/
proto.cln.FeeratesResponse.prototype.setOnchainFeeEstimates = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FeeratesResponse} returns this
 */
proto.cln.FeeratesResponse.prototype.clearOnchainFeeEstimates = function() {
  return this.setOnchainFeeEstimates(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesResponse.prototype.hasOnchainFeeEstimates = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.FeeratesPerkb.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.FeeratesPerkb.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.FeeratesPerkb.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.FeeratesPerkb} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FeeratesPerkb.toObject = function(includeInstance, msg) {
  var f, obj = {
    minAcceptable: jspb.Message.getFieldWithDefault(msg, 1, 0),
    maxAcceptable: jspb.Message.getFieldWithDefault(msg, 2, 0),
    floor: jspb.Message.getFieldWithDefault(msg, 10, 0),
    estimatesList: jspb.Message.toObjectList(msg.getEstimatesList(),
    proto.cln.FeeratesPerkbEstimates.toObject, includeInstance),
    opening: jspb.Message.getFieldWithDefault(msg, 3, 0),
    mutualClose: jspb.Message.getFieldWithDefault(msg, 4, 0),
    unilateralClose: jspb.Message.getFieldWithDefault(msg, 5, 0),
    unilateralAnchorClose: jspb.Message.getFieldWithDefault(msg, 11, 0),
    delayedToUs: jspb.Message.getFieldWithDefault(msg, 6, 0),
    htlcResolution: jspb.Message.getFieldWithDefault(msg, 7, 0),
    penalty: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.FeeratesPerkb}
 */
proto.cln.FeeratesPerkb.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.FeeratesPerkb;
  return proto.cln.FeeratesPerkb.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.FeeratesPerkb} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.FeeratesPerkb}
 */
proto.cln.FeeratesPerkb.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinAcceptable(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxAcceptable(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFloor(value);
      break;
    case 9:
      var value = new proto.cln.FeeratesPerkbEstimates;
      reader.readMessage(value,proto.cln.FeeratesPerkbEstimates.deserializeBinaryFromReader);
      msg.addEstimates(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOpening(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMutualClose(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUnilateralClose(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUnilateralAnchorClose(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDelayedToUs(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHtlcResolution(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPenalty(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.FeeratesPerkb.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.FeeratesPerkb.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.FeeratesPerkb} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FeeratesPerkb.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMinAcceptable();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getMaxAcceptable();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = message.getEstimatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.cln.FeeratesPerkbEstimates.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint32(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
};


/**
 * optional uint32 min_acceptable = 1;
 * @return {number}
 */
proto.cln.FeeratesPerkb.prototype.getMinAcceptable = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.setMinAcceptable = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 max_acceptable = 2;
 * @return {number}
 */
proto.cln.FeeratesPerkb.prototype.getMaxAcceptable = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.setMaxAcceptable = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 floor = 10;
 * @return {number}
 */
proto.cln.FeeratesPerkb.prototype.getFloor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.setFloor = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.clearFloor = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkb.prototype.hasFloor = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * repeated FeeratesPerkbEstimates estimates = 9;
 * @return {!Array<!proto.cln.FeeratesPerkbEstimates>}
 */
proto.cln.FeeratesPerkb.prototype.getEstimatesList = function() {
  return /** @type{!Array<!proto.cln.FeeratesPerkbEstimates>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.FeeratesPerkbEstimates, 9));
};


/**
 * @param {!Array<!proto.cln.FeeratesPerkbEstimates>} value
 * @return {!proto.cln.FeeratesPerkb} returns this
*/
proto.cln.FeeratesPerkb.prototype.setEstimatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.cln.FeeratesPerkbEstimates=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.FeeratesPerkbEstimates}
 */
proto.cln.FeeratesPerkb.prototype.addEstimates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.cln.FeeratesPerkbEstimates, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.clearEstimatesList = function() {
  return this.setEstimatesList([]);
};


/**
 * optional uint32 opening = 3;
 * @return {number}
 */
proto.cln.FeeratesPerkb.prototype.getOpening = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.setOpening = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.clearOpening = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkb.prototype.hasOpening = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 mutual_close = 4;
 * @return {number}
 */
proto.cln.FeeratesPerkb.prototype.getMutualClose = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.setMutualClose = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.clearMutualClose = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkb.prototype.hasMutualClose = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 unilateral_close = 5;
 * @return {number}
 */
proto.cln.FeeratesPerkb.prototype.getUnilateralClose = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.setUnilateralClose = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.clearUnilateralClose = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkb.prototype.hasUnilateralClose = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 unilateral_anchor_close = 11;
 * @return {number}
 */
proto.cln.FeeratesPerkb.prototype.getUnilateralAnchorClose = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.setUnilateralAnchorClose = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.clearUnilateralAnchorClose = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkb.prototype.hasUnilateralAnchorClose = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint32 delayed_to_us = 6;
 * @return {number}
 */
proto.cln.FeeratesPerkb.prototype.getDelayedToUs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.setDelayedToUs = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.clearDelayedToUs = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkb.prototype.hasDelayedToUs = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 htlc_resolution = 7;
 * @return {number}
 */
proto.cln.FeeratesPerkb.prototype.getHtlcResolution = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.setHtlcResolution = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.clearHtlcResolution = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkb.prototype.hasHtlcResolution = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 penalty = 8;
 * @return {number}
 */
proto.cln.FeeratesPerkb.prototype.getPenalty = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.setPenalty = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkb} returns this
 */
proto.cln.FeeratesPerkb.prototype.clearPenalty = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkb.prototype.hasPenalty = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.FeeratesPerkbEstimates.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.FeeratesPerkbEstimates.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.FeeratesPerkbEstimates} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FeeratesPerkbEstimates.toObject = function(includeInstance, msg) {
  var f, obj = {
    blockcount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    feerate: jspb.Message.getFieldWithDefault(msg, 2, 0),
    smoothedFeerate: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.FeeratesPerkbEstimates}
 */
proto.cln.FeeratesPerkbEstimates.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.FeeratesPerkbEstimates;
  return proto.cln.FeeratesPerkbEstimates.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.FeeratesPerkbEstimates} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.FeeratesPerkbEstimates}
 */
proto.cln.FeeratesPerkbEstimates.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBlockcount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFeerate(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSmoothedFeerate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.FeeratesPerkbEstimates.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.FeeratesPerkbEstimates.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.FeeratesPerkbEstimates} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FeeratesPerkbEstimates.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional uint32 blockcount = 1;
 * @return {number}
 */
proto.cln.FeeratesPerkbEstimates.prototype.getBlockcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkbEstimates} returns this
 */
proto.cln.FeeratesPerkbEstimates.prototype.setBlockcount = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkbEstimates} returns this
 */
proto.cln.FeeratesPerkbEstimates.prototype.clearBlockcount = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkbEstimates.prototype.hasBlockcount = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 feerate = 2;
 * @return {number}
 */
proto.cln.FeeratesPerkbEstimates.prototype.getFeerate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkbEstimates} returns this
 */
proto.cln.FeeratesPerkbEstimates.prototype.setFeerate = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkbEstimates} returns this
 */
proto.cln.FeeratesPerkbEstimates.prototype.clearFeerate = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkbEstimates.prototype.hasFeerate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 smoothed_feerate = 3;
 * @return {number}
 */
proto.cln.FeeratesPerkbEstimates.prototype.getSmoothedFeerate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkbEstimates} returns this
 */
proto.cln.FeeratesPerkbEstimates.prototype.setSmoothedFeerate = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkbEstimates} returns this
 */
proto.cln.FeeratesPerkbEstimates.prototype.clearSmoothedFeerate = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkbEstimates.prototype.hasSmoothedFeerate = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.FeeratesPerkw.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.FeeratesPerkw.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.FeeratesPerkw.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.FeeratesPerkw} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FeeratesPerkw.toObject = function(includeInstance, msg) {
  var f, obj = {
    minAcceptable: jspb.Message.getFieldWithDefault(msg, 1, 0),
    maxAcceptable: jspb.Message.getFieldWithDefault(msg, 2, 0),
    floor: jspb.Message.getFieldWithDefault(msg, 10, 0),
    estimatesList: jspb.Message.toObjectList(msg.getEstimatesList(),
    proto.cln.FeeratesPerkwEstimates.toObject, includeInstance),
    opening: jspb.Message.getFieldWithDefault(msg, 3, 0),
    mutualClose: jspb.Message.getFieldWithDefault(msg, 4, 0),
    unilateralClose: jspb.Message.getFieldWithDefault(msg, 5, 0),
    unilateralAnchorClose: jspb.Message.getFieldWithDefault(msg, 11, 0),
    delayedToUs: jspb.Message.getFieldWithDefault(msg, 6, 0),
    htlcResolution: jspb.Message.getFieldWithDefault(msg, 7, 0),
    penalty: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.FeeratesPerkw}
 */
proto.cln.FeeratesPerkw.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.FeeratesPerkw;
  return proto.cln.FeeratesPerkw.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.FeeratesPerkw} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.FeeratesPerkw}
 */
proto.cln.FeeratesPerkw.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinAcceptable(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxAcceptable(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFloor(value);
      break;
    case 9:
      var value = new proto.cln.FeeratesPerkwEstimates;
      reader.readMessage(value,proto.cln.FeeratesPerkwEstimates.deserializeBinaryFromReader);
      msg.addEstimates(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOpening(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMutualClose(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUnilateralClose(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUnilateralAnchorClose(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDelayedToUs(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHtlcResolution(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPenalty(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.FeeratesPerkw.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.FeeratesPerkw.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.FeeratesPerkw} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FeeratesPerkw.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMinAcceptable();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getMaxAcceptable();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = message.getEstimatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.cln.FeeratesPerkwEstimates.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint32(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
};


/**
 * optional uint32 min_acceptable = 1;
 * @return {number}
 */
proto.cln.FeeratesPerkw.prototype.getMinAcceptable = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.setMinAcceptable = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 max_acceptable = 2;
 * @return {number}
 */
proto.cln.FeeratesPerkw.prototype.getMaxAcceptable = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.setMaxAcceptable = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 floor = 10;
 * @return {number}
 */
proto.cln.FeeratesPerkw.prototype.getFloor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.setFloor = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.clearFloor = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkw.prototype.hasFloor = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * repeated FeeratesPerkwEstimates estimates = 9;
 * @return {!Array<!proto.cln.FeeratesPerkwEstimates>}
 */
proto.cln.FeeratesPerkw.prototype.getEstimatesList = function() {
  return /** @type{!Array<!proto.cln.FeeratesPerkwEstimates>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.FeeratesPerkwEstimates, 9));
};


/**
 * @param {!Array<!proto.cln.FeeratesPerkwEstimates>} value
 * @return {!proto.cln.FeeratesPerkw} returns this
*/
proto.cln.FeeratesPerkw.prototype.setEstimatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.cln.FeeratesPerkwEstimates=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.FeeratesPerkwEstimates}
 */
proto.cln.FeeratesPerkw.prototype.addEstimates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.cln.FeeratesPerkwEstimates, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.clearEstimatesList = function() {
  return this.setEstimatesList([]);
};


/**
 * optional uint32 opening = 3;
 * @return {number}
 */
proto.cln.FeeratesPerkw.prototype.getOpening = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.setOpening = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.clearOpening = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkw.prototype.hasOpening = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 mutual_close = 4;
 * @return {number}
 */
proto.cln.FeeratesPerkw.prototype.getMutualClose = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.setMutualClose = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.clearMutualClose = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkw.prototype.hasMutualClose = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 unilateral_close = 5;
 * @return {number}
 */
proto.cln.FeeratesPerkw.prototype.getUnilateralClose = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.setUnilateralClose = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.clearUnilateralClose = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkw.prototype.hasUnilateralClose = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 unilateral_anchor_close = 11;
 * @return {number}
 */
proto.cln.FeeratesPerkw.prototype.getUnilateralAnchorClose = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.setUnilateralAnchorClose = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.clearUnilateralAnchorClose = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkw.prototype.hasUnilateralAnchorClose = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint32 delayed_to_us = 6;
 * @return {number}
 */
proto.cln.FeeratesPerkw.prototype.getDelayedToUs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.setDelayedToUs = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.clearDelayedToUs = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkw.prototype.hasDelayedToUs = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 htlc_resolution = 7;
 * @return {number}
 */
proto.cln.FeeratesPerkw.prototype.getHtlcResolution = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.setHtlcResolution = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.clearHtlcResolution = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkw.prototype.hasHtlcResolution = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 penalty = 8;
 * @return {number}
 */
proto.cln.FeeratesPerkw.prototype.getPenalty = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.setPenalty = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkw} returns this
 */
proto.cln.FeeratesPerkw.prototype.clearPenalty = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkw.prototype.hasPenalty = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.FeeratesPerkwEstimates.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.FeeratesPerkwEstimates.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.FeeratesPerkwEstimates} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FeeratesPerkwEstimates.toObject = function(includeInstance, msg) {
  var f, obj = {
    blockcount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    feerate: jspb.Message.getFieldWithDefault(msg, 2, 0),
    smoothedFeerate: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.FeeratesPerkwEstimates}
 */
proto.cln.FeeratesPerkwEstimates.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.FeeratesPerkwEstimates;
  return proto.cln.FeeratesPerkwEstimates.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.FeeratesPerkwEstimates} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.FeeratesPerkwEstimates}
 */
proto.cln.FeeratesPerkwEstimates.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBlockcount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFeerate(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSmoothedFeerate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.FeeratesPerkwEstimates.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.FeeratesPerkwEstimates.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.FeeratesPerkwEstimates} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FeeratesPerkwEstimates.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional uint32 blockcount = 1;
 * @return {number}
 */
proto.cln.FeeratesPerkwEstimates.prototype.getBlockcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkwEstimates} returns this
 */
proto.cln.FeeratesPerkwEstimates.prototype.setBlockcount = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkwEstimates} returns this
 */
proto.cln.FeeratesPerkwEstimates.prototype.clearBlockcount = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkwEstimates.prototype.hasBlockcount = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 feerate = 2;
 * @return {number}
 */
proto.cln.FeeratesPerkwEstimates.prototype.getFeerate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkwEstimates} returns this
 */
proto.cln.FeeratesPerkwEstimates.prototype.setFeerate = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkwEstimates} returns this
 */
proto.cln.FeeratesPerkwEstimates.prototype.clearFeerate = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkwEstimates.prototype.hasFeerate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 smoothed_feerate = 3;
 * @return {number}
 */
proto.cln.FeeratesPerkwEstimates.prototype.getSmoothedFeerate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesPerkwEstimates} returns this
 */
proto.cln.FeeratesPerkwEstimates.prototype.setSmoothedFeerate = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesPerkwEstimates} returns this
 */
proto.cln.FeeratesPerkwEstimates.prototype.clearSmoothedFeerate = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesPerkwEstimates.prototype.hasSmoothedFeerate = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.FeeratesOnchain_fee_estimates.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.FeeratesOnchain_fee_estimates.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.FeeratesOnchain_fee_estimates} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FeeratesOnchain_fee_estimates.toObject = function(includeInstance, msg) {
  var f, obj = {
    openingChannelSatoshis: jspb.Message.getFieldWithDefault(msg, 1, 0),
    mutualCloseSatoshis: jspb.Message.getFieldWithDefault(msg, 2, 0),
    unilateralCloseSatoshis: jspb.Message.getFieldWithDefault(msg, 3, 0),
    unilateralCloseNonanchorSatoshis: jspb.Message.getFieldWithDefault(msg, 6, 0),
    htlcTimeoutSatoshis: jspb.Message.getFieldWithDefault(msg, 4, 0),
    htlcSuccessSatoshis: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.FeeratesOnchain_fee_estimates}
 */
proto.cln.FeeratesOnchain_fee_estimates.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.FeeratesOnchain_fee_estimates;
  return proto.cln.FeeratesOnchain_fee_estimates.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.FeeratesOnchain_fee_estimates} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.FeeratesOnchain_fee_estimates}
 */
proto.cln.FeeratesOnchain_fee_estimates.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOpeningChannelSatoshis(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMutualCloseSatoshis(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUnilateralCloseSatoshis(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUnilateralCloseNonanchorSatoshis(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setHtlcTimeoutSatoshis(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setHtlcSuccessSatoshis(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.FeeratesOnchain_fee_estimates.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.FeeratesOnchain_fee_estimates.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.FeeratesOnchain_fee_estimates} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FeeratesOnchain_fee_estimates.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpeningChannelSatoshis();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getMutualCloseSatoshis();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getUnilateralCloseSatoshis();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getHtlcTimeoutSatoshis();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getHtlcSuccessSatoshis();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
};


/**
 * optional uint64 opening_channel_satoshis = 1;
 * @return {number}
 */
proto.cln.FeeratesOnchain_fee_estimates.prototype.getOpeningChannelSatoshis = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesOnchain_fee_estimates} returns this
 */
proto.cln.FeeratesOnchain_fee_estimates.prototype.setOpeningChannelSatoshis = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 mutual_close_satoshis = 2;
 * @return {number}
 */
proto.cln.FeeratesOnchain_fee_estimates.prototype.getMutualCloseSatoshis = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesOnchain_fee_estimates} returns this
 */
proto.cln.FeeratesOnchain_fee_estimates.prototype.setMutualCloseSatoshis = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 unilateral_close_satoshis = 3;
 * @return {number}
 */
proto.cln.FeeratesOnchain_fee_estimates.prototype.getUnilateralCloseSatoshis = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesOnchain_fee_estimates} returns this
 */
proto.cln.FeeratesOnchain_fee_estimates.prototype.setUnilateralCloseSatoshis = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 unilateral_close_nonanchor_satoshis = 6;
 * @return {number}
 */
proto.cln.FeeratesOnchain_fee_estimates.prototype.getUnilateralCloseNonanchorSatoshis = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesOnchain_fee_estimates} returns this
 */
proto.cln.FeeratesOnchain_fee_estimates.prototype.setUnilateralCloseNonanchorSatoshis = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FeeratesOnchain_fee_estimates} returns this
 */
proto.cln.FeeratesOnchain_fee_estimates.prototype.clearUnilateralCloseNonanchorSatoshis = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FeeratesOnchain_fee_estimates.prototype.hasUnilateralCloseNonanchorSatoshis = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 htlc_timeout_satoshis = 4;
 * @return {number}
 */
proto.cln.FeeratesOnchain_fee_estimates.prototype.getHtlcTimeoutSatoshis = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesOnchain_fee_estimates} returns this
 */
proto.cln.FeeratesOnchain_fee_estimates.prototype.setHtlcTimeoutSatoshis = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 htlc_success_satoshis = 5;
 * @return {number}
 */
proto.cln.FeeratesOnchain_fee_estimates.prototype.getHtlcSuccessSatoshis = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FeeratesOnchain_fee_estimates} returns this
 */
proto.cln.FeeratesOnchain_fee_estimates.prototype.setHtlcSuccessSatoshis = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.FetchinvoiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.FetchinvoiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.FetchinvoiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FetchinvoiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    offer: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    quantity: jspb.Message.getFieldWithDefault(msg, 3, 0),
    recurrenceCounter: jspb.Message.getFieldWithDefault(msg, 4, 0),
    recurrenceStart: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    recurrenceLabel: jspb.Message.getFieldWithDefault(msg, 6, ""),
    timeout: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    payerNote: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.FetchinvoiceRequest}
 */
proto.cln.FetchinvoiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.FetchinvoiceRequest;
  return proto.cln.FetchinvoiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.FetchinvoiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.FetchinvoiceRequest}
 */
proto.cln.FetchinvoiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOffer(value);
      break;
    case 2:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setQuantity(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRecurrenceCounter(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRecurrenceStart(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecurrenceLabel(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTimeout(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayerNote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.FetchinvoiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.FetchinvoiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.FetchinvoiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FetchinvoiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOffer();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string offer = 1;
 * @return {string}
 */
proto.cln.FetchinvoiceRequest.prototype.getOffer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.FetchinvoiceRequest} returns this
 */
proto.cln.FetchinvoiceRequest.prototype.setOffer = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Amount amount_msat = 2;
 * @return {?proto.cln.Amount}
 */
proto.cln.FetchinvoiceRequest.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 2));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.FetchinvoiceRequest} returns this
*/
proto.cln.FetchinvoiceRequest.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FetchinvoiceRequest} returns this
 */
proto.cln.FetchinvoiceRequest.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FetchinvoiceRequest.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 quantity = 3;
 * @return {number}
 */
proto.cln.FetchinvoiceRequest.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FetchinvoiceRequest} returns this
 */
proto.cln.FetchinvoiceRequest.prototype.setQuantity = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FetchinvoiceRequest} returns this
 */
proto.cln.FetchinvoiceRequest.prototype.clearQuantity = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FetchinvoiceRequest.prototype.hasQuantity = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 recurrence_counter = 4;
 * @return {number}
 */
proto.cln.FetchinvoiceRequest.prototype.getRecurrenceCounter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FetchinvoiceRequest} returns this
 */
proto.cln.FetchinvoiceRequest.prototype.setRecurrenceCounter = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FetchinvoiceRequest} returns this
 */
proto.cln.FetchinvoiceRequest.prototype.clearRecurrenceCounter = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FetchinvoiceRequest.prototype.hasRecurrenceCounter = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double recurrence_start = 5;
 * @return {number}
 */
proto.cln.FetchinvoiceRequest.prototype.getRecurrenceStart = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FetchinvoiceRequest} returns this
 */
proto.cln.FetchinvoiceRequest.prototype.setRecurrenceStart = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FetchinvoiceRequest} returns this
 */
proto.cln.FetchinvoiceRequest.prototype.clearRecurrenceStart = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FetchinvoiceRequest.prototype.hasRecurrenceStart = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string recurrence_label = 6;
 * @return {string}
 */
proto.cln.FetchinvoiceRequest.prototype.getRecurrenceLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.FetchinvoiceRequest} returns this
 */
proto.cln.FetchinvoiceRequest.prototype.setRecurrenceLabel = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FetchinvoiceRequest} returns this
 */
proto.cln.FetchinvoiceRequest.prototype.clearRecurrenceLabel = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FetchinvoiceRequest.prototype.hasRecurrenceLabel = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional double timeout = 7;
 * @return {number}
 */
proto.cln.FetchinvoiceRequest.prototype.getTimeout = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FetchinvoiceRequest} returns this
 */
proto.cln.FetchinvoiceRequest.prototype.setTimeout = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FetchinvoiceRequest} returns this
 */
proto.cln.FetchinvoiceRequest.prototype.clearTimeout = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FetchinvoiceRequest.prototype.hasTimeout = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string payer_note = 8;
 * @return {string}
 */
proto.cln.FetchinvoiceRequest.prototype.getPayerNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.FetchinvoiceRequest} returns this
 */
proto.cln.FetchinvoiceRequest.prototype.setPayerNote = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FetchinvoiceRequest} returns this
 */
proto.cln.FetchinvoiceRequest.prototype.clearPayerNote = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FetchinvoiceRequest.prototype.hasPayerNote = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.FetchinvoiceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.FetchinvoiceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.FetchinvoiceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FetchinvoiceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    invoice: jspb.Message.getFieldWithDefault(msg, 1, ""),
    changes: (f = msg.getChanges()) && proto.cln.FetchinvoiceChanges.toObject(includeInstance, f),
    nextPeriod: (f = msg.getNextPeriod()) && proto.cln.FetchinvoiceNext_period.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.FetchinvoiceResponse}
 */
proto.cln.FetchinvoiceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.FetchinvoiceResponse;
  return proto.cln.FetchinvoiceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.FetchinvoiceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.FetchinvoiceResponse}
 */
proto.cln.FetchinvoiceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvoice(value);
      break;
    case 2:
      var value = new proto.cln.FetchinvoiceChanges;
      reader.readMessage(value,proto.cln.FetchinvoiceChanges.deserializeBinaryFromReader);
      msg.setChanges(value);
      break;
    case 3:
      var value = new proto.cln.FetchinvoiceNext_period;
      reader.readMessage(value,proto.cln.FetchinvoiceNext_period.deserializeBinaryFromReader);
      msg.setNextPeriod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.FetchinvoiceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.FetchinvoiceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.FetchinvoiceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FetchinvoiceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvoice();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChanges();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cln.FetchinvoiceChanges.serializeBinaryToWriter
    );
  }
  f = message.getNextPeriod();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cln.FetchinvoiceNext_period.serializeBinaryToWriter
    );
  }
};


/**
 * optional string invoice = 1;
 * @return {string}
 */
proto.cln.FetchinvoiceResponse.prototype.getInvoice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.FetchinvoiceResponse} returns this
 */
proto.cln.FetchinvoiceResponse.prototype.setInvoice = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional FetchinvoiceChanges changes = 2;
 * @return {?proto.cln.FetchinvoiceChanges}
 */
proto.cln.FetchinvoiceResponse.prototype.getChanges = function() {
  return /** @type{?proto.cln.FetchinvoiceChanges} */ (
    jspb.Message.getWrapperField(this, proto.cln.FetchinvoiceChanges, 2));
};


/**
 * @param {?proto.cln.FetchinvoiceChanges|undefined} value
 * @return {!proto.cln.FetchinvoiceResponse} returns this
*/
proto.cln.FetchinvoiceResponse.prototype.setChanges = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FetchinvoiceResponse} returns this
 */
proto.cln.FetchinvoiceResponse.prototype.clearChanges = function() {
  return this.setChanges(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FetchinvoiceResponse.prototype.hasChanges = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional FetchinvoiceNext_period next_period = 3;
 * @return {?proto.cln.FetchinvoiceNext_period}
 */
proto.cln.FetchinvoiceResponse.prototype.getNextPeriod = function() {
  return /** @type{?proto.cln.FetchinvoiceNext_period} */ (
    jspb.Message.getWrapperField(this, proto.cln.FetchinvoiceNext_period, 3));
};


/**
 * @param {?proto.cln.FetchinvoiceNext_period|undefined} value
 * @return {!proto.cln.FetchinvoiceResponse} returns this
*/
proto.cln.FetchinvoiceResponse.prototype.setNextPeriod = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FetchinvoiceResponse} returns this
 */
proto.cln.FetchinvoiceResponse.prototype.clearNextPeriod = function() {
  return this.setNextPeriod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FetchinvoiceResponse.prototype.hasNextPeriod = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.FetchinvoiceChanges.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.FetchinvoiceChanges.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.FetchinvoiceChanges} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FetchinvoiceChanges.toObject = function(includeInstance, msg) {
  var f, obj = {
    descriptionAppended: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    vendorRemoved: jspb.Message.getFieldWithDefault(msg, 3, ""),
    vendor: jspb.Message.getFieldWithDefault(msg, 4, ""),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.FetchinvoiceChanges}
 */
proto.cln.FetchinvoiceChanges.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.FetchinvoiceChanges;
  return proto.cln.FetchinvoiceChanges.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.FetchinvoiceChanges} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.FetchinvoiceChanges}
 */
proto.cln.FetchinvoiceChanges.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescriptionAppended(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVendorRemoved(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setVendor(value);
      break;
    case 5:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.FetchinvoiceChanges.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.FetchinvoiceChanges.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.FetchinvoiceChanges} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FetchinvoiceChanges.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
};


/**
 * optional string description_appended = 1;
 * @return {string}
 */
proto.cln.FetchinvoiceChanges.prototype.getDescriptionAppended = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.FetchinvoiceChanges} returns this
 */
proto.cln.FetchinvoiceChanges.prototype.setDescriptionAppended = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FetchinvoiceChanges} returns this
 */
proto.cln.FetchinvoiceChanges.prototype.clearDescriptionAppended = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FetchinvoiceChanges.prototype.hasDescriptionAppended = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.cln.FetchinvoiceChanges.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.FetchinvoiceChanges} returns this
 */
proto.cln.FetchinvoiceChanges.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FetchinvoiceChanges} returns this
 */
proto.cln.FetchinvoiceChanges.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FetchinvoiceChanges.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string vendor_removed = 3;
 * @return {string}
 */
proto.cln.FetchinvoiceChanges.prototype.getVendorRemoved = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.FetchinvoiceChanges} returns this
 */
proto.cln.FetchinvoiceChanges.prototype.setVendorRemoved = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FetchinvoiceChanges} returns this
 */
proto.cln.FetchinvoiceChanges.prototype.clearVendorRemoved = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FetchinvoiceChanges.prototype.hasVendorRemoved = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string vendor = 4;
 * @return {string}
 */
proto.cln.FetchinvoiceChanges.prototype.getVendor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.FetchinvoiceChanges} returns this
 */
proto.cln.FetchinvoiceChanges.prototype.setVendor = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FetchinvoiceChanges} returns this
 */
proto.cln.FetchinvoiceChanges.prototype.clearVendor = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FetchinvoiceChanges.prototype.hasVendor = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Amount amount_msat = 5;
 * @return {?proto.cln.Amount}
 */
proto.cln.FetchinvoiceChanges.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 5));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.FetchinvoiceChanges} returns this
*/
proto.cln.FetchinvoiceChanges.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FetchinvoiceChanges} returns this
 */
proto.cln.FetchinvoiceChanges.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FetchinvoiceChanges.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.FetchinvoiceNext_period.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.FetchinvoiceNext_period.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.FetchinvoiceNext_period} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FetchinvoiceNext_period.toObject = function(includeInstance, msg) {
  var f, obj = {
    counter: jspb.Message.getFieldWithDefault(msg, 1, 0),
    starttime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    endtime: jspb.Message.getFieldWithDefault(msg, 3, 0),
    paywindowStart: jspb.Message.getFieldWithDefault(msg, 4, 0),
    paywindowEnd: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.FetchinvoiceNext_period}
 */
proto.cln.FetchinvoiceNext_period.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.FetchinvoiceNext_period;
  return proto.cln.FetchinvoiceNext_period.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.FetchinvoiceNext_period} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.FetchinvoiceNext_period}
 */
proto.cln.FetchinvoiceNext_period.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCounter(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStarttime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEndtime(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPaywindowStart(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPaywindowEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.FetchinvoiceNext_period.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.FetchinvoiceNext_period.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.FetchinvoiceNext_period} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FetchinvoiceNext_period.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCounter();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getStarttime();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getEndtime();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getPaywindowStart();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getPaywindowEnd();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
};


/**
 * optional uint64 counter = 1;
 * @return {number}
 */
proto.cln.FetchinvoiceNext_period.prototype.getCounter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FetchinvoiceNext_period} returns this
 */
proto.cln.FetchinvoiceNext_period.prototype.setCounter = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 starttime = 2;
 * @return {number}
 */
proto.cln.FetchinvoiceNext_period.prototype.getStarttime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FetchinvoiceNext_period} returns this
 */
proto.cln.FetchinvoiceNext_period.prototype.setStarttime = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 endtime = 3;
 * @return {number}
 */
proto.cln.FetchinvoiceNext_period.prototype.getEndtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FetchinvoiceNext_period} returns this
 */
proto.cln.FetchinvoiceNext_period.prototype.setEndtime = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 paywindow_start = 4;
 * @return {number}
 */
proto.cln.FetchinvoiceNext_period.prototype.getPaywindowStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FetchinvoiceNext_period} returns this
 */
proto.cln.FetchinvoiceNext_period.prototype.setPaywindowStart = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 paywindow_end = 5;
 * @return {number}
 */
proto.cln.FetchinvoiceNext_period.prototype.getPaywindowEnd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FetchinvoiceNext_period} returns this
 */
proto.cln.FetchinvoiceNext_period.prototype.setPaywindowEnd = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.FundchannelRequest.repeatedFields_ = [11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.FundchannelRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.FundchannelRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.FundchannelRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FundchannelRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64(),
    amount: (f = msg.getAmount()) && cln_primitives_pb.AmountOrAll.toObject(includeInstance, f),
    feerate: (f = msg.getFeerate()) && cln_primitives_pb.Feerate.toObject(includeInstance, f),
    announce: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    minconf: jspb.Message.getFieldWithDefault(msg, 10, 0),
    pushMsat: (f = msg.getPushMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    closeTo: jspb.Message.getFieldWithDefault(msg, 6, ""),
    requestAmt: (f = msg.getRequestAmt()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    compactLease: jspb.Message.getFieldWithDefault(msg, 8, ""),
    utxosList: jspb.Message.toObjectList(msg.getUtxosList(),
    cln_primitives_pb.Outpoint.toObject, includeInstance),
    mindepth: jspb.Message.getFieldWithDefault(msg, 12, 0),
    reserve: (f = msg.getReserve()) && cln_primitives_pb.Amount.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.FundchannelRequest}
 */
proto.cln.FundchannelRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.FundchannelRequest;
  return proto.cln.FundchannelRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.FundchannelRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.FundchannelRequest}
 */
proto.cln.FundchannelRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 9:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    case 1:
      var value = new cln_primitives_pb.AmountOrAll;
      reader.readMessage(value,cln_primitives_pb.AmountOrAll.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    case 2:
      var value = new cln_primitives_pb.Feerate;
      reader.readMessage(value,cln_primitives_pb.Feerate.deserializeBinaryFromReader);
      msg.setFeerate(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAnnounce(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinconf(value);
      break;
    case 5:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setPushMsat(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCloseTo(value);
      break;
    case 7:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setRequestAmt(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompactLease(value);
      break;
    case 11:
      var value = new cln_primitives_pb.Outpoint;
      reader.readMessage(value,cln_primitives_pb.Outpoint.deserializeBinaryFromReader);
      msg.addUtxos(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMindepth(value);
      break;
    case 13:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setReserve(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.FundchannelRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.FundchannelRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.FundchannelRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FundchannelRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      9,
      f
    );
  }
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cln_primitives_pb.AmountOrAll.serializeBinaryToWriter
    );
  }
  f = message.getFeerate();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cln_primitives_pb.Feerate.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = message.getPushMsat();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getRequestAmt();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getUtxosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      cln_primitives_pb.Outpoint.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint32(
      12,
      f
    );
  }
  f = message.getReserve();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes id = 9;
 * @return {!(string|Uint8Array)}
 */
proto.cln.FundchannelRequest.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * optional bytes id = 9;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.cln.FundchannelRequest.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 9;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.cln.FundchannelRequest.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.FundchannelRequest} returns this
 */
proto.cln.FundchannelRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3BytesField(this, 9, value);
};


/**
 * optional AmountOrAll amount = 1;
 * @return {?proto.cln.AmountOrAll}
 */
proto.cln.FundchannelRequest.prototype.getAmount = function() {
  return /** @type{?proto.cln.AmountOrAll} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.AmountOrAll, 1));
};


/**
 * @param {?proto.cln.AmountOrAll|undefined} value
 * @return {!proto.cln.FundchannelRequest} returns this
*/
proto.cln.FundchannelRequest.prototype.setAmount = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FundchannelRequest} returns this
 */
proto.cln.FundchannelRequest.prototype.clearAmount = function() {
  return this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundchannelRequest.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Feerate feerate = 2;
 * @return {?proto.cln.Feerate}
 */
proto.cln.FundchannelRequest.prototype.getFeerate = function() {
  return /** @type{?proto.cln.Feerate} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Feerate, 2));
};


/**
 * @param {?proto.cln.Feerate|undefined} value
 * @return {!proto.cln.FundchannelRequest} returns this
*/
proto.cln.FundchannelRequest.prototype.setFeerate = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FundchannelRequest} returns this
 */
proto.cln.FundchannelRequest.prototype.clearFeerate = function() {
  return this.setFeerate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundchannelRequest.prototype.hasFeerate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool announce = 3;
 * @return {boolean}
 */
proto.cln.FundchannelRequest.prototype.getAnnounce = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.FundchannelRequest} returns this
 */
proto.cln.FundchannelRequest.prototype.setAnnounce = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FundchannelRequest} returns this
 */
proto.cln.FundchannelRequest.prototype.clearAnnounce = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundchannelRequest.prototype.hasAnnounce = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 minconf = 10;
 * @return {number}
 */
proto.cln.FundchannelRequest.prototype.getMinconf = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FundchannelRequest} returns this
 */
proto.cln.FundchannelRequest.prototype.setMinconf = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FundchannelRequest} returns this
 */
proto.cln.FundchannelRequest.prototype.clearMinconf = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundchannelRequest.prototype.hasMinconf = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Amount push_msat = 5;
 * @return {?proto.cln.Amount}
 */
proto.cln.FundchannelRequest.prototype.getPushMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 5));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.FundchannelRequest} returns this
*/
proto.cln.FundchannelRequest.prototype.setPushMsat = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FundchannelRequest} returns this
 */
proto.cln.FundchannelRequest.prototype.clearPushMsat = function() {
  return this.setPushMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundchannelRequest.prototype.hasPushMsat = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string close_to = 6;
 * @return {string}
 */
proto.cln.FundchannelRequest.prototype.getCloseTo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.FundchannelRequest} returns this
 */
proto.cln.FundchannelRequest.prototype.setCloseTo = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FundchannelRequest} returns this
 */
proto.cln.FundchannelRequest.prototype.clearCloseTo = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundchannelRequest.prototype.hasCloseTo = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Amount request_amt = 7;
 * @return {?proto.cln.Amount}
 */
proto.cln.FundchannelRequest.prototype.getRequestAmt = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 7));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.FundchannelRequest} returns this
*/
proto.cln.FundchannelRequest.prototype.setRequestAmt = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FundchannelRequest} returns this
 */
proto.cln.FundchannelRequest.prototype.clearRequestAmt = function() {
  return this.setRequestAmt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundchannelRequest.prototype.hasRequestAmt = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string compact_lease = 8;
 * @return {string}
 */
proto.cln.FundchannelRequest.prototype.getCompactLease = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.FundchannelRequest} returns this
 */
proto.cln.FundchannelRequest.prototype.setCompactLease = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FundchannelRequest} returns this
 */
proto.cln.FundchannelRequest.prototype.clearCompactLease = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundchannelRequest.prototype.hasCompactLease = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * repeated Outpoint utxos = 11;
 * @return {!Array<!proto.cln.Outpoint>}
 */
proto.cln.FundchannelRequest.prototype.getUtxosList = function() {
  return /** @type{!Array<!proto.cln.Outpoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, cln_primitives_pb.Outpoint, 11));
};


/**
 * @param {!Array<!proto.cln.Outpoint>} value
 * @return {!proto.cln.FundchannelRequest} returns this
*/
proto.cln.FundchannelRequest.prototype.setUtxosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.cln.Outpoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.Outpoint}
 */
proto.cln.FundchannelRequest.prototype.addUtxos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.cln.Outpoint, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.FundchannelRequest} returns this
 */
proto.cln.FundchannelRequest.prototype.clearUtxosList = function() {
  return this.setUtxosList([]);
};


/**
 * optional uint32 mindepth = 12;
 * @return {number}
 */
proto.cln.FundchannelRequest.prototype.getMindepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FundchannelRequest} returns this
 */
proto.cln.FundchannelRequest.prototype.setMindepth = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FundchannelRequest} returns this
 */
proto.cln.FundchannelRequest.prototype.clearMindepth = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundchannelRequest.prototype.hasMindepth = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional Amount reserve = 13;
 * @return {?proto.cln.Amount}
 */
proto.cln.FundchannelRequest.prototype.getReserve = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 13));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.FundchannelRequest} returns this
*/
proto.cln.FundchannelRequest.prototype.setReserve = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.FundchannelRequest} returns this
 */
proto.cln.FundchannelRequest.prototype.clearReserve = function() {
  return this.setReserve(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundchannelRequest.prototype.hasReserve = function() {
  return jspb.Message.getField(this, 13) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.FundchannelResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.FundchannelResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.FundchannelResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FundchannelResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    tx: msg.getTx_asB64(),
    txid: msg.getTxid_asB64(),
    outnum: jspb.Message.getFieldWithDefault(msg, 3, 0),
    channelId: msg.getChannelId_asB64(),
    closeTo: msg.getCloseTo_asB64(),
    mindepth: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.FundchannelResponse}
 */
proto.cln.FundchannelResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.FundchannelResponse;
  return proto.cln.FundchannelResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.FundchannelResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.FundchannelResponse}
 */
proto.cln.FundchannelResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTx(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOutnum(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChannelId(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setCloseTo(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMindepth(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.FundchannelResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.FundchannelResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.FundchannelResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.FundchannelResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTx_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getTxid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getOutnum();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getChannelId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
};


/**
 * optional bytes tx = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.FundchannelResponse.prototype.getTx = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes tx = 1;
 * This is a type-conversion wrapper around `getTx()`
 * @return {string}
 */
proto.cln.FundchannelResponse.prototype.getTx_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTx()));
};


/**
 * optional bytes tx = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTx()`
 * @return {!Uint8Array}
 */
proto.cln.FundchannelResponse.prototype.getTx_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTx()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.FundchannelResponse} returns this
 */
proto.cln.FundchannelResponse.prototype.setTx = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes txid = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.FundchannelResponse.prototype.getTxid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes txid = 2;
 * This is a type-conversion wrapper around `getTxid()`
 * @return {string}
 */
proto.cln.FundchannelResponse.prototype.getTxid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxid()));
};


/**
 * optional bytes txid = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxid()`
 * @return {!Uint8Array}
 */
proto.cln.FundchannelResponse.prototype.getTxid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.FundchannelResponse} returns this
 */
proto.cln.FundchannelResponse.prototype.setTxid = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional uint32 outnum = 3;
 * @return {number}
 */
proto.cln.FundchannelResponse.prototype.getOutnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FundchannelResponse} returns this
 */
proto.cln.FundchannelResponse.prototype.setOutnum = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bytes channel_id = 4;
 * @return {!(string|Uint8Array)}
 */
proto.cln.FundchannelResponse.prototype.getChannelId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes channel_id = 4;
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {string}
 */
proto.cln.FundchannelResponse.prototype.getChannelId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChannelId()));
};


/**
 * optional bytes channel_id = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {!Uint8Array}
 */
proto.cln.FundchannelResponse.prototype.getChannelId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChannelId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.FundchannelResponse} returns this
 */
proto.cln.FundchannelResponse.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional bytes close_to = 5;
 * @return {!(string|Uint8Array)}
 */
proto.cln.FundchannelResponse.prototype.getCloseTo = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes close_to = 5;
 * This is a type-conversion wrapper around `getCloseTo()`
 * @return {string}
 */
proto.cln.FundchannelResponse.prototype.getCloseTo_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getCloseTo()));
};


/**
 * optional bytes close_to = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCloseTo()`
 * @return {!Uint8Array}
 */
proto.cln.FundchannelResponse.prototype.getCloseTo_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getCloseTo()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.FundchannelResponse} returns this
 */
proto.cln.FundchannelResponse.prototype.setCloseTo = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FundchannelResponse} returns this
 */
proto.cln.FundchannelResponse.prototype.clearCloseTo = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundchannelResponse.prototype.hasCloseTo = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 mindepth = 6;
 * @return {number}
 */
proto.cln.FundchannelResponse.prototype.getMindepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.FundchannelResponse} returns this
 */
proto.cln.FundchannelResponse.prototype.setMindepth = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.FundchannelResponse} returns this
 */
proto.cln.FundchannelResponse.prototype.clearMindepth = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.FundchannelResponse.prototype.hasMindepth = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.GetrouteRequest.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.GetrouteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.GetrouteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.GetrouteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetrouteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64(),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    riskfactor: jspb.Message.getFieldWithDefault(msg, 3, 0),
    cltv: jspb.Message.getFieldWithDefault(msg, 4, 0),
    fromid: msg.getFromid_asB64(),
    fuzzpercent: jspb.Message.getFieldWithDefault(msg, 6, 0),
    excludeList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    maxhops: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.GetrouteRequest}
 */
proto.cln.GetrouteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.GetrouteRequest;
  return proto.cln.GetrouteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.GetrouteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.GetrouteRequest}
 */
proto.cln.GetrouteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    case 9:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRiskfactor(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCltv(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFromid(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFuzzpercent(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addExclude(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxhops(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.GetrouteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.GetrouteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.GetrouteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetrouteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getRiskfactor();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getExcludeList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
};


/**
 * optional bytes id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.GetrouteRequest.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes id = 1;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.cln.GetrouteRequest.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.cln.GetrouteRequest.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.GetrouteRequest} returns this
 */
proto.cln.GetrouteRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional Amount amount_msat = 9;
 * @return {?proto.cln.Amount}
 */
proto.cln.GetrouteRequest.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 9));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.GetrouteRequest} returns this
*/
proto.cln.GetrouteRequest.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.GetrouteRequest} returns this
 */
proto.cln.GetrouteRequest.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetrouteRequest.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint64 riskfactor = 3;
 * @return {number}
 */
proto.cln.GetrouteRequest.prototype.getRiskfactor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.GetrouteRequest} returns this
 */
proto.cln.GetrouteRequest.prototype.setRiskfactor = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 cltv = 4;
 * @return {number}
 */
proto.cln.GetrouteRequest.prototype.getCltv = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.GetrouteRequest} returns this
 */
proto.cln.GetrouteRequest.prototype.setCltv = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.GetrouteRequest} returns this
 */
proto.cln.GetrouteRequest.prototype.clearCltv = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetrouteRequest.prototype.hasCltv = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bytes fromid = 5;
 * @return {!(string|Uint8Array)}
 */
proto.cln.GetrouteRequest.prototype.getFromid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes fromid = 5;
 * This is a type-conversion wrapper around `getFromid()`
 * @return {string}
 */
proto.cln.GetrouteRequest.prototype.getFromid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFromid()));
};


/**
 * optional bytes fromid = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFromid()`
 * @return {!Uint8Array}
 */
proto.cln.GetrouteRequest.prototype.getFromid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFromid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.GetrouteRequest} returns this
 */
proto.cln.GetrouteRequest.prototype.setFromid = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.GetrouteRequest} returns this
 */
proto.cln.GetrouteRequest.prototype.clearFromid = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetrouteRequest.prototype.hasFromid = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 fuzzpercent = 6;
 * @return {number}
 */
proto.cln.GetrouteRequest.prototype.getFuzzpercent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.GetrouteRequest} returns this
 */
proto.cln.GetrouteRequest.prototype.setFuzzpercent = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.GetrouteRequest} returns this
 */
proto.cln.GetrouteRequest.prototype.clearFuzzpercent = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetrouteRequest.prototype.hasFuzzpercent = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated string exclude = 7;
 * @return {!Array<string>}
 */
proto.cln.GetrouteRequest.prototype.getExcludeList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cln.GetrouteRequest} returns this
 */
proto.cln.GetrouteRequest.prototype.setExcludeList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cln.GetrouteRequest} returns this
 */
proto.cln.GetrouteRequest.prototype.addExclude = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.GetrouteRequest} returns this
 */
proto.cln.GetrouteRequest.prototype.clearExcludeList = function() {
  return this.setExcludeList([]);
};


/**
 * optional uint32 maxhops = 8;
 * @return {number}
 */
proto.cln.GetrouteRequest.prototype.getMaxhops = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.GetrouteRequest} returns this
 */
proto.cln.GetrouteRequest.prototype.setMaxhops = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.GetrouteRequest} returns this
 */
proto.cln.GetrouteRequest.prototype.clearMaxhops = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetrouteRequest.prototype.hasMaxhops = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.GetrouteResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.GetrouteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.GetrouteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.GetrouteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetrouteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    routeList: jspb.Message.toObjectList(msg.getRouteList(),
    proto.cln.GetrouteRoute.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.GetrouteResponse}
 */
proto.cln.GetrouteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.GetrouteResponse;
  return proto.cln.GetrouteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.GetrouteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.GetrouteResponse}
 */
proto.cln.GetrouteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.GetrouteRoute;
      reader.readMessage(value,proto.cln.GetrouteRoute.deserializeBinaryFromReader);
      msg.addRoute(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.GetrouteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.GetrouteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.GetrouteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetrouteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRouteList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.GetrouteRoute.serializeBinaryToWriter
    );
  }
};


/**
 * repeated GetrouteRoute route = 1;
 * @return {!Array<!proto.cln.GetrouteRoute>}
 */
proto.cln.GetrouteResponse.prototype.getRouteList = function() {
  return /** @type{!Array<!proto.cln.GetrouteRoute>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.GetrouteRoute, 1));
};


/**
 * @param {!Array<!proto.cln.GetrouteRoute>} value
 * @return {!proto.cln.GetrouteResponse} returns this
*/
proto.cln.GetrouteResponse.prototype.setRouteList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.GetrouteRoute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.GetrouteRoute}
 */
proto.cln.GetrouteResponse.prototype.addRoute = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.GetrouteRoute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.GetrouteResponse} returns this
 */
proto.cln.GetrouteResponse.prototype.clearRouteList = function() {
  return this.setRouteList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.GetrouteRoute.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.GetrouteRoute.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.GetrouteRoute} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetrouteRoute.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64(),
    channel: jspb.Message.getFieldWithDefault(msg, 2, ""),
    direction: jspb.Message.getFieldWithDefault(msg, 3, 0),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    delay: jspb.Message.getFieldWithDefault(msg, 5, 0),
    style: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.GetrouteRoute}
 */
proto.cln.GetrouteRoute.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.GetrouteRoute;
  return proto.cln.GetrouteRoute.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.GetrouteRoute} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.GetrouteRoute}
 */
proto.cln.GetrouteRoute.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannel(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDirection(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDelay(value);
      break;
    case 6:
      var value = /** @type {!proto.cln.GetrouteRoute.GetrouteRouteStyle} */ (reader.readEnum());
      msg.setStyle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.GetrouteRoute.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.GetrouteRoute.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.GetrouteRoute} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.GetrouteRoute.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getChannel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDirection();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getDelay();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getStyle();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.GetrouteRoute.GetrouteRouteStyle = {
  TLV: 0
};

/**
 * optional bytes id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.GetrouteRoute.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes id = 1;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.cln.GetrouteRoute.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.cln.GetrouteRoute.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.GetrouteRoute} returns this
 */
proto.cln.GetrouteRoute.prototype.setId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string channel = 2;
 * @return {string}
 */
proto.cln.GetrouteRoute.prototype.getChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.GetrouteRoute} returns this
 */
proto.cln.GetrouteRoute.prototype.setChannel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 direction = 3;
 * @return {number}
 */
proto.cln.GetrouteRoute.prototype.getDirection = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.GetrouteRoute} returns this
 */
proto.cln.GetrouteRoute.prototype.setDirection = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional Amount amount_msat = 4;
 * @return {?proto.cln.Amount}
 */
proto.cln.GetrouteRoute.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 4));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.GetrouteRoute} returns this
*/
proto.cln.GetrouteRoute.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.GetrouteRoute} returns this
 */
proto.cln.GetrouteRoute.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.GetrouteRoute.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 delay = 5;
 * @return {number}
 */
proto.cln.GetrouteRoute.prototype.getDelay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.GetrouteRoute} returns this
 */
proto.cln.GetrouteRoute.prototype.setDelay = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional GetrouteRouteStyle style = 6;
 * @return {!proto.cln.GetrouteRoute.GetrouteRouteStyle}
 */
proto.cln.GetrouteRoute.prototype.getStyle = function() {
  return /** @type {!proto.cln.GetrouteRoute.GetrouteRouteStyle} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.cln.GetrouteRoute.GetrouteRouteStyle} value
 * @return {!proto.cln.GetrouteRoute} returns this
 */
proto.cln.GetrouteRoute.prototype.setStyle = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListforwardsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListforwardsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListforwardsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListforwardsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    inChannel: jspb.Message.getFieldWithDefault(msg, 2, ""),
    outChannel: jspb.Message.getFieldWithDefault(msg, 3, ""),
    index: jspb.Message.getFieldWithDefault(msg, 4, 0),
    start: jspb.Message.getFieldWithDefault(msg, 5, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListforwardsRequest}
 */
proto.cln.ListforwardsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListforwardsRequest;
  return proto.cln.ListforwardsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListforwardsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListforwardsRequest}
 */
proto.cln.ListforwardsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.ListforwardsRequest.ListforwardsStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInChannel(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutChannel(value);
      break;
    case 4:
      var value = /** @type {!proto.cln.ListforwardsRequest.ListforwardsIndex} */ (reader.readEnum());
      msg.setIndex(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStart(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListforwardsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListforwardsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListforwardsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListforwardsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.cln.ListforwardsRequest.ListforwardsStatus} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {!proto.cln.ListforwardsRequest.ListforwardsIndex} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ListforwardsRequest.ListforwardsStatus = {
  OFFERED: 0,
  SETTLED: 1,
  LOCAL_FAILED: 2,
  FAILED: 3
};

/**
 * @enum {number}
 */
proto.cln.ListforwardsRequest.ListforwardsIndex = {
  CREATED: 0,
  UPDATED: 1
};

/**
 * optional ListforwardsStatus status = 1;
 * @return {!proto.cln.ListforwardsRequest.ListforwardsStatus}
 */
proto.cln.ListforwardsRequest.prototype.getStatus = function() {
  return /** @type {!proto.cln.ListforwardsRequest.ListforwardsStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.ListforwardsRequest.ListforwardsStatus} value
 * @return {!proto.cln.ListforwardsRequest} returns this
 */
proto.cln.ListforwardsRequest.prototype.setStatus = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListforwardsRequest} returns this
 */
proto.cln.ListforwardsRequest.prototype.clearStatus = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListforwardsRequest.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string in_channel = 2;
 * @return {string}
 */
proto.cln.ListforwardsRequest.prototype.getInChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListforwardsRequest} returns this
 */
proto.cln.ListforwardsRequest.prototype.setInChannel = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListforwardsRequest} returns this
 */
proto.cln.ListforwardsRequest.prototype.clearInChannel = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListforwardsRequest.prototype.hasInChannel = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string out_channel = 3;
 * @return {string}
 */
proto.cln.ListforwardsRequest.prototype.getOutChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListforwardsRequest} returns this
 */
proto.cln.ListforwardsRequest.prototype.setOutChannel = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListforwardsRequest} returns this
 */
proto.cln.ListforwardsRequest.prototype.clearOutChannel = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListforwardsRequest.prototype.hasOutChannel = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ListforwardsIndex index = 4;
 * @return {!proto.cln.ListforwardsRequest.ListforwardsIndex}
 */
proto.cln.ListforwardsRequest.prototype.getIndex = function() {
  return /** @type {!proto.cln.ListforwardsRequest.ListforwardsIndex} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.cln.ListforwardsRequest.ListforwardsIndex} value
 * @return {!proto.cln.ListforwardsRequest} returns this
 */
proto.cln.ListforwardsRequest.prototype.setIndex = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListforwardsRequest} returns this
 */
proto.cln.ListforwardsRequest.prototype.clearIndex = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListforwardsRequest.prototype.hasIndex = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint64 start = 5;
 * @return {number}
 */
proto.cln.ListforwardsRequest.prototype.getStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListforwardsRequest} returns this
 */
proto.cln.ListforwardsRequest.prototype.setStart = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListforwardsRequest} returns this
 */
proto.cln.ListforwardsRequest.prototype.clearStart = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListforwardsRequest.prototype.hasStart = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 limit = 6;
 * @return {number}
 */
proto.cln.ListforwardsRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListforwardsRequest} returns this
 */
proto.cln.ListforwardsRequest.prototype.setLimit = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListforwardsRequest} returns this
 */
proto.cln.ListforwardsRequest.prototype.clearLimit = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListforwardsRequest.prototype.hasLimit = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListforwardsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListforwardsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListforwardsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListforwardsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListforwardsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    forwardsList: jspb.Message.toObjectList(msg.getForwardsList(),
    proto.cln.ListforwardsForwards.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListforwardsResponse}
 */
proto.cln.ListforwardsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListforwardsResponse;
  return proto.cln.ListforwardsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListforwardsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListforwardsResponse}
 */
proto.cln.ListforwardsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.ListforwardsForwards;
      reader.readMessage(value,proto.cln.ListforwardsForwards.deserializeBinaryFromReader);
      msg.addForwards(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListforwardsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListforwardsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListforwardsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListforwardsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getForwardsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.ListforwardsForwards.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ListforwardsForwards forwards = 1;
 * @return {!Array<!proto.cln.ListforwardsForwards>}
 */
proto.cln.ListforwardsResponse.prototype.getForwardsList = function() {
  return /** @type{!Array<!proto.cln.ListforwardsForwards>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListforwardsForwards, 1));
};


/**
 * @param {!Array<!proto.cln.ListforwardsForwards>} value
 * @return {!proto.cln.ListforwardsResponse} returns this
*/
proto.cln.ListforwardsResponse.prototype.setForwardsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.ListforwardsForwards=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListforwardsForwards}
 */
proto.cln.ListforwardsResponse.prototype.addForwards = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.ListforwardsForwards, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListforwardsResponse} returns this
 */
proto.cln.ListforwardsResponse.prototype.clearForwardsList = function() {
  return this.setForwardsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListforwardsForwards.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListforwardsForwards.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListforwardsForwards} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListforwardsForwards.toObject = function(includeInstance, msg) {
  var f, obj = {
    createdIndex: jspb.Message.getFieldWithDefault(msg, 12, 0),
    inChannel: jspb.Message.getFieldWithDefault(msg, 1, ""),
    inHtlcId: jspb.Message.getFieldWithDefault(msg, 10, 0),
    inMsat: (f = msg.getInMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 3, 0),
    receivedTime: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    outChannel: jspb.Message.getFieldWithDefault(msg, 5, ""),
    outHtlcId: jspb.Message.getFieldWithDefault(msg, 11, 0),
    updatedIndex: jspb.Message.getFieldWithDefault(msg, 13, 0),
    style: jspb.Message.getFieldWithDefault(msg, 9, 0),
    feeMsat: (f = msg.getFeeMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    outMsat: (f = msg.getOutMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListforwardsForwards}
 */
proto.cln.ListforwardsForwards.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListforwardsForwards;
  return proto.cln.ListforwardsForwards.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListforwardsForwards} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListforwardsForwards}
 */
proto.cln.ListforwardsForwards.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedIndex(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInChannel(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInHtlcId(value);
      break;
    case 2:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setInMsat(value);
      break;
    case 3:
      var value = /** @type {!proto.cln.ListforwardsForwards.ListforwardsForwardsStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setReceivedTime(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutChannel(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOutHtlcId(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpdatedIndex(value);
      break;
    case 9:
      var value = /** @type {!proto.cln.ListforwardsForwards.ListforwardsForwardsStyle} */ (reader.readEnum());
      msg.setStyle(value);
      break;
    case 7:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setFeeMsat(value);
      break;
    case 8:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setOutMsat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListforwardsForwards.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListforwardsForwards.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListforwardsForwards} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListforwardsForwards.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = message.getInChannel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getInMsat();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getReceivedTime();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeUint64(
      13,
      f
    );
  }
  f = /** @type {!proto.cln.ListforwardsForwards.ListforwardsForwardsStyle} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getFeeMsat();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getOutMsat();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ListforwardsForwards.ListforwardsForwardsStatus = {
  OFFERED: 0,
  SETTLED: 1,
  LOCAL_FAILED: 2,
  FAILED: 3
};

/**
 * @enum {number}
 */
proto.cln.ListforwardsForwards.ListforwardsForwardsStyle = {
  LEGACY: 0,
  TLV: 1
};

/**
 * optional uint64 created_index = 12;
 * @return {number}
 */
proto.cln.ListforwardsForwards.prototype.getCreatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.setCreatedIndex = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.clearCreatedIndex = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListforwardsForwards.prototype.hasCreatedIndex = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string in_channel = 1;
 * @return {string}
 */
proto.cln.ListforwardsForwards.prototype.getInChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.setInChannel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 in_htlc_id = 10;
 * @return {number}
 */
proto.cln.ListforwardsForwards.prototype.getInHtlcId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.setInHtlcId = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.clearInHtlcId = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListforwardsForwards.prototype.hasInHtlcId = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Amount in_msat = 2;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListforwardsForwards.prototype.getInMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 2));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListforwardsForwards} returns this
*/
proto.cln.ListforwardsForwards.prototype.setInMsat = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.clearInMsat = function() {
  return this.setInMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListforwardsForwards.prototype.hasInMsat = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ListforwardsForwardsStatus status = 3;
 * @return {!proto.cln.ListforwardsForwards.ListforwardsForwardsStatus}
 */
proto.cln.ListforwardsForwards.prototype.getStatus = function() {
  return /** @type {!proto.cln.ListforwardsForwards.ListforwardsForwardsStatus} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.cln.ListforwardsForwards.ListforwardsForwardsStatus} value
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional double received_time = 4;
 * @return {number}
 */
proto.cln.ListforwardsForwards.prototype.getReceivedTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.setReceivedTime = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional string out_channel = 5;
 * @return {string}
 */
proto.cln.ListforwardsForwards.prototype.getOutChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.setOutChannel = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.clearOutChannel = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListforwardsForwards.prototype.hasOutChannel = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint64 out_htlc_id = 11;
 * @return {number}
 */
proto.cln.ListforwardsForwards.prototype.getOutHtlcId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.setOutHtlcId = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.clearOutHtlcId = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListforwardsForwards.prototype.hasOutHtlcId = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint64 updated_index = 13;
 * @return {number}
 */
proto.cln.ListforwardsForwards.prototype.getUpdatedIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.setUpdatedIndex = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.clearUpdatedIndex = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListforwardsForwards.prototype.hasUpdatedIndex = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional ListforwardsForwardsStyle style = 9;
 * @return {!proto.cln.ListforwardsForwards.ListforwardsForwardsStyle}
 */
proto.cln.ListforwardsForwards.prototype.getStyle = function() {
  return /** @type {!proto.cln.ListforwardsForwards.ListforwardsForwardsStyle} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.cln.ListforwardsForwards.ListforwardsForwardsStyle} value
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.setStyle = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.clearStyle = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListforwardsForwards.prototype.hasStyle = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Amount fee_msat = 7;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListforwardsForwards.prototype.getFeeMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 7));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListforwardsForwards} returns this
*/
proto.cln.ListforwardsForwards.prototype.setFeeMsat = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.clearFeeMsat = function() {
  return this.setFeeMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListforwardsForwards.prototype.hasFeeMsat = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Amount out_msat = 8;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListforwardsForwards.prototype.getOutMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 8));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListforwardsForwards} returns this
*/
proto.cln.ListforwardsForwards.prototype.setOutMsat = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListforwardsForwards} returns this
 */
proto.cln.ListforwardsForwards.prototype.clearOutMsat = function() {
  return this.setOutMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListforwardsForwards.prototype.hasOutMsat = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpaysRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpaysRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpaysRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpaysRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    bolt11: jspb.Message.getFieldWithDefault(msg, 1, ""),
    paymentHash: msg.getPaymentHash_asB64(),
    status: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpaysRequest}
 */
proto.cln.ListpaysRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpaysRequest;
  return proto.cln.ListpaysRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpaysRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpaysRequest}
 */
proto.cln.ListpaysRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 3:
      var value = /** @type {!proto.cln.ListpaysRequest.ListpaysStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpaysRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpaysRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpaysRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpaysRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = /** @type {!proto.cln.ListpaysRequest.ListpaysStatus} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ListpaysRequest.ListpaysStatus = {
  PENDING: 0,
  COMPLETE: 1,
  FAILED: 2
};

/**
 * optional string bolt11 = 1;
 * @return {string}
 */
proto.cln.ListpaysRequest.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpaysRequest} returns this
 */
proto.cln.ListpaysRequest.prototype.setBolt11 = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpaysRequest} returns this
 */
proto.cln.ListpaysRequest.prototype.clearBolt11 = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpaysRequest.prototype.hasBolt11 = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes payment_hash = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpaysRequest.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes payment_hash = 2;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.ListpaysRequest.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.ListpaysRequest.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpaysRequest} returns this
 */
proto.cln.ListpaysRequest.prototype.setPaymentHash = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpaysRequest} returns this
 */
proto.cln.ListpaysRequest.prototype.clearPaymentHash = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpaysRequest.prototype.hasPaymentHash = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ListpaysStatus status = 3;
 * @return {!proto.cln.ListpaysRequest.ListpaysStatus}
 */
proto.cln.ListpaysRequest.prototype.getStatus = function() {
  return /** @type {!proto.cln.ListpaysRequest.ListpaysStatus} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.cln.ListpaysRequest.ListpaysStatus} value
 * @return {!proto.cln.ListpaysRequest} returns this
 */
proto.cln.ListpaysRequest.prototype.setStatus = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpaysRequest} returns this
 */
proto.cln.ListpaysRequest.prototype.clearStatus = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpaysRequest.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListpaysResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpaysResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpaysResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpaysResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpaysResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    paysList: jspb.Message.toObjectList(msg.getPaysList(),
    proto.cln.ListpaysPays.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpaysResponse}
 */
proto.cln.ListpaysResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpaysResponse;
  return proto.cln.ListpaysResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpaysResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpaysResponse}
 */
proto.cln.ListpaysResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.ListpaysPays;
      reader.readMessage(value,proto.cln.ListpaysPays.deserializeBinaryFromReader);
      msg.addPays(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpaysResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpaysResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpaysResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpaysResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaysList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.ListpaysPays.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ListpaysPays pays = 1;
 * @return {!Array<!proto.cln.ListpaysPays>}
 */
proto.cln.ListpaysResponse.prototype.getPaysList = function() {
  return /** @type{!Array<!proto.cln.ListpaysPays>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListpaysPays, 1));
};


/**
 * @param {!Array<!proto.cln.ListpaysPays>} value
 * @return {!proto.cln.ListpaysResponse} returns this
*/
proto.cln.ListpaysResponse.prototype.setPaysList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.ListpaysPays=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListpaysPays}
 */
proto.cln.ListpaysResponse.prototype.addPays = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.ListpaysPays, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListpaysResponse} returns this
 */
proto.cln.ListpaysResponse.prototype.clearPaysList = function() {
  return this.setPaysList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListpaysPays.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListpaysPays.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListpaysPays} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpaysPays.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentHash: msg.getPaymentHash_asB64(),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    destination: msg.getDestination_asB64(),
    createdAt: jspb.Message.getFieldWithDefault(msg, 4, 0),
    completedAt: jspb.Message.getFieldWithDefault(msg, 12, 0),
    label: jspb.Message.getFieldWithDefault(msg, 5, ""),
    bolt11: jspb.Message.getFieldWithDefault(msg, 6, ""),
    description: jspb.Message.getFieldWithDefault(msg, 11, ""),
    bolt12: jspb.Message.getFieldWithDefault(msg, 7, ""),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    amountSentMsat: (f = msg.getAmountSentMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    preimage: msg.getPreimage_asB64(),
    numberOfParts: jspb.Message.getFieldWithDefault(msg, 14, 0),
    erroronion: msg.getErroronion_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListpaysPays}
 */
proto.cln.ListpaysPays.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListpaysPays;
  return proto.cln.ListpaysPays.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListpaysPays} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListpaysPays}
 */
proto.cln.ListpaysPays.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 2:
      var value = /** @type {!proto.cln.ListpaysPays.ListpaysPaysStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDestination(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedAt(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCompletedAt(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt12(value);
      break;
    case 8:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 9:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountSentMsat(value);
      break;
    case 13:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPreimage(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumberOfParts(value);
      break;
    case 10:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setErroronion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListpaysPays.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListpaysPays.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListpaysPays} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListpaysPays.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getAmountSentMsat();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBytes(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeUint64(
      14,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBytes(
      10,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ListpaysPays.ListpaysPaysStatus = {
  PENDING: 0,
  FAILED: 1,
  COMPLETE: 2
};

/**
 * optional bytes payment_hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpaysPays.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes payment_hash = 1;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.ListpaysPays.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.ListpaysPays.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional ListpaysPaysStatus status = 2;
 * @return {!proto.cln.ListpaysPays.ListpaysPaysStatus}
 */
proto.cln.ListpaysPays.prototype.getStatus = function() {
  return /** @type {!proto.cln.ListpaysPays.ListpaysPaysStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.cln.ListpaysPays.ListpaysPaysStatus} value
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional bytes destination = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpaysPays.prototype.getDestination = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes destination = 3;
 * This is a type-conversion wrapper around `getDestination()`
 * @return {string}
 */
proto.cln.ListpaysPays.prototype.getDestination_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDestination()));
};


/**
 * optional bytes destination = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDestination()`
 * @return {!Uint8Array}
 */
proto.cln.ListpaysPays.prototype.getDestination_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDestination()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.setDestination = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.clearDestination = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpaysPays.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 created_at = 4;
 * @return {number}
 */
proto.cln.ListpaysPays.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 completed_at = 12;
 * @return {number}
 */
proto.cln.ListpaysPays.prototype.getCompletedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.setCompletedAt = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.clearCompletedAt = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpaysPays.prototype.hasCompletedAt = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string label = 5;
 * @return {string}
 */
proto.cln.ListpaysPays.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.setLabel = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.clearLabel = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpaysPays.prototype.hasLabel = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string bolt11 = 6;
 * @return {string}
 */
proto.cln.ListpaysPays.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.setBolt11 = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.clearBolt11 = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpaysPays.prototype.hasBolt11 = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string description = 11;
 * @return {string}
 */
proto.cln.ListpaysPays.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpaysPays.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string bolt12 = 7;
 * @return {string}
 */
proto.cln.ListpaysPays.prototype.getBolt12 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.setBolt12 = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.clearBolt12 = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpaysPays.prototype.hasBolt12 = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Amount amount_msat = 8;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpaysPays.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 8));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpaysPays} returns this
*/
proto.cln.ListpaysPays.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpaysPays.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Amount amount_sent_msat = 9;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListpaysPays.prototype.getAmountSentMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 9));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListpaysPays} returns this
*/
proto.cln.ListpaysPays.prototype.setAmountSentMsat = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.clearAmountSentMsat = function() {
  return this.setAmountSentMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpaysPays.prototype.hasAmountSentMsat = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bytes preimage = 13;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpaysPays.prototype.getPreimage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * optional bytes preimage = 13;
 * This is a type-conversion wrapper around `getPreimage()`
 * @return {string}
 */
proto.cln.ListpaysPays.prototype.getPreimage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPreimage()));
};


/**
 * optional bytes preimage = 13;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPreimage()`
 * @return {!Uint8Array}
 */
proto.cln.ListpaysPays.prototype.getPreimage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPreimage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.setPreimage = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.clearPreimage = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpaysPays.prototype.hasPreimage = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional uint64 number_of_parts = 14;
 * @return {number}
 */
proto.cln.ListpaysPays.prototype.getNumberOfParts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.setNumberOfParts = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.clearNumberOfParts = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpaysPays.prototype.hasNumberOfParts = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bytes erroronion = 10;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListpaysPays.prototype.getErroronion = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * optional bytes erroronion = 10;
 * This is a type-conversion wrapper around `getErroronion()`
 * @return {string}
 */
proto.cln.ListpaysPays.prototype.getErroronion_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getErroronion()));
};


/**
 * optional bytes erroronion = 10;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getErroronion()`
 * @return {!Uint8Array}
 */
proto.cln.ListpaysPays.prototype.getErroronion_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getErroronion()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.setErroronion = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListpaysPays} returns this
 */
proto.cln.ListpaysPays.prototype.clearErroronion = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListpaysPays.prototype.hasErroronion = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListhtlcsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListhtlcsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListhtlcsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListhtlcsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListhtlcsRequest}
 */
proto.cln.ListhtlcsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListhtlcsRequest;
  return proto.cln.ListhtlcsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListhtlcsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListhtlcsRequest}
 */
proto.cln.ListhtlcsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListhtlcsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListhtlcsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListhtlcsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListhtlcsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.cln.ListhtlcsRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListhtlcsRequest} returns this
 */
proto.cln.ListhtlcsRequest.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.ListhtlcsRequest} returns this
 */
proto.cln.ListhtlcsRequest.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListhtlcsRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.ListhtlcsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListhtlcsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListhtlcsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListhtlcsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListhtlcsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    htlcsList: jspb.Message.toObjectList(msg.getHtlcsList(),
    proto.cln.ListhtlcsHtlcs.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListhtlcsResponse}
 */
proto.cln.ListhtlcsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListhtlcsResponse;
  return proto.cln.ListhtlcsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListhtlcsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListhtlcsResponse}
 */
proto.cln.ListhtlcsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.ListhtlcsHtlcs;
      reader.readMessage(value,proto.cln.ListhtlcsHtlcs.deserializeBinaryFromReader);
      msg.addHtlcs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListhtlcsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListhtlcsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListhtlcsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListhtlcsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHtlcsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.ListhtlcsHtlcs.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ListhtlcsHtlcs htlcs = 1;
 * @return {!Array<!proto.cln.ListhtlcsHtlcs>}
 */
proto.cln.ListhtlcsResponse.prototype.getHtlcsList = function() {
  return /** @type{!Array<!proto.cln.ListhtlcsHtlcs>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.ListhtlcsHtlcs, 1));
};


/**
 * @param {!Array<!proto.cln.ListhtlcsHtlcs>} value
 * @return {!proto.cln.ListhtlcsResponse} returns this
*/
proto.cln.ListhtlcsResponse.prototype.setHtlcsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.ListhtlcsHtlcs=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.ListhtlcsHtlcs}
 */
proto.cln.ListhtlcsResponse.prototype.addHtlcs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.ListhtlcsHtlcs, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.ListhtlcsResponse} returns this
 */
proto.cln.ListhtlcsResponse.prototype.clearHtlcsList = function() {
  return this.setHtlcsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.ListhtlcsHtlcs.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.ListhtlcsHtlcs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.ListhtlcsHtlcs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListhtlcsHtlcs.toObject = function(includeInstance, msg) {
  var f, obj = {
    shortChannelId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0),
    expiry: jspb.Message.getFieldWithDefault(msg, 3, 0),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    direction: jspb.Message.getFieldWithDefault(msg, 5, 0),
    paymentHash: msg.getPaymentHash_asB64(),
    state: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.ListhtlcsHtlcs}
 */
proto.cln.ListhtlcsHtlcs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.ListhtlcsHtlcs;
  return proto.cln.ListhtlcsHtlcs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.ListhtlcsHtlcs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.ListhtlcsHtlcs}
 */
proto.cln.ListhtlcsHtlcs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setShortChannelId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setExpiry(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    case 5:
      var value = /** @type {!proto.cln.ListhtlcsHtlcs.ListhtlcsHtlcsDirection} */ (reader.readEnum());
      msg.setDirection(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 7:
      var value = /** @type {!proto.cln.HtlcState} */ (reader.readEnum());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.ListhtlcsHtlcs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.ListhtlcsHtlcs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.ListhtlcsHtlcs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.ListhtlcsHtlcs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getShortChannelId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getExpiry();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getDirection();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getPaymentHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.ListhtlcsHtlcs.ListhtlcsHtlcsDirection = {
  OUT: 0,
  IN: 1
};

/**
 * optional string short_channel_id = 1;
 * @return {string}
 */
proto.cln.ListhtlcsHtlcs.prototype.getShortChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.ListhtlcsHtlcs} returns this
 */
proto.cln.ListhtlcsHtlcs.prototype.setShortChannelId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 id = 2;
 * @return {number}
 */
proto.cln.ListhtlcsHtlcs.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListhtlcsHtlcs} returns this
 */
proto.cln.ListhtlcsHtlcs.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 expiry = 3;
 * @return {number}
 */
proto.cln.ListhtlcsHtlcs.prototype.getExpiry = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.ListhtlcsHtlcs} returns this
 */
proto.cln.ListhtlcsHtlcs.prototype.setExpiry = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional Amount amount_msat = 4;
 * @return {?proto.cln.Amount}
 */
proto.cln.ListhtlcsHtlcs.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 4));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.ListhtlcsHtlcs} returns this
*/
proto.cln.ListhtlcsHtlcs.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.ListhtlcsHtlcs} returns this
 */
proto.cln.ListhtlcsHtlcs.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.ListhtlcsHtlcs.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ListhtlcsHtlcsDirection direction = 5;
 * @return {!proto.cln.ListhtlcsHtlcs.ListhtlcsHtlcsDirection}
 */
proto.cln.ListhtlcsHtlcs.prototype.getDirection = function() {
  return /** @type {!proto.cln.ListhtlcsHtlcs.ListhtlcsHtlcsDirection} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.cln.ListhtlcsHtlcs.ListhtlcsHtlcsDirection} value
 * @return {!proto.cln.ListhtlcsHtlcs} returns this
 */
proto.cln.ListhtlcsHtlcs.prototype.setDirection = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional bytes payment_hash = 6;
 * @return {!(string|Uint8Array)}
 */
proto.cln.ListhtlcsHtlcs.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes payment_hash = 6;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.ListhtlcsHtlcs.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.ListhtlcsHtlcs.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.ListhtlcsHtlcs} returns this
 */
proto.cln.ListhtlcsHtlcs.prototype.setPaymentHash = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional HtlcState state = 7;
 * @return {!proto.cln.HtlcState}
 */
proto.cln.ListhtlcsHtlcs.prototype.getState = function() {
  return /** @type {!proto.cln.HtlcState} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.cln.HtlcState} value
 * @return {!proto.cln.ListhtlcsHtlcs} returns this
 */
proto.cln.ListhtlcsHtlcs.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.PingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.PingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.PingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64(),
    len: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pongbytes: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.PingRequest}
 */
proto.cln.PingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.PingRequest;
  return proto.cln.PingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.PingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.PingRequest}
 */
proto.cln.PingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLen(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPongbytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.PingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.PingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.PingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional bytes id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.PingRequest.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes id = 1;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.cln.PingRequest.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.cln.PingRequest.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.PingRequest} returns this
 */
proto.cln.PingRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint32 len = 2;
 * @return {number}
 */
proto.cln.PingRequest.prototype.getLen = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.PingRequest} returns this
 */
proto.cln.PingRequest.prototype.setLen = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.PingRequest} returns this
 */
proto.cln.PingRequest.prototype.clearLen = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PingRequest.prototype.hasLen = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 pongbytes = 3;
 * @return {number}
 */
proto.cln.PingRequest.prototype.getPongbytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.PingRequest} returns this
 */
proto.cln.PingRequest.prototype.setPongbytes = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.PingRequest} returns this
 */
proto.cln.PingRequest.prototype.clearPongbytes = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PingRequest.prototype.hasPongbytes = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.PingResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.PingResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.PingResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PingResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    totlen: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.PingResponse}
 */
proto.cln.PingResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.PingResponse;
  return proto.cln.PingResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.PingResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.PingResponse}
 */
proto.cln.PingResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotlen(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.PingResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.PingResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.PingResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PingResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotlen();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 totlen = 1;
 * @return {number}
 */
proto.cln.PingResponse.prototype.getTotlen = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.PingResponse} returns this
 */
proto.cln.PingResponse.prototype.setTotlen = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SendcustommsgRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SendcustommsgRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SendcustommsgRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendcustommsgRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeId: msg.getNodeId_asB64(),
    msg: msg.getMsg_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SendcustommsgRequest}
 */
proto.cln.SendcustommsgRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SendcustommsgRequest;
  return proto.cln.SendcustommsgRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SendcustommsgRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SendcustommsgRequest}
 */
proto.cln.SendcustommsgRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setNodeId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMsg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SendcustommsgRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SendcustommsgRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SendcustommsgRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendcustommsgRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getMsg_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional bytes node_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendcustommsgRequest.prototype.getNodeId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes node_id = 1;
 * This is a type-conversion wrapper around `getNodeId()`
 * @return {string}
 */
proto.cln.SendcustommsgRequest.prototype.getNodeId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getNodeId()));
};


/**
 * optional bytes node_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getNodeId()`
 * @return {!Uint8Array}
 */
proto.cln.SendcustommsgRequest.prototype.getNodeId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getNodeId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendcustommsgRequest} returns this
 */
proto.cln.SendcustommsgRequest.prototype.setNodeId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes msg = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SendcustommsgRequest.prototype.getMsg = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes msg = 2;
 * This is a type-conversion wrapper around `getMsg()`
 * @return {string}
 */
proto.cln.SendcustommsgRequest.prototype.getMsg_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMsg()));
};


/**
 * optional bytes msg = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMsg()`
 * @return {!Uint8Array}
 */
proto.cln.SendcustommsgRequest.prototype.getMsg_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMsg()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SendcustommsgRequest} returns this
 */
proto.cln.SendcustommsgRequest.prototype.setMsg = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SendcustommsgResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SendcustommsgResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SendcustommsgResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendcustommsgResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SendcustommsgResponse}
 */
proto.cln.SendcustommsgResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SendcustommsgResponse;
  return proto.cln.SendcustommsgResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SendcustommsgResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SendcustommsgResponse}
 */
proto.cln.SendcustommsgResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SendcustommsgResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SendcustommsgResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SendcustommsgResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SendcustommsgResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.cln.SendcustommsgResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SendcustommsgResponse} returns this
 */
proto.cln.SendcustommsgResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SetchannelRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SetchannelRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SetchannelRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SetchannelRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    feebase: (f = msg.getFeebase()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    feeppm: jspb.Message.getFieldWithDefault(msg, 3, 0),
    htlcmin: (f = msg.getHtlcmin()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    htlcmax: (f = msg.getHtlcmax()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    enforcedelay: jspb.Message.getFieldWithDefault(msg, 6, 0),
    ignorefeelimits: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SetchannelRequest}
 */
proto.cln.SetchannelRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SetchannelRequest;
  return proto.cln.SetchannelRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SetchannelRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SetchannelRequest}
 */
proto.cln.SetchannelRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setFeebase(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFeeppm(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setHtlcmin(value);
      break;
    case 5:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setHtlcmax(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setEnforcedelay(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIgnorefeelimits(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SetchannelRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SetchannelRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SetchannelRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SetchannelRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFeebase();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getHtlcmin();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getHtlcmax();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.cln.SetchannelRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SetchannelRequest} returns this
 */
proto.cln.SetchannelRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Amount feebase = 2;
 * @return {?proto.cln.Amount}
 */
proto.cln.SetchannelRequest.prototype.getFeebase = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 2));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.SetchannelRequest} returns this
*/
proto.cln.SetchannelRequest.prototype.setFeebase = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.SetchannelRequest} returns this
 */
proto.cln.SetchannelRequest.prototype.clearFeebase = function() {
  return this.setFeebase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SetchannelRequest.prototype.hasFeebase = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 feeppm = 3;
 * @return {number}
 */
proto.cln.SetchannelRequest.prototype.getFeeppm = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SetchannelRequest} returns this
 */
proto.cln.SetchannelRequest.prototype.setFeeppm = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SetchannelRequest} returns this
 */
proto.cln.SetchannelRequest.prototype.clearFeeppm = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SetchannelRequest.prototype.hasFeeppm = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Amount htlcmin = 4;
 * @return {?proto.cln.Amount}
 */
proto.cln.SetchannelRequest.prototype.getHtlcmin = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 4));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.SetchannelRequest} returns this
*/
proto.cln.SetchannelRequest.prototype.setHtlcmin = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.SetchannelRequest} returns this
 */
proto.cln.SetchannelRequest.prototype.clearHtlcmin = function() {
  return this.setHtlcmin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SetchannelRequest.prototype.hasHtlcmin = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Amount htlcmax = 5;
 * @return {?proto.cln.Amount}
 */
proto.cln.SetchannelRequest.prototype.getHtlcmax = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 5));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.SetchannelRequest} returns this
*/
proto.cln.SetchannelRequest.prototype.setHtlcmax = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.SetchannelRequest} returns this
 */
proto.cln.SetchannelRequest.prototype.clearHtlcmax = function() {
  return this.setHtlcmax(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SetchannelRequest.prototype.hasHtlcmax = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 enforcedelay = 6;
 * @return {number}
 */
proto.cln.SetchannelRequest.prototype.getEnforcedelay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SetchannelRequest} returns this
 */
proto.cln.SetchannelRequest.prototype.setEnforcedelay = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SetchannelRequest} returns this
 */
proto.cln.SetchannelRequest.prototype.clearEnforcedelay = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SetchannelRequest.prototype.hasEnforcedelay = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool ignorefeelimits = 7;
 * @return {boolean}
 */
proto.cln.SetchannelRequest.prototype.getIgnorefeelimits = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.SetchannelRequest} returns this
 */
proto.cln.SetchannelRequest.prototype.setIgnorefeelimits = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SetchannelRequest} returns this
 */
proto.cln.SetchannelRequest.prototype.clearIgnorefeelimits = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SetchannelRequest.prototype.hasIgnorefeelimits = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.SetchannelResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SetchannelResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SetchannelResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SetchannelResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SetchannelResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    channelsList: jspb.Message.toObjectList(msg.getChannelsList(),
    proto.cln.SetchannelChannels.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SetchannelResponse}
 */
proto.cln.SetchannelResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SetchannelResponse;
  return proto.cln.SetchannelResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SetchannelResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SetchannelResponse}
 */
proto.cln.SetchannelResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cln.SetchannelChannels;
      reader.readMessage(value,proto.cln.SetchannelChannels.deserializeBinaryFromReader);
      msg.addChannels(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SetchannelResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SetchannelResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SetchannelResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SetchannelResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannelsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cln.SetchannelChannels.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SetchannelChannels channels = 1;
 * @return {!Array<!proto.cln.SetchannelChannels>}
 */
proto.cln.SetchannelResponse.prototype.getChannelsList = function() {
  return /** @type{!Array<!proto.cln.SetchannelChannels>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cln.SetchannelChannels, 1));
};


/**
 * @param {!Array<!proto.cln.SetchannelChannels>} value
 * @return {!proto.cln.SetchannelResponse} returns this
*/
proto.cln.SetchannelResponse.prototype.setChannelsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cln.SetchannelChannels=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cln.SetchannelChannels}
 */
proto.cln.SetchannelResponse.prototype.addChannels = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cln.SetchannelChannels, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.SetchannelResponse} returns this
 */
proto.cln.SetchannelResponse.prototype.clearChannelsList = function() {
  return this.setChannelsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SetchannelChannels.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SetchannelChannels.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SetchannelChannels} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SetchannelChannels.toObject = function(includeInstance, msg) {
  var f, obj = {
    peerId: msg.getPeerId_asB64(),
    channelId: msg.getChannelId_asB64(),
    shortChannelId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    feeBaseMsat: (f = msg.getFeeBaseMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    feeProportionalMillionths: jspb.Message.getFieldWithDefault(msg, 5, 0),
    ignoreFeeLimits: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    minimumHtlcOutMsat: (f = msg.getMinimumHtlcOutMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    warningHtlcminTooLow: jspb.Message.getFieldWithDefault(msg, 7, ""),
    maximumHtlcOutMsat: (f = msg.getMaximumHtlcOutMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f),
    warningHtlcmaxTooHigh: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SetchannelChannels}
 */
proto.cln.SetchannelChannels.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SetchannelChannels;
  return proto.cln.SetchannelChannels.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SetchannelChannels} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SetchannelChannels}
 */
proto.cln.SetchannelChannels.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPeerId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChannelId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setShortChannelId(value);
      break;
    case 4:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setFeeBaseMsat(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFeeProportionalMillionths(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIgnoreFeeLimits(value);
      break;
    case 6:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setMinimumHtlcOutMsat(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningHtlcminTooLow(value);
      break;
    case 8:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setMaximumHtlcOutMsat(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setWarningHtlcmaxTooHigh(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SetchannelChannels.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SetchannelChannels.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SetchannelChannels} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SetchannelChannels.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeerId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getChannelId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFeeBaseMsat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getFeeProportionalMillionths();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getMinimumHtlcOutMsat();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getMaximumHtlcOutMsat();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional bytes peer_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SetchannelChannels.prototype.getPeerId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes peer_id = 1;
 * This is a type-conversion wrapper around `getPeerId()`
 * @return {string}
 */
proto.cln.SetchannelChannels.prototype.getPeerId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPeerId()));
};


/**
 * optional bytes peer_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPeerId()`
 * @return {!Uint8Array}
 */
proto.cln.SetchannelChannels.prototype.getPeerId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPeerId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SetchannelChannels} returns this
 */
proto.cln.SetchannelChannels.prototype.setPeerId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes channel_id = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SetchannelChannels.prototype.getChannelId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes channel_id = 2;
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {string}
 */
proto.cln.SetchannelChannels.prototype.getChannelId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChannelId()));
};


/**
 * optional bytes channel_id = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChannelId()`
 * @return {!Uint8Array}
 */
proto.cln.SetchannelChannels.prototype.getChannelId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChannelId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SetchannelChannels} returns this
 */
proto.cln.SetchannelChannels.prototype.setChannelId = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string short_channel_id = 3;
 * @return {string}
 */
proto.cln.SetchannelChannels.prototype.getShortChannelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SetchannelChannels} returns this
 */
proto.cln.SetchannelChannels.prototype.setShortChannelId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SetchannelChannels} returns this
 */
proto.cln.SetchannelChannels.prototype.clearShortChannelId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SetchannelChannels.prototype.hasShortChannelId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Amount fee_base_msat = 4;
 * @return {?proto.cln.Amount}
 */
proto.cln.SetchannelChannels.prototype.getFeeBaseMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 4));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.SetchannelChannels} returns this
*/
proto.cln.SetchannelChannels.prototype.setFeeBaseMsat = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.SetchannelChannels} returns this
 */
proto.cln.SetchannelChannels.prototype.clearFeeBaseMsat = function() {
  return this.setFeeBaseMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SetchannelChannels.prototype.hasFeeBaseMsat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 fee_proportional_millionths = 5;
 * @return {number}
 */
proto.cln.SetchannelChannels.prototype.getFeeProportionalMillionths = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.SetchannelChannels} returns this
 */
proto.cln.SetchannelChannels.prototype.setFeeProportionalMillionths = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool ignore_fee_limits = 10;
 * @return {boolean}
 */
proto.cln.SetchannelChannels.prototype.getIgnoreFeeLimits = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cln.SetchannelChannels} returns this
 */
proto.cln.SetchannelChannels.prototype.setIgnoreFeeLimits = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SetchannelChannels} returns this
 */
proto.cln.SetchannelChannels.prototype.clearIgnoreFeeLimits = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SetchannelChannels.prototype.hasIgnoreFeeLimits = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Amount minimum_htlc_out_msat = 6;
 * @return {?proto.cln.Amount}
 */
proto.cln.SetchannelChannels.prototype.getMinimumHtlcOutMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 6));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.SetchannelChannels} returns this
*/
proto.cln.SetchannelChannels.prototype.setMinimumHtlcOutMsat = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.SetchannelChannels} returns this
 */
proto.cln.SetchannelChannels.prototype.clearMinimumHtlcOutMsat = function() {
  return this.setMinimumHtlcOutMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SetchannelChannels.prototype.hasMinimumHtlcOutMsat = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string warning_htlcmin_too_low = 7;
 * @return {string}
 */
proto.cln.SetchannelChannels.prototype.getWarningHtlcminTooLow = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SetchannelChannels} returns this
 */
proto.cln.SetchannelChannels.prototype.setWarningHtlcminTooLow = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SetchannelChannels} returns this
 */
proto.cln.SetchannelChannels.prototype.clearWarningHtlcminTooLow = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SetchannelChannels.prototype.hasWarningHtlcminTooLow = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Amount maximum_htlc_out_msat = 8;
 * @return {?proto.cln.Amount}
 */
proto.cln.SetchannelChannels.prototype.getMaximumHtlcOutMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 8));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.SetchannelChannels} returns this
*/
proto.cln.SetchannelChannels.prototype.setMaximumHtlcOutMsat = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.SetchannelChannels} returns this
 */
proto.cln.SetchannelChannels.prototype.clearMaximumHtlcOutMsat = function() {
  return this.setMaximumHtlcOutMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SetchannelChannels.prototype.hasMaximumHtlcOutMsat = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string warning_htlcmax_too_high = 9;
 * @return {string}
 */
proto.cln.SetchannelChannels.prototype.getWarningHtlcmaxTooHigh = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SetchannelChannels} returns this
 */
proto.cln.SetchannelChannels.prototype.setWarningHtlcmaxTooHigh = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.SetchannelChannels} returns this
 */
proto.cln.SetchannelChannels.prototype.clearWarningHtlcmaxTooHigh = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.SetchannelChannels.prototype.hasWarningHtlcmaxTooHigh = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SigninvoiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SigninvoiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SigninvoiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SigninvoiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    invstring: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SigninvoiceRequest}
 */
proto.cln.SigninvoiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SigninvoiceRequest;
  return proto.cln.SigninvoiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SigninvoiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SigninvoiceRequest}
 */
proto.cln.SigninvoiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInvstring(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SigninvoiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SigninvoiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SigninvoiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SigninvoiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInvstring();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string invstring = 1;
 * @return {string}
 */
proto.cln.SigninvoiceRequest.prototype.getInvstring = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SigninvoiceRequest} returns this
 */
proto.cln.SigninvoiceRequest.prototype.setInvstring = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SigninvoiceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SigninvoiceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SigninvoiceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SigninvoiceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    bolt11: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SigninvoiceResponse}
 */
proto.cln.SigninvoiceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SigninvoiceResponse;
  return proto.cln.SigninvoiceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SigninvoiceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SigninvoiceResponse}
 */
proto.cln.SigninvoiceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SigninvoiceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SigninvoiceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SigninvoiceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SigninvoiceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBolt11();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string bolt11 = 1;
 * @return {string}
 */
proto.cln.SigninvoiceResponse.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SigninvoiceResponse} returns this
 */
proto.cln.SigninvoiceResponse.prototype.setBolt11 = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SignmessageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SignmessageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SignmessageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SignmessageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SignmessageRequest}
 */
proto.cln.SignmessageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SignmessageRequest;
  return proto.cln.SignmessageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SignmessageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SignmessageRequest}
 */
proto.cln.SignmessageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SignmessageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SignmessageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SignmessageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SignmessageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.cln.SignmessageRequest.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SignmessageRequest} returns this
 */
proto.cln.SignmessageRequest.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.SignmessageResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.SignmessageResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.SignmessageResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SignmessageResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    signature: msg.getSignature_asB64(),
    recid: msg.getRecid_asB64(),
    zbase: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.SignmessageResponse}
 */
proto.cln.SignmessageResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.SignmessageResponse;
  return proto.cln.SignmessageResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.SignmessageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.SignmessageResponse}
 */
proto.cln.SignmessageResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSignature(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRecid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setZbase(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.SignmessageResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.SignmessageResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.SignmessageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.SignmessageResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getRecid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getZbase();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional bytes signature = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SignmessageResponse.prototype.getSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes signature = 1;
 * This is a type-conversion wrapper around `getSignature()`
 * @return {string}
 */
proto.cln.SignmessageResponse.prototype.getSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSignature()));
};


/**
 * optional bytes signature = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignature()`
 * @return {!Uint8Array}
 */
proto.cln.SignmessageResponse.prototype.getSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SignmessageResponse} returns this
 */
proto.cln.SignmessageResponse.prototype.setSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes recid = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.SignmessageResponse.prototype.getRecid = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes recid = 2;
 * This is a type-conversion wrapper around `getRecid()`
 * @return {string}
 */
proto.cln.SignmessageResponse.prototype.getRecid_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getRecid()));
};


/**
 * optional bytes recid = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRecid()`
 * @return {!Uint8Array}
 */
proto.cln.SignmessageResponse.prototype.getRecid_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getRecid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.SignmessageResponse} returns this
 */
proto.cln.SignmessageResponse.prototype.setRecid = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string zbase = 3;
 * @return {string}
 */
proto.cln.SignmessageResponse.prototype.getZbase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.SignmessageResponse} returns this
 */
proto.cln.SignmessageResponse.prototype.setZbase = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.WaitblockheightRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.WaitblockheightRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.WaitblockheightRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitblockheightRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    blockheight: jspb.Message.getFieldWithDefault(msg, 1, 0),
    timeout: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.WaitblockheightRequest}
 */
proto.cln.WaitblockheightRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.WaitblockheightRequest;
  return proto.cln.WaitblockheightRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.WaitblockheightRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.WaitblockheightRequest}
 */
proto.cln.WaitblockheightRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBlockheight(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTimeout(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.WaitblockheightRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.WaitblockheightRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.WaitblockheightRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitblockheightRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlockheight();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 blockheight = 1;
 * @return {number}
 */
proto.cln.WaitblockheightRequest.prototype.getBlockheight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitblockheightRequest} returns this
 */
proto.cln.WaitblockheightRequest.prototype.setBlockheight = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 timeout = 2;
 * @return {number}
 */
proto.cln.WaitblockheightRequest.prototype.getTimeout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitblockheightRequest} returns this
 */
proto.cln.WaitblockheightRequest.prototype.setTimeout = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitblockheightRequest} returns this
 */
proto.cln.WaitblockheightRequest.prototype.clearTimeout = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitblockheightRequest.prototype.hasTimeout = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.WaitblockheightResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.WaitblockheightResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.WaitblockheightResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitblockheightResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    blockheight: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.WaitblockheightResponse}
 */
proto.cln.WaitblockheightResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.WaitblockheightResponse;
  return proto.cln.WaitblockheightResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.WaitblockheightResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.WaitblockheightResponse}
 */
proto.cln.WaitblockheightResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBlockheight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.WaitblockheightResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.WaitblockheightResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.WaitblockheightResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitblockheightResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlockheight();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 blockheight = 1;
 * @return {number}
 */
proto.cln.WaitblockheightResponse.prototype.getBlockheight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitblockheightResponse} returns this
 */
proto.cln.WaitblockheightResponse.prototype.setBlockheight = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.WaitRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.WaitRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.WaitRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    subsystem: jspb.Message.getFieldWithDefault(msg, 1, 0),
    indexname: jspb.Message.getFieldWithDefault(msg, 2, 0),
    nextvalue: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.WaitRequest}
 */
proto.cln.WaitRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.WaitRequest;
  return proto.cln.WaitRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.WaitRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.WaitRequest}
 */
proto.cln.WaitRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.WaitRequest.WaitSubsystem} */ (reader.readEnum());
      msg.setSubsystem(value);
      break;
    case 2:
      var value = /** @type {!proto.cln.WaitRequest.WaitIndexname} */ (reader.readEnum());
      msg.setIndexname(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNextvalue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.WaitRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.WaitRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.WaitRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubsystem();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getIndexname();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getNextvalue();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.WaitRequest.WaitSubsystem = {
  INVOICES: 0,
  FORWARDS: 1,
  SENDPAYS: 2
};

/**
 * @enum {number}
 */
proto.cln.WaitRequest.WaitIndexname = {
  CREATED: 0,
  UPDATED: 1,
  DELETED: 2
};

/**
 * optional WaitSubsystem subsystem = 1;
 * @return {!proto.cln.WaitRequest.WaitSubsystem}
 */
proto.cln.WaitRequest.prototype.getSubsystem = function() {
  return /** @type {!proto.cln.WaitRequest.WaitSubsystem} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.WaitRequest.WaitSubsystem} value
 * @return {!proto.cln.WaitRequest} returns this
 */
proto.cln.WaitRequest.prototype.setSubsystem = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional WaitIndexname indexname = 2;
 * @return {!proto.cln.WaitRequest.WaitIndexname}
 */
proto.cln.WaitRequest.prototype.getIndexname = function() {
  return /** @type {!proto.cln.WaitRequest.WaitIndexname} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.cln.WaitRequest.WaitIndexname} value
 * @return {!proto.cln.WaitRequest} returns this
 */
proto.cln.WaitRequest.prototype.setIndexname = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional uint64 nextvalue = 3;
 * @return {number}
 */
proto.cln.WaitRequest.prototype.getNextvalue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitRequest} returns this
 */
proto.cln.WaitRequest.prototype.setNextvalue = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.WaitResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.WaitResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.WaitResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    subsystem: jspb.Message.getFieldWithDefault(msg, 1, 0),
    created: jspb.Message.getFieldWithDefault(msg, 2, 0),
    updated: jspb.Message.getFieldWithDefault(msg, 3, 0),
    deleted: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.WaitResponse}
 */
proto.cln.WaitResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.WaitResponse;
  return proto.cln.WaitResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.WaitResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.WaitResponse}
 */
proto.cln.WaitResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cln.WaitResponse.WaitSubsystem} */ (reader.readEnum());
      msg.setSubsystem(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreated(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpdated(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDeleted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.WaitResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.WaitResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.WaitResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.WaitResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubsystem();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint64(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cln.WaitResponse.WaitSubsystem = {
  INVOICES: 0,
  FORWARDS: 1,
  SENDPAYS: 2
};

/**
 * optional WaitSubsystem subsystem = 1;
 * @return {!proto.cln.WaitResponse.WaitSubsystem}
 */
proto.cln.WaitResponse.prototype.getSubsystem = function() {
  return /** @type {!proto.cln.WaitResponse.WaitSubsystem} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cln.WaitResponse.WaitSubsystem} value
 * @return {!proto.cln.WaitResponse} returns this
 */
proto.cln.WaitResponse.prototype.setSubsystem = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint64 created = 2;
 * @return {number}
 */
proto.cln.WaitResponse.prototype.getCreated = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitResponse} returns this
 */
proto.cln.WaitResponse.prototype.setCreated = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitResponse} returns this
 */
proto.cln.WaitResponse.prototype.clearCreated = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitResponse.prototype.hasCreated = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 updated = 3;
 * @return {number}
 */
proto.cln.WaitResponse.prototype.getUpdated = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitResponse} returns this
 */
proto.cln.WaitResponse.prototype.setUpdated = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitResponse} returns this
 */
proto.cln.WaitResponse.prototype.clearUpdated = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitResponse.prototype.hasUpdated = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 deleted = 4;
 * @return {number}
 */
proto.cln.WaitResponse.prototype.getDeleted = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cln.WaitResponse} returns this
 */
proto.cln.WaitResponse.prototype.setDeleted = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.WaitResponse} returns this
 */
proto.cln.WaitResponse.prototype.clearDeleted = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.WaitResponse.prototype.hasDeleted = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.StopRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.StopRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.StopRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.StopRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.StopRequest}
 */
proto.cln.StopRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.StopRequest;
  return proto.cln.StopRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.StopRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.StopRequest}
 */
proto.cln.StopRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.StopRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.StopRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.StopRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.StopRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.StopResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.StopResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.StopResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.StopResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.StopResponse}
 */
proto.cln.StopResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.StopResponse;
  return proto.cln.StopResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.StopResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.StopResponse}
 */
proto.cln.StopResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.StopResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.StopResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.StopResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.StopResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.PreapprovekeysendRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.PreapprovekeysendRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.PreapprovekeysendRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PreapprovekeysendRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    destination: msg.getDestination_asB64(),
    paymentHash: msg.getPaymentHash_asB64(),
    amountMsat: (f = msg.getAmountMsat()) && cln_primitives_pb.Amount.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.PreapprovekeysendRequest}
 */
proto.cln.PreapprovekeysendRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.PreapprovekeysendRequest;
  return proto.cln.PreapprovekeysendRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.PreapprovekeysendRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.PreapprovekeysendRequest}
 */
proto.cln.PreapprovekeysendRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDestination(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPaymentHash(value);
      break;
    case 3:
      var value = new cln_primitives_pb.Amount;
      reader.readMessage(value,cln_primitives_pb.Amount.deserializeBinaryFromReader);
      msg.setAmountMsat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.PreapprovekeysendRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.PreapprovekeysendRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.PreapprovekeysendRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PreapprovekeysendRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getAmountMsat();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cln_primitives_pb.Amount.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes destination = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cln.PreapprovekeysendRequest.prototype.getDestination = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes destination = 1;
 * This is a type-conversion wrapper around `getDestination()`
 * @return {string}
 */
proto.cln.PreapprovekeysendRequest.prototype.getDestination_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDestination()));
};


/**
 * optional bytes destination = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDestination()`
 * @return {!Uint8Array}
 */
proto.cln.PreapprovekeysendRequest.prototype.getDestination_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDestination()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.PreapprovekeysendRequest} returns this
 */
proto.cln.PreapprovekeysendRequest.prototype.setDestination = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.PreapprovekeysendRequest} returns this
 */
proto.cln.PreapprovekeysendRequest.prototype.clearDestination = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PreapprovekeysendRequest.prototype.hasDestination = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes payment_hash = 2;
 * @return {!(string|Uint8Array)}
 */
proto.cln.PreapprovekeysendRequest.prototype.getPaymentHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes payment_hash = 2;
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {string}
 */
proto.cln.PreapprovekeysendRequest.prototype.getPaymentHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPaymentHash()));
};


/**
 * optional bytes payment_hash = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPaymentHash()`
 * @return {!Uint8Array}
 */
proto.cln.PreapprovekeysendRequest.prototype.getPaymentHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPaymentHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cln.PreapprovekeysendRequest} returns this
 */
proto.cln.PreapprovekeysendRequest.prototype.setPaymentHash = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.PreapprovekeysendRequest} returns this
 */
proto.cln.PreapprovekeysendRequest.prototype.clearPaymentHash = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PreapprovekeysendRequest.prototype.hasPaymentHash = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Amount amount_msat = 3;
 * @return {?proto.cln.Amount}
 */
proto.cln.PreapprovekeysendRequest.prototype.getAmountMsat = function() {
  return /** @type{?proto.cln.Amount} */ (
    jspb.Message.getWrapperField(this, cln_primitives_pb.Amount, 3));
};


/**
 * @param {?proto.cln.Amount|undefined} value
 * @return {!proto.cln.PreapprovekeysendRequest} returns this
*/
proto.cln.PreapprovekeysendRequest.prototype.setAmountMsat = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cln.PreapprovekeysendRequest} returns this
 */
proto.cln.PreapprovekeysendRequest.prototype.clearAmountMsat = function() {
  return this.setAmountMsat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PreapprovekeysendRequest.prototype.hasAmountMsat = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.PreapprovekeysendResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.PreapprovekeysendResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.PreapprovekeysendResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PreapprovekeysendResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.PreapprovekeysendResponse}
 */
proto.cln.PreapprovekeysendResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.PreapprovekeysendResponse;
  return proto.cln.PreapprovekeysendResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.PreapprovekeysendResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.PreapprovekeysendResponse}
 */
proto.cln.PreapprovekeysendResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.PreapprovekeysendResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.PreapprovekeysendResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.PreapprovekeysendResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PreapprovekeysendResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.PreapproveinvoiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.PreapproveinvoiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.PreapproveinvoiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PreapproveinvoiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    bolt11: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.PreapproveinvoiceRequest}
 */
proto.cln.PreapproveinvoiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.PreapproveinvoiceRequest;
  return proto.cln.PreapproveinvoiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.PreapproveinvoiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.PreapproveinvoiceRequest}
 */
proto.cln.PreapproveinvoiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBolt11(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.PreapproveinvoiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.PreapproveinvoiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.PreapproveinvoiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PreapproveinvoiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string bolt11 = 1;
 * @return {string}
 */
proto.cln.PreapproveinvoiceRequest.prototype.getBolt11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cln.PreapproveinvoiceRequest} returns this
 */
proto.cln.PreapproveinvoiceRequest.prototype.setBolt11 = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.cln.PreapproveinvoiceRequest} returns this
 */
proto.cln.PreapproveinvoiceRequest.prototype.clearBolt11 = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cln.PreapproveinvoiceRequest.prototype.hasBolt11 = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.PreapproveinvoiceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.PreapproveinvoiceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.PreapproveinvoiceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PreapproveinvoiceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.PreapproveinvoiceResponse}
 */
proto.cln.PreapproveinvoiceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.PreapproveinvoiceResponse;
  return proto.cln.PreapproveinvoiceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.PreapproveinvoiceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.PreapproveinvoiceResponse}
 */
proto.cln.PreapproveinvoiceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.PreapproveinvoiceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.PreapproveinvoiceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.PreapproveinvoiceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.PreapproveinvoiceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.StaticbackupRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.StaticbackupRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.StaticbackupRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.StaticbackupRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.StaticbackupRequest}
 */
proto.cln.StaticbackupRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.StaticbackupRequest;
  return proto.cln.StaticbackupRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.StaticbackupRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.StaticbackupRequest}
 */
proto.cln.StaticbackupRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.StaticbackupRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.StaticbackupRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.StaticbackupRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.StaticbackupRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cln.StaticbackupResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cln.StaticbackupResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cln.StaticbackupResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cln.StaticbackupResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.StaticbackupResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    scbList: msg.getScbList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cln.StaticbackupResponse}
 */
proto.cln.StaticbackupResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cln.StaticbackupResponse;
  return proto.cln.StaticbackupResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cln.StaticbackupResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cln.StaticbackupResponse}
 */
proto.cln.StaticbackupResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addScb(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cln.StaticbackupResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cln.StaticbackupResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cln.StaticbackupResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cln.StaticbackupResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScbList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      1,
      f
    );
  }
};


/**
 * repeated bytes scb = 1;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.cln.StaticbackupResponse.prototype.getScbList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * repeated bytes scb = 1;
 * This is a type-conversion wrapper around `getScbList()`
 * @return {!Array<string>}
 */
proto.cln.StaticbackupResponse.prototype.getScbList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getScbList()));
};


/**
 * repeated bytes scb = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getScbList()`
 * @return {!Array<!Uint8Array>}
 */
proto.cln.StaticbackupResponse.prototype.getScbList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getScbList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.cln.StaticbackupResponse} returns this
 */
proto.cln.StaticbackupResponse.prototype.setScbList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.cln.StaticbackupResponse} returns this
 */
proto.cln.StaticbackupResponse.prototype.addScb = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cln.StaticbackupResponse} returns this
 */
proto.cln.StaticbackupResponse.prototype.clearScbList = function() {
  return this.setScbList([]);
};


goog.object.extend(exports, proto.cln);
