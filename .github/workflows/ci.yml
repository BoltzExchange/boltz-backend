name: CI

on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        platform: [ubuntu-latest]
        node-version: [20]
        rust-version: [stable]

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Use Rust toolchain
        run:
          rustup update ${{ matrix.rust-version }} && rustup default ${{
          matrix.rust-version }}

      - name: Install build dependencies
        run:
          sudo apt-get update && sudo apt-get -y install protobuf-compiler
          libsqlite3-dev

      - name: Install Node.js dependencies
        run: npm ci

      - name: Start regtest
        run: npm run regtest:start:ci && sudo chmod -R 777 regtest

      - name: Build cache
        uses: actions/cache@v4
        with:
          path: |
            target
            hold/target
          key:
            ${{ runner.os }}-ci-${{ matrix.rust-version }}-${{
            hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-ci-${{ matrix.rust-version }}-

      - name: Compile
        run: npm run compile

      - name: Prettier
        run: npm run prettier:check

      - name: Lint
        run: npm run lint

      - name: Unit tests
        run: npm run test:unit -- -w 2

      - name: Integration tests
        run: node run-int.js

  build-rust:
    strategy:
      matrix:
        platform: [ubuntu-latest]
        node-version: [20]
        rust-version: [stable]

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Install build dependencies
        run: sudo apt-get update && sudo apt-get -y install protobuf-compiler

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Use Rust toolchain
        run:
          rustup update ${{ matrix.rust-version }} && rustup default ${{
          matrix.rust-version }}

      - name: Install rustfmt
        run: rustup component add rustfmt

      - name: Install clippy
        run: rustup component add clippy

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Install Node.js dependencies
        run: npm ci

      - name: Start regtest
        run: npm run regtest:start:ci && sudo chmod -R 777 regtest

      - name: Build cache
        uses: actions/cache@v4
        with:
          path: |
            target
            hold/target
          key:
            ${{ runner.os }}-cargo-${{ matrix.rust-version }}-${{
            hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.rust-version }}-

      - name: Compile
        run: cargo build

      - name: Format
        run: cargo fmt --check

      - name: Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Tests
        run: cargo test

  swagger-validation:
    strategy:
      matrix:
        platform: [ubuntu-latest]
        python-version: ['3.10']

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Install Python dependencies
        run: uv sync
        working-directory: ./tools

      - name: OpenAPI Spec Validation
        run: uv run openapi-spec-validator ../swagger-spec.json
        working-directory: ./tools
