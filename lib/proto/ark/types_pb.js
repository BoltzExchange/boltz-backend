// source: ark/types.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.fulmine.v1.AccountInfo', null, global);
goog.exportSymbol('proto.fulmine.v1.BlockDetails', null, global);
goog.exportSymbol('proto.fulmine.v1.BuildInfo', null, global);
goog.exportSymbol('proto.fulmine.v1.Fees', null, global);
goog.exportSymbol('proto.fulmine.v1.Input', null, global);
goog.exportSymbol('proto.fulmine.v1.Node', null, global);
goog.exportSymbol('proto.fulmine.v1.Notification', null, global);
goog.exportSymbol('proto.fulmine.v1.Output', null, global);
goog.exportSymbol('proto.fulmine.v1.Round', null, global);
goog.exportSymbol('proto.fulmine.v1.RoundEventType', null, global);
goog.exportSymbol('proto.fulmine.v1.TransactionInfo', null, global);
goog.exportSymbol('proto.fulmine.v1.Tree', null, global);
goog.exportSymbol('proto.fulmine.v1.TreeLevel', null, global);
goog.exportSymbol('proto.fulmine.v1.TxType', null, global);
goog.exportSymbol('proto.fulmine.v1.Vtxo', null, global);
goog.exportSymbol('proto.fulmine.v1.WebhookEventType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fulmine.v1.AccountInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fulmine.v1.AccountInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fulmine.v1.AccountInfo.displayName = 'proto.fulmine.v1.AccountInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fulmine.v1.BlockDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fulmine.v1.BlockDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fulmine.v1.BlockDetails.displayName = 'proto.fulmine.v1.BlockDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fulmine.v1.BuildInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fulmine.v1.BuildInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fulmine.v1.BuildInfo.displayName = 'proto.fulmine.v1.BuildInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fulmine.v1.Fees = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fulmine.v1.Fees, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fulmine.v1.Fees.displayName = 'proto.fulmine.v1.Fees';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fulmine.v1.Input = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fulmine.v1.Input, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fulmine.v1.Input.displayName = 'proto.fulmine.v1.Input';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fulmine.v1.Node = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fulmine.v1.Node, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fulmine.v1.Node.displayName = 'proto.fulmine.v1.Node';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fulmine.v1.Output = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fulmine.v1.Output, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fulmine.v1.Output.displayName = 'proto.fulmine.v1.Output';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fulmine.v1.Round = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.fulmine.v1.Round.repeatedFields_, null);
};
goog.inherits(proto.fulmine.v1.Round, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fulmine.v1.Round.displayName = 'proto.fulmine.v1.Round';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fulmine.v1.TransactionInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fulmine.v1.TransactionInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fulmine.v1.TransactionInfo.displayName = 'proto.fulmine.v1.TransactionInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fulmine.v1.Tree = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.fulmine.v1.Tree.repeatedFields_, null);
};
goog.inherits(proto.fulmine.v1.Tree, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fulmine.v1.Tree.displayName = 'proto.fulmine.v1.Tree';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fulmine.v1.TreeLevel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.fulmine.v1.TreeLevel.repeatedFields_, null);
};
goog.inherits(proto.fulmine.v1.TreeLevel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fulmine.v1.TreeLevel.displayName = 'proto.fulmine.v1.TreeLevel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fulmine.v1.Vtxo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fulmine.v1.Vtxo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fulmine.v1.Vtxo.displayName = 'proto.fulmine.v1.Vtxo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fulmine.v1.Notification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.fulmine.v1.Notification.repeatedFields_, null);
};
goog.inherits(proto.fulmine.v1.Notification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fulmine.v1.Notification.displayName = 'proto.fulmine.v1.Notification';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fulmine.v1.AccountInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.fulmine.v1.AccountInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fulmine.v1.AccountInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fulmine.v1.AccountInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    namespace: jspb.Message.getFieldWithDefault(msg, 1, ""),
    label: jspb.Message.getFieldWithDefault(msg, 2, ""),
    derivationPath: jspb.Message.getFieldWithDefault(msg, 3, ""),
    xpubs: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fulmine.v1.AccountInfo}
 */
proto.fulmine.v1.AccountInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fulmine.v1.AccountInfo;
  return proto.fulmine.v1.AccountInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fulmine.v1.AccountInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fulmine.v1.AccountInfo}
 */
proto.fulmine.v1.AccountInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDerivationPath(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setXpubs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fulmine.v1.AccountInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fulmine.v1.AccountInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fulmine.v1.AccountInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fulmine.v1.AccountInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDerivationPath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getXpubs();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string namespace = 1;
 * @return {string}
 */
proto.fulmine.v1.AccountInfo.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fulmine.v1.AccountInfo} returns this
 */
proto.fulmine.v1.AccountInfo.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string label = 2;
 * @return {string}
 */
proto.fulmine.v1.AccountInfo.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.fulmine.v1.AccountInfo} returns this
 */
proto.fulmine.v1.AccountInfo.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string derivation_path = 3;
 * @return {string}
 */
proto.fulmine.v1.AccountInfo.prototype.getDerivationPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.fulmine.v1.AccountInfo} returns this
 */
proto.fulmine.v1.AccountInfo.prototype.setDerivationPath = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string xpubs = 4;
 * @return {string}
 */
proto.fulmine.v1.AccountInfo.prototype.getXpubs = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.fulmine.v1.AccountInfo} returns this
 */
proto.fulmine.v1.AccountInfo.prototype.setXpubs = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fulmine.v1.BlockDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.fulmine.v1.BlockDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fulmine.v1.BlockDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fulmine.v1.BlockDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: jspb.Message.getFieldWithDefault(msg, 1, ""),
    height: jspb.Message.getFieldWithDefault(msg, 2, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fulmine.v1.BlockDetails}
 */
proto.fulmine.v1.BlockDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fulmine.v1.BlockDetails;
  return proto.fulmine.v1.BlockDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fulmine.v1.BlockDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fulmine.v1.BlockDetails}
 */
proto.fulmine.v1.BlockDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHash(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setHeight(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fulmine.v1.BlockDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fulmine.v1.BlockDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fulmine.v1.BlockDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fulmine.v1.BlockDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHash();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional string hash = 1;
 * @return {string}
 */
proto.fulmine.v1.BlockDetails.prototype.getHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fulmine.v1.BlockDetails} returns this
 */
proto.fulmine.v1.BlockDetails.prototype.setHash = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 height = 2;
 * @return {number}
 */
proto.fulmine.v1.BlockDetails.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.fulmine.v1.BlockDetails} returns this
 */
proto.fulmine.v1.BlockDetails.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 timestamp = 3;
 * @return {number}
 */
proto.fulmine.v1.BlockDetails.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.fulmine.v1.BlockDetails} returns this
 */
proto.fulmine.v1.BlockDetails.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fulmine.v1.BuildInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.fulmine.v1.BuildInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fulmine.v1.BuildInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fulmine.v1.BuildInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: jspb.Message.getFieldWithDefault(msg, 1, ""),
    commit: jspb.Message.getFieldWithDefault(msg, 2, ""),
    date: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fulmine.v1.BuildInfo}
 */
proto.fulmine.v1.BuildInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fulmine.v1.BuildInfo;
  return proto.fulmine.v1.BuildInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fulmine.v1.BuildInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fulmine.v1.BuildInfo}
 */
proto.fulmine.v1.BuildInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommit(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fulmine.v1.BuildInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fulmine.v1.BuildInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fulmine.v1.BuildInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fulmine.v1.BuildInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCommit();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDate();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string version = 1;
 * @return {string}
 */
proto.fulmine.v1.BuildInfo.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fulmine.v1.BuildInfo} returns this
 */
proto.fulmine.v1.BuildInfo.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string commit = 2;
 * @return {string}
 */
proto.fulmine.v1.BuildInfo.prototype.getCommit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.fulmine.v1.BuildInfo} returns this
 */
proto.fulmine.v1.BuildInfo.prototype.setCommit = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string date = 3;
 * @return {string}
 */
proto.fulmine.v1.BuildInfo.prototype.getDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.fulmine.v1.BuildInfo} returns this
 */
proto.fulmine.v1.BuildInfo.prototype.setDate = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fulmine.v1.Fees.prototype.toObject = function(opt_includeInstance) {
  return proto.fulmine.v1.Fees.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fulmine.v1.Fees} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fulmine.v1.Fees.toObject = function(includeInstance, msg) {
  var f, obj = {
    boltz: jspb.Message.getFieldWithDefault(msg, 1, 0),
    network: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fulmine.v1.Fees}
 */
proto.fulmine.v1.Fees.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fulmine.v1.Fees;
  return proto.fulmine.v1.Fees.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fulmine.v1.Fees} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fulmine.v1.Fees}
 */
proto.fulmine.v1.Fees.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBoltz(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNetwork(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fulmine.v1.Fees.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fulmine.v1.Fees.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fulmine.v1.Fees} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fulmine.v1.Fees.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBoltz();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getNetwork();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 boltz = 1;
 * @return {number}
 */
proto.fulmine.v1.Fees.prototype.getBoltz = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.fulmine.v1.Fees} returns this
 */
proto.fulmine.v1.Fees.prototype.setBoltz = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 network = 2;
 * @return {number}
 */
proto.fulmine.v1.Fees.prototype.getNetwork = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.fulmine.v1.Fees} returns this
 */
proto.fulmine.v1.Fees.prototype.setNetwork = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fulmine.v1.Input.prototype.toObject = function(opt_includeInstance) {
  return proto.fulmine.v1.Input.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fulmine.v1.Input} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fulmine.v1.Input.toObject = function(includeInstance, msg) {
  var f, obj = {
    txid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    vout: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fulmine.v1.Input}
 */
proto.fulmine.v1.Input.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fulmine.v1.Input;
  return proto.fulmine.v1.Input.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fulmine.v1.Input} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fulmine.v1.Input}
 */
proto.fulmine.v1.Input.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTxid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVout(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fulmine.v1.Input.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fulmine.v1.Input.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fulmine.v1.Input} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fulmine.v1.Input.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTxid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVout();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional string txid = 1;
 * @return {string}
 */
proto.fulmine.v1.Input.prototype.getTxid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fulmine.v1.Input} returns this
 */
proto.fulmine.v1.Input.prototype.setTxid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 vout = 2;
 * @return {number}
 */
proto.fulmine.v1.Input.prototype.getVout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.fulmine.v1.Input} returns this
 */
proto.fulmine.v1.Input.prototype.setVout = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fulmine.v1.Node.prototype.toObject = function(opt_includeInstance) {
  return proto.fulmine.v1.Node.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fulmine.v1.Node} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fulmine.v1.Node.toObject = function(includeInstance, msg) {
  var f, obj = {
    txid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tx: jspb.Message.getFieldWithDefault(msg, 2, ""),
    parentTxid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fulmine.v1.Node}
 */
proto.fulmine.v1.Node.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fulmine.v1.Node;
  return proto.fulmine.v1.Node.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fulmine.v1.Node} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fulmine.v1.Node}
 */
proto.fulmine.v1.Node.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTxid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTx(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentTxid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fulmine.v1.Node.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fulmine.v1.Node.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fulmine.v1.Node} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fulmine.v1.Node.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTxid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTx();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getParentTxid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string txid = 1;
 * @return {string}
 */
proto.fulmine.v1.Node.prototype.getTxid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fulmine.v1.Node} returns this
 */
proto.fulmine.v1.Node.prototype.setTxid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string tx = 2;
 * @return {string}
 */
proto.fulmine.v1.Node.prototype.getTx = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.fulmine.v1.Node} returns this
 */
proto.fulmine.v1.Node.prototype.setTx = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string parent_txid = 3;
 * @return {string}
 */
proto.fulmine.v1.Node.prototype.getParentTxid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.fulmine.v1.Node} returns this
 */
proto.fulmine.v1.Node.prototype.setParentTxid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fulmine.v1.Output.prototype.toObject = function(opt_includeInstance) {
  return proto.fulmine.v1.Output.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fulmine.v1.Output} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fulmine.v1.Output.toObject = function(includeInstance, msg) {
  var f, obj = {
    pubkey: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fulmine.v1.Output}
 */
proto.fulmine.v1.Output.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fulmine.v1.Output;
  return proto.fulmine.v1.Output.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fulmine.v1.Output} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fulmine.v1.Output}
 */
proto.fulmine.v1.Output.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPubkey(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fulmine.v1.Output.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fulmine.v1.Output.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fulmine.v1.Output} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fulmine.v1.Output.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPubkey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional string pubkey = 1;
 * @return {string}
 */
proto.fulmine.v1.Output.prototype.getPubkey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fulmine.v1.Output} returns this
 */
proto.fulmine.v1.Output.prototype.setPubkey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 amount = 2;
 * @return {number}
 */
proto.fulmine.v1.Output.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.fulmine.v1.Output} returns this
 */
proto.fulmine.v1.Output.prototype.setAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.fulmine.v1.Round.repeatedFields_ = [6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fulmine.v1.Round.prototype.toObject = function(opt_includeInstance) {
  return proto.fulmine.v1.Round.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fulmine.v1.Round} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fulmine.v1.Round.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    start: jspb.Message.getFieldWithDefault(msg, 2, 0),
    end: jspb.Message.getFieldWithDefault(msg, 3, 0),
    roundTx: jspb.Message.getFieldWithDefault(msg, 4, ""),
    congestionTree: (f = msg.getCongestionTree()) && proto.fulmine.v1.Tree.toObject(includeInstance, f),
    forfeitTxsList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    connectorsList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fulmine.v1.Round}
 */
proto.fulmine.v1.Round.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fulmine.v1.Round;
  return proto.fulmine.v1.Round.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fulmine.v1.Round} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fulmine.v1.Round}
 */
proto.fulmine.v1.Round.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStart(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEnd(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoundTx(value);
      break;
    case 5:
      var value = new proto.fulmine.v1.Tree;
      reader.readMessage(value,proto.fulmine.v1.Tree.deserializeBinaryFromReader);
      msg.setCongestionTree(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addForfeitTxs(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addConnectors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fulmine.v1.Round.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fulmine.v1.Round.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fulmine.v1.Round} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fulmine.v1.Round.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStart();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getEnd();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getRoundTx();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCongestionTree();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.fulmine.v1.Tree.serializeBinaryToWriter
    );
  }
  f = message.getForfeitTxsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getConnectorsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.fulmine.v1.Round.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fulmine.v1.Round} returns this
 */
proto.fulmine.v1.Round.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 start = 2;
 * @return {number}
 */
proto.fulmine.v1.Round.prototype.getStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.fulmine.v1.Round} returns this
 */
proto.fulmine.v1.Round.prototype.setStart = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 end = 3;
 * @return {number}
 */
proto.fulmine.v1.Round.prototype.getEnd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.fulmine.v1.Round} returns this
 */
proto.fulmine.v1.Round.prototype.setEnd = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string round_tx = 4;
 * @return {string}
 */
proto.fulmine.v1.Round.prototype.getRoundTx = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.fulmine.v1.Round} returns this
 */
proto.fulmine.v1.Round.prototype.setRoundTx = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional Tree congestion_tree = 5;
 * @return {?proto.fulmine.v1.Tree}
 */
proto.fulmine.v1.Round.prototype.getCongestionTree = function() {
  return /** @type{?proto.fulmine.v1.Tree} */ (
    jspb.Message.getWrapperField(this, proto.fulmine.v1.Tree, 5));
};


/**
 * @param {?proto.fulmine.v1.Tree|undefined} value
 * @return {!proto.fulmine.v1.Round} returns this
*/
proto.fulmine.v1.Round.prototype.setCongestionTree = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fulmine.v1.Round} returns this
 */
proto.fulmine.v1.Round.prototype.clearCongestionTree = function() {
  return this.setCongestionTree(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fulmine.v1.Round.prototype.hasCongestionTree = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated string forfeit_txs = 6;
 * @return {!Array<string>}
 */
proto.fulmine.v1.Round.prototype.getForfeitTxsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.fulmine.v1.Round} returns this
 */
proto.fulmine.v1.Round.prototype.setForfeitTxsList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.fulmine.v1.Round} returns this
 */
proto.fulmine.v1.Round.prototype.addForfeitTxs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.fulmine.v1.Round} returns this
 */
proto.fulmine.v1.Round.prototype.clearForfeitTxsList = function() {
  return this.setForfeitTxsList([]);
};


/**
 * repeated string connectors = 7;
 * @return {!Array<string>}
 */
proto.fulmine.v1.Round.prototype.getConnectorsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.fulmine.v1.Round} returns this
 */
proto.fulmine.v1.Round.prototype.setConnectorsList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.fulmine.v1.Round} returns this
 */
proto.fulmine.v1.Round.prototype.addConnectors = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.fulmine.v1.Round} returns this
 */
proto.fulmine.v1.Round.prototype.clearConnectorsList = function() {
  return this.setConnectorsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fulmine.v1.TransactionInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.fulmine.v1.TransactionInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fulmine.v1.TransactionInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fulmine.v1.TransactionInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    date: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    roundTxid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    redeemTxid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    boardingTxid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    type: jspb.Message.getFieldWithDefault(msg, 6, 0),
    settled: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fulmine.v1.TransactionInfo}
 */
proto.fulmine.v1.TransactionInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fulmine.v1.TransactionInfo;
  return proto.fulmine.v1.TransactionInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fulmine.v1.TransactionInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fulmine.v1.TransactionInfo}
 */
proto.fulmine.v1.TransactionInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDate(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAmount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoundTxid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRedeemTxid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBoardingTxid(value);
      break;
    case 6:
      var value = /** @type {!proto.fulmine.v1.TxType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSettled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fulmine.v1.TransactionInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fulmine.v1.TransactionInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fulmine.v1.TransactionInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fulmine.v1.TransactionInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDate();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getRoundTxid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRedeemTxid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBoardingTxid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getSettled();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional string date = 1;
 * @return {string}
 */
proto.fulmine.v1.TransactionInfo.prototype.getDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.fulmine.v1.TransactionInfo} returns this
 */
proto.fulmine.v1.TransactionInfo.prototype.setDate = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 amount = 2;
 * @return {number}
 */
proto.fulmine.v1.TransactionInfo.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.fulmine.v1.TransactionInfo} returns this
 */
proto.fulmine.v1.TransactionInfo.prototype.setAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string round_txid = 3;
 * @return {string}
 */
proto.fulmine.v1.TransactionInfo.prototype.getRoundTxid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.fulmine.v1.TransactionInfo} returns this
 */
proto.fulmine.v1.TransactionInfo.prototype.setRoundTxid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string redeem_txid = 4;
 * @return {string}
 */
proto.fulmine.v1.TransactionInfo.prototype.getRedeemTxid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.fulmine.v1.TransactionInfo} returns this
 */
proto.fulmine.v1.TransactionInfo.prototype.setRedeemTxid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string boarding_txid = 5;
 * @return {string}
 */
proto.fulmine.v1.TransactionInfo.prototype.getBoardingTxid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.fulmine.v1.TransactionInfo} returns this
 */
proto.fulmine.v1.TransactionInfo.prototype.setBoardingTxid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional TxType type = 6;
 * @return {!proto.fulmine.v1.TxType}
 */
proto.fulmine.v1.TransactionInfo.prototype.getType = function() {
  return /** @type {!proto.fulmine.v1.TxType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.fulmine.v1.TxType} value
 * @return {!proto.fulmine.v1.TransactionInfo} returns this
 */
proto.fulmine.v1.TransactionInfo.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional bool settled = 7;
 * @return {boolean}
 */
proto.fulmine.v1.TransactionInfo.prototype.getSettled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.fulmine.v1.TransactionInfo} returns this
 */
proto.fulmine.v1.TransactionInfo.prototype.setSettled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.fulmine.v1.Tree.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fulmine.v1.Tree.prototype.toObject = function(opt_includeInstance) {
  return proto.fulmine.v1.Tree.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fulmine.v1.Tree} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fulmine.v1.Tree.toObject = function(includeInstance, msg) {
  var f, obj = {
    levelsList: jspb.Message.toObjectList(msg.getLevelsList(),
    proto.fulmine.v1.TreeLevel.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fulmine.v1.Tree}
 */
proto.fulmine.v1.Tree.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fulmine.v1.Tree;
  return proto.fulmine.v1.Tree.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fulmine.v1.Tree} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fulmine.v1.Tree}
 */
proto.fulmine.v1.Tree.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.fulmine.v1.TreeLevel;
      reader.readMessage(value,proto.fulmine.v1.TreeLevel.deserializeBinaryFromReader);
      msg.addLevels(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fulmine.v1.Tree.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fulmine.v1.Tree.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fulmine.v1.Tree} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fulmine.v1.Tree.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLevelsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.fulmine.v1.TreeLevel.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TreeLevel levels = 1;
 * @return {!Array<!proto.fulmine.v1.TreeLevel>}
 */
proto.fulmine.v1.Tree.prototype.getLevelsList = function() {
  return /** @type{!Array<!proto.fulmine.v1.TreeLevel>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.fulmine.v1.TreeLevel, 1));
};


/**
 * @param {!Array<!proto.fulmine.v1.TreeLevel>} value
 * @return {!proto.fulmine.v1.Tree} returns this
*/
proto.fulmine.v1.Tree.prototype.setLevelsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.fulmine.v1.TreeLevel=} opt_value
 * @param {number=} opt_index
 * @return {!proto.fulmine.v1.TreeLevel}
 */
proto.fulmine.v1.Tree.prototype.addLevels = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.fulmine.v1.TreeLevel, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.fulmine.v1.Tree} returns this
 */
proto.fulmine.v1.Tree.prototype.clearLevelsList = function() {
  return this.setLevelsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.fulmine.v1.TreeLevel.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fulmine.v1.TreeLevel.prototype.toObject = function(opt_includeInstance) {
  return proto.fulmine.v1.TreeLevel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fulmine.v1.TreeLevel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fulmine.v1.TreeLevel.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodesList: jspb.Message.toObjectList(msg.getNodesList(),
    proto.fulmine.v1.Node.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fulmine.v1.TreeLevel}
 */
proto.fulmine.v1.TreeLevel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fulmine.v1.TreeLevel;
  return proto.fulmine.v1.TreeLevel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fulmine.v1.TreeLevel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fulmine.v1.TreeLevel}
 */
proto.fulmine.v1.TreeLevel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.fulmine.v1.Node;
      reader.readMessage(value,proto.fulmine.v1.Node.deserializeBinaryFromReader);
      msg.addNodes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fulmine.v1.TreeLevel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fulmine.v1.TreeLevel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fulmine.v1.TreeLevel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fulmine.v1.TreeLevel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.fulmine.v1.Node.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Node nodes = 1;
 * @return {!Array<!proto.fulmine.v1.Node>}
 */
proto.fulmine.v1.TreeLevel.prototype.getNodesList = function() {
  return /** @type{!Array<!proto.fulmine.v1.Node>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.fulmine.v1.Node, 1));
};


/**
 * @param {!Array<!proto.fulmine.v1.Node>} value
 * @return {!proto.fulmine.v1.TreeLevel} returns this
*/
proto.fulmine.v1.TreeLevel.prototype.setNodesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.fulmine.v1.Node=} opt_value
 * @param {number=} opt_index
 * @return {!proto.fulmine.v1.Node}
 */
proto.fulmine.v1.TreeLevel.prototype.addNodes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.fulmine.v1.Node, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.fulmine.v1.TreeLevel} returns this
 */
proto.fulmine.v1.TreeLevel.prototype.clearNodesList = function() {
  return this.setNodesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fulmine.v1.Vtxo.prototype.toObject = function(opt_includeInstance) {
  return proto.fulmine.v1.Vtxo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fulmine.v1.Vtxo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fulmine.v1.Vtxo.toObject = function(includeInstance, msg) {
  var f, obj = {
    outpoint: (f = msg.getOutpoint()) && proto.fulmine.v1.Input.toObject(includeInstance, f),
    receiver: (f = msg.getReceiver()) && proto.fulmine.v1.Output.toObject(includeInstance, f),
    roundTxid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    spentBy: jspb.Message.getFieldWithDefault(msg, 4, ""),
    expireAt: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fulmine.v1.Vtxo}
 */
proto.fulmine.v1.Vtxo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fulmine.v1.Vtxo;
  return proto.fulmine.v1.Vtxo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fulmine.v1.Vtxo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fulmine.v1.Vtxo}
 */
proto.fulmine.v1.Vtxo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.fulmine.v1.Input;
      reader.readMessage(value,proto.fulmine.v1.Input.deserializeBinaryFromReader);
      msg.setOutpoint(value);
      break;
    case 2:
      var value = new proto.fulmine.v1.Output;
      reader.readMessage(value,proto.fulmine.v1.Output.deserializeBinaryFromReader);
      msg.setReceiver(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoundTxid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSpentBy(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpireAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fulmine.v1.Vtxo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fulmine.v1.Vtxo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fulmine.v1.Vtxo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fulmine.v1.Vtxo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOutpoint();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.fulmine.v1.Input.serializeBinaryToWriter
    );
  }
  f = message.getReceiver();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.fulmine.v1.Output.serializeBinaryToWriter
    );
  }
  f = message.getRoundTxid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSpentBy();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getExpireAt();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional Input outpoint = 1;
 * @return {?proto.fulmine.v1.Input}
 */
proto.fulmine.v1.Vtxo.prototype.getOutpoint = function() {
  return /** @type{?proto.fulmine.v1.Input} */ (
    jspb.Message.getWrapperField(this, proto.fulmine.v1.Input, 1));
};


/**
 * @param {?proto.fulmine.v1.Input|undefined} value
 * @return {!proto.fulmine.v1.Vtxo} returns this
*/
proto.fulmine.v1.Vtxo.prototype.setOutpoint = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fulmine.v1.Vtxo} returns this
 */
proto.fulmine.v1.Vtxo.prototype.clearOutpoint = function() {
  return this.setOutpoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fulmine.v1.Vtxo.prototype.hasOutpoint = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Output receiver = 2;
 * @return {?proto.fulmine.v1.Output}
 */
proto.fulmine.v1.Vtxo.prototype.getReceiver = function() {
  return /** @type{?proto.fulmine.v1.Output} */ (
    jspb.Message.getWrapperField(this, proto.fulmine.v1.Output, 2));
};


/**
 * @param {?proto.fulmine.v1.Output|undefined} value
 * @return {!proto.fulmine.v1.Vtxo} returns this
*/
proto.fulmine.v1.Vtxo.prototype.setReceiver = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fulmine.v1.Vtxo} returns this
 */
proto.fulmine.v1.Vtxo.prototype.clearReceiver = function() {
  return this.setReceiver(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fulmine.v1.Vtxo.prototype.hasReceiver = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string round_txid = 3;
 * @return {string}
 */
proto.fulmine.v1.Vtxo.prototype.getRoundTxid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.fulmine.v1.Vtxo} returns this
 */
proto.fulmine.v1.Vtxo.prototype.setRoundTxid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string spent_by = 4;
 * @return {string}
 */
proto.fulmine.v1.Vtxo.prototype.getSpentBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.fulmine.v1.Vtxo} returns this
 */
proto.fulmine.v1.Vtxo.prototype.setSpentBy = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 expire_at = 5;
 * @return {number}
 */
proto.fulmine.v1.Vtxo.prototype.getExpireAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.fulmine.v1.Vtxo} returns this
 */
proto.fulmine.v1.Vtxo.prototype.setExpireAt = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.fulmine.v1.Notification.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fulmine.v1.Notification.prototype.toObject = function(opt_includeInstance) {
  return proto.fulmine.v1.Notification.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fulmine.v1.Notification} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fulmine.v1.Notification.toObject = function(includeInstance, msg) {
  var f, obj = {
    addressesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    newVtxosList: jspb.Message.toObjectList(msg.getNewVtxosList(),
    proto.fulmine.v1.Vtxo.toObject, includeInstance),
    spentVtxosList: jspb.Message.toObjectList(msg.getSpentVtxosList(),
    proto.fulmine.v1.Vtxo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fulmine.v1.Notification}
 */
proto.fulmine.v1.Notification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fulmine.v1.Notification;
  return proto.fulmine.v1.Notification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fulmine.v1.Notification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fulmine.v1.Notification}
 */
proto.fulmine.v1.Notification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addAddresses(value);
      break;
    case 2:
      var value = new proto.fulmine.v1.Vtxo;
      reader.readMessage(value,proto.fulmine.v1.Vtxo.deserializeBinaryFromReader);
      msg.addNewVtxos(value);
      break;
    case 3:
      var value = new proto.fulmine.v1.Vtxo;
      reader.readMessage(value,proto.fulmine.v1.Vtxo.deserializeBinaryFromReader);
      msg.addSpentVtxos(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fulmine.v1.Notification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fulmine.v1.Notification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fulmine.v1.Notification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fulmine.v1.Notification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddressesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getNewVtxosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.fulmine.v1.Vtxo.serializeBinaryToWriter
    );
  }
  f = message.getSpentVtxosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.fulmine.v1.Vtxo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated string addresses = 1;
 * @return {!Array<string>}
 */
proto.fulmine.v1.Notification.prototype.getAddressesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.fulmine.v1.Notification} returns this
 */
proto.fulmine.v1.Notification.prototype.setAddressesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.fulmine.v1.Notification} returns this
 */
proto.fulmine.v1.Notification.prototype.addAddresses = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.fulmine.v1.Notification} returns this
 */
proto.fulmine.v1.Notification.prototype.clearAddressesList = function() {
  return this.setAddressesList([]);
};


/**
 * repeated Vtxo new_vtxos = 2;
 * @return {!Array<!proto.fulmine.v1.Vtxo>}
 */
proto.fulmine.v1.Notification.prototype.getNewVtxosList = function() {
  return /** @type{!Array<!proto.fulmine.v1.Vtxo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.fulmine.v1.Vtxo, 2));
};


/**
 * @param {!Array<!proto.fulmine.v1.Vtxo>} value
 * @return {!proto.fulmine.v1.Notification} returns this
*/
proto.fulmine.v1.Notification.prototype.setNewVtxosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.fulmine.v1.Vtxo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.fulmine.v1.Vtxo}
 */
proto.fulmine.v1.Notification.prototype.addNewVtxos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.fulmine.v1.Vtxo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.fulmine.v1.Notification} returns this
 */
proto.fulmine.v1.Notification.prototype.clearNewVtxosList = function() {
  return this.setNewVtxosList([]);
};


/**
 * repeated Vtxo spent_vtxos = 3;
 * @return {!Array<!proto.fulmine.v1.Vtxo>}
 */
proto.fulmine.v1.Notification.prototype.getSpentVtxosList = function() {
  return /** @type{!Array<!proto.fulmine.v1.Vtxo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.fulmine.v1.Vtxo, 3));
};


/**
 * @param {!Array<!proto.fulmine.v1.Vtxo>} value
 * @return {!proto.fulmine.v1.Notification} returns this
*/
proto.fulmine.v1.Notification.prototype.setSpentVtxosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.fulmine.v1.Vtxo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.fulmine.v1.Vtxo}
 */
proto.fulmine.v1.Notification.prototype.addSpentVtxos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.fulmine.v1.Vtxo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.fulmine.v1.Notification} returns this
 */
proto.fulmine.v1.Notification.prototype.clearSpentVtxosList = function() {
  return this.setSpentVtxosList([]);
};


/**
 * @enum {number}
 */
proto.fulmine.v1.RoundEventType = {
  ROUND_EVENT_TYPE_UNSPECIFIED: 0,
  ROUND_EVENT_TYPE_BROADCASTED: 1,
  ROUND_EVENT_TYPE_UNCONFIRMED: 2,
  ROUND_EVENT_TYPE_CONFIRMED: 3
};

/**
 * @enum {number}
 */
proto.fulmine.v1.WebhookEventType = {
  WEBHOOK_EVENT_TYPE_UNSPECIFIED: 0,
  WEBHOOK_EVENT_TYPE_ROUND: 1
};

/**
 * @enum {number}
 */
proto.fulmine.v1.TxType = {
  TX_TYPE_UNSPECIFIED: 0,
  TX_TYPE_SENT: 1,
  TX_TYPE_RECEIVED: 2
};

goog.object.extend(exports, proto.fulmine.v1);
