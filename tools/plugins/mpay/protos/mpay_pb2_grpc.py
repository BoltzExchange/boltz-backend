# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import mpay_pb2 as mpay__pb2


class MpayStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetInfo = channel.unary_unary(
                '/mpay.Mpay/GetInfo',
                request_serializer=mpay__pb2.GetInfoRequest.SerializeToString,
                response_deserializer=mpay__pb2.GetInfoResponse.FromString,
                )
        self.GetRoutes = channel.unary_unary(
                '/mpay.Mpay/GetRoutes',
                request_serializer=mpay__pb2.GetRoutesRequest.SerializeToString,
                response_deserializer=mpay__pb2.GetRoutesResponse.FromString,
                )
        self.ListPayments = channel.unary_unary(
                '/mpay.Mpay/ListPayments',
                request_serializer=mpay__pb2.ListPaymentsRequest.SerializeToString,
                response_deserializer=mpay__pb2.ListPaymentsResponse.FromString,
                )
        self.Pay = channel.unary_unary(
                '/mpay.Mpay/Pay',
                request_serializer=mpay__pb2.PayRequest.SerializeToString,
                response_deserializer=mpay__pb2.PayResponse.FromString,
                )
        self.ResetPathMemory = channel.unary_unary(
                '/mpay.Mpay/ResetPathMemory',
                request_serializer=mpay__pb2.ResetPathMemoryRequest.SerializeToString,
                response_deserializer=mpay__pb2.ResetPathMemoryResponse.FromString,
                )


class MpayServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRoutes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPayments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Pay(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetPathMemory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MpayServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInfo,
                    request_deserializer=mpay__pb2.GetInfoRequest.FromString,
                    response_serializer=mpay__pb2.GetInfoResponse.SerializeToString,
            ),
            'GetRoutes': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRoutes,
                    request_deserializer=mpay__pb2.GetRoutesRequest.FromString,
                    response_serializer=mpay__pb2.GetRoutesResponse.SerializeToString,
            ),
            'ListPayments': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPayments,
                    request_deserializer=mpay__pb2.ListPaymentsRequest.FromString,
                    response_serializer=mpay__pb2.ListPaymentsResponse.SerializeToString,
            ),
            'Pay': grpc.unary_unary_rpc_method_handler(
                    servicer.Pay,
                    request_deserializer=mpay__pb2.PayRequest.FromString,
                    response_serializer=mpay__pb2.PayResponse.SerializeToString,
            ),
            'ResetPathMemory': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetPathMemory,
                    request_deserializer=mpay__pb2.ResetPathMemoryRequest.FromString,
                    response_serializer=mpay__pb2.ResetPathMemoryResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mpay.Mpay', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Mpay(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mpay.Mpay/GetInfo',
            mpay__pb2.GetInfoRequest.SerializeToString,
            mpay__pb2.GetInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRoutes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mpay.Mpay/GetRoutes',
            mpay__pb2.GetRoutesRequest.SerializeToString,
            mpay__pb2.GetRoutesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPayments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mpay.Mpay/ListPayments',
            mpay__pb2.ListPaymentsRequest.SerializeToString,
            mpay__pb2.ListPaymentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Pay(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mpay.Mpay/Pay',
            mpay__pb2.PayRequest.SerializeToString,
            mpay__pb2.PayResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResetPathMemory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mpay.Mpay/ResetPathMemory',
            mpay__pb2.ResetPathMemoryRequest.SerializeToString,
            mpay__pb2.ResetPathMemoryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
